{
  "type": "issue",
  "issue": {
    "id": 636073520,
    "node_id": "MDU6SXNzdWU2MzYwNzM1MjA=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/19232",
    "number": 19232,
    "state": "closed",
    "state_reason": "completed",
    "title": "Regular crash+autorestart after loading/unloading many wallets",
    "body": "<!-- Describe the issue -->\r\n\r\nHi everyone,\r\nWe use bitcoin core with hundreds of wallets. The only efficient way we have found to do so is :\r\n1. wait for any bitcoin-cli command to terminate before issuing another one\r\n2. never issue any bitcoin-cli command unless tip update is 1\r\n3. always unload a wallet after loading and using it\r\n\r\nNow, we observ that bitcoin core systematically crashes every 20-30 minutes, then automatically restarts. And the problem is, it has to re-sync from about 0.997, which easily takes 15-20 minutes. During that time, the daemon cannot be used.\r\n\r\nIf we don't load/unload wallets, the daemon is stable and keeps to 1, no issue.\r\n\r\n**System information**\r\nBitcoin Core RPC client version v0.20.0.0-ga62f0ed64f8bbbdfe6467ac5ce92ef5b5222d1bd\r\nCompiled and run on Debian 9, on a VM with 16 mo memory. Launched that way : /bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n\r\n**bitcoin.conf :**\r\nserver=1\r\ndbcache=16384\r\npar=1\r\nblocksonly=1\r\nmaxuploadtarget=137\r\nmaxconnections=16\r\nrpcuser=bitcoinrpc\r\nrpcpassword=xxxxxx\r\nrpcallowip=127.0.0.1\r\ntestnet=0\r\ntxindex=1\r\nwalletbroadcast=1\r\ntxconfirmtarget=1\r\n\r\nPlease note that the same behaviour was happening with older releases (from 0.17.x).\r\n\r\nThanks for any help. Please ask for any needed information / testing.\r\nRegards,",
    "user": {
      "login": "fscemama",
      "id": 47175970,
      "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fscemama",
      "html_url": "https://github.com/fscemama",
      "followers_url": "https://api.github.com/users/fscemama/followers",
      "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
      "organizations_url": "https://api.github.com/users/fscemama/orgs",
      "repos_url": "https://api.github.com/users/fscemama/repos",
      "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fscemama/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 26,
    "closed_at": "2020-06-29T15:57:17Z",
    "created_at": "2020-06-10T09:05:26Z",
    "updated_at": "2022-02-15T11:16:29Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 3428639298,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0Mjg2MzkyOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3428639298",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T09:05:26Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "commented",
      "id": 641904497,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTkwNDQ5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641904497",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T10:15:42Z",
      "updated_at": "2020-06-10T10:15:42Z",
      "author_association": "MEMBER",
      "body": "Are there any debug log excerpts at the time of the crash? Or stderr/stdout?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-641904497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 641906042,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTkwNjA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641906042",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T10:18:34Z",
      "updated_at": "2020-06-10T10:18:34Z",
      "author_association": "NONE",
      "body": "> Are there any debug log excerpts at the time of the crash? Or stderr/stdout?\r\n\r\nHi Marco, typical sequence of debug.log below.\r\nThanks !\r\n\r\n```\r\n2020-06-10T09:39:55Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\r\n2020-06-10T09:39:55Z Using wallet /root/wallets/xxxxx-2019-10-15-18-48-48-02\r\n2020-06-10T09:39:55Z BerkeleyEnvironment::Open: LogDir=/root/wallets/xxxxx-2019-10-15-18-48-48-02/database ErrorFile=/root/wallets/xxxxx-2019-10-15-18-48-48-02/db.log\r\n2020-06-10T09:39:55Z init message: Loading wallet...\r\n2020-06-10T09:39:55Z BerkeleyEnvironment::Open: LogDir=/root/wallets/xxxxx-2019-10-15-18-48-48-02/database ErrorFile=/root/wallets/xxxxx-2019-10-15-18-48-48-02/db.log\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Wallet File Version = 169900\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Keys: 2027 plaintext, 0 encrypted, 2027 w/ metadata, 2027 total. Unknown wallet records: 0\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Wallet completed loading in              61ms\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] setKeyPool.size() = 2000\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] mapWallet.size() = 11\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] m_address_book.size() = 26\r\n2020-06-10T09:39:55Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Releasing wallet\r\n2020-06-10T09:39:55Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\r\n2020-06-10T09:39:55Z Using wallet /root/wallets/xxxxx-2019-10-15-18-48-48-02\r\n2020-06-10T09:39:55Z BerkeleyEnvironment::Open: LogDir=/root/wallets/xxxxx-2019-10-15-18-48-48-02/database ErrorFile=/root/wallets/xxxxx-2019-10-15-18-48-48-02/db.log\r\n2020-06-10T09:39:55Z init message: Loading wallet...\r\n2020-06-10T09:39:55Z BerkeleyEnvironment::Open: LogDir=/root/wallets/xxxxx-2019-10-15-18-48-48-02/database ErrorFile=/root/wallets/xxxxx-2019-10-15-18-48-48-02/db.log\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Wallet File Version = 169900\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Keys: 2027 plaintext, 0 encrypted, 2027 w/ metadata, 2027 total. Unknown wallet records: 0\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Wallet completed loading in              43ms\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] setKeyPool.size() = 2000\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] mapWallet.size() = 11\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] m_address_book.size() = 26\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-10-15-18-48-48-02] Releasing wallet\r\n2020-06-10T09:39:56Z [/root/wallets/xxxxx-2019-11-27-12-00-18-01] Releasing wallet\r\n2020-06-10T09:39:57Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\r\n2020-06-10T09:39:57Z Using wallet /root/wallets/xxxxx-2020-04-10-23-21-36-02\r\n2020-06-10T09:39:57Z BerkeleyEnvironment::Open: LogDir=/root/wallets/xxxxx-2020-04-10-23-21-36-02/database ErrorFile=/root/wallets/xxxxx-2020-04-10-23-21-36-02/db.log\r\n2020-06-10T09:39:57Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\r\n2020-06-10T09:39:57Z Using wallet /root/wallets/xxxxx-2020-04-10-23-21-36-02\r\n2020-06-10T09:39:57Z BerkeleyEnvironment::Open: LogDir=/root/wallets/xxxxx-2020-04-10-23-21-36-02/database ErrorFile=/root/wallets/xxxxx-2020-04-10-23-21-36-02/db.log\r\n2020-06-10T09:39:57Z init message: Loading wallet...\r\n\r\n\r\n\r\n\r\n\r\n2020-06-10T09:40:02Z Bitcoin Core version v0.20.0.0-ga62f0ed64f8bbbdfe6467ac5ce92ef5b5222d1bd (release build)\r\n2020-06-10T09:40:02Z InitParameterInteraction: parameter interaction: -blocksonly=1 -> setting -whitelistrelay=0\r\n2020-06-10T09:40:02Z Assuming ancestors of block 0000000000000000000f2adce67e49b0b6bdeb9de8b7c3d7e93b21e7fc1e819d have valid signatures.\r\n2020-06-10T09:40:02Z Setting nMinimumChainWork=00000000000000000000000000000000000000000e1ab5ec9348e9f4b8eb8154\r\n2020-06-10T09:40:02Z Using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation\r\n2020-06-10T09:40:02Z Using RdSeed as additional entropy source\r\n2020-06-10T09:40:02Z Using RdRand as an additional entropy source\r\n2020-06-10T09:40:02Z Default data directory /root/.bitcoin\r\n2020-06-10T09:40:02Z Using data directory /root/.bitcoin\r\n2020-06-10T09:40:02Z Config file: /root/.bitcoin/bitcoin.conf\r\n2020-06-10T09:40:02Z Config file arg: blocksonly=\"1\"\r\n2020-06-10T09:40:02Z Config file arg: dbcache=\"16384\"\r\n2020-06-10T09:40:02Z Config file arg: maxconnections=\"16\"\r\n2020-06-10T09:40:02Z Config file arg: maxuploadtarget=\"137\"\r\n2020-06-10T09:40:02Z Config file arg: par=\"1\"\r\n2020-06-10T09:40:02Z Config file arg: rpcallowip=\"127.0.0.1\"\r\n2020-06-10T09:40:02Z Config file arg: rpcpassword=****\r\n2020-06-10T09:40:02Z Config file arg: rpcuser=****\r\n2020-06-10T09:40:02Z Config file arg: server=\"1\"\r\n2020-06-10T09:40:02Z Config file arg: testnet=\"0\"\r\n2020-06-10T09:40:02Z Config file arg: txconfirmtarget=\"1\"\r\n2020-06-10T09:40:02Z Config file arg: txindex=\"1\"\r\n2020-06-10T09:40:02Z Config file arg: walletbroadcast=\"1\"\r\n2020-06-10T09:40:02Z Command-line arg: conf=\"/root/.bitcoin/bitcoin.conf\"\r\n2020-06-10T09:40:02Z Command-line arg: daemon=\"\"\r\n2020-06-10T09:40:02Z Command-line arg: fallbackfee=\"0.00001\"\r\n2020-06-10T09:40:02Z Command-line arg: rpcworkqueue=\"128\"\r\n2020-06-10T09:40:02Z Command-line arg: txindex=\"1\"\r\n2020-06-10T09:40:02Z Command-line arg: walletrbf=\"\"\r\n2020-06-10T09:40:02Z Using at most 16 automatic connections (1024 file descriptors available)\r\n2020-06-10T09:40:02Z Using 16 MiB out of 32/2 requested for signature cache, able to store 524288 elements\r\n2020-06-10T09:40:02Z Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements\r\n2020-06-10T09:40:02Z Script verification uses 0 additional threads\r\n2020-06-10T09:40:02Z scheduler thread start\r\n2020-06-10T09:40:02Z WARNING: option -rpcallowip was specified without -rpcbind; this doesn't usually make sense\r\n2020-06-10T09:40:02Z HTTP: creating work queue of depth 128\r\n2020-06-10T09:40:02Z Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\r\n2020-06-10T09:40:02Z HTTP: starting 4 worker threads\r\n2020-06-10T09:40:02Z Using wallet directory /root/.bitcoin/wallets\r\n2020-06-10T09:40:02Z init message: Verifying wallet(s)...\r\n2020-06-10T09:40:02Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\r\n2020-06-10T09:40:02Z Using wallet /root/.bitcoin/wallets\r\n2020-06-10T09:40:02Z BerkeleyEnvironment::Open: LogDir=/root/.bitcoin/wallets/database ErrorFile=/root/.bitcoin/wallets/db.log\r\n2020-06-10T09:40:03Z init message: Loading banlist...\r\n2020-06-10T09:40:03Z Using /16 prefix for IP bucketing\r\n2020-06-10T09:40:03Z Cache configuration:\r\n2020-06-10T09:40:03Z * Using 2.0 MiB for block index database\r\n2020-06-10T09:40:03Z * Using 1024.0 MiB for transaction index database\r\n2020-06-10T09:40:03Z * Using 8.0 MiB for chain state database\r\n2020-06-10T09:40:03Z * Using 15350.0 MiB for in-memory UTXO set (plus up to 286.1 MiB of unused mempool space)\r\n2020-06-10T09:40:03Z init message: Loading block index...\r\n2020-06-10T09:40:03Z Opening LevelDB in /root/.bitcoin/blocks/index\r\n2020-06-10T09:40:03Z Opened LevelDB successfully\r\n2020-06-10T09:40:03Z Using obfuscation key for /root/.bitcoin/blocks/index: 0000000000000000\r\n2020-06-10T09:40:10Z LoadBlockIndexDB: last block file = 2106\r\n2020-06-10T09:40:10Z LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=134, size=132209876, heights=633875...634008, time=2020-06-09...2020-06-10)\r\n2020-06-10T09:40:10Z Checking all blk files are present...\r\n2020-06-10T09:40:11Z Opening LevelDB in /root/.bitcoin/chainstate\r\n2020-06-10T09:40:11Z Opened LevelDB successfully\r\n2020-06-10T09:40:11Z Using obfuscation key for /root/.bitcoin/chainstate: 4501f5bf5624cc54\r\n2020-06-10T09:40:11Z Loaded best chain: hashBestChain=0000000000000000000fc56a5b8b7c1c3ce9ba39acc75cc13db25fb5bc8c62e0 height=633123 date=2020-06-05T03:46:00Z progress=0.997213\r\n2020-06-10T09:40:11Z init message: Rewinding blocks...\r\n2020-06-10T09:40:11Z FlushStateToDisk: write coins cache to disk (0 coins, 0kB) started\r\n2020-06-10T09:40:11Z FlushStateToDisk: write coins cache to disk (0 coins, 0kB) completed (0.00s)\r\n2020-06-10T09:40:11Z init message: Verifying blocks...\r\n2020-06-10T09:40:11Z Verifying last 6 blocks at level 3\r\n2020-06-10T09:40:11Z [0%]...[16%]...[33%]...[50%]...[66%]...[83%]...[99%]...[DONE].\r\n2020-06-10T09:43:08Z No coin database inconsistencies in last 6 blocks (13097 transactions)\r\n2020-06-10T09:43:08Z  block index          185680ms\r\n2020-06-10T09:43:08Z Opening LevelDB in /root/.bitcoin/indexes/txindex\r\n2020-06-10T09:43:17Z Opened LevelDB successfully\r\n2020-06-10T09:43:17Z Using obfuscation key for /root/.bitcoin/indexes/txindex: 0000000000000000\r\n2020-06-10T09:43:17Z txindex thread start\r\n2020-06-10T09:43:17Z txindex is enabled at height 633123\r\n2020-06-10T09:43:17Z txindex thread exit\r\n2020-06-10T09:43:17Z init message: Loading wallet...\r\n2020-06-10T09:43:17Z BerkeleyEnvironment::Open: LogDir=/root/.bitcoin/wallets/database ErrorFile=/root/.bitcoin/wallets/db.log\r\n2020-06-10T09:43:17Z [default wallet] Wallet File Version = 169900\r\n2020-06-10T09:43:17Z [default wallet] Keys: 2001 plaintext, 0 encrypted, 2001 w/ metadata, 2001 total. Unknown wallet records: 0\r\n2020-06-10T09:43:18Z [default wallet] Wallet completed loading in             556ms\r\n2020-06-10T09:43:18Z [default wallet] setKeyPool.size() = 2000\r\n2020-06-10T09:43:18Z [default wallet] mapWallet.size() = 0\r\n2020-06-10T09:43:18Z [default wallet] m_address_book.size() = 0\r\n2020-06-10T09:43:18Z block tree size = 634017\r\n2020-06-10T09:43:18Z nBestHeight = 633123\r\n2020-06-10T09:43:18Z torcontrol thread start\r\n2020-06-10T09:43:18Z Bound to [::]:8333\r\n2020-06-10T09:43:18Z Bound to 0.0.0.0:8333\r\n2020-06-10T09:43:18Z init message: Loading P2P addresses...\r\n2020-06-10T09:43:19Z Loaded 58642 addresses from peers.dat  880ms\r\n2020-06-10T09:43:19Z init message: Starting network threads...\r\n2020-06-10T09:43:19Z net thread start\r\n2020-06-10T09:43:19Z dnsseed thread start\r\n2020-06-10T09:43:19Z addcon thread start\r\n2020-06-10T09:43:19Z opencon thread start\r\n2020-06-10T09:43:19Z init message: Done loading\r\n2020-06-10T09:43:19Z msghand thread start\r\n2020-06-10T09:43:19Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\r\n2020-06-10T09:43:19Z Using wallet /root/wallets/keplerk\r\n2020-06-10T09:43:19Z BerkeleyEnvironment::Open: LogDir=/root/wallets/keplerk/database ErrorFile=/root/wallets/keplerk/db.log\r\n2020-06-10T09:43:27Z init message: Loading wallet...\r\n2020-06-10T09:43:30Z Loading addresses from DNS seed seed.bitcoin.jonasschnelli.ch\r\n2020-06-10T09:43:38Z UpdateTip: new best=0000000000000000000891768c73b989c11ab68ef59a7272d4953e1e40110e50 height=633124 version=0x3fff0000 log2_work=92.004565 tx=536058118 date='2020-06-05T03:49:48Z' progress=0.997213 cache=0.9MiB(7204txo)\r\n2020-06-10T09:43:40Z Loading addresses from DNS seed dnsseed.emzy.de\r\n2020-06-10T09:43:50Z Loading addresses from DNS seed dnsseed.bluematt.me\r\n2020-06-10T09:43:55Z UpdateTip: new best=000000000000000000109465e408d8cac29bf79001ab12b352344186f3f59171 height=633125 version=0x20000000 log2_work=92.004582 tx=536059715 date='2020-06-05T03:59:30Z' progress=0.997216 cache=1.9MiB(14138txo)\r\n2020-06-10T09:44:11Z Loading addresses from DNS seed seed.btc.petertodd.org\r\n2020-06-10T09:44:16Z Loading addresses from DNS seed seed.bitcoin.sprovoost.nl\r\n2020-06-10T09:44:21Z UpdateTip: new best=000000000000000000141612a0f0dd110e5fd29db90bcd9a2f103684ca6e669d height=633126 version=0x37ffe000 log2_work=92.0046 tx=536061851 date='2020-06-05T04:12:56Z' progress=0.997221 cache=3.0MiB(22542txo)\r\n2020-06-10T09:44:23Z UpdateTip: new best=00000000000000000007afd66af6119e5568df8b72d31d3b8699a7011225c69c height=633127 version=0x20400000 log2_work=92.004617 tx=536062401 date='2020-06-05T04:15:16Z' progress=0.997222 cache=3.1MiB(23691txo)\r\n2020-06-10T09:44:26Z Loading addresses from DNS seed dnsseed.bitcoin.dashjr.org\r\n2020-06-10T09:44:41Z UpdateTip: new best=000000000000000000091f1a4746918881ff3afc6475c9fb92a9b63c4be9347e height=633128 version=0x20c00000 log2_work=92.004634 tx=536064469 date='2020-06-05T04:28:18Z' progress=0.997227 cache=4.3MiB(30860txo)\r\n2020-06-10T09:44:47Z Loading addresses from DNS seed seed.bitcoin.sipa.be\r\n2020-06-10T09:44:56Z UpdateTip: new best=00000000000000000013fa5d77449e82bf43ff6db20794752ae5fe07e11a6537 height=633129 version=0x20000000 log2_work=92.004651 tx=536066188 date='2020-06-05T04:39:39Z' progress=0.997231 cache=5.0MiB(36837txo)\r\n\r\n```\r\n",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-641906042",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642039519,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjAzOTUxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642039519",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T14:16:09Z",
      "updated_at": "2020-06-10T14:16:09Z",
      "author_association": "NONE",
      "body": "Currently, it's been up and running for one hour without crashing. I can't tell why nor when it does accurately. There's something behind.",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642039519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642041896,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjA0MTg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642041896",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T14:20:06Z",
      "updated_at": "2020-06-10T14:20:06Z",
      "author_association": "MEMBER",
      "body": "Given that this is somewhat reproducible, could you try running the binary in gdb or valgrind?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642041896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642054789,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjA1NDc4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642054789",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T14:40:52Z",
      "updated_at": "2020-06-10T14:40:52Z",
      "author_association": "NONE",
      "body": "I'll do it with valgrind tonight. Must unfortunately be run in live, so I need a quiet period...",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642054789",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642075683,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjA3NTY4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642075683",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T15:13:44Z",
      "updated_at": "2020-06-10T17:02:30Z",
      "author_association": "NONE",
      "body": "In our dev environment, I got this crash. It seems that the creation of wallets (we do use bitcoin core for this too) might be the cause, and it may be worth testing in the live environment if crashes still happen if no wallet is never created. I'll give this a try.\r\n\r\n```\r\nroot# valgrind --leak-check=yes  /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128\r\n==32342== Memcheck, a memory error detector\r\n==32342== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==32342== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==32342== Command: /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128\r\n==32342==\r\nBitcoin Core starting\r\n==32342==\r\n==32342== HEAP SUMMARY:\r\n==32342==     in use at exit: 2,232,114 bytes in 2,271 blocks\r\n==32342==   total heap usage: 3,234 allocs, 963 frees, 2,462,760 bytes allocated\r\n==32342==\r\n==32342== LEAK SUMMARY:\r\n==32342==    definitely lost: 0 bytes in 0 blocks\r\n==32342==    indirectly lost: 0 bytes in 0 blocks\r\n==32342==      possibly lost: 0 bytes in 0 blocks\r\n==32342==    still reachable: 2,232,114 bytes in 2,271 blocks\r\n==32342==         suppressed: 0 bytes in 0 blocks\r\n==32342== Reachable blocks (those to which a pointer was found) are not shown.\r\n==32342== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==32342==\r\n==32342== For lists of detected and suppressed errors, rerun with: -s\r\n==32342== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n==32364==\r\n==32364== Process terminating with default action of signal 6 (SIGABRT)\r\n==32364==    at 0x6350FFF: raise (raise.c:51)\r\n==32364==    by 0x6352429: abort (abort.c:89)\r\n==32364==    by 0x6349E66: __assert_fail_base (assert.c:92)\r\n==32364==    by 0x6349F11: __assert_fail (assert.c:101)\r\n==32364==    by 0x49085A: BerkeleyDatabase (db.h:125)\r\n==32364==    by 0x49085A: std::unique_ptr<BerkeleyDatabase, std::default_delete<BerkeleyDatabase> > MakeUnique<BerkeleyDatabase, std::shared_ptr<BerkeleyEnvironment>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::shared_ptr<BerkeleyEnvironment>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (memory.h:16)\r\n==32364==    by 0x49091F: BerkeleyDatabase::Create(boost::filesystem::path const&) (db.h:139)\r\n==32364==    by 0x47E2C1: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3805)\r\n==32364==    by 0x4823E6: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:157)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==    by 0x22BFEB: operator() (server.h:104)\r\n==32364==    by 0x22BFEB: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (functional:1717)\r\n==32364==    by 0x14A95E: operator() (functional:2127)\r\n==32364==    by 0x14A95E: operator() (chain.cpp:208)\r\n==32364==    by 0x14A95E: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), interfaces::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (functional:1717)\r\n==32364==    by 0x2B32DB: operator() (functional:2127)\r\n==32364==    by 0x2B32DB: ExecuteCommand (server.cpp:453)\r\n==32364==    by 0x2B32DB: CRPCTable::execute(JSONRPCRequest const&) const (server.cpp:436)\r\n==32364==\r\n\r\n```\r\n\r\nedit: Comment shortened by @MarcoFalke \r\n\r\n<!--\r\n==32364== HEAP SUMMARY:\r\n==32364==     in use at exit: 463,096,888 bytes in 3,727,077 blocks\r\n==32364==   total heap usage: 9,714,945 allocs, 5,987,868 frees, 1,242,011,790 bytes allocated\r\n==32364==\r\n==32364== 12 bytes in 1 blocks are possibly lost in loss record 87 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C69F7: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==\r\n==32364== 12 bytes in 1 blocks are possibly lost in loss record 88 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C69F7: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==\r\n==32364== 13 bytes in 1 blocks are possibly lost in loss record 89 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53971FE: __dbreg_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366AF9: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B8ACE: Db::open(DbTxn*, char const*, char const*, DBTYPE, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DCA76: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:550)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 19 bytes in 1 blocks are possibly lost in loss record 187 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C17CE: __memp_fopen (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53666A4: __env_mpool (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366A59: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53678EA: __db_master_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE11E: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5386874: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 19 bytes in 1 blocks are possibly lost in loss record 188 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539716B: __dbreg_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366AF9: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B8ACE: Db::open(DbTxn*, char const*, char const*, DBTYPE, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DCA76: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:550)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 24 bytes in 1 blocks are possibly lost in loss record 420 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C210A: __memp_fopen (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53666A4: __env_mpool (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366A59: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53678EA: __db_master_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE11E: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5386874: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 28 bytes in 1 blocks are possibly lost in loss record 428 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C1FCD: __memp_fopen (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53666A4: __env_mpool (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366A59: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53678EA: __db_master_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE11E: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5386874: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 89 bytes in 1 blocks are possibly lost in loss record 1,005 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B0CB: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 96 bytes in 1 blocks are possibly lost in loss record 1,035 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535E7CF: __mutex_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A1B90: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 96 bytes in 1 blocks are possibly lost in loss record 1,036 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53970D9: __dbreg_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366AF9: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B8ACE: Db::open(DbTxn*, char const*, char const*, DBTYPE, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DCA76: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:550)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 96 bytes in 1 blocks are possibly lost in loss record 1,037 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535E7CF: __mutex_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A1B90: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==\r\n==32364== 120 bytes in 1 blocks are definitely lost in loss record 1,073 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C68E5: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==\r\n==32364== 120 bytes in 1 blocks are definitely lost in loss record 1,074 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C68E5: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==\r\n==32364== 160 bytes in 1 blocks are definitely lost in loss record 1,314 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B5F7: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x3EBDEF: VerifyWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:58)\r\n==32364==    by 0x15E76D: AppInitMain(NodeContext&) (init.cpp:1334)\r\n==32364==\r\n==32364== 160 bytes in 1 blocks are definitely lost in loss record 1,315 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B5F7: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==\r\n==32364== 192 bytes in 1 blocks are possibly lost in loss record 1,344 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53DF793: __txn_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A219C: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 216 bytes in 1 blocks are possibly lost in loss record 1,358 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C1668: __memp_fopen (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53666A4: __env_mpool (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5366A59: __env_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53865E3: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53678EA: __db_master_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE11E: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5386874: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,404 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x4E54478: boost::thread::start_thread_noexcept() (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0)\r\n==32364==    by 0x15E5AE: start_thread (thread.hpp:178)\r\n==32364==    by 0x15E5AE: thread<std::_Bind<void (*(char const*, std::function<void()>))(char const*, std::function<void()>)>&> (thread.hpp:265)\r\n==32364==    by 0x15E5AE: create_thread<std::_Bind<void (*(char const*, std::function<void()>))(char const*, std::function<void()>)> > (thread_group.hpp:79)\r\n==32364==    by 0x15E5AE: AppInitMain(NodeContext&) (init.cpp:1293)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,405 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x3926D0: thread<bool (&)(event_base*), event_base*&> (thread:137)\r\n==32364==    by 0x3926D0: StartHTTPServer() (httpserver.cpp:431)\r\n==32364==    by 0x15F6ED: AppInitServers (init.cpp:777)\r\n==32364==    by 0x15F6ED: AppInitMain(NodeContext&) (init.cpp:1328)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,406 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x392786: thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (thread:137)\r\n==32364==    by 0x392786: construct<std::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (new_allocator.h:120)\r\n==32364==    by 0x392786: construct<std::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (alloc_traits.h:475)\r\n==32364==    by 0x392786: emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (vector.tcc:96)\r\n==32364==    by 0x392786: StartHTTPServer() (httpserver.cpp:434)\r\n==32364==    by 0x15F6ED: AppInitServers (init.cpp:777)\r\n==32364==    by 0x15F6ED: AppInitMain(NodeContext&) (init.cpp:1328)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,407 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x624F7D: thread<void (&)(leveldb::(anonymous namespace)::PosixEnv*), leveldb::(anonymous namespace)::PosixEnv*> (thread:137)\r\n==32364==    by 0x624F7D: leveldb::(anonymous namespace)::PosixEnv::Schedule(void (*)(void*), void*) (env_posix.cc:802)\r\n==32364==    by 0x5FA187: leveldb::DBImpl::RecordReadSample(leveldb::Slice) (db_impl.cc:1173)\r\n==32364==    by 0x6060F4: ParseKey (db_iter.cc:128)\r\n==32364==    by 0x6060F4: leveldb::(anonymous namespace)::DBIter::FindNextUserEntry(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (db_iter.cc:183)\r\n==32364==    by 0x2D808A: CBlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>) (txdb.cpp:281)\r\n==32364==    by 0x324B9E: BlockManager::LoadBlockIndex(Consensus::Params const&, CBlockTreeDB&, std::set<CBlockIndex*, CBlockIndexWorkComparator, std::allocator<CBlockIndex*> >&) (validation.cpp:4049)\r\n==32364==    by 0x3251C0: LoadBlockIndexDB(CChainParams const&) (validation.cpp:4112)\r\n==32364==    by 0x325BB4: LoadBlockIndex(CChainParams const&) (validation.cpp:4573)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,408 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x3A12C6: thread<void (*)(char const*, std::function<void()>), char const*, std::_Bind<std::_Mem_fn<void (BaseIndex::*)()>(BaseIndex*)> > (thread:137)\r\n==32364==    by 0x3A12C6: BaseIndex::Start() (base.cpp:311)\r\n==32364==    by 0x161F69: AppInitMain(NodeContext&) (init.cpp:1712)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,409 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x4E54478: boost::thread::start_thread_noexcept() (in /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0)\r\n==32364==    by 0x172AD3: start_thread (thread.hpp:178)\r\n==32364==    by 0x172AD3: thread<std::_Bind<void (*(std::vector<boost::filesystem::path>))(std::vector<boost::filesystem::path>)>&> (thread.hpp:265)\r\n==32364==    by 0x172AD3: boost::thread* boost::thread_group::create_thread<std::_Bind<void (*(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >))(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >)> >(std::_Bind<void (*(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >))(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >)>) (thread_group.hpp:79)\r\n==32364==    by 0x162347: AppInitMain(NodeContext&) (init.cpp:1776)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,410 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x2C7EF5: thread<std::_Bind<void (*(char const*, void (*)()))(char const*, void (*)())> > (thread:137)\r\n==32364==    by 0x2C7EF5: StartTorControl() (torcontrol.cpp:755)\r\n==32364==    by 0x162B72: AppInitMain(NodeContext&) (init.cpp:1807)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,411 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x196E6F: std::thread::thread<void (*)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()>&&) (thread:137)\r\n==32364==    by 0x18D2EB: CConnman::Start(CScheduler&, CConnman::Options const&) (net.cpp:2321)\r\n==32364==    by 0x163149: AppInitMain(NodeContext&) (init.cpp:1866)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,412 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x196E6F: std::thread::thread<void (*)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()>&&) (thread:137)\r\n==32364==    by 0x18D868: CConnman::Start(CScheduler&, CConnman::Options const&) (net.cpp:2326)\r\n==32364==    by 0x163149: AppInitMain(NodeContext&) (init.cpp:1866)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,413 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x196E6F: std::thread::thread<void (*)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()>&&) (thread:137)\r\n==32364==    by 0x18D3D1: CConnman::Start(CScheduler&, CConnman::Options const&) (net.cpp:2329)\r\n==32364==    by 0x163149: AppInitMain(NodeContext&) (init.cpp:1866)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,414 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x196E6F: std::thread::thread<void (*)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()>&&) (thread:137)\r\n==32364==    by 0x18D532: CConnman::Start(CScheduler&, CConnman::Options const&) (net.cpp:2340)\r\n==32364==    by 0x163149: AppInitMain(NodeContext&) (init.cpp:1866)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 304 bytes in 1 blocks are possibly lost in loss record 1,415 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x196E6F: std::thread::thread<void (*)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const (&) [7], std::function<void ()>&&) (thread:137)\r\n==32364==    by 0x18D5D5: CConnman::Start(CScheduler&, CConnman::Options const&) (net.cpp:2343)\r\n==32364==    by 0x163149: AppInitMain(NodeContext&) (init.cpp:1866)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 360 bytes in 1 blocks are possibly lost in loss record 1,430 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A46DD: __env_attach (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A1B06: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 360 bytes in 1 blocks are possibly lost in loss record 1,431 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A46DD: __env_attach (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A1B06: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==\r\n==32364== 424 bytes in 1 blocks are possibly lost in loss record 1,458 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C6703: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==\r\n==32364== 424 bytes in 1 blocks are possibly lost in loss record 1,459 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C6703: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==\r\n==32364== 456 bytes in 1 blocks are possibly lost in loss record 1,467 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535AF0B: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 536 bytes in 1 blocks are possibly lost in loss record 1,497 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53B2406: __log_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21EC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 536 bytes in 1 blocks are possibly lost in loss record 1,498 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53B2406: __log_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21EC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==\r\n==32364== 912 bytes in 3 blocks are possibly lost in loss record 1,529 of 1,691\r\n==32364==    at 0x4030A0C: calloc (vg_replace_malloc.c:762)\r\n==32364==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==32364==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==32364==    by 0x5073189: allocate_stack (allocatestack.c:584)\r\n==32364==    by 0x5073189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==32364==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==32364==    by 0x39777F: thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (thread:137)\r\n==32364==    by 0x39777F: construct<std::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (new_allocator.h:120)\r\n==32364==    by 0x39777F: construct<std::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (alloc_traits.h:475)\r\n==32364==    by 0x39777F: void std::vector<std::thread, std::allocator<std::thread> >::_M_emplace_back_aux<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) (vector.tcc:416)\r\n==32364==    by 0x39280A: emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&> (vector.tcc:101)\r\n==32364==    by 0x39280A: StartHTTPServer() (httpserver.cpp:434)\r\n==32364==    by 0x15F6ED: AppInitServers (init.cpp:777)\r\n==32364==    by 0x15F6ED: AppInitMain(NodeContext&) (init.cpp:1328)\r\n==32364==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==32364==    by 0x13C86E: main (bitcoind.cpp:176)\r\n==32364==\r\n==32364== 960 bytes in 1 blocks are possibly lost in loss record 1,530 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C6A41: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==\r\n==32364== 960 bytes in 1 blocks are possibly lost in loss record 1,531 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C6A41: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==\r\n==32364== 1,448 bytes in 1 blocks are possibly lost in loss record 1,558 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B1C4: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 4,184 bytes in 1 blocks are possibly lost in loss record 1,593 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52D3B38: __bam_read_root (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x538681D: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53678EA: __db_master_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE11E: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5386874: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B8ACE: Db::open(DbTxn*, char const*, char const*, DBTYPE, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 4,184 bytes in 1 blocks are possibly lost in loss record 1,594 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E0B0B: __bam_get_root (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E1159: __bam_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CBF1A: __bamc_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE301: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5365FD9: __db_master_update (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE189: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 4,184 bytes in 1 blocks are possibly lost in loss record 1,595 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5387030: __db_init_subdb (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53AE2C3: __fop_subdb_setup (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5386874: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x5380F86: __db_open_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B8ACE: Db::open(DbTxn*, char const*, char const*, DBTYPE, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DCA76: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:550)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==\r\n==32364== 4,184 bytes in 1 blocks are possibly lost in loss record 1,596 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E0B0B: __bam_get_root (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E1159: __bam_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CBF1A: __bamc_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE301: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537CE1F: __db_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x538068B: __db_get_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 4,184 bytes in 1 blocks are possibly lost in loss record 1,597 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E1A3A: __bam_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CBF1A: __bamc_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE301: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537EFFC: __dbc_get_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B9FF0: Dbc::get(Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x4AA9A3: BerkeleyBatch::ReadAtCursor(Dbc*, CDataStream&, CDataStream&) (db.h:355)\r\n==32364==\r\n==32364== 4,184 bytes in 1 blocks are definitely lost in loss record 1,598 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E1A3A: __bam_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CBF1A: __bamc_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE301: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537EFFC: __dbc_get_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B9FF0: Dbc::get(Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x4AA9A3: BerkeleyBatch::ReadAtCursor(Dbc*, CDataStream&, CDataStream&) (db.h:355)\r\n==32364==\r\n==32364== 7,344 bytes in 1 blocks are possibly lost in loss record 1,609 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C67D5: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==\r\n==32364== 7,344 bytes in 1 blocks are possibly lost in loss record 1,610 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C67D5: __memp_init (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53C7080: __memp_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A20DC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==\r\n==32364== 8,368 bytes in 2 blocks are possibly lost in loss record 1,616 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52E1A3A: __bam_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CBF1A: __bamc_search (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE301: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537CE1F: __db_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x538068B: __db_get_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537CBBB: __db_exists (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==\r\n==32364== 12,320 bytes in 77 blocks are possibly lost in loss record 1,621 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B5F7: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 16,504 bytes in 1 blocks are possibly lost in loss record 1,624 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B30D: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 65,544 bytes in 1 blocks are possibly lost in loss record 1,648 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53B253E: __log_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21EC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 65,544 bytes in 1 blocks are possibly lost in loss record 1,649 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53B253E: __log_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21EC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==\r\n==32364== 139,216 bytes in 1,582 blocks are possibly lost in loss record 1,660 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B455: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 147,680 bytes in 923 blocks are definitely lost in loss record 1,661 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B5F7: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 200,832 bytes in 48 blocks are definitely lost in loss record 1,666 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CB4EA: __bamc_next (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE81B: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537EFFC: __dbc_get_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B9FF0: Dbc::get(Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x4AA9A3: BerkeleyBatch::ReadAtCursor(Dbc*, CDataStream&, CDataStream&) (db.h:355)\r\n==32364==    by 0x4A86B2: WalletBatch::LoadWallet(CWallet*) (walletdb.cpp:460)\r\n==32364==\r\n==32364== 315,264 bytes in 2,463 blocks are possibly lost in loss record 1,669 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B550: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 1,048,600 bytes in 1 blocks are possibly lost in loss record 1,674 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B117: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 1,079,472 bytes in 258 blocks are possibly lost in loss record 1,675 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CB4EA: __bamc_next (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52CE81B: __bamc_get (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537363E: __dbc_iget (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x537EFFC: __dbc_get_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52B9FF0: Dbc::get(Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x4AA9A3: BerkeleyBatch::ReadAtCursor(Dbc*, CDataStream&, CDataStream&) (db.h:355)\r\n==32364==    by 0x4A86B2: WalletBatch::LoadWallet(CWallet*) (walletdb.cpp:460)\r\n==32364==\r\n==32364== 3,378,496 bytes in 38,392 blocks are definitely lost in loss record 1,678 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B455: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 4,800,384 (4,800,256 direct, 128 indirect) bytes in 37,502 blocks are definitely lost in loss record 1,679 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B550: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 5,767,264 bytes in 1 blocks are possibly lost in loss record 1,681 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535B166: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A21D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 6,209,212 bytes in 1 blocks are possibly lost in loss record 1,682 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535E91B: __mutex_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A1B90: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==32364==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==32364==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==32364==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==32364==    by 0x3EB062: LoadWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:73)\r\n==32364==\r\n==32364== 6,209,212 bytes in 1 blocks are possibly lost in loss record 1,683 of 1,691\r\n==32364==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==32364==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x535E91B: __mutex_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A1B90: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x53A231A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x52BBFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==32364==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==32364==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==32364==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==32364==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==32364==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==32364==\r\n==32364== LEAK SUMMARY:\r\n==32364==    definitely lost: 8,532,008 bytes in 76,870 blocks\r\n==32364==    indirectly lost: 128 bytes in 1 blocks\r\n==32364==      possibly lost: 20,984,064 bytes in 4,434 blocks\r\n==32364==    still reachable: 433,580,688 bytes in 3,645,772 blocks\r\n==32364==                       of which reachable via heuristic:\r\n==32364==                         newarray           : 72 bytes in 1 blocks\r\n==32364==         suppressed: 0 bytes in 0 blocks\r\n==32364== Reachable blocks (those to which a pointer was found) are not shown.\r\n==32364== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==32364==\r\n==32364== For lists of detected and suppressed errors, rerun with: -s\r\n==32364== ERROR SUMMARY: 64 errors from 64 contexts (suppressed: 0 from 0)\r\n",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642075683",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642105841,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjEwNTg0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642105841",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T16:03:17Z",
      "updated_at": "2020-06-10T16:03:17Z",
      "author_association": "MEMBER",
      "body": "Assertion happens here:\r\n\r\n```\r\n    /** Create DB handle to real database */\r\n    BerkeleyDatabase(std::shared_ptr<BerkeleyEnvironment> env, std::string filename) :\r\n        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(std::move(env)), strFile(std::move(filename))\r\n    {\r\n        auto inserted = this->env->m_databases.emplace(strFile, std::ref(*this));\r\n        assert(inserted.second); // <-- here\r\n    }\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642105841",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "labeled",
      "id": 3430386022,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MzAzODYwMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3430386022",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T16:03:43Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 642116870,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjExNjg3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642116870",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T16:21:05Z",
      "updated_at": "2020-06-10T16:21:05Z",
      "author_association": "NONE",
      "body": "Please let me know if you need any further testing, including patching + recompilation.",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642116870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "mentioned",
      "id": 3430626675,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQzMDYyNjY3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3430626675",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T17:02:31Z"
    },
    {
      "event": "subscribed",
      "id": 3430626680,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0MzA2MjY2ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3430626680",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T17:02:31Z"
    },
    {
      "event": "commented",
      "id": 642533132,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjUzMzEzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642533132",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T09:35:16Z",
      "updated_at": "2020-06-11T16:47:24Z",
      "author_association": "NONE",
      "body": "Hi, got this tonight in the live env. Unfortunately, it didn't crash and restart to 0.997 as expected, I'll have to try again. So slow :/\r\n\r\n```\r\nroot# valgrind /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n==25768== Memcheck, a memory error detector\r\n==25768== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==25768== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info\r\n==25768== Command: /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n==25768==\r\nBitcoin Core starting\r\n==25768==\r\n==25768== HEAP SUMMARY:\r\n==25768==     in use at exit: 2,246,434 bytes in 2,285 blocks\r\n==25768==   total heap usage: 3,243 allocs, 958 frees, 2,477,009 bytes allocated\r\n==25768==\r\n==25768== LEAK SUMMARY:\r\n==25768==    definitely lost: 0 bytes in 0 blocks\r\n==25768==    indirectly lost: 0 bytes in 0 blocks\r\n==25768==      possibly lost: 0 bytes in 0 blocks\r\n==25768==    still reachable: 2,246,434 bytes in 2,285 blocks\r\n==25768==         suppressed: 0 bytes in 0 blocks\r\n==25768== Rerun with --leak-check=full to see details of leaked memory\r\n==25768==\r\n==25768== For lists of detected and suppressed errors, rerun with: -s\r\n==25768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\nroot@backprod2:/home/psb/bin# ==25771== Thread 5 b-httpworker.1:\r\n==25771== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==25771==    at 0x541B983: ??? (syscall-template.S:84)\r\n==25771==    by 0x51B2188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A004C: __memp_pgwrite.part.0 (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A0408: __memp_bhwrite (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519F31A: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A1D27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512B408: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512D846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509C026: Db::verify(char const*, char const*, std::ostream*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x3DF7E5: BerkeleyEnvironment::Verify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:277)\r\n==25771==    by 0x3DFB4A: BerkeleyBatch::VerifyDatabaseFile(boost::filesystem::path const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) (db.cpp:422)\r\n==25771==    by 0x472D48: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3778)\r\n==25771==  Address 0xb2dbb968 is 120 bytes inside a block of size 1,112 alloc'd\r\n==25771==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==25771==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519EBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A1D27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x50B7063: __bam_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5169387: __db_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5169906: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512E2B8: __db_vrfy_pgset (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512E4BE: __db_vrfy_dbinfo_create (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512B056: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512D846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==\r\n==25771== Thread 6 b-httpworker.2:\r\n==25771== Conditional jump or move depends on uninitialised value(s)\r\n==25771==    at 0x519B6C4: __log_putr.isra.1 (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519CD74: __log_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x514D384: __db_addrem_log (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x515DD0B: __db_pitem (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x50B86F2: __bam_iitem (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x50B3DBC: __bamc_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5156F5B: __dbc_iput (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x514B5E5: __db_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x516449C: __db_put_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509BC4E: Db::put(DbTxn*, Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x4A5E8D: Write<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (db.h:299)\r\n==25771==    by 0x4A5E8D: WriteIC<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (walletdb.h:181)\r\n==25771==    by 0x4A5E8D: WalletBatch::WriteTx(CWalletTx const&) (walletdb.cpp:76)\r\n==25771==    by 0x47AA9C: CWallet::AddToWallet(CWalletTx const&, bool) (wallet.cpp:837)\r\n==25771==\r\n==25771== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==25771==    at 0x541B983: ??? (syscall-template.S:84)\r\n==25771==    by 0x51B2188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519B3BD: __log_write (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519D031: __log_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51BD96B: __txn_regop_log (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51BC444: __txn_commit (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5164431: __db_put_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509BC4E: Db::put(DbTxn*, Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x4A5E8D: Write<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (db.h:299)\r\n==25771==    by 0x4A5E8D: WriteIC<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (walletdb.h:181)\r\n==25771==    by 0x4A5E8D: WalletBatch::WriteTx(CWalletTx const&) (walletdb.cpp:76)\r\n==25771==    by 0x47AA9C: CWallet::AddToWallet(CWalletTx const&, bool) (wallet.cpp:837)\r\n==25771==    by 0x47BD26: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool) (wallet.cpp:953)\r\n==25771==    by 0x47C1A2: CWallet::SyncTransaction(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool) (wallet.cpp:1087)\r\n==25771==  Address 0x74af62c9 is 1,785 bytes inside a block of size 65,544 alloc'd\r\n==25771==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==25771==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519553E: __log_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51851EC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x518531A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509EFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==25771==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==25771==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==25771==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==25771==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==25771==    by 0x4823E6: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:157)\r\n==25771==\r\n==25771==\r\n==25771== HEAP SUMMARY:\r\n==25771==     in use at exit: 4,185 bytes in 26 blocks\r\n==25771==   total heap usage: 616,239,856 allocs, 616,239,830 frees, 62,380,430,976 bytes allocated\r\n==25771==\r\n==25771== LEAK SUMMARY:\r\n==25771==    definitely lost: 2,400 bytes in 15 blocks\r\n==25771==    indirectly lost: 0 bytes in 0 blocks\r\n==25771==      possibly lost: 304 bytes in 1 blocks\r\n==25771==    still reachable: 1,481 bytes in 10 blocks\r\n==25771==         suppressed: 0 bytes in 0 blocks\r\n==25771== Rerun with --leak-check=full to see details of leaked memory\r\n==25771==\r\n==25771== Use --track-origins=yes to see where uninitialised values come from\r\n==25771== For lists of detected and suppressed errors, rerun with: -s\r\n==25771== ERROR SUMMARY: 2976 errors from 3 contexts (suppressed: 0 from 0)\r\n\r\n```",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642533132",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642800541,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjgwMDU0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642800541",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T16:43:06Z",
      "updated_at": "2020-06-11T16:43:06Z",
      "author_association": "NONE",
      "body": "Today, I've run valgrind on bitcoind in our live env for a few hours. Incredibly enough, only small crashes before valgrind was launched (small because reindexing from 0.99998, not 0.997).\r\n\r\nValgrind reported the following, but there were no crash at all during its monitoring the bitcoind process. I don't know why it was so unstable yesterday and days before, and not today. The only system difference is the installation of Debian libc6-dbg package, needed by Valgrind itself ; also, we scheduled creation of wallets to occur less often (once per hour).\r\n\r\nMore testing seems to be needed.\r\n\r\n```\r\nbin# valgrind /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n==25768== Memcheck, a memory error detector\r\n==25768== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==25768== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info\r\n==25768== Command: /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n==25768==\r\nBitcoin Core starting\r\n==25768==\r\n==25768== HEAP SUMMARY:\r\n==25768==     in use at exit: 2,246,434 bytes in 2,285 blocks\r\n==25768==   total heap usage: 3,243 allocs, 958 frees, 2,477,009 bytes allocated\r\n==25768==\r\n==25768== LEAK SUMMARY:\r\n==25768==    definitely lost: 0 bytes in 0 blocks\r\n==25768==    indirectly lost: 0 bytes in 0 blocks\r\n==25768==      possibly lost: 0 bytes in 0 blocks\r\n==25768==    still reachable: 2,246,434 bytes in 2,285 blocks\r\n==25768==         suppressed: 0 bytes in 0 blocks\r\n==25768== Rerun with --leak-check=full to see details of leaked memory\r\n==25768==\r\n==25768== For lists of detected and suppressed errors, rerun with: -s\r\n==25768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\nroot@backprod2:/home/psb/bin# ==25771== Thread 5 b-httpworker.1:\r\n==25771== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==25771==    at 0x541B983: ??? (syscall-template.S:84)\r\n==25771==    by 0x51B2188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A004C: __memp_pgwrite.part.0 (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A0408: __memp_bhwrite (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519F31A: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A1D27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512B408: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512D846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509C026: Db::verify(char const*, char const*, std::ostream*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x3DF7E5: BerkeleyEnvironment::Verify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:277)\r\n==25771==    by 0x3DFB4A: BerkeleyBatch::VerifyDatabaseFile(boost::filesystem::path const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) (db.cpp:422)\r\n==25771==    by 0x472D48: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3778)\r\n==25771==  Address 0xb2dbb968 is 120 bytes inside a block of size 1,112 alloc'd\r\n==25771==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==25771==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519EBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51A1D27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x50B7063: __bam_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5169387: __db_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5169906: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512E2B8: __db_vrfy_pgset (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512E4BE: __db_vrfy_dbinfo_create (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512B056: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x512D846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==\r\n==25771== Thread 6 b-httpworker.2:\r\n==25771== Conditional jump or move depends on uninitialised value(s)\r\n==25771==    at 0x519B6C4: __log_putr.isra.1 (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519CD74: __log_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x514D384: __db_addrem_log (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x515DD0B: __db_pitem (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x50B86F2: __bam_iitem (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x50B3DBC: __bamc_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5156F5B: __dbc_iput (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x514B5E5: __db_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x516449C: __db_put_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509BC4E: Db::put(DbTxn*, Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x4A5E8D: Write<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (db.h:299)\r\n==25771==    by 0x4A5E8D: WriteIC<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (walletdb.h:181)\r\n==25771==    by 0x4A5E8D: WalletBatch::WriteTx(CWalletTx const&) (walletdb.cpp:76)\r\n==25771==    by 0x47AA9C: CWallet::AddToWallet(CWalletTx const&, bool) (wallet.cpp:837)\r\n==25771==\r\n==25771== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==25771==    at 0x541B983: ??? (syscall-template.S:84)\r\n==25771==    by 0x51B2188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519B3BD: __log_write (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519D031: __log_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51BD96B: __txn_regop_log (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51BC444: __txn_commit (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x5164431: __db_put_pp (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509BC4E: Db::put(DbTxn*, Dbt*, Dbt*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x4A5E8D: Write<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (db.h:299)\r\n==25771==    by 0x4A5E8D: WriteIC<std::pair<std::__cxx11::basic_string<char>, uint256>, CWalletTx> (walletdb.h:181)\r\n==25771==    by 0x4A5E8D: WalletBatch::WriteTx(CWalletTx const&) (walletdb.cpp:76)\r\n==25771==    by 0x47AA9C: CWallet::AddToWallet(CWalletTx const&, bool) (wallet.cpp:837)\r\n==25771==    by 0x47BD26: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool) (wallet.cpp:953)\r\n==25771==    by 0x47C1A2: CWallet::SyncTransaction(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool) (wallet.cpp:1087)\r\n==25771==  Address 0x74af62c9 is 1,785 bytes inside a block of size 65,544 alloc'd\r\n==25771==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==25771==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x519553E: __log_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x51851EC: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x518531A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x509EFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==25771==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==25771==    by 0x3DC975: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, char const*, bool) (db.cpp:533)\r\n==25771==    by 0x46C0AE: WalletBatch (walletdb.h:207)\r\n==25771==    by 0x46C0AE: CWallet::LoadWallet(bool&) (wallet.cpp:3123)\r\n==25771==    by 0x47E346: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3806)\r\n==25771==    by 0x4823E6: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:157)\r\n==25771==\r\n==25771==\r\n==25771== HEAP SUMMARY:\r\n==25771==     in use at exit: 4,185 bytes in 26 blocks\r\n==25771==   total heap usage: 616,239,856 allocs, 616,239,830 frees, 62,380,430,976 bytes allocated\r\n==25771==\r\n==25771== LEAK SUMMARY:\r\n==25771==    definitely lost: 2,400 bytes in 15 blocks\r\n==25771==    indirectly lost: 0 bytes in 0 blocks\r\n==25771==      possibly lost: 304 bytes in 1 blocks\r\n==25771==    still reachable: 1,481 bytes in 10 blocks\r\n==25771==         suppressed: 0 bytes in 0 blocks\r\n==25771== Rerun with --leak-check=full to see details of leaked memory\r\n==25771==\r\n==25771== Use --track-origins=yes to see where uninitialised values come from\r\n==25771== For lists of detected and suppressed errors, rerun with: -s\r\n==25771== ERROR SUMMARY: 2976 errors from 3 contexts (suppressed: 0 from 0)\r\nroot@backprod2:/home/psb/bin# valgrind --leak-check=full /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\nroot@backprod2:/home/psb/bin# valgrind --leak-check=full /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n==24289== Memcheck, a memory error detector\r\n==24289== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==24289== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info\r\n==24289== Command: /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128 -txindex=1\r\n==24289==\r\nBitcoin Core starting\r\n==24289==\r\n==24289== HEAP SUMMARY:\r\n==24289==     in use at exit: 2,246,434 bytes in 2,285 blocks\r\n==24289==   total heap usage: 3,243 allocs, 958 frees, 2,477,009 bytes allocated\r\n==24289==\r\n==24289== LEAK SUMMARY:\r\n==24289==    definitely lost: 0 bytes in 0 blocks\r\n==24289==    indirectly lost: 0 bytes in 0 blocks\r\n==24289==      possibly lost: 0 bytes in 0 blocks\r\n==24289==    still reachable: 2,246,434 bytes in 2,285 blocks\r\n==24289==         suppressed: 0 bytes in 0 blocks\r\n==24289== Reachable blocks (those to which a pointer was found) are not shown.\r\n==24289== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==24289==\r\n==24289== For lists of detected and suppressed errors, rerun with: -s\r\n==24289== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\nroot@backprod2:/home/psb/bin# ==24359== Thread 7 b-httpworker.3:\r\n==24359== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==24359==    at 0x541B983: ??? (syscall-template.S:84)\r\n==24359==    by 0x51B2188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x51A004C: __memp_pgwrite.part.0 (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x51A0408: __memp_bhwrite (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x519F31A: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x51A1D27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x5166A48: __db_new (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x50C7CAE: __bam_split (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x50B3EA1: __bamc_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x5156F5B: __dbc_iput (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x514B5E5: __db_put (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x512E0C1: __db_vrfy_putpageinfo (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==  Address 0x2370b958 is 120 bytes inside a block of size 1,112 alloc'd\r\n==24359==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==24359==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x519EBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x51A1D27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x50B7063: __bam_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x5169387: __db_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x5169906: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x512E415: __db_vrfy_dbinfo_create (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x512B056: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x512D846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x509C026: Db::verify(char const*, char const*, std::ostream*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==\r\n==24359==\r\n==24359== HEAP SUMMARY:\r\n==24359==     in use at exit: 8,985 bytes in 56 blocks\r\n==24359==   total heap usage: 314,206,840 allocs, 314,206,784 frees, 39,827,904,698 bytes allocated\r\n==24359==\r\n==24359== Thread 1 b-shutoff:\r\n==24359== 160 bytes in 1 blocks are definitely lost in loss record 9 of 13\r\n==24359==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==24359==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x513E5F7: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x51851D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x518531A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x509EFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==24359==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==24359==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==24359==    by 0x3EBDEF: VerifyWallets(interfaces::Chain&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (load.cpp:58)\r\n==24359==    by 0x15E76D: AppInitMain(NodeContext&) (init.cpp:1334)\r\n==24359==\r\n==24359== 304 bytes in 1 blocks are possibly lost in loss record 10 of 13\r\n==24359==    at 0x4030A0C: calloc (vg_replace_malloc.c:760)\r\n==24359==    by 0x4011E31: allocate_dtv (dl-tls.c:322)\r\n==24359==    by 0x40127BD: _dl_allocate_tls (dl-tls.c:539)\r\n==24359==    by 0x5413189: allocate_stack (allocatestack.c:584)\r\n==24359==    by 0x5413189: pthread_create@@GLIBC_2.2.5 (pthread_create.c:663)\r\n==24359==    by 0x5B3B164: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)\r\n==24359==    by 0x624F7D: thread<void (&)(leveldb::(anonymous namespace)::PosixEnv*), leveldb::(anonymous namespace)::PosixEnv*> (thread:137)\r\n==24359==    by 0x624F7D: leveldb::(anonymous namespace)::PosixEnv::Schedule(void (*)(void*), void*) (env_posix.cc:802)\r\n==24359==    by 0x5F9586: leveldb::DBImpl::Get(leveldb::ReadOptions const&, leveldb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (db_impl.cc:1150)\r\n==24359==    by 0x2D881E: Read<std::pair<char, int>, CBlockFileInfo> (dbwrapper.h:238)\r\n==24359==    by 0x2D881E: CBlockTreeDB::ReadBlockFileInfo(int, CBlockFileInfo&) (txdb.cpp:153)\r\n==24359==    by 0x3252A9: LoadBlockIndexDB(CChainParams const&) (validation.cpp:4121)\r\n==24359==    by 0x325BB4: LoadBlockIndex(CChainParams const&) (validation.cpp:4573)\r\n==24359==    by 0x160AC9: AppInitMain(NodeContext&) (init.cpp:1553)\r\n==24359==    by 0x144110: AppInit(int, char**) (bitcoind.cpp:146)\r\n==24359==\r\n==24359== 7,040 bytes in 44 blocks are definitely lost in loss record 13 of 13\r\n==24359==    at 0x402E7BD: malloc (vg_replace_malloc.c:307)\r\n==24359==    by 0x51AF964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x517E4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x513E5F7: __lock_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x51851D0: __env_attach_regions (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x518531A: __env_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x509EFA3: DbEnv::open(char const*, unsigned int, int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==24359==    by 0x3DAC27: BerkeleyEnvironment::Open(bool) (db.cpp:199)\r\n==24359==    by 0x3DBE7F: BerkeleyBatch::VerifyEnvironment(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:405)\r\n==24359==    by 0x472B3F: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3756)\r\n==24359==    by 0x482359: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:152)\r\n==24359==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==24359==\r\n==24359== LEAK SUMMARY:\r\n==24359==    definitely lost: 7,200 bytes in 45 blocks\r\n==24359==    indirectly lost: 0 bytes in 0 blocks\r\n==24359==      possibly lost: 304 bytes in 1 blocks\r\n==24359==    still reachable: 1,481 bytes in 10 blocks\r\n==24359==         suppressed: 0 bytes in 0 blocks\r\n==24359== Reachable blocks (those to which a pointer was found) are not shown.\r\n==24359== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==24359==\r\n==24359== Use --track-origins=yes to see where uninitialised values come from\r\n==24359== For lists of detected and suppressed errors, rerun with: -s\r\n==24359== ERROR SUMMARY: 3167 errors from 4 contexts (suppressed: 0 from 0)\r\n\r\n```",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642800541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 642807188,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjgwNzE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642807188",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T16:54:49Z",
      "updated_at": "2020-06-11T16:54:49Z",
      "author_association": "MEMBER",
      "body": "You might want to start valgrind with the suppressions file `--suppressions=` and point it to the file `contrib/valgrind.supp`.\r\n\r\nBut it seems we already found the location of the crash: https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642105841",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642807188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645071924,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTA3MTkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645071924",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T00:06:11Z",
      "updated_at": "2020-06-17T00:06:11Z",
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-642075683\r\n\r\nAssert is strange, but seems like maybe it could happen if a wallet loaded more than once at the same time by different threads. What is strange is that the assert that's failing runs twice in a row but somehow succeeds the first time and fails the second time:\r\n\r\n```\r\nloadwallet\r\n  LoadWallet\r\n    CWallet::Verify\r\n      WalletDatabase::Create\r\n        BerkeleyDatabase::BerkeleyDatabase\r\n           m_databases.emplace                <--- apparently succeeds\r\n        BerkeleyDatabase::~BerkeleyDatabase\r\n           m_databases.erase\r\n    CWallet::CreateWalletFromFile\r\n      WalletDatabase::Create\r\n         BerkeleyDatabase::BerkeleyDatabase\r\n           m_databases.emplace                <--- fails & aborts according to trace\r\n```\r\n\r\nI don't see how the crash would happen if the application is \"[waiting] for any bitcoin-cli command to terminate before issuing another one\" as described https://github.com/bitcoin/bitcoin/issues/19232#issue-636073520.\r\n\r\nBut if it's possible the application is loading the same wallet twice from different threads, then the crash makes more sense. I think we would probably have to fix it by introducing something like g_loading_wallet_set similar to existing [`g_unloading_wallet_set`](https://github.com/bitcoin/bitcoin/blob/5cafb46fef3f105186eb9416b6362e9c0d1f4542/src/wallet/wallet.cpp#L104) to track and avoid concurrently loading wallets. ",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645071924",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645072893,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTA3Mjg5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645072893",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T00:09:45Z",
      "updated_at": "2020-06-17T00:09:45Z",
      "author_association": "NONE",
      "body": "Interesting enough. I should probably make sure the wait-for-any-bitcoin-cli-command-to-terminate is working well. Your idea that it should be prevented from the daemon itself does make sense.\r\nThanks.",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645072893",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645085935,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTA4NTkzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645085935",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T01:00:15Z",
      "updated_at": "2020-06-17T01:00:43Z",
      "author_association": "MEMBER",
      "body": "> But if it's possible the application is loading the same wallet twice from different threads, then the crash makes more sense.\r\n\r\nRight, there's nothing handling this. Should it prevent concurrent loads by env? Or simply any concurrent loads?\r\n\r\nBTW, concurrent unload can throw \"Requested wallet does not exist or is not loaded\" or \"Requested wallet already unloaded\". I wonder if with 2 concurrent loads, both should succeed - one actually loads, the other waits for the first - so both clients work as expected. ",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645085935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645114976,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTExNDk3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645114976",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T02:48:13Z",
      "updated_at": "2020-06-17T02:48:13Z",
      "author_association": "MEMBER",
      "body": "> Right, there's nothing handling this. Should it prevent concurrent loads by env? Or simply any concurrent loads?\r\n\r\nThe idea with the `g_loading_wallet_set` suggestion is that it would just track wallet loads using given wallet names, the same way [`g_unloading_wallet_set`](https://github.com/bitcoin/bitcoin/blob/5cafb46fef3f105186eb9416b6362e9c0d1f4542/src/wallet/wallet.cpp#L104) tracks wallet unloads. Environments don't actually have much to do with this bug and are already protected with .walletlock files. Also environments aren't visible at the wallet.cpp layer, only the db.cpp layer.\r\n\r\n> BTW, concurrent unload can throw \"Requested wallet does not exist or is not loaded\" or \"Requested wallet already unloaded\". \r\n\r\nThat's interesting. I think more ideally they would both return a simple \"Wallet is not currently loaded\" error so applications trying to handle this don't have to deal with two different error messages, one more frequent and the other more rare.\r\n\r\n> I wonder if with 2 concurrent loads, both should succeed - one actually loads, the other waits for the first - so both clients work as expected.\r\n\r\nI think that would just add complexity without use-cases to justify it. It could also be confusing and break backwards compatibility with existing applications expecting to see the \"Duplicate -wallet filename specified\" error when a wallet's already loaded.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645114976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645258760,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTI1ODc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645258760",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T09:18:52Z",
      "updated_at": "2020-06-17T09:18:52Z",
      "author_association": "NONE",
      "body": "Dear all, I can now confirm that after using procmail's lockfile to make absolutely sure no concurrent calls to bitcoin-cli are made, the stability has greatly improved. It can be dealt with that way, at least.\r\n**Your help is precious.**",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645258760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645286394,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTI4NjM5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645286394",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T10:16:43Z",
      "updated_at": "2020-06-17T10:22:32Z",
      "author_association": "MEMBER",
      "body": "@fscemama it would be great if you can test #19300.\r\n\r\nNote that loadwallet can fail (RPC error) if the wallet is already being loaded so you have to deal with this error.\r\n\r\nBut honestly you should rethink your approach. The server doesn't count how many clients \"load/want\" a given wallet so when client C1 unloads the wallet W1 it can mess some other client C2 that is also using W1. I think you should track/handle this outside unless there's agreement in supporting this use case here (which I don't support :trollface:).\r\n",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645286394",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "mentioned",
      "id": 3452883436,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ1Mjg4MzQzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3452883436",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T10:16:44Z"
    },
    {
      "event": "subscribed",
      "id": 3452883437,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NTI4ODM0Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3452883437",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T10:16:44Z"
    },
    {
      "event": "commented",
      "id": 645313186,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxMzE4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645313186",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:18:32Z",
      "updated_at": "2020-06-17T11:18:32Z",
      "author_association": "NONE",
      "body": "Lol, we do track and handle, this at least works well :)\r\nBTW, I'm glad to see you again, Promag. Right advice. About #19300, did the following with no error.\r\n```\r\n# Bitcoin Core RPC client version v0.20.0.0-ga62f0ed64f8bbbdfe6467ac5ce92ef5b5222d1bd\r\nwallet=xxxxxx\r\nfor i in {1..1000}\r\ndo\r\n  echo $i\r\n  bitcoin-cli loadwallet $wallet\r\n  bitcoin-cli unloadwallet $wallet\r\ndone\r\n\r\n```",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645313186",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645316204,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxNjIwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645316204",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:25:43Z",
      "updated_at": "2020-06-17T11:25:43Z",
      "author_association": "MEMBER",
      "body": "> did the following with no error.\r\n\r\nYou must run that script multiple times in parallel, like\r\n```\r\ntest.sh &\r\ntest.sh\r\n```",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645316204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645317502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxNzUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645317502",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:28:47Z",
      "updated_at": "2020-06-17T11:28:47Z",
      "author_association": "NONE",
      "body": "Sorry. Did it, immediate crash.",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645317502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645318126,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxODEyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645318126",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:30:10Z",
      "updated_at": "2020-06-17T11:30:10Z",
      "author_association": "MEMBER",
      "body": "> Sorry. Did it, immediate crash.\r\n\r\nWas this with #19300 branch? What was the error?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645318126",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645318553,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxODU1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645318553",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:31:10Z",
      "updated_at": "2020-06-17T11:31:10Z",
      "author_association": "NONE",
      "body": "```\r\n...\r\nerror code: -18\r\nerror message:\r\nRequested wallet does not exist or is not loaded\r\n5 26133\r\nerror code: -4\r\nerror message:\r\nWallet file verification failed: Error loading wallet /root/wallets/0033665502992-2018-08-09-15-25-18-653299-00. Duplicate -wallet filename specified.\r\nerror code: -18\r\nerror message:\r\nRequested wallet does not exist or is not loaded\r\n6 26133\r\nerror code: -4\r\nerror message:\r\nWallet file verification failed: Error loading wallet /root/wallets/0033665502992-2018-08-09-15-25-18-653299-00. Duplicate -wallet filename specified.\r\nerror code: -18\r\nerror message:\r\nRequested wallet does not exist or is not loaded\r\n7 26133\r\n5 26232\r\nerror: Could not connect to the server 127.0.0.1:18332 (error code 1 - \"EOF reached\")\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\nerror: Could not connect to the server 127.0.0.1:18332 (error code 1 - \"EOF reached\")\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\nerror: Could not connect to the server 127.0.0.1:18332\r\n...\r\n```",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645318553",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645319031,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxOTAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645319031",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:32:16Z",
      "updated_at": "2020-06-17T11:32:16Z",
      "author_association": "NONE",
      "body": "```\r\nroot# cat a.sh\r\n#!/bin/sh\r\nwallet=xxxxx\r\nfor i in 0 1 2 3 4 5 6 7 8 9\r\ndo\r\n  echo $i $$\r\n  bitcoin-cli loadwallet $wallet\r\n  bitcoin-cli unloadwallet $wallet\r\ndone\r\n\r\n```\r\nCrash after launching a few times in background.",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645319031",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645319934,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxOTkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645319934",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:34:12Z",
      "updated_at": "2020-06-17T11:34:12Z",
      "author_association": "NONE",
      "body": "This probably deserves a valgrind. Please give 10 minutes.",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645319934",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645328367,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMyODM2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645328367",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T11:54:14Z",
      "updated_at": "2020-06-17T11:54:14Z",
      "author_association": "MEMBER",
      "body": "Can you repeat this with #19300 branch?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645328367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "commented",
      "id": 645333853,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMzMzg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645333853",
      "actor": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T12:06:40Z",
      "updated_at": "2020-06-17T12:06:57Z",
      "author_association": "NONE",
      "body": "Sorry, removed much pollution (not needed processes). Useful info:\r\n\r\n```\r\n=30964== Memcheck, a memory error detector\r\n==30964== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==30964== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==30964== Command: /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128\r\n==30964==\r\nBitcoin Core starting\r\n==30964==\r\n==30964== HEAP SUMMARY:\r\n==30964==     in use at exit: 2,232,114 bytes in 2,271 blocks\r\n==30964==   total heap usage: 3,234 allocs, 963 frees, 2,462,760 bytes allocated\r\n==30964==\r\n==30964== LEAK SUMMARY:\r\n==30964==    definitely lost: 0 bytes in 0 blocks\r\n==30964==    indirectly lost: 0 bytes in 0 blocks\r\n==30964==      possibly lost: 0 bytes in 0 blocks\r\n==30964==    still reachable: 2,232,114 bytes in 2,271 blocks\r\n==30964==         suppressed: 0 bytes in 0 blocks\r\n==30964== Reachable blocks (those to which a pointer was found) are not shown.\r\n==30964== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==30964==\r\n==30964== For lists of detected and suppressed errors, rerun with: -s\r\n==30964== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\nroot@backdev2:/home/psb/bin# ==30973== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==30973==    at 0x507B983: ??? (syscall-template.S:84)\r\n==30973==    by 0x53CF188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BD04C: __memp_pgwrite.part.0 (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BD408: __memp_bhwrite (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BC31A: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5348408: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534A846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x52B9026: Db::verify(char const*, char const*, std::ostream*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x3DF7E5: BerkeleyEnvironment::Verify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:277)\r\n==30973==    by 0x3DFB4A: BerkeleyBatch::VerifyDatabaseFile(boost::filesystem::path const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) (db.cpp:422)\r\n==30973==    by 0x472D48: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3778)\r\n==30973==  Address 0xd63ee08 is 120 bytes inside a block of size 1,112 alloc'd\r\n==30973==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==30973==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x52D4063: __bam_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5386387: __db_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5386906: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534B2B8: __db_vrfy_pgset (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534B4BE: __db_vrfy_dbinfo_create (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5348056: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534A846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==\r\n==30973==\r\n==30973== Process terminating with default action of signal 6 (SIGABRT)\r\n==30973==    at 0x6350FFF: raise (raise.c:51)\r\n==30973==    by 0x6352429: abort (abort.c:89)\r\n==30973==    by 0x6349E66: __assert_fail_base (assert.c:92)\r\n==30973==    by 0x6349F11: __assert_fail (assert.c:101)\r\n==30973==    by 0x49085A: BerkeleyDatabase (db.h:125)\r\n==30973==    by 0x49085A: std::unique_ptr<BerkeleyDatabase, std::default_delete<BerkeleyDatabase> > MakeUnique<BerkeleyDatabase, std::shared_ptr<BerkeleyEnvironment>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::shared_ptr<BerkeleyEnvironment>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (memory.h:16)\r\n==30973==    by 0x49091F: BerkeleyDatabase::Create(boost::filesystem::path const&) (db.h:139)\r\n==30973==    by 0x47E2C1: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3805)\r\n==30973==    by 0x4823E6: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:157)\r\n==30973==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==30973==    by 0x22BFEB: operator() (server.h:104)\r\n==30973==    by 0x22BFEB: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (functional:1717)\r\n==30973==    by 0x14A95E: operator() (functional:2127)\r\n==30973==    by 0x14A95E: operator() (chain.cpp:208)\r\n==30973==    by 0x14A95E: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), interfaces::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (functional:1717)\r\n==30973==    by 0x2B32DB: operator() (functional:2127)\r\n==30973==    by 0x2B32DB: ExecuteCommand (server.cpp:453)\r\n==30973==    by 0x2B32DB: CRPCTable::execute(JSONRPCRequest const&) const (server.cpp:436)\r\n==30973==\r\n==30973== HEAP SUMMARY:\r\n==30973==     in use at exit: 475,082,336 bytes in 3,760,553 blocks\r\n==30973==   total heap usage: 9,888,764 allocs, 6,128,211 frees, 1,385,505,603 bytes allocated\r\n==30973==\r\n\r\n```",
      "user": {
        "login": "fscemama",
        "id": 47175970,
        "node_id": "MDQ6VXNlcjQ3MTc1OTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/47175970?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fscemama",
        "html_url": "https://github.com/fscemama",
        "followers_url": "https://api.github.com/users/fscemama/followers",
        "following_url": "https://api.github.com/users/fscemama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fscemama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fscemama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fscemama/subscriptions",
        "organizations_url": "https://api.github.com/users/fscemama/orgs",
        "repos_url": "https://api.github.com/users/fscemama/repos",
        "events_url": "https://api.github.com/users/fscemama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fscemama/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19232#issuecomment-645333853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19232"
    },
    {
      "event": "closed",
      "id": 3493428373,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQ5MzQyODM3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3493428373",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5c3c7cc50c5f70bbd2946c65c6fe0d50b380a076",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3c7cc50c5f70bbd2946c65c6fe0d50b380a076",
      "created_at": "2020-06-29T15:57:17Z"
    },
    {
      "event": "locked",
      "id": 6074096344,
      "node_id": "LOE_lADOABII584l6bYwzwAAAAFqC1rY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074096344",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:16:29Z",
      "lock_reason": "resolved"
    }
  ]
}