{
  "type": "issue",
  "issue": {
    "id": 28580114,
    "node_id": "MDU6SXNzdWUyODU4MDExNA==",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3778",
    "number": 3778,
    "state": "closed",
    "state_reason": "completed",
    "title": "0.9.0rc2 crashes at startup on OS X 10.9.2",
    "body": "here's a crash report:\n\n```\nProcess:         Bitcoin-Qt [12597]\nPath:            /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt\nIdentifier:      org.bitcoinfoundation.Bitcoin-Qt\nVersion:         0.9 (0.9)\nCode Type:       X86-64 (Native)\nParent Process:  launchd [244]\nResponsible:     Bitcoin-Qt [12597]\nUser ID:         501\n\nDate/Time:       2014-03-02 14:58:20.761 +0100\nOS Version:      Mac OS X 10.9.2 (13C64)\nReport Version:  11\n\nCrashed Thread:  0  Dispatch queue: com.apple.main-thread\n\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\nException Codes: KERN_PROTECTION_FAILURE at 0x00007fff549a1eb0\n\nVM Regions Near 0x7fff549a1eb0:\n    MALLOC_SMALL           00007f9b62800000-00007f9b64800000 [ 32.0M] rw-/rwx SM=PRV  \n--> STACK GUARD            00007fff511a2000-00007fff549a2000 [ 56.0M] ---/rwx SM=NUL  stack guard for thread 0\n    Stack                  00007fff549a2000-00007fff551a2000 [ 8192K] rw-/rwx SM=COW  thread 0\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   com.apple.CoreText              0x00007fff80c2c6a0 TBaseFont::PageForGlyph(unsigned short) const + 26\n1   com.apple.CoreText              0x00007fff80c2c5bf TBaseFont::GetUnscaledAdvances(unsigned short const*, CGSize*, long) const + 117\n2   com.apple.CoreText              0x00007fff80c2c51d GetUnscaledAdvances(TFont const&, unsigned short const*, CGSize*, long, CTFontOrientation) + 253\n3   com.apple.CoreText              0x00007fff80c53b4a TFont::GetAdvancesForGlyphs(unsigned short const*, CGSize*, long, CTFontOrientation) const + 72\n4   com.apple.CoreText              0x00007fff80c88846 CTFontGetAdvancesForGlyphs + 272\n5   libqcocoa.dylib                 0x000000010e20db13 0x10e1c2000 + 310035\n6   QtGui                           0x000000010bc581ee QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 78\n7   QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n8   QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n9   QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n10  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n11  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n12  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n13  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n14  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n15  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n16  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n17  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n18  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n19  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n20  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n21  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n22  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n23  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n24  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n25  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n26  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n27  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n28  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n29  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n30  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n31  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n32  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n33  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n34  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n35  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n36  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n37  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n38  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n39  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n40  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n41  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n42  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n43  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n44  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n45  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n46  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n47  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n48  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n49  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n50  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n51  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n52  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n53  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n54  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n55  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n56  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n57  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n58  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n59  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n60  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n61  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n62  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n63  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n64  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n65  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n66  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n67  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n68  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n69  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n70  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n71  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n72  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n73  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n74  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n75  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n76  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n77  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n78  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n79  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n80  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n81  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n82  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n83  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n84  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n85  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n86  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n87  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n88  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n89  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n90  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n91  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n92  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n93  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n94  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n95  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n96  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n97  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n98  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n99  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n100 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n101 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n102 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n103 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n104 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n105 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n106 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n107 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n108 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n109 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n110 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n111 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n112 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n113 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n114 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n115 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n116 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n117 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n118 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n119 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n120 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n121 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n122 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n123 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n124 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n125 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n126 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n127 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n128 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n129 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n130 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n131 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n132 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n133 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n134 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n135 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n136 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n137 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n138 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n139 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n140 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n141 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n142 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n143 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n144 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n145 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n146 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n147 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n148 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n149 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n150 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n151 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n152 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n153 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n154 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n155 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n156 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n157 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n158 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n159 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n160 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n161 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n162 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n163 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n164 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n165 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n166 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n167 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n168 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n169 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n170 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n171 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n172 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n173 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n174 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n175 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n176 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n177 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n178 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n179 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n180 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n181 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n182 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n183 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n184 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n185 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n186 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n187 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n188 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n189 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n190 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n191 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n192 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n193 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n194 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n195 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n196 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n197 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n198 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n199 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n200 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n201 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n202 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n203 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n204 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n205 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n206 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n207 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n208 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n209 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n210 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n211 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n212 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n213 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n214 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n215 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n216 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n217 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n218 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n219 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n220 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n221 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n222 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n223 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n224 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n225 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n226 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n227 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n228 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n229 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n230 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n231 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n232 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n233 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n234 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n235 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n236 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n237 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n238 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n239 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n240 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n241 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n242 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n243 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n244 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n245 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n246 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n247 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n248 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n249 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n250 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n251 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n252 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n253 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n254 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n255 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n256 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n257 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n258 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n259 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n260 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n261 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n262 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n263 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n264 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n265 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n266 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n267 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n268 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n269 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n270 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n271 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n272 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n273 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n274 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n275 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n276 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n277 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n278 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n279 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n280 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n281 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n282 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n283 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n284 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n285 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n286 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n287 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n288 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n289 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n290 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n291 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n292 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n293 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n294 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n295 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n296 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n297 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n298 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n299 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n300 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n301 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n302 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n303 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n304 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n305 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n306 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n307 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n308 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n309 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n310 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n311 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n312 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n313 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n314 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n315 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n316 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n317 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n318 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n319 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n320 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n321 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n322 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n323 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n324 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n325 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n326 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n327 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n328 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n329 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n330 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n331 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n332 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n333 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n334 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n335 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n336 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n337 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n338 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n339 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n340 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n341 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n342 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n343 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n344 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n345 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n346 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n347 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n348 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n349 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n350 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n351 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n352 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n353 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n354 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n355 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n356 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n357 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n358 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n359 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n360 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n361 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n362 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n363 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n364 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n365 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n366 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n367 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n368 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n369 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n370 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n371 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n372 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n373 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n374 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n375 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n376 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n377 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n378 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n379 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n380 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n381 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n382 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n383 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n384 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n385 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n386 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n387 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n388 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n389 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n390 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n391 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n392 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n393 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n394 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n395 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n396 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n397 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n398 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n399 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n400 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n401 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n402 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n403 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n404 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n405 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n406 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n407 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n408 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n409 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n410 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n411 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n412 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n413 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n414 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n415 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n416 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n417 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n418 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n419 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n420 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n421 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n422 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n423 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n424 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n425 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n426 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n427 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n428 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n429 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n430 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n431 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n432 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n433 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n434 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n435 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n436 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n437 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n438 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n439 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n440 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n441 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n442 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n443 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n444 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n445 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n446 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n447 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n448 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n449 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n450 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n451 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n452 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n453 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n454 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n455 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n456 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n457 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n458 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n459 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n460 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n461 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n462 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n463 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n464 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n465 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n466 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n467 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n468 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n469 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n470 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n471 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n472 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n473 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n474 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n475 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n476 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n477 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n478 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n479 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n480 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n481 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n482 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n483 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n484 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n485 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n486 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n487 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n488 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n489 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n490 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n491 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n492 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n493 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n494 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n495 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n496 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n497 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n498 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n499 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n500 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n501 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n502 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n503 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n504 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n505 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n506 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n507 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n508 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n509 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n510 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n511 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n\nThread 1:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff86842662 kevent64 + 10\n1   libdispatch.dylib               0x00007fff88c5e43d _dispatch_mgr_invoke + 239\n2   libdispatch.dylib               0x00007fff88c5e152 _dispatch_mgr_thread + 52\n\nThread 2:\n0   libsystem_kernel.dylib          0x00007fff86841e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff8e237f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff8e23afb9 start_wqthread + 13\n\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff86841e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff8e237f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff8e23afb9 start_wqthread + 13\n\nThread 4:\n0   libsystem_kernel.dylib          0x00007fff86841e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff8e237f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff8e23afb9 start_wqthread + 13\n\nThread 5:: QThread\n0   libsystem_kernel.dylib          0x00007fff868419aa __select + 10\n1   QtCore                          0x000000010c155cd5 qt_safe_select(int, fd_set*, fd_set*, fd_set*, timeval const*) + 69\n2   QtCore                          0x000000010c156bac QEventDispatcherUNIXPrivate::doSelect(QFlags<QEventLoop::ProcessEventsFlag>, timeval*) + 668\n3   QtCore                          0x000000010c157afb QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 219\n4   QtCore                          0x000000010c10d983 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 371\n5   QtCore                          0x000000010bf8e1bd QThread::exec() + 109\n6   QtCore                          0x000000010bf91a3a 0x10bf6b000 + 158266\n7   libsystem_pthread.dylib         0x00007fff8e236899 _pthread_body + 138\n8   libsystem_pthread.dylib         0x00007fff8e23672a _pthread_start + 137\n9   libsystem_pthread.dylib         0x00007fff8e23afc9 thread_start + 13\n\nThread 6:: QThread\n0   libsystem_kernel.dylib          0x00007fff868419aa __select + 10\n1   QtCore                          0x000000010c155cd5 qt_safe_select(int, fd_set*, fd_set*, fd_set*, timeval const*) + 69\n2   QtCore                          0x000000010c156bac QEventDispatcherUNIXPrivate::doSelect(QFlags<QEventLoop::ProcessEventsFlag>, timeval*) + 668\n3   QtCore                          0x000000010c157afb QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 219\n4   QtCore                          0x000000010c10d983 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 371\n5   QtCore                          0x000000010bf8e1bd QThread::exec() + 109\n6   QtCore                          0x000000010bf91a3a 0x10bf6b000 + 158266\n7   libsystem_pthread.dylib         0x00007fff8e236899 _pthread_body + 138\n8   libsystem_pthread.dylib         0x00007fff8e23672a _pthread_start + 137\n9   libsystem_pthread.dylib         0x00007fff8e23afc9 thread_start + 13\n\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x0000000000000000  rbx: 0x00007fff549a2568  rcx: 0x0000000000000000  rdx: 0x0000000000000000\n  rdi: 0x00007fff549a2070  rsi: 0x00007f9b6245a6a0  rbp: 0x00007fff549a2040  rsp: 0x00007fff549a1ea0\n   r8: 0x0000000000000001   r9: 0x0000000000000005  r10: 0x0000000000000004  r11: 0x0000000000000004\n  r12: 0x00007fff81316d00  r13: 0x0000000000000000  r14: 0x00007f9b6245a6a0  r15: 0x00007f9b6245a6a0\n  rip: 0x00007fff80c2c6a0  rfl: 0x0000000000010206  cr2: 0x00007fff549a1eb0\n\nLogical CPU:     2\nError Code:      0x00000006\nTrap Number:     14\n```\n",
    "user": {
      "login": "FelixWeis",
      "id": 551068,
      "node_id": "MDQ6VXNlcjU1MTA2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FelixWeis",
      "html_url": "https://github.com/FelixWeis",
      "followers_url": "https://api.github.com/users/FelixWeis/followers",
      "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
      "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
      "repos_url": "https://api.github.com/users/FelixWeis/repos",
      "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "assignee": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 10,
    "closed_at": "2014-03-14T01:01:10Z",
    "created_at": "2014-03-02T14:06:40Z",
    "updated_at": "2021-09-08T12:32:40Z"
  },
  "events": [
    {
      "event": "assigned",
      "id": 98114116,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQ5ODExNDExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/98114116",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-02T14:17:07Z",
      "assignee": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "milestoned",
      "id": 98114120,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDk4MTE0MTIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/98114120",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-02T14:17:10Z",
      "milestone": {
        "title": "0.9.0"
      }
    },
    {
      "event": "labeled",
      "id": 98114121,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDk4MTE0MTIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/98114121",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-02T14:17:13Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "labeled",
      "id": 98114122,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDk4MTE0MTIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/98114122",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-02T14:17:16Z",
      "label": {
        "name": "Priority High",
        "color": "e10c02"
      }
    },
    {
      "event": "commented",
      "id": 36455786,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDU1Nzg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36455786",
      "actor": {
        "login": "jedimstr",
        "id": 5072618,
        "node_id": "MDQ6VXNlcjUwNzI2MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5072618?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jedimstr",
        "html_url": "https://github.com/jedimstr",
        "followers_url": "https://api.github.com/users/jedimstr/followers",
        "following_url": "https://api.github.com/users/jedimstr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jedimstr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jedimstr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jedimstr/subscriptions",
        "organizations_url": "https://api.github.com/users/jedimstr/orgs",
        "repos_url": "https://api.github.com/users/jedimstr/repos",
        "events_url": "https://api.github.com/users/jedimstr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jedimstr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-02T14:44:25Z",
      "updated_at": "2014-03-02T14:44:25Z",
      "author_association": "NONE",
      "body": "Additional crash report if it helps:\nhttp://pastebin.com/download.php?i=3Us9uLN4\n",
      "user": {
        "login": "jedimstr",
        "id": 5072618,
        "node_id": "MDQ6VXNlcjUwNzI2MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5072618?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jedimstr",
        "html_url": "https://github.com/jedimstr",
        "followers_url": "https://api.github.com/users/jedimstr/followers",
        "following_url": "https://api.github.com/users/jedimstr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jedimstr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jedimstr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jedimstr/subscriptions",
        "organizations_url": "https://api.github.com/users/jedimstr/orgs",
        "repos_url": "https://api.github.com/users/jedimstr/repos",
        "events_url": "https://api.github.com/users/jedimstr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jedimstr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-36455786",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "commented",
      "id": 36456026,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDU2MDI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36456026",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-02T14:55:47Z",
      "updated_at": "2014-03-02T14:55:47Z",
      "author_association": "MEMBER",
      "body": "15:24:05 < fanquake> sipa it's a font rendering issue. mavericks only https://bugreports.qt-project.org/browse/QTBUG-31803\n15:25:27 < fanquake> Fix seems to be using qt 5.1.1 or above\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-36456026",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "commented",
      "id": 37016423,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE2NDIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37016423",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-07T11:31:59Z",
      "updated_at": "2014-03-07T11:31:59Z",
      "author_association": "MEMBER",
      "body": "@gavinandresen @theuni seems that we have to do the rc3 build with either Qt4.x or a more recent Qt5.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37016423",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "mentioned",
      "id": 99886347,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50OTk4ODYzNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/99886347",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-07T11:31:59Z"
    },
    {
      "event": "subscribed",
      "id": 99886348,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDk5ODg2MzQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/99886348",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-07T11:31:59Z"
    },
    {
      "event": "mentioned",
      "id": 99886349,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50OTk4ODYzNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/99886349",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-07T11:31:59Z"
    },
    {
      "event": "subscribed",
      "id": 99886350,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDk5ODg2MzUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/99886350",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-07T11:31:59Z"
    },
    {
      "event": "commented",
      "id": 37361570,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzYxNTcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37361570",
      "actor": {
        "login": "raid5",
        "id": 15592,
        "node_id": "MDQ6VXNlcjE1NTky",
        "avatar_url": "https://avatars.githubusercontent.com/u/15592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raid5",
        "html_url": "https://github.com/raid5",
        "followers_url": "https://api.github.com/users/raid5/followers",
        "following_url": "https://api.github.com/users/raid5/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/raid5/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/raid5/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/raid5/subscriptions",
        "organizations_url": "https://api.github.com/users/raid5/orgs",
        "repos_url": "https://api.github.com/users/raid5/repos",
        "events_url": "https://api.github.com/users/raid5/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/raid5/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T00:03:57Z",
      "updated_at": "2014-03-12T00:03:57Z",
      "author_association": "NONE",
      "body": "I recently went to check out rc2 and hit this crash as well.\n",
      "user": {
        "login": "raid5",
        "id": 15592,
        "node_id": "MDQ6VXNlcjE1NTky",
        "avatar_url": "https://avatars.githubusercontent.com/u/15592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raid5",
        "html_url": "https://github.com/raid5",
        "followers_url": "https://api.github.com/users/raid5/followers",
        "following_url": "https://api.github.com/users/raid5/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/raid5/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/raid5/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/raid5/subscriptions",
        "organizations_url": "https://api.github.com/users/raid5/orgs",
        "repos_url": "https://api.github.com/users/raid5/repos",
        "events_url": "https://api.github.com/users/raid5/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/raid5/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37361570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "commented",
      "id": 37410817,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDEwODE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37410817",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T13:59:51Z",
      "updated_at": "2014-03-12T13:59:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj @theuni  :  I'm testing an OSX 10.6.8 + XCode 4.2 + homebrew + Qt4 build  (Qt5 homebrew failed to build in 10.6) -- I think that is the way to go for the 0.9 release.\n\nSome quick google searches on what versions of OSX are still being used seem to show that about 20% of OSX users are still running 10.6.  If that was 10% or less then I'd be comfortable requiring 10.7+ ...\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37410817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "mentioned",
      "id": 101258994,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAxMjU4OTk0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101258994",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T13:59:51Z"
    },
    {
      "event": "subscribed",
      "id": 101258995,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMTI1ODk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101258995",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T13:59:51Z"
    },
    {
      "event": "mentioned",
      "id": 101258996,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAxMjU4OTk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101258996",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T13:59:51Z"
    },
    {
      "event": "subscribed",
      "id": 101258997,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMTI1ODk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101258997",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T13:59:51Z"
    },
    {
      "event": "commented",
      "id": 37475932,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc1OTMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37475932",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:15:36Z",
      "updated_at": "2014-03-12T22:15:36Z",
      "author_association": "MEMBER",
      "body": "@gavinandresen to clarify, do you propose using homebrew for all dependencies, or just qt? And, why switch to homebrew after using macports for previous releases? These are scary changes for the rcX stage.\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37475932",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "mentioned",
      "id": 101467408,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAxNDY3NDA4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101467408",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:15:36Z"
    },
    {
      "event": "subscribed",
      "id": 101467409,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMTQ2NzQwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101467409",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:15:36Z"
    },
    {
      "event": "commented",
      "id": 37476362,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc2MzYy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37476362",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:20:22Z",
      "updated_at": "2014-03-12T22:20:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "@theuni : I propose using homebrew for all dependencies. Why switch to homebrew: because I cannot get macports to install in the OSX 10.6.8 virtual machine I want to use for building -- homebrew works nicely.\n\nIt looks to me like macports is dying; macports.org was down most of yesterday (and appears to be down again today, and date on their latest \"download this to get started\" was November 2013.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37476362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "mentioned",
      "id": 101468956,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAxNDY4OTU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101468956",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:20:22Z"
    },
    {
      "event": "subscribed",
      "id": 101468957,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMTQ2ODk1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101468957",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:20:22Z"
    },
    {
      "event": "commented",
      "id": 37477065,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc3MDY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37477065",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:27:43Z",
      "updated_at": "2014-03-12T22:27:43Z",
      "author_association": "MEMBER",
      "body": "@gavinandresen How flexible are you on that? I'll defer to you on the 'macports is dying' part, I've not looked into that lately. But changing one dependency for rc2 proved to be a big deal on 10.8, so I cringe when thinking about switching them all before release.\n\nIf I were to throw something together (vm image, builder scripts, whatever would suffice), could I sway you to delay the homebrew move until after .9?\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37477065",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "mentioned",
      "id": 101471102,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAxNDcxMTAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101471102",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:27:43Z"
    },
    {
      "event": "subscribed",
      "id": 101471104,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMTQ3MTEwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101471104",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-12T22:27:43Z"
    },
    {
      "event": "commented",
      "id": 37605392,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjA1Mzky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37605392",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-14T01:01:10Z",
      "updated_at": "2014-03-14T01:01:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing, should be fixed by rc3 (if it is not, please open a new issue).\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37605392",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "closed",
      "id": 101901542,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTAxOTAxNTQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/101901542",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-14T01:01:10Z"
    },
    {
      "event": "commented",
      "id": 37612765,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjEyNzY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/37612765",
      "actor": {
        "login": "raid5",
        "id": 15592,
        "node_id": "MDQ6VXNlcjE1NTky",
        "avatar_url": "https://avatars.githubusercontent.com/u/15592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raid5",
        "html_url": "https://github.com/raid5",
        "followers_url": "https://api.github.com/users/raid5/followers",
        "following_url": "https://api.github.com/users/raid5/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/raid5/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/raid5/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/raid5/subscriptions",
        "organizations_url": "https://api.github.com/users/raid5/orgs",
        "repos_url": "https://api.github.com/users/raid5/repos",
        "events_url": "https://api.github.com/users/raid5/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/raid5/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-14T03:06:03Z",
      "updated_at": "2014-03-14T03:06:03Z",
      "author_association": "NONE",
      "body": "Fixed for me.\n",
      "user": {
        "login": "raid5",
        "id": 15592,
        "node_id": "MDQ6VXNlcjE1NTky",
        "avatar_url": "https://avatars.githubusercontent.com/u/15592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raid5",
        "html_url": "https://github.com/raid5",
        "followers_url": "https://api.github.com/users/raid5/followers",
        "following_url": "https://api.github.com/users/raid5/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/raid5/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/raid5/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/raid5/subscriptions",
        "organizations_url": "https://api.github.com/users/raid5/orgs",
        "repos_url": "https://api.github.com/users/raid5/repos",
        "events_url": "https://api.github.com/users/raid5/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/raid5/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3778#issuecomment-37612765",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778"
    },
    {
      "event": "locked",
      "id": 5272002833,
      "node_id": "LOE_lADOABII584BtBkSzwAAAAE6PGER",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5272002833",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:32:40Z",
      "lock_reason": "resolved"
    }
  ]
}