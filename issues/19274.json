{
  "type": "issue",
  "issue": {
    "id": 638359698,
    "node_id": "MDU6SXNzdWU2MzgzNTk2OTg=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19274",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19274/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19274/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19274/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/19274",
    "number": 19274,
    "state": "open",
    "state_reason": null,
    "title": "When Finding a corrupt block during re-index, download the corrupt block, continue reindex from volume",
    "body": "<!-- Describe the issue -->\r\nI recently had a corrupt bitcoin database.  I've been trying to re-index the blockchain as I have a full node and the entire blockchain downloaded to my volume.\r\n\r\nI'm seeing errors in the debug.log that I'm assuming are corrupt blocks.\r\nLoadExternalBlockFile: Deserialize or I/O error\r\n\r\nLoadExternalBlockFile: Deserialize or I/O error - CBufferedFile::Fill: end of file: unspecified iostream_category error\r\n\r\nLoadExternalBlockFile: Deserialize or I/O error - non-canonical ReadCompactSize(): unspecified iostream_category error\r\n\r\nWhen the re-index reaches one of those blocks, it stops trying to re-index the blockchain and begins to sync over the network.  It doesn't always stop immediately after finding the error.  Sometimes it will continue to re-index, but when looking for the best tip, it will begin syncing with the network after getting to that block.\r\n\r\nI'll delete the corrupt block, restart Bitcoin to re-index, hoping it will download the missing block and continue to re-index from my drive.  I haven't seen that happen.\r\n\r\n<!--- What behavior did you expect? -->\r\nWhen finding a corrupt or missing block, replace that one block and continue re-indexing from the volume.  Take priority for using blocks already on the volume rather than syncing over the network.\r\n\r\n<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\r\n0.20\r\n\r\n<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\r\n2010 Mac 5,1\r\n10.13.6 os\r\n2.8 GHz Quad-Core Intel Xeon\r\n24 GB 1066 MHz DDR3\r\nATI Radeon HD 5870 1024 MB\r\nblockchain stored on an attached DroboPro with 5 TB free storage.  The Drobo had a drive failure, I can lose another 2 drives before data loss.  Drobo is rebuilding.\r\n\r\n<!-- Any extra information that might be useful in the debugging process. -->\r\nTo test,  delete an early block and start Bitcoin.\r\n\r\n<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->\r\n\r\n\r\n2020-06-14T12:50:20Z Reindexing block file blk00163.dat...\r\n2020-06-14T12:51:03Z Loaded 518 blocks from external file in 42614ms\r\n2020-06-14T12:51:03Z Reindexing block file blk00164.dat...\r\n2020-06-14T12:51:26Z Loaded 606 blocks from external file in 22425ms\r\n2020-06-14T12:51:26Z Reindexing block file blk00165.dat...\r\n2020-06-14T12:52:04Z Loaded 492 blocks from external file in 38732ms\r\n2020-06-14T12:52:04Z Reindexing block file blk00166.dat...\r\n2020-06-14T12:52:29Z Loaded 518 blocks from external file in 24488ms\r\n2020-06-14T12:52:29Z Reindexing block file blk00167.dat...\r\n2020-06-14T12:53:10Z Loaded 595 blocks from external file in 41404ms\r\n2020-06-14T12:53:10Z Reindexing block file blk00168.dat...\r\n2020-06-14T12:53:32Z Loaded 573 blocks from external file in 22214ms\r\n2020-06-14T12:53:32Z Reindexing block file blk00169.dat...\r\n2020-06-14T12:53:37Z LoadExternalBlockFile: Deserialize or I/O error - CBufferedFile::Fill: end of file: unspecified iostream_category error\r\n2020-06-14T12:53:37Z Loaded 42 blocks from external file in 5048ms\r\n2020-06-14T12:53:37Z Reindexing block file blk00170.dat...\r\n2020-06-14T12:53:49Z Reindexing block file blk00171.dat...\r\n2020-06-14T12:54:05Z Reindexing block file blk00172.dat...\r\n2020-06-14T12:54:17Z Reindexing block file blk00173.dat...\r\n2020-06-14T12:54:29Z Reindexing block file blk00174.dat...\r\n2020-06-14T12:54:45Z Reindexing block file blk00175.dat...\r\n2020-06-14T12:54:57Z Reindexing block file blk00176.dat...\r\n2020-06-14T12:55:10Z Reindexing block file blk00177.dat...\r\n2020-06-14T12:55:25Z Reindexing block file blk00178.dat...\r\n2020-06-14T12:55:37Z Reindexing block file blk00179.dat...\r\n2020-06-14T12:55:54Z Reindexing block file blk00180.dat...\r\n2020-06-14T12:56:13Z Reindexing block file blk00181.dat...\r\n2020-06-14T12:56:31Z Reindexing block file blk00182.dat...\r\n2020-06-14T12:56:47Z Reindexing block file blk00183.dat...\r\n2020-06-14T12:57:01Z Reindexing block file blk00184.dat...\r\n2020-06-14T12:57:15Z Reindexing block file blk00185.dat...\r\n2020-06-14T12:57:32Z Reindexing block file blk00186.dat...\r\n2020-06-14T12:57:46Z Reindexing block file blk00187.dat...\r\n\r\n",
    "user": {
      "login": "spiralnova",
      "id": 23297019,
      "node_id": "MDQ6VXNlcjIzMjk3MDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23297019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spiralnova",
      "html_url": "https://github.com/spiralnova",
      "followers_url": "https://api.github.com/users/spiralnova/followers",
      "following_url": "https://api.github.com/users/spiralnova/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/spiralnova/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/spiralnova/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/spiralnova/subscriptions",
      "organizations_url": "https://api.github.com/users/spiralnova/orgs",
      "repos_url": "https://api.github.com/users/spiralnova/repos",
      "events_url": "https://api.github.com/users/spiralnova/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/spiralnova/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 1,
    "created_at": "2020-06-14T14:11:26Z",
    "updated_at": "2020-06-22T14:17:51Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 647548541,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU0ODU0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647548541",
      "actor": {
        "login": "spiralnova",
        "id": 23297019,
        "node_id": "MDQ6VXNlcjIzMjk3MDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/23297019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/spiralnova",
        "html_url": "https://github.com/spiralnova",
        "followers_url": "https://api.github.com/users/spiralnova/followers",
        "following_url": "https://api.github.com/users/spiralnova/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/spiralnova/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/spiralnova/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/spiralnova/subscriptions",
        "organizations_url": "https://api.github.com/users/spiralnova/orgs",
        "repos_url": "https://api.github.com/users/spiralnova/repos",
        "events_url": "https://api.github.com/users/spiralnova/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/spiralnova/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T14:17:51Z",
      "updated_at": "2020-06-22T14:17:51Z",
      "author_association": "NONE",
      "body": "When performing a re-index, Bitcoin stops loading block files where it will begin to sync with network.  And still spends time reindexing each block file that I already have downloaded.  Example:\r\nDuring a re-index Bitcoin 1st reindexes all block files.  There is a confirmation message, Loaded x blocks from external file in x ms.  In my last -reindex pass at block file 865, I stopped seeing those confirmations.  And yet, bitcoin will continue to look at each file down to 2108, which is the last block file I have downloaded.  Then it begins to updateTip starting from the beginning blocks.  When it gets to file 865, it stops updateTip, and begins to re-download blocks from the network.  \r\n\r\nIdeally, Bitcoin would see all my local blocks, and only download if a block in the middle is not complete.  \r\nCheck local for block, if error, request network for download, check next local block.  \r\n\r\nInstead of, check local for block, error, download rest of blocks from network.  Or at least stop reindexing if it's going to ignore all those other blocks.\r\n\r\n\r\n\r\n2020-06-22T14:05:20Z Reindexing block file blk00862.dat...\r\n2020-06-22T14:05:26Z Loaded 112 blocks from external file in 6682ms\r\n2020-06-22T14:05:26Z Reindexing block file blk00863.dat...\r\n2020-06-22T14:05:34Z Loaded 146 blocks from external file in 7456ms\r\n2020-06-22T14:05:34Z Reindexing block file blk00864.dat...\r\n2020-06-22T14:05:40Z Loaded 119 blocks from external file in 6144ms\r\n2020-06-22T14:05:40Z Reindexing block file blk00865.dat...\r\n2020-06-22T14:05:45Z Reindexing block file blk00866.dat...\r\n2020-06-22T14:05:50Z Reindexing block file blk00867.dat...\r\n",
      "user": {
        "login": "spiralnova",
        "id": 23297019,
        "node_id": "MDQ6VXNlcjIzMjk3MDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/23297019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/spiralnova",
        "html_url": "https://github.com/spiralnova",
        "followers_url": "https://api.github.com/users/spiralnova/followers",
        "following_url": "https://api.github.com/users/spiralnova/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/spiralnova/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/spiralnova/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/spiralnova/subscriptions",
        "organizations_url": "https://api.github.com/users/spiralnova/orgs",
        "repos_url": "https://api.github.com/users/spiralnova/repos",
        "events_url": "https://api.github.com/users/spiralnova/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/spiralnova/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19274#issuecomment-647548541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19274"
    }
  ]
}