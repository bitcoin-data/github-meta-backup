{
  "type": "issue",
  "issue": {
    "id": 643785189,
    "node_id": "MDU6SXNzdWU2NDM3ODUxODk=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19363",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19363/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19363/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19363/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/19363",
    "number": 19363,
    "state": "open",
    "state_reason": null,
    "title": "TransactionError::ALREADY_IN_CHAIN inconsistency ",
    "body": "If a transaction is already in the block chain, and all of its outputs are spent, the `BroadcastTransaction()` fails to detect the correct transaction status. It returns `TransactionError::MISSING_INPUTS` instead of `TransactionError::ALREADY_IN_CHAIN`.\r\n\r\nThe related code: https://github.com/bitcoin/bitcoin/blob/80fd474e402bb003c3a427f1997eb649e69138ba/src/node/transaction.cpp#L32-L37\r\n\r\nI think that `TransactionError::ALREADY_IN_CHAIN` should be returned in all cases when the transaction is in the block chain, or it should be dropped from the code at all as inconsistent.\r\n\r\nWhat are other opinions?",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 1,
    "created_at": "2020-06-23T12:07:41Z",
    "updated_at": "2023-02-17T16:04:41Z"
  },
  "events": [
    {
      "event": "subscribed",
      "id": 8309252036,
      "node_id": "SE_lADOABII584mX2HlzwAAAAHvRR_E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8309252036",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-19T08:13:12Z"
    },
    {
      "event": "commented",
      "id": 1434852432,
      "node_id": "IC_kwDOABII585VhhxQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434852432",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-17T16:04:41Z",
      "updated_at": "2023-02-17T16:04:41Z",
      "author_association": "MEMBER",
      "body": "Although it is inconsistent I slightly prefer the idea of returning the most accurate information available to the user.\r\n\r\nFollowing this logic instead of removing this error type, we could take two new actions to try and increase the chance that the caller gets more accurate information back:\r\n\r\n1. Inside `BroadcastTransaction()` add a call to `GetTransaction()` on the condition that the user has `txindex` enabled\r\n2. Augment [`HandleATMPError`](https://github.com/bitcoin/bitcoin/blob/fe1b3256888bd0e70d0c9655f565e139ec87b606/src/node/transaction.cpp#L22-L26) to include a more detailed error string in the `TxValidationResult::TX_MISSING_INPUTS` case, which might prompt a recipient to find another way to check if the transaction is already in the chain.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19363#issuecomment-1434852432",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19363"
    }
  ]
}