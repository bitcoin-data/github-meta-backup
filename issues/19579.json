{
  "type": "issue",
  "issue": {
    "id": 665121847,
    "node_id": "MDU6SXNzdWU2NjUxMjE4NDc=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19579",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19579/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19579/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19579/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/19579",
    "number": 19579,
    "state": "closed",
    "state_reason": "completed",
    "title": "Output formatting for: bitcoin-cli help getrawmempool",
    "body": "When invoking the help command ```bitcoin-cli help getrawmempool``` for getrawmempool the output is as follows:\r\n\r\n```\r\ngetrawmempool ( verbose )\r\n\r\nReturns all transaction ids in memory pool as a json array of string transaction ids.\r\n\r\nHint: use getmempoolentry to fetch a specific transaction from the mempool.\r\n\r\nArguments:\r\n1. verbose    (boolean, optional, default=false) True for a json object, false for array of transaction ids\r\n\r\nResult (for verbose = false):\r\n[           (json array)\r\n  \"hex\",    (string) The transaction id\r\n  ...\r\n]\r\n\r\nResult (for verbose = true):\r\n{                                         (json object)\r\n  \"transactionid\" : {                     (json object)\r\n    \"vsize\" : n,                          (numeric) virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\r\n    \"weight\" : n,                         (numeric) transaction weight as defined in BIP 141.\r\n    \"fee\" : n,                            (numeric) transaction fee in BTC (DEPRECATED)\r\n    \"modifiedfee\" : n,                    (numeric) transaction fee with fee deltas used for mining priority (DEPRECATED)\r\n    \"time\" : xxx,                         (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\r\n    \"height\" : n,                         (numeric) block height when transaction entered pool\r\n    \"descendantcount\" : n,                (numeric) number of in-mempool descendant transactions (including this one)\r\n    \"descendantsize\" : n,                 (numeric) virtual transaction size of in-mempool descendants (including this one)\r\n    \"descendantfees\" : n,                 (numeric) modified fees (see above) of in-mempool descendants (including this one) (DEPRECATED)\r\n    \"ancestorcount\" : n,                  (numeric) number of in-mempool ancestor transactions (including this one)\r\n    \"ancestorsize\" : n,                   (numeric) virtual transaction size of in-mempool ancestors (including this one)\r\n    \"ancestorfees\" : n,                   (numeric) modified fees (see above) of in-mempool ancestors (including this one) (DEPRECATED)\r\n    \"wtxid\" : \"hex\",                      (string) hash of serialized transaction, including witness data\r\n    \"fees\" : {                            (json object)\r\n      \"base\" : n,                         (numeric) transaction fee in BTC\r\n      \"modified\" : n,                     (numeric) transaction fee with fee deltas used for mining priority in BTC\r\n      \"ancestor\" : n,                     (numeric) modified fees (see above) of in-mempool ancestors (including this one) in BTC\r\n      \"descendant\" : n                    (numeric) modified fees (see above) of in-mempool descendants (including this one) in BTC\r\n    },\r\n    \"depends\" : [                         (json array) unconfirmed transactions used as inputs for this transaction\r\n      \"hex\",                              (string) parent transaction id\r\n      ...\r\n    ],\r\n    \"spentby\" : [                         (json array) unconfirmed transactions spending outputs from this transaction\r\n      \"hex\",                              (string) child transaction id\r\n      ...\r\n    ],\r\n    \"bip125-replaceable\" : true|false,    (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\r\n    \"unbroadcast\" : true|false,           (boolean) Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\r\n    ...\r\n  }\r\n}\r\n\r\nExamples:\r\n> bitcoin-cli getrawmempool true\r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getrawmempool\", \"params\": [true]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n```\r\n\r\nThe \"transactionid\" block for the verbose output has **...** as the last entry, I think the elipsis should be in the next line (after the end of the object), indicating that there might be more objects of the  same form instead of indicating that the transactionid object might have more, not documented values.\r\n\r\nThus the output should be like this:\r\n\r\n```\r\ngetrawmempool ( verbose )\r\n\r\nReturns all transaction ids in memory pool as a json array of string transaction ids.\r\n\r\nHint: use getmempoolentry to fetch a specific transaction from the mempool.\r\n\r\nArguments:\r\n1. verbose    (boolean, optional, default=false) True for a json object, false for array of transaction ids\r\n\r\nResult (for verbose = false):\r\n[           (json array)\r\n  \"hex\",    (string) The transaction id\r\n  ...\r\n]\r\n\r\nResult (for verbose = true):\r\n{                                         (json object)\r\n  \"transactionid\" : {                     (json object)\r\n    \"vsize\" : n,                          (numeric) virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\r\n    \"weight\" : n,                         (numeric) transaction weight as defined in BIP 141.\r\n    \"fee\" : n,                            (numeric) transaction fee in BTC (DEPRECATED)\r\n    \"modifiedfee\" : n,                    (numeric) transaction fee with fee deltas used for mining priority (DEPRECATED)\r\n    \"time\" : xxx,                         (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\r\n    \"height\" : n,                         (numeric) block height when transaction entered pool\r\n    \"descendantcount\" : n,                (numeric) number of in-mempool descendant transactions (including this one)\r\n    \"descendantsize\" : n,                 (numeric) virtual transaction size of in-mempool descendants (including this one)\r\n    \"descendantfees\" : n,                 (numeric) modified fees (see above) of in-mempool descendants (including this one) (DEPRECATED)\r\n    \"ancestorcount\" : n,                  (numeric) number of in-mempool ancestor transactions (including this one)\r\n    \"ancestorsize\" : n,                   (numeric) virtual transaction size of in-mempool ancestors (including this one)\r\n    \"ancestorfees\" : n,                   (numeric) modified fees (see above) of in-mempool ancestors (including this one) (DEPRECATED)\r\n    \"wtxid\" : \"hex\",                      (string) hash of serialized transaction, including witness data\r\n    \"fees\" : {                            (json object)\r\n      \"base\" : n,                         (numeric) transaction fee in BTC\r\n      \"modified\" : n,                     (numeric) transaction fee with fee deltas used for mining priority in BTC\r\n      \"ancestor\" : n,                     (numeric) modified fees (see above) of in-mempool ancestors (including this one) in BTC\r\n      \"descendant\" : n                    (numeric) modified fees (see above) of in-mempool descendants (including this one) in BTC\r\n    },\r\n    \"depends\" : [                         (json array) unconfirmed transactions used as inputs for this transaction\r\n      \"hex\",                              (string) parent transaction id\r\n      ...\r\n    ],\r\n    \"spentby\" : [                         (json array) unconfirmed transactions spending outputs from this transaction\r\n      \"hex\",                              (string) child transaction id\r\n      ...\r\n    ],\r\n    \"bip125-replaceable\" : true|false,    (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\r\n    \"unbroadcast\" : true|false            (boolean) Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\r\n  },\r\n  ...\r\n}\r\n\r\nExamples:\r\n> bitcoin-cli getrawmempool true\r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getrawmempool\", \"params\": [true]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n```\r\n\r\nHappy to submit a PR.",
    "user": {
      "login": "stylesuxx",
      "id": 978192,
      "node_id": "MDQ6VXNlcjk3ODE5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/978192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stylesuxx",
      "html_url": "https://github.com/stylesuxx",
      "followers_url": "https://api.github.com/users/stylesuxx/followers",
      "following_url": "https://api.github.com/users/stylesuxx/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stylesuxx/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stylesuxx/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stylesuxx/subscriptions",
      "organizations_url": "https://api.github.com/users/stylesuxx/orgs",
      "repos_url": "https://api.github.com/users/stylesuxx/repos",
      "events_url": "https://api.github.com/users/stylesuxx/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stylesuxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 1,
    "closed_at": "2020-07-31T05:53:38Z",
    "created_at": "2020-07-24T12:00:56Z",
    "updated_at": "2022-02-15T11:16:33Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 663524473,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzUyNDQ3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663524473",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T12:56:03Z",
      "updated_at": "2020-07-24T12:56:03Z",
      "author_association": "MEMBER",
      "body": "Haven't tested, but a potential fix would be:\r\n\r\n\r\n```diff\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 2afc9a3d4a..f27373b57c 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -525,9 +525,9 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\r\n                             {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\r\n                         }},\r\n                     RPCResult{\"for verbose = true\",\r\n-                        RPCResult::Type::OBJ, \"\", \"\",\r\n+                        RPCResult::Type::OBJ_DYN, \"\", \"\",\r\n                         {\r\n-                            {RPCResult::Type::OBJ_DYN, \"transactionid\", \"\", MempoolEntryDescription()},\r\n+                            {RPCResult::Type::OBJ, \"transactionid\", \"\", MempoolEntryDescription()},\r\n                         }},\r\n                 },\r\n                 RPCExamples{\r\n@@ -556,7 +556,7 @@ static UniValue getmempoolancestors(const JSONRPCRequest& request)\r\n                         RPCResult::Type::ARR, \"\", \"\",\r\n                         {{RPCResult::Type::STR_HEX, \"\", \"The transaction id of an in-mempool ancestor transaction\"}}},\r\n                     RPCResult{\"for verbose = true\",\r\n-                        RPCResult::Type::OBJ_DYN, \"transactionid\", \"\", MempoolEntryDescription()},\r\n+                        RPCResult::Type::OBJ, \"transactionid\", \"\", MempoolEntryDescription()},\r\n                 },\r\n                 RPCExamples{\r\n                     HelpExampleCli(\"getmempoolancestors\", \"\\\"mytxid\\\"\")\r\n@@ -616,9 +616,9 @@ static UniValue getmempooldescendants(const JSONRPCRequest& request)\r\n                         RPCResult::Type::ARR, \"\", \"\",\r\n                         {{RPCResult::Type::STR_HEX, \"\", \"The transaction id of an in-mempool descendant transaction\"}}},\r\n                     RPCResult{\"for verbose = true\",\r\n-                        RPCResult::Type::OBJ, \"\", \"\",\r\n+                        RPCResult::Type::OBJ_DYN, \"\", \"\",\r\n                         {\r\n-                            {RPCResult::Type::OBJ_DYN, \"transactionid\", \"\", MempoolEntryDescription()},\r\n+                            {RPCResult::Type::OBJ, \"transactionid\", \"\", MempoolEntryDescription()},\r\n                         }},\r\n                 },\r\n                 RPCExamples{\r\n@@ -674,7 +674,7 @@ static UniValue getmempoolentry(const JSONRPCRequest& request)\r\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id (must be in mempool)\"},\r\n                 },\r\n                 RPCResult{\r\n-                    RPCResult::Type::OBJ_DYN, \"\", \"\", MempoolEntryDescription()},\r\n+                    RPCResult::Type::OBJ, \"\", \"\", MempoolEntryDescription()},\r\n                 RPCExamples{\r\n                     HelpExampleCli(\"getmempoolentry\", \"\\\"mytxid\\\"\")\r\n             + HelpExampleRpc(\"getmempoolentry\", \"\\\"mytxid\\\"\")\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/19579#issuecomment-663524473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19579"
    },
    {
      "event": "closed",
      "id": 3606988077,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzYwNjk4ODA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606988077",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ae4958be95a1158de9992a8e43ce032d87c74f13",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae4958be95a1158de9992a8e43ce032d87c74f13",
      "created_at": "2020-07-31T05:53:38Z"
    },
    {
      "event": "referenced",
      "id": 3606988086,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MDY5ODgwODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606988086",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a63a26f042134fa80356860c109edb25ac567552",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a63a26f042134fa80356860c109edb25ac567552",
      "created_at": "2020-07-31T05:53:38Z"
    },
    {
      "event": "referenced",
      "id": 3609583922,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MDk1ODM5MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3609583922",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9299f18d4b4c2345ad63a471e9d1f4b99218f7b5",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/9299f18d4b4c2345ad63a471e9d1f4b99218f7b5",
      "created_at": "2020-07-31T17:43:39Z"
    },
    {
      "event": "referenced",
      "id": 3630832589,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MzA4MzI1ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3630832589",
      "actor": {
        "login": "Warchant",
        "id": 1867551,
        "node_id": "MDQ6VXNlcjE4Njc1NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1867551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Warchant",
        "html_url": "https://github.com/Warchant",
        "followers_url": "https://api.github.com/users/Warchant/followers",
        "following_url": "https://api.github.com/users/Warchant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Warchant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Warchant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Warchant/subscriptions",
        "organizations_url": "https://api.github.com/users/Warchant/orgs",
        "repos_url": "https://api.github.com/users/Warchant/repos",
        "events_url": "https://api.github.com/users/Warchant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Warchant/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ccc08784d0b3372a15cd32c2ea49c31afe29ad9",
      "commit_url": "https://api.github.com/repos/Warchant/bitcoin/commits/8ccc08784d0b3372a15cd32c2ea49c31afe29ad9",
      "created_at": "2020-08-06T21:03:39Z"
    },
    {
      "event": "locked",
      "id": 6074096720,
      "node_id": "LOE_lADOABII584npPQ3zwAAAAFqC1xQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074096720",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:16:33Z",
      "lock_reason": "resolved"
    }
  ]
}