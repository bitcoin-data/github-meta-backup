{
  "type": "issue",
  "issue": {
    "id": 305377835,
    "node_id": "MDU6SXNzdWUzMDUzNzc4MzU=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/12690",
    "number": 12690,
    "state": "closed",
    "state_reason": "completed",
    "title": "LevelDB \"corrupted compressed block contents\" errors",
    "body": "I've been running `bitcoind -reindex-chainstate` very often for the LevelDB work I've been doing, and twice now I have gotten corrupted LevelDB databases. This is on two different computers (my desktop and my laptop). In at least once case I know there was a **clean shut down**, and the case with a clean shutdown happened on a build I produced from the official bitcoin-0.16.0.tar.gz release tarball with no patches applied.\r\n\r\nBoth cases exhibit something very unusual: the CRC32 for the index block is correct, but LevelDB thinks the block is snappy compressed (which it definitely is not). As of #12659 we are now logging better LevelDB error messages, so if other users encounter this issue they'll see something like the following in their logs:\r\n\r\n```\r\n2018-03-14 01:36:47 LevelDB read failure: Corruption: corrupted compressed block contents\r\n2018-03-14 01:36:47 Corruption: corrupted compressed block contents\r\n2018-03-14 01:36:47 Database corrupted\r\n```\r\n\r\n(If the error is a bad CRC, instead the error message will say \"Corruption: block checksum mismatch\".)\r\n\r\nWhat's interesting about this is that as you can see from the \"corrupted compressed block contents\" message, LevelDB thought the block was compressed. But that's definitely not the case: we always have snappy compression disabled (see `GetOptions()` in `dbwrapper.cpp`). I'm looking at the LevelDB code, and the compression flag is encoded within blocks (I guess so you can change the snappy compression option and not have to rebuild your database).\r\n\r\nThe conclusion I have to draw from this is that this could be a LevelDB bug, as LevelDB wrote out data with a valid checksum, but wasn't able to read the data it wrote. If there are other users who have LevelDB corruption problems, I would like them to build bitcoin from master (or at least with 3d16f581538b0974853e820508e8b3093269d2fd applied) and let me know if the error string contains the message \"corrupted compressed block contents\".\r\n\r\nI am using Linux 4.15.6 on an ext4 filesystem with `data=ordered` in both cases.\r\n\r\n## Clean Shutdown\r\n\r\nHere are the logs for the corrupted database on my desktop that had a clean shutdown: https://gist.github.com/eklitzke/166665da7eebfaedfa9ab8d0947ee5c8\r\n\r\nAs I mentioned earlier, this is from a `bitcoind` I compiled from the official source release on bitcoincore.org without any patches applied. This isn't exactly the same as the Gitian release because I have a newer version of GCC, but I would be surprised if that was related to the corruption issue (although it's not impossible).\r\n\r\n```\r\n$ sha1sum bitcoin-0.16.0.tar.gz \r\nb59539e55782f7f697ec4702bfda118274fd0138  bitcoin-0.16.0.tar.gz\r\n```\r\n\r\nIn GDB I can see that the bad block was the one that's supposed to contain `DB_BEST_BLOCK`:\r\n\r\n```\r\n(gdb) bt\r\n#0  leveldb::ReadBlock (file=file@entry=0x55555ead3a20, options=..., handle=..., result=result@entry=0x7fffffffc090) at leveldb/table/format.cc:122\r\n#1  0x000055555590a575 in leveldb::Table::Open (options=..., file=0x55555ead3a20, size=size@entry=142335, table=table@entry=0x7fffffffc190) at leveldb/table/table.cc:65\r\n#2  0x00005555558f7d94 in leveldb::TableCache::FindTable (this=this@entry=0x5555574918f0, file_number=<optimized out>, file_size=142335, handle=handle@entry=0x7fffffffc248)\r\n    at leveldb/db/table_cache.cc:64\r\n#3  0x00005555558f805d in leveldb::TableCache::Get (this=0x5555574918f0, options=..., file_number=<optimized out>, file_size=<optimized out>, k=..., arg=0x7fffffffc390, \r\n    saver=0x5555558f9d40 <leveldb::SaveValue(void*, leveldb::Slice const&, leveldb::Slice const&)>) at leveldb/db/table_cache.cc:112\r\n#4  0x0000555555901859 in leveldb::Version::Get (this=this@entry=0x5555574b50d0, options=..., k=..., value=value@entry=0x7fffffffc630, stats=stats@entry=0x7fffffffc440)\r\n    at leveldb/db/version_set.cc:408\r\n#5  0x00005555558e60b9 in leveldb::DBImpl::Get (this=0x55555eac6630, options=..., key=..., value=0x7fffffffc630) at leveldb/db/db_impl.cc:1141\r\n#6  0x00005555556daca4 in CDBWrapper::Read<char, uint256> (this=0x55555ead4898, key=@0x55555599a454: 66 'B', value=...) at ./dbwrapper.h:236\r\n#7  0x00005555556d315f in CCoinsViewDB::GetBestBlock (this=<optimized out>) at txdb.cpp:71\r\n#8  0x0000555555852dc2 in CCoinsViewBacked::GetBestBlock (this=<optimized out>) at coins.cpp:25\r\n#9  0x0000555555852f5d in CCoinsViewCache::GetBestBlock (this=0x555557473520) at coins.cpp:137\r\n#10 0x00005555555b8025 in AppInitMain () at init.cpp:1510\r\n#11 0x000055555559695c in AppInit (argc=1, argv=<optimized out>) at bitcoind.cpp:160\r\n#12 0x0000555555589d9f in main (argc=1, argv=0x7fffffffdb78) at bitcoind.cpp:186\r\n```\r\n\r\nHere's another thing that's interesting about this. The bad file was named `600070.ldb`. When I look at the directory contents of the chainstate directory, there's something kind of unexpected:\r\n\r\n```\r\n-rw-rw-r--. 1 evan evan   86225 Mar 12 01:03 600060.ldb\r\n-rw-rw-r--. 1 evan evan  106438 Mar 12 01:03 600061.ldb\r\n-rw-rw-r--. 1 evan evan   81855 Mar 12 01:03 600062.ldb\r\n-rw-rw-r--. 1 evan evan  118547 Mar 12 01:03 600063.ldb\r\n-rw-rw-r--. 1 evan evan   89644 Mar 12 01:03 600064.ldb\r\n-rw-rw-r--. 1 evan evan  112220 Mar 12 01:03 600065.ldb\r\n-rw-rw-r--. 1 evan evan   86420 Mar 12 01:03 600066.ldb\r\n-rw-rw-r--. 1 evan evan   97277 Mar 12 01:03 600067.ldb\r\n-rw-rw-r--. 1 evan evan  106997 Mar 12 01:03 600068.ldb\r\n-rw-rw-r--. 1 evan evan  142335 Mar 12 01:03 600070.ldb    <--- the corrupted file\r\n-rw-rw-r--. 1 evan evan  144482 Mar 12 01:03 600071.ldb\r\n-rw-rw-r--. 1 evan evan  150084 Mar 12 01:03 600072.ldb\r\n-rw-rw-r--. 1 evan evan  154317 Mar 12 01:03 600073.ldb\r\n-rw-rw-r--. 1 evan evan  157988 Mar 12 01:03 600074.ldb\r\n-rw-rw-r--. 1 evan evan  151167 Mar 12 01:03 600075.ldb\r\n-rw-rw-r--. 1 evan evan  224717 Mar 12 01:03 600076.ldb\r\n-rw-rw-r--. 1 evan evan  149947 Mar 12 01:03 600077.ldb\r\n-rw-rw-r--. 1 evan evan  162078 Mar 12 01:03 600078.ldb\r\n-rw-rw-r--. 1 evan evan  178024 Mar 12 01:03 600079.ldb\r\n-rw-rw-r--. 1 evan evan  140579 Mar 12 01:03 600080.ldb\r\n-rw-rw-r--. 1 evan evan  145243 Mar 12 01:03 600081.ldb\r\n-rw-rw-r--. 1 evan evan  143759 Mar 12 01:03 600082.ldb\r\n-rw-rw-r--. 1 evan evan   72766 Mar 12 01:03 600083.ldb\r\n-rw-rw-r--. 1 evan evan  206309 Mar 12 01:04 600084.ldb\r\n```\r\n\r\nAs you can see, all of these files go up sequentially. Except there's no `600069.ldb` file, which just so happens to be the file that is numerically just before the corrupted file. I don't know if this is actually significant or not. It might just be an implementation detail in LevelDB (the \"best block\" should be lexicographically first in the database, so maybe the first block is handled slightly different wrt file numbering).\r\n\r\nI've saved a copy of this database locally for further investigation.\r\n\r\n## Unclean Shutdown\r\n\r\nSame error about \"corrupted compressed block contents\". This wasn't a clean shutdown it was just from me killing the process, but this is still not supposed to cause database corruption as LevelDB is supposed to maintain a consistent writeahead log.\r\n\r\nThe stack trace is different: now the corrupted block is the one containing the head block `H` instead of the best block:\r\n\r\n```\r\n(gdb) bt\r\n#0  leveldb::ReadBlock (file=file@entry=0x15e07d90, options=..., handle=..., result=result@entry=0x7fffffffa270) at leveldb/table/format.cc:122\r\n#1  0x00000000007ec1f5 in leveldb::Table::Open (options=..., file=0x15e07d90, size=size@entry=1199067, table=table@entry=0x7fffffffa370) at leveldb/table/table.cc:65\r\n#2  0x00000000007d9a14 in leveldb::TableCache::FindTable (this=this@entry=0x83d1640, file_number=<optimized out>, file_size=1199067, handle=handle@entry=0x7fffffffa428)\r\n    at leveldb/db/table_cache.cc:64\r\n#3  0x00000000007d9cdd in leveldb::TableCache::Get (this=0x83d1640, options=..., file_number=<optimized out>, file_size=<optimized out>, k=..., arg=0x7fffffffa570, \r\n    saver=0x7db9c0 <leveldb::SaveValue(void*, leveldb::Slice const&, leveldb::Slice const&)>) at leveldb/db/table_cache.cc:112\r\n#4  0x00000000007e34d9 in leveldb::Version::Get (this=this@entry=0xfe1b90, options=..., k=..., value=value@entry=0x7fffffffa7b0, stats=stats@entry=0x7fffffffa620)\r\n    at leveldb/db/version_set.cc:408\r\n#5  0x00000000007c7d39 in leveldb::DBImpl::Get (this=0x15df55c0, options=..., key=..., value=0x7fffffffa7b0) at leveldb/db/db_impl.cc:1141\r\n#6  0x0000000000602050 in CDBWrapper::Read<char, std::vector<uint256, std::allocator<uint256> > > (this=0x15df59e8, key=@0x884eea: 72 'H', \r\n    value=std::vector of length 0, capacity 0) at ./dbwrapper.h:236\r\n#7  0x00000000005fc8fb in CCoinsViewDB::GetHeadBlocks (this=0x15df59e0) at txdb.cpp:78\r\n#8  0x000000000065c965 in CChainState::ReplayBlocks (this=0xcd7f00 <g_chainstate>, params=..., view=0x15df59e0) at validation.cpp:4000\r\n#9  0x000000000065d761 in ReplayBlocks (params=..., view=0x15df59e0) at validation.cpp:4060\r\n#10 0x000000000044172b in AppInitMain () at init.cpp:1523\r\n#11 0x00000000004194e7 in AppInit (argc=1, argv=0x7fffffffe278) at bitcoind.cpp:160\r\n#12 0x0000000000419afc in main (argc=1, argv=0x7fffffffe278) at bitcoind.cpp:186\r\n```\r\n\r\nIt's interesting that this should be the last block in the database, and the other stack trace was for the first block in the database. This one doesn't have anything unusual in the directory listing, other than that I'll note that the corrupted file was the last one numerically:\r\n\r\n```\r\n-rw-r--r--. 1 evan evan 1413847 Mar 11 23:27 006615.ldb\r\n-rw-r--r--. 1 evan evan 1484317 Mar 11 23:27 006616.ldb\r\n-rw-r--r--. 1 evan evan 1177535 Mar 11 23:27 006617.ldb\r\n-rw-r--r--. 1 evan evan 1209685 Mar 11 23:27 006618.ldb\r\n-rw-r--r--. 1 evan evan 1497862 Mar 11 23:27 006619.ldb\r\n-rw-r--r--. 1 evan evan 1318973 Mar 11 23:27 006620.ldb\r\n-rw-r--r--. 1 evan evan 1269698 Mar 11 23:27 006621.ldb\r\n-rw-r--r--. 1 evan evan 1358783 Mar 11 23:27 006622.ldb\r\n-rw-r--r--. 1 evan evan 1199067 Mar 11 23:27 006623.ldb     <--- the corrupted file\r\n-rw-------. 1 evan evan       0 Mar 14 17:34 006725.log\r\n-rw-------. 1 evan evan      16 Mar 14 17:34 CURRENT\r\n-rw-------. 1 evan evan       0 Mar 11 15:53 LOCK\r\n-rw-r--r--. 1 evan evan     181 Mar 12 00:52 LOG\r\n-rw-r--r--. 1 evan evan     181 Mar 12 00:38 LOG.old\r\n-rw-------. 1 evan evan   27472 Mar 14 17:34 MANIFEST-006724\r\n```\r\n\r\nI also saved a copy of this database locally for further investigation.",
    "user": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 219890555,
        "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
        "name": "Block storage",
        "color": "000000",
        "default": false
      },
      {
        "id": 323697996,
        "node_id": "MDU6TGFiZWwzMjM2OTc5OTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption",
        "name": "Data corruption",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 2,
    "closed_at": "2020-04-26T01:31:56Z",
    "created_at": "2018-03-15T00:46:54Z",
    "updated_at": "2022-02-15T10:43:10Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 1522261195,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE1MjIyNjExOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1522261195",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T00:48:11Z",
      "label": {
        "name": "Block storage",
        "color": "000000"
      }
    },
    {
      "event": "labeled",
      "id": 1523613180,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE1MjM2MTMxODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1523613180",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T15:41:43Z",
      "label": {
        "name": "Data corruption",
        "color": "f7c6c7"
      }
    },
    {
      "event": "commented",
      "id": 373422086,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQyMjA4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373422086",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T15:42:57Z",
      "updated_at": "2018-03-15T15:43:24Z",
      "author_association": "MEMBER",
      "body": "FWIW when you open bitcoind's database even once with a leveldb that was built with snappy compression enabled, bitcoind will be unable to open it from then on due to compression.\r\nBut that doesn't seem to be the issue here.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/12690#issuecomment-373422086",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690"
    },
    {
      "event": "commented",
      "id": 619464701,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ2NDcwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619464701",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T01:31:56Z",
      "updated_at": "2020-04-26T01:31:56Z",
      "author_association": "MEMBER",
      "body": "Is this still an issue with a recent version of Bitcoin Core? Also, I'd suggest to check your hardware for defects.\r\n\r\nBitcoin Core makes heavy use of CPU, RAM and disk IO. Hardware defects might only become visible when running Bitcoin Core. You might want to check your hardware for defects.\r\n\r\n* memtest86 to check your RAM\r\n* to check the CPU behaviour under load, use linpack or Prime95\r\n* to test your storage device use smartctl or CrystalDiskInfo\r\n\r\nSource: https://bitcoin.stackexchange.com/a/12206",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/12690#issuecomment-619464701",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690"
    },
    {
      "event": "closed",
      "id": 3272438460,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzI3MjQzODQ2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3272438460",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T01:31:56Z"
    },
    {
      "event": "locked",
      "id": 6073871629,
      "node_id": "LOE_lADOABII584SM7IrzwAAAAFqB-0N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073871629",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:43:10Z",
      "lock_reason": "resolved"
    }
  ]
}