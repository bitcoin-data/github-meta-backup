{
  "type": "issue",
  "issue": {
    "id": 898570940,
    "node_id": "MDU6SXNzdWU4OTg1NzA5NDA=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/22018",
    "number": 22018,
    "state": "closed",
    "state_reason": "completed",
    "title": "Wallet fingerprinting and `avoidpartialspends`",
    "body": "**Issue**\r\n\r\nIn Bitcoin Core you cannot spend unconfirmed UTXO (except using `createrawtransaction` or `createpsbt` in CLI) and if `avoidpartialspends=1` UTXOs will grouped by addresses. So an attacker can send small amounts in Tx1(100sat/vByte) and Tx2(1sat/vByte) to address A. If only one of the UTXO (Tx1) associated with address A is spent then it can be assumed the victim is using Bitcoin Core wallet.\r\n\r\nIf `avoidpartialspends=0` (default) then its easier to identify, get more information about victim's addresses because other wallets do the grouping by default.\r\n\r\n**Expected behavior**\r\n\r\n`avoidpartialspends=1` should be default IMO\r\n\r\n1. If 'reused address' group has an unconfirmed UTXO, then the whole group is unconfirmed.\r\n2. Users should be able to spend unconfirmed UTXO\r\n\r\nIf we only fix 1, attacker can do more than just fingerprinting because users will be unable to spend from addresses used in attack except if they are good with Bitcoin Core RPCs like `createrawtransaction` or `createpsbt`. Or we can consider it same as Joinmarket in which any deposit to an already-used address is freezed by default.\r\n\r\nIf we only fix 2, it may help but not sure if enough people will agree to such change based on https://github.com/bitcoin-core/gui/issues/242#issuecomment-802666743\r\n\r\n**Actual behavior**\r\n\r\nExamples of few transactions in different wallets (PoC):\r\n\r\nBitcoin Core: \r\n`e710968190ce5ee3d4a23c5c2773ae227baddbe8b2221a6677f46d030cba6741` (using GUI)\r\n`82d3180b7f6bd29acf8c21c2b6cfdc2f9afa4660b5abd53f2536e2741b5e221e` (using [CLI](https://pastebin.com/raw/Cm39rsPt))\r\n\r\nSamourai: `60b80ecace4d1357f797b1d62eb0f514a57779fc5d37256f8256e5be229f9190`\r\nElectrum: `35ce2d882eaf870011002958351aef7ef882720116c8abbb9d5b68d97d490d28`\r\nWasabi: `35ce2d882eaf870011002958351aef7ef882720116c8abbb9d5b68d97d490d28`\r\n\r\n**To reproduce**\r\n\r\n1. Create a new wallet\r\n2. Create new receiving address\r\n3. Send 0.01 to address returned in (2) and wait for 1 confirmation\r\n4. Send 0.01 to address returned in (2)\r\n5. Send 0.008 to a random address \r\n\r\n**System information**\r\n\r\nBitcoin Core v0.21.1\r\n\r\n**Other information**\r\n\r\nThere are other things which may help in wallet fingerprinting: version, locktime, rbf, fee estimation, change address, address type etc. but I wanted to focus on `avoidpartialspends` in this issue.\r\n\r\nSending small amounts in more than 10 transactions to same address can also help in fingerprinting as there are no such max limits in lot of other wallets. OUTPUT_GROUP_MAX_ENTRIES will be increased to 100 if PR: https://github.com/bitcoin/bitcoin/pull/18418 is merged which makes the attack costly but still worth trying depending on the victim, attacker's goal and money. IMO there should not be any limit like other wallets or let the users decide. Bitcoin Core with default settings is even easier to attack because other wallets that I mentioned above use the groups/buckets by default.\r\n",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 13,
    "closed_at": "2022-08-11T15:25:58Z",
    "created_at": "2021-05-21T21:45:22Z",
    "updated_at": "2022-08-11T15:25:59Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 4781468365,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3ODE0NjgzNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4781468365",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-21T21:45:22Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "commented",
      "id": 846284054,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjI4NDA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846284054",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-21T22:00:03Z",
      "updated_at": "2021-05-21T22:00:03Z",
      "author_association": "MEMBER",
      "body": "> Users should be able to spend unconfirmed UTXO\r\n\r\nNACK. The dangers of spending untrusted and unconfirmed UTXOs are well understood. We should not be spending such UTXOs.\r\n\r\n***\r\n\r\nI don't think it is useful to compare our behavior to a select few wallets. Rather the analysis needs to be done across all transactions on the blockchain. While not avoiding partial spends may be a fingerprint, avoiding partial spends may also provide a way to fingerprint transactions. It's not as if this option magically makes fingerprinting impossible.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-846284054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 847553908,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzU1MzkwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847553908",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T05:46:57Z",
      "updated_at": "2021-05-25T09:17:27Z",
      "author_association": "NONE",
      "body": "> The dangers of spending untrusted and unconfirmed UTXOs are well understood. We should not be spending such UTXOs.\r\n\r\nWhat are these dangers that don't affect other wallets or power users who can use CLI?\r\n\r\n> I don't think it is useful to compare our behavior to a select few wallets. Rather the analysis needs to be done across all transactions on the blockchain\r\n\r\nI can include few other wallets that are used more. It is a privacy issue even if attacker can identify core wallet addresses based on few wallets that victim might be using. \r\n\r\n> It's not as if this option magically makes fingerprinting impossible.\r\n\r\nThere is no option or technology that magically solves all privacy issues.\r\n\r\n",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-847553908",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "unlabeled",
      "id": 4790290060,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDc5MDI5MDA2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4790290060",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T06:08:09Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "commented",
      "id": 849200300,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTIwMDMwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849200300",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-27T00:06:54Z",
      "updated_at": "2021-05-27T00:06:54Z",
      "author_association": "MEMBER",
      "body": "NACK on spending unconfirmed outputs. Just because other wallets do dangerous things we don't have to do the same thing. This has a higher priority than wallet fingerprinting in almost everyone's mind, I think. But I also don't have a good, exhaustive resource on the dangers of 0-conf handy at the moment, I will see if I can find something soon.\r\n\r\nFor your other comments concerning `OUTPUT_GROUP_MAX_ENTRIES` I think #17854 is relevant. I had briefly started to work on an alternative suggestion back then, maybe I can dig up an old branch.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-849200300",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 849402033,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTQwMjAzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849402033",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-27T07:25:09Z",
      "updated_at": "2021-05-27T07:25:09Z",
      "author_association": "NONE",
      "body": "> NACK on spending unconfirmed outputs. Just because other wallets do dangerous things we don't have to do the same thing. This has a higher priority than wallet fingerprinting in almost everyone's mind, I think. But I also don't have a good, exhaustive resource on the dangers of 0-conf handy at the moment, I will see if I can find something soon.\r\n\r\nHow about locking all UTXOs associated with a scriptpubkey until all are confirmed?\r\n\r\n> For your other comments concerning OUTPUT_GROUP_MAX_ENTRIES I think #17854 is relevant. I had briefly started to work on an alternative suggestion back then, maybe I can dig up an old branch\r\n\r\nThanks for the link. Alternative suggestion branch will be helpful if you can find it.",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-849402033",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 850738180,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDczODE4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850738180",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T00:45:38Z",
      "updated_at": "2021-05-29T00:45:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm also NACK on spending incoming unconfirmed outputs unless the user is made aware of the many problems associated with that behavior.\r\n\r\n---\r\n\r\n@prayank23 \r\n\r\n> How about locking all UTXOs associated with a scriptpubkey until all are confirmed?\r\n\r\nI think that would require additional communication to the user about why they can't spend their funds.  For existing incoming payments, the GUI and the RPCs track confirmed and unconfirmed balances separately, so I think it's pretty clear why you can't spend the money you just received.  But if you previously received a confirmed 1.00 BTC to address bc1blahblah and you just received an additional unconfirmed 0.01 BTC to that same address, it would be confusing why you couldn't spend your previous 1.00 BTC balance.\r\n\r\nAdditionally, an attacker could prevent an honest user from being able to spending their coins by simply always keeping a transaction paying a reused address in the mempool.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850738180",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "mentioned",
      "id": 4815343015,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDgxNTM0MzAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4815343015",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T00:45:38Z"
    },
    {
      "event": "subscribed",
      "id": 4815343016,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4MTUzNDMwMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4815343016",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T00:45:38Z"
    },
    {
      "event": "commented",
      "id": 850761723,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDc2MTcyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850761723",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T03:32:33Z",
      "updated_at": "2021-05-29T03:32:33Z",
      "author_association": "MEMBER",
      "body": "> How about locking all UTXOs associated with a scriptpubkey until all are confirmed?\r\n\r\nNACK. It would make it trivial to make it impossible for an attacker to start locking people out of their funds. All that it would take is for an attacker to create a dust spam transaction that sends to a bunch of addresses. If this transaction were at the min relay fee, and if fees were above the minimum, then the transaction could remain in the mempool for a very long time, during which time all of the users whose addresses are in receiving the spam would be unable to send some or all of their funds. Furthermore, this would become another way to fingerprint a user - from this, it would be possible to learn that users are not using Bitcoin Core.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850761723",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 850784015,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDc4NDAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850784015",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T07:03:58Z",
      "updated_at": "2021-05-29T07:03:58Z",
      "author_association": "NONE",
      "body": "@harding \r\n\r\n> I'm also NACK on spending incoming unconfirmed outputs unless the user is made aware of the many problems associated with that behavior.\r\n\r\nIs there a link to know about all the problems associated with spending unconfirmed outputs? How can we make the users aware of these things?\r\n\r\n> I think that would require additional communication to the user about why they can't spend their funds. \r\n\r\nIt can be done with a warning message in GUI, highlight the locked unspents with red color etc. and similar warning printed as log in bitcoind.\r\n\r\n> it would be confusing why you couldn't spend your previous 1.00 BTC balance\r\n\r\nConfusion in some cases is better than unknowingly using one of inputs selected by algorithm that affects your privacy. People who use coin control for all transactions will never have issues but others who use coin selection algorithm are already confused lot of times about the inputs selected in different transactions. \r\n\r\n> Additionally, an attacker could prevent an honest user from being able to spending their coins by simply always keeping a transaction paying a reused address in the mempool.\r\n\r\nI have mentioned this above but I think it will not be an issue. Consider this example:\r\n\r\nAttacker sends 0.001 BTC to one of my address so I am unable to use UTXOs associated with it. \r\n\r\nPositive: Automatically locking UTXOs associated with the address is good for my privacy and attacker has no clue about my wallet or reasons for not spending these UTXOs\r\n\r\nNegative: I am unable to use some of my bitcoin. What can I do to change this? Unlock UTXOs if I really want to use them.\r\n\r\nAt least I know someone is trying to know more about my wallet and transactions.\r\n\r\n@achow101 \r\n\r\n> Furthermore, this would become another way to fingerprint a user - from this, it would be possible to learn that users are not using Bitcoin Core.\r\n\r\nThis is incorrect. If someone sends me 0.001 BTC to one of my address which already has 0.01 UTXO associated with it, it is almost impossible to guess the reason why I did not spend them yet. It could be any wallet and I have just decide not use them yet or they were not selected by algorithm.\r\n\r\n---\r\n\r\nThere is a **problem** and I am looking for **solutions**. Unfortunately NACKs with no alternative solution do not solve the problem.",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850784015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "mentioned",
      "id": 4815720865,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDgxNTcyMDg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4815720865",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T07:03:58Z"
    },
    {
      "event": "subscribed",
      "id": 4815720867,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4MTU3MjA4Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4815720867",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T07:03:58Z"
    },
    {
      "event": "mentioned",
      "id": 4815720868,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDgxNTcyMDg2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4815720868",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T07:03:58Z"
    },
    {
      "event": "subscribed",
      "id": 4815720869,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4MTU3MjA4Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4815720869",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T07:03:58Z"
    },
    {
      "event": "commented",
      "id": 850791177,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDc5MTE3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850791177",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T07:58:31Z",
      "updated_at": "2021-05-29T07:58:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Is there a link to know about all the problems associated with spending unconfirmed outputs?\r\n\r\nNot that I know of, but I can list the problems I'm aware of:\r\n\r\n- If the payment to you is conflicted, your re-spend becomes invalid but you still might be legally obligated to pay your receipient\r\n- If the payment to you is RBF'd, your re-spend becomes invalid, requiring you to issue a new payment.  This can be quite an ordeal (you might need to ask for a new invoice and a new exchange rate, you might need to update your accounting records)\r\n- If you issue a new payment, you must be absolutely certain it conflicts with *all* previous payments you issued for that item/service so that a mempool reshuffling or block chain reorg doesn't result in you double paying\r\n- You payment might not be relayed due to mempool ancestor/descendent limits\r\n- All the problems above are multiplied by each additional person spending unconfirmed incoming payments, e.g. if Alice pays Bob who pays Carol who pays Dan, now payment to Dan are broken each time any one of Alice, Bob, or Carol decides to RBF fee bump their transaction, or when Bob's decides to create a large transaction with his change output, or Carol's low feerate transaction gets dropped from the mempool, etc.\r\n\r\n> How can we make the users aware of these things?\r\n\r\nI think that's too much technical detail to put on end users for such a minor issue as spending money they haven't fully received yet.  Even if we could solve all of the above problems with a nice UI, I'd be wary of making it easy for people to spend unconfirmed incoming payments---letting users do that minimizes the essential security difference between unconfirmed transactions and confirmed transactions.  For developers, I think it's ok to allow them to bypass the restriction if we (or someone else) provides documentation.  I think the recently-added exceptions to the PSBT commands is a reasonable way to do that.\r\n\r\n> Confusion in some cases is better than unknowingly using one of inputs selected by algorithm that affects your privacy. People who use coin control for all transactions will never have issues but others who use coin selection algorithm are already confused lot of times about the inputs selected in different transactions.\r\n\r\nHuh?  Most users don't care about what inputs gets selected, so why would they be confused by that?\r\n\r\n> Negative: I am unable to use some of my bitcoin. What can I do to change this? Unlock UTXOs if I really want to use them.\r\n> \r\n> At least I know someone is trying to know more about my wallet and transactions.\r\n\r\nA better approach IMO to making Bitcoin Core users perform extra steps to spend their money would be to get other wallets to use the same safety-first approach of Bitcoin Core to not allowing spending of incoming unconfirmed outputs.\r\n\r\n> There is a **problem** and I am looking for **solutions**. Unfortunately NACKs with no alternative solution do not solve the problem.\r\n\r\nThe only truly effective approach to preventing wallet fingerprinting is to get all wallets to implement a standardized set of behavior.  To do that, I think you want to first identify what the best practices are and then try to get every wallet to implement those best practices.  In the case of incoming unconfirmed outputs, I think the best practice is to not spend them (except for CPFP fee bumping).  Bitcoin Core implements that non-spending behavior, so I think the goal should be to get other wallets to adopt that same behavior.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850791177",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 850796356,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDc5NjM1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850796356",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T08:37:24Z",
      "updated_at": "2021-05-29T08:37:24Z",
      "author_association": "NONE",
      "body": "> Not that I know of, but I can list the problems I'm aware of:\r\n\r\nThanks for sharing. Will research more about this.\r\n\r\n> Huh? Most users don't care about what inputs gets selected, so why would they be confused by that?\r\n\r\nThis problem is only applicable to users who have saved `avoidpartialspends=1` in bitcoin.conf so we can assume they care about privacy. There are few questions that I regularly see on Stackexchange about confusion related to inputs used in a transaction. \r\n\r\n> A better approach IMO to making Bitcoin Core users perform extra steps to spend their money would be to get other wallets to use the same safety-first approach of Bitcoin Core to not allowing spending of incoming unconfirmed outputs.\r\n\r\nDo we need a BIP for this? \r\n\r\n> The only truly effective approach to preventing wallet fingerprinting is to get all wallets to implement a standardized set of behavior. To do that, I think you want to first identify what the best practices are and then try to get every wallet to implement those best practices\r\n\r\nEither spend all coins associated with a scriptpubkey in a transaction or none is one of the best practices.\r\n\r\nIs Bitcoin Core following it? No\r\nDid I try to suggest this change? Yes (https://github.com/bitcoin/bitcoin/pull/18418#issuecomment-847564511)\r\nWas it considered? No\r\nWill it be considered? No (https://github.com/bitcoin/bitcoin/pull/18418#issuecomment-847825592)\r\n\r\nIt has been mentioned lot of times that Bitcoin Core needs more reviewers. What is the use of spending time, doing research, testing something and providing relevant information if it doesn't matter? \r\n",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850796356",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 850803134,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDgwMzEzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850803134",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T09:26:56Z",
      "updated_at": "2021-05-29T09:26:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Do we need a BIP for this?\r\n\r\nWe don't *need* BIPs for best practices, but we've had problems with bad practices getting BIPs and people implementing them because they thought they were \"standards\".  In those cases, it may be a good idea to BIP the best practice.\r\n\r\n> Either spend all coins associated with a scriptpubkey in a transaction or none is one of the best practices.\r\n>\r\n> Is Bitcoin Core following it? No\r\n\r\nI think this is a matter of interpretation.  IMO you don't actually have a coin until it's confirmed, so Bitcoin Core's opt-in behavior of avoiding partial spends is following the best practice when you only consider confirmed coins.\r\n\r\n> It has been mentioned lot of times that Bitcoin Core needs more reviewers. What is the use of spending time, doing research, testing something and providing relevant information if it doesn't matter?\r\n\r\nI understand that it's frustrating when your suggestions aren't accepted.  It's also uncomfortable for those of us who are criticizing your idea---we want you to have a good experience contributing to Bitcoin Core and we're sorry when that doesn't happen.  The way to ensure your time hasn't been wasted is to try to understand the concerns raised on this issue so that you can apply them towards future proposals.\r\n\r\nFor example, we currently use avoidpartialspends by default when there's no fee difference between using it and not using it.  If you propose to implement the case where we don't spend from a set of reused scripts when there's an unconfirmed payment to one of those scripts in any case where avoiding that partial spend ensures there's still sufficient funds and when it doesn't increase fees, maybe your idea might find more traction.  That's a lot more work to implement, I expect, but it moves us slightly closer to your goal without producing any adverse effects for the user.\r\n\r\nAlternatively, you could look into other past suggestions to address problems with avoding partial spends.  E.g., I think there was a suggestion that, once a script had been spent once, any further funds received to that script would be shunted into a sub-wallet so that they wouldn't be mingled with the main wallet's funds.  Users could then run their \"dirty\" funds through a coinjoin once a year (or whatever) before moving them back into their main wallet.\r\n\r\nIn short, I think there's still options available in the solution space if you want to keep trying.  But if you don't want to keep trying, I think that's ok too.  In the seven years I've been contributing to Bitcoin, I've often had to give up on ideas when I realized they were either impractical or too big for me to accomplish.  This has allowed me to focus my time on things I could accomplish (and even, sometimes, do well).",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850803134",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 850813061,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDgxMzA2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850813061",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T10:51:21Z",
      "updated_at": "2021-05-29T10:51:21Z",
      "author_association": "NONE",
      "body": "> I think this is a matter of interpretation. IMO you don't actually have a coin until it's confirmed, so Bitcoin Core's opt-in behavior of avoiding partial spends is following the best practice when you only consider confirmed coins.\r\n\r\nThere are two things:\r\n1. Unable to spend unconfirmed UTXOs\r\n2. OUTPUT_GROUP_MAX_ENTRIES\r\n\r\nMy suggestion mentioned in last comment was for 2. It should not be 10 or 100 or any random number chosen by a group of devs which is neither best practice nor similar to other wallets.\r\n\r\nHow are few other wallets that managing such UTXOs?\r\n\r\nhttps://github.com/spesmilo/electrum/blob/cad4e77853b1d3ae5fdaaa868c2fce67780a8870/electrum/coinchooser.py#L441\r\n\r\nhttps://github.com/zkSNACKs/WalletWasabi/pull/2338\r\n\r\nhttps://github.com/JoinMarket-Org/joinmarket-clientserver/blob/master/docs/release-notes/release-notes-0.6.2.md#auto-freeze-of-deposits-to-reused-addresses\r\n\r\n> Alternatively, you could look into other past suggestions to address problems with avoding partial spends. E.g., I think there was a suggestion that, once a script had been spent once, any further funds received to that script would be shunted into a sub-wallet so that they wouldn't be mingled with the main wallet's funds. Users could then run their \"dirty\" funds through a coinjoin once a year (or whatever) before moving them back into their main wallet.\r\n\r\nInteresting. I like this solution and will experiment in next few days to figure out implementation.\r\n\r\n> In short, I think there's still options available in the solution space if you want to keep trying.\r\n\r\nAgree and I will keep trying until I resolve the issues.\r\n",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850813061",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "commented",
      "id": 850894903,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDg5NDkwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850894903",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T20:33:36Z",
      "updated_at": "2021-05-29T20:33:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "@prayank23 \r\n\r\n> Interesting. I like this solution and will experiment in next few days to figure out implementation.\r\n\r\nYou probably want to start by looking at #13756 , which implements the behavior of preventing reuse.  Additional improvements should probably be built on top of that.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850894903",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "mentioned",
      "id": 4816416161,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDgxNjQxNjE2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4816416161",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T20:33:36Z"
    },
    {
      "event": "subscribed",
      "id": 4816416163,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4MTY0MTYxNjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4816416163",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-29T20:33:36Z"
    },
    {
      "event": "commented",
      "id": 1212143473,
      "node_id": "IC_kwDOABII585IP9dx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1212143473",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T15:25:58Z",
      "updated_at": "2022-08-11T15:25:58Z",
      "author_association": "MEMBER",
      "body": "The feature request didn't seem to attract much attention in the past. Also, the issue seems not important enough right now to keep it sitting around idle in the list of open issues.\r\n\r\nClosing due to lack of interest. Pull requests with improvements are always welcome.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-1212143473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22018"
    },
    {
      "event": "closed",
      "id": 7172674034,
      "node_id": "CE_lADOABII5841jxq8zwAAAAGrhlHy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7172674034",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T15:25:59Z"
    }
  ]
}