{
  "type": "issue",
  "issue": {
    "id": 363256452,
    "node_id": "MDU6SXNzdWUzNjMyNTY0NTI=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14311",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14311/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14311/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14311/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/14311",
    "number": 14311,
    "state": "closed",
    "state_reason": "completed",
    "title": "985d28cc: Facebook Infer Static Analyzer report",
    "body": "### [Facebook Infer Static Analyzer](https://en.wikipedia.org/wiki/Infer_Static_Analyzer) report\r\n\r\nBranch: `master`\r\nCommit: 985d28cc\r\nIssue count: 53\r\nExcluded: nothing\r\nAnalyzer: `infer-linux64-v0.15.0.tar.xz` (SHA-1: `a00537dac367840c79c429d9fcea0d16bc0c7846`)\r\n\r\n_Disclaimer: These results have not been thoroughly confirmed, and may be improbable or flat out invalid, but it's worth having a list of these somewhere._\r\n\r\nReport summary:\r\n* 21 `NULL_DEREFERENCE` issues\r\n* 17 `LOCK_CONSISTENCY_VIOLATION` issues\r\n* 7 `DEAD_STORE` issues\r\n* 7 `UNINITIALIZED_VALUE` issues\r\n* 1 `MEMORY_LEAK` issue\r\n\r\nReported issues:\r\n\r\n```\r\n 0. src/qt/splashscreen.cpp:39: error: DEAD_STORE\r\n      The value written to &devicePixelRatio (type float) is never used.\r\n\r\n 1. src/wallet/test/wallet_tests.cpp:40: error: NULL_DEREFERENCE\r\n      pointer `oldTip` last assigned on line 39 could be null and is dereferenced at line 40, column 22.\r\n\r\n 2. src/qt/paymentrequest.pb.cc:53: error: NULL_DEREFERENCE\r\n      pointer `file` last assigned on line 49 could be null and is dereferenced at line 53, column 24.\r\n\r\n 3. src/secp256k1/src/ecmult_impl.h:59: error: NULL_DEREFERENCE\r\n      pointer `null` could be null and is dereferenced by call to `secp256k1_gej_double_var()` at line 59, column 5.\r\n\r\n 4. src/secp256k1/src/secp256k1.c:60: error: NULL_DEREFERENCE\r\n      pointer `ret` last assigned on line 59 could be null and is dereferenced at line 60, column 5.\r\n\r\n 5. src/secp256k1/src/secp256k1.c:85: error: NULL_DEREFERENCE\r\n      pointer `ret` last assigned on line 84 could be null and is dereferenced at line 85, column 5.\r\n\r\n 6. src/test/blockfilter_tests.cpp:134: error: DEAD_STORE\r\n      The value written to &pos (type unsigned int) is never used.\r\n\r\n 7. src/serialize.h:131: error: UNINITIALIZED_VALUE\r\n      The value read from tmp.y was never initialized.\r\n\r\n 8. src/secp256k1/src/group_impl.h:137: error: NULL_DEREFERENCE\r\n      pointer `az` last assigned on line 134 could be null and is dereferenced at line 137, column 13.\r\n\r\n 9. src/serialize.h:137: error: UNINITIALIZED_VALUE\r\n      The value read from tmp.y was never initialized.\r\n\r\n10. src/serialize.h:143: error: UNINITIALIZED_VALUE\r\n      The value read from tmp.x was never initialized.\r\n\r\n11. src/leveldb/db/dumpfile.cc:166: error: NULL_DEREFERENCE\r\n      pointer `table` last assigned on line 156 could be null and is dereferenced at line 166, column 20.\r\n\r\n12. src/serialize.h:149: error: UNINITIALIZED_VALUE\r\n      The value read from tmp.x was never initialized.\r\n\r\n13. src/leveldb/db/c.cc:148: error: NULL_DEREFERENCE\r\n      pointer `result` last assigned on line 147 could be null and is dereferenced by call to `memcpy()` at line 148, column 3.\r\n\r\n14. src/test/net_tests.cpp:187: error: DEAD_STORE\r\n      The value written to &id (type long) is never used.\r\n\r\n15. src/qt/guiutil.cpp:204: error: DEAD_STORE\r\n      The value written to &paramCount (type int) is never used.\r\n\r\n16. src/secp256k1/src/ecmult_impl.h:203: error: NULL_DEREFERENCE\r\n      pointer `dst->pre_g` last assigned on line 202 could be null and is dereferenced by call to `memcpy()` at line 203, column 9.\r\n\r\n17. src/index/base.cpp:242: error: NULL_DEREFERENCE\r\n      pointer `chain_tip` last assigned on line 240 could be null and is dereferenced at line 242, column 43.\r\n\r\n18. src/leveldb/util/cache.cc:276: error: NULL_DEREFERENCE\r\n      pointer `e` last assigned on line 274 could be null and is dereferenced at line 276, column 3.\r\n\r\n19. src/secp256k1/src/ecmult_impl.h:371: error: NULL_DEREFERENCE\r\n      pointer `null` could be null and is dereferenced by call to `secp256k1_gej_double_var()` at line 371, column 9.\r\n\r\n20. src/serialize.h:385: error: UNINITIALIZED_VALUE\r\n      The value read from tmp[_] was never initialized.\r\n\r\n21. src/rpc/blockchain.cpp:690: error: NULL_DEREFERENCE\r\n      pointer `pblockindex` last assigned on line 689 could be null and is dereferenced at line 690, column 12.\r\n\r\n22. src/policy/fees.cpp:829: error: DEAD_STORE\r\n      The value written to &median (type double) is never used.\r\n\r\n23. src/net_processing.cpp:937: error: NULL_DEREFERENCE\r\n      pointer `state` last assigned on line 934 could be null and is dereferenced at line 937, column 13.\r\n\r\n24. src/test/script_tests.cpp:999: error: DEAD_STORE\r\n      The value written to &pos (type unsigned int) is never used.\r\n\r\n25. src/wallet/wallet.cpp:1206: error: NULL_DEREFERENCE\r\n      pointer `initialChainTip` last assigned on line 1204 could be null and is dereferenced at line 1206, column 75.\r\n\r\n26. src/validation.cpp:1341: error: NULL_DEREFERENCE\r\n      pointer `pindexPrev` last assigned on line 1340 could be null and is dereferenced at line 1341, column 12.\r\n\r\n27. src/net_processing.cpp:1376: error: NULL_DEREFERENCE\r\n      pointer `nodestate` last assigned on line 1365 could be null and is dereferenced at line 1376, column 13.\r\n\r\n28. src/wallet/wallet.cpp:2944: error: UNINITIALIZED_VALUE\r\n      The value read from nBytes was never initialized.\r\n\r\n29. src/wallet/wallet.cpp:2944: error: UNINITIALIZED_VALUE\r\n      The value read from nFeeNeeded was never initialized.\r\n\r\n30. src/net_processing.cpp:2934: error: NULL_DEREFERENCE\r\n      pointer `__range` last assigned on line 2934 could be null and is dereferenced at line 2934, column 41.\r\n\r\n31. src/net_processing.cpp:2938: error: NULL_DEREFERENCE\r\n      pointer `state` last assigned on line 2931 could be null and is dereferenced at line 2938, column 5.\r\n\r\n32. src/net_processing.cpp:3089: error: NULL_DEREFERENCE\r\n      pointer `state` last assigned on line 3086 could be null and is dereferenced at line 3089, column 10.\r\n\r\n33. src/net_processing.cpp:3173: error: NULL_DEREFERENCE\r\n      pointer `state` last assigned on line 3172 could be null and is dereferenced at line 3173, column 87.\r\n\r\n34. src/validation.cpp:3944: error: MEMORY_LEAK\r\n      `pindex` is not reachable after line 3944, column 5.\r\n\r\n35. src/validation.cpp:4362: error: DEAD_STORE\r\n      The value written to &nRewind (type unsigned long) is never used.\r\n\r\n36. src/wallet/wallet.cpp:267: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_AddKeyPubKeyWithDB` reads without synchronization from `this.encrypted_batch`. Potentially races with write in method `AddKeyPubKeyWithDB`.\r\n\r\n37. src/wallet/wallet.cpp:1376: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `pj.infinity`. Potentially races with write in method `DeriveNewSeed`.\r\n\r\n38. src/wallet/wallet.cpp:1377: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `rr_alt.n.[_]`. Potentially races with write in method `DeriveNewSeed`.\r\n\r\n39. src/wallet/wallet.cpp:1377: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `rr_alt.n.[_]`. Potentially races with write in method `CreateWalletFromFile`.\r\n\r\n40. src/wallet/wallet.cpp:1377: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `rr_alt.n.[_]`. Potentially races with write in method `AddKeyPubKeyWithDB`.\r\n\r\n41. src/wallet/wallet.cpp:1376: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `pj.infinity`. Potentially races with write in method `CreateWalletFromFile`.\r\n\r\n42. src/wallet/wallet.cpp:1376: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `pj.infinity`. Potentially races with write in method `AddKeyPubKeyWithDB`.\r\n\r\n43. src/wallet/wallet.cpp:192: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_GenerateNewKey` indirectly reads without synchronization from `this.nWalletMaxVersion`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n44. src/wallet/wallet.cpp:798: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_IncOrderPosNext` reads without synchronization from `this.nOrderPosNext`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n45. src/wallet/wallet.cpp:323: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_LoadKeyMetadata` indirectly reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n46. src/wallet/wallet.cpp:3199: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_LoadKeyPool` reads without synchronization from `this.m_max_keypool_index`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n47. src/wallet/wallet.h:813: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_LoadMinVersion` reads without synchronization from `this.nWalletMaxVersion`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n48. src/wallet/wallet.cpp:330: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_LoadScriptMetadata` indirectly reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n49. src/wallet/wallet.cpp:938: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_LoadToWallet` reads without synchronization from container `this.mapWallet` via call to `find`. Potentially races with write in method `ZapSelectTx`.\r\n\r\n50. src/wallet/wallet.cpp:2463: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_SignTransaction` reads without synchronization from container `this.mapWallet` via call to `find`. Potentially races with write in method `ZapSelectTx`.\r\n\r\n51. src/wallet/wallet.cpp:350: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_UpdateTimeFirstKey` reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `BlockDisconnected`.\r\n\r\n52. src/wallet/wallet.cpp:350: error: LOCK_CONSISTENCY_VIOLATION\r\n      Read/Write race. Non-private method `CWallet_UpdateTimeFirstKey` reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `RescanFromTime`.\r\n```",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 1,
    "closed_at": "2019-01-10T20:36:33Z",
    "created_at": "2018-09-24T18:01:32Z",
    "updated_at": "2021-12-16T14:04:58Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 424129447,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDEyOTQ0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424129447",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T21:21:30Z",
      "updated_at": "2018-09-24T21:21:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Regarding the wallet lock consistency violations – see related PR #11634.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/14311#issuecomment-424129447",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14311"
    },
    {
      "event": "closed",
      "id": 2066919660,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjA2NjkxOTY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2066919660",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-10T20:36:33Z"
    },
    {
      "event": "locked",
      "id": 5778577414,
      "node_id": "LOE_lADOABII584VptqEzwAAAAFYbhgG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778577414",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:04:58Z",
      "lock_reason": "resolved"
    }
  ]
}