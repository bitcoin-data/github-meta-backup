{
  "type": "issue",
  "issue": {
    "id": 117487645,
    "node_id": "MDU6SXNzdWUxMTc0ODc2NDU=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/7049",
    "number": 7049,
    "state": "closed",
    "state_reason": "completed",
    "title": "Add a \"block relay\" to bitcoind with it's own port",
    "body": "@TheBlueMatt has shown that a relay network helps with convergence (fewer orphans) but the implementation depends on an external centralised network of relay servers and a separate client that talks to bitcoind.\n\nBitcoin is peer2peer, so of course there will be network disagreement over the state of the blockchain and thus convergence to the resolution of that disagreement will always take time.\nThere is no 100% solution to this design of bitcoin, instead the rules need to be (as they already are) simple to decide disagreement.\nCentralisation, to reduce the amount of disagreement, isn't an acceptable long term option.\n\nAn obvious option to help reduce divergence would be to add another port to bitcoind for a block relay network to allow for send/receive of blocks with the following if possible:\n\n1) Compression - binary data, and also compression of that data - since it's a new non-network-forking option, the data can be designed for speed and compressed as much as possible since that would be an obvious gain. Transaction compression may also be an option - most nodes have most transactions (pretty much all but the coinbase) already available to them when most blocks arrive.\n\n2) Early relay from trusted connections - e.g. send the block on if the header hash has been verified and version checks have been done (takes only nanoseconds to hash a block header on any modern desktop CPU or better) - mining finding blocks isn't that common so the risk of passing on invalid blocks weighs very low against the obvious network gains. Also of course, any bitcoind on the network can already distribute 'bad' blocks to any other bitcoind they are connected to, the current core client just stops them being relayed by delaying for the completion of the full block/transaction check. The level, defined within the new protocol, of checks done and accepted, could also be part of the trust level required to accept/transmit/ignore data.\n\nThis would effectively replace @TheBlueMatt relay network with bitcoind's own block relay network that would run in parallel with the current bitcoin network, however, it should also allow, in the configuration, for external/internal networks to accept the external block network at 'few' points and distribute it quickly to 'many' internal network points.\nEdit: and in case it isn't immediately obvious, this would allow for networks like @TheBlueMatt to be created and used as required. e.g. such a network similar to the one that already exists that you could configure in a higher trust rating based on your trust of any such available network.\n",
    "user": {
      "login": "kanoi",
      "id": 1059166,
      "node_id": "MDQ6VXNlcjEwNTkxNjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1059166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanoi",
      "html_url": "https://github.com/kanoi",
      "followers_url": "https://api.github.com/users/kanoi/followers",
      "following_url": "https://api.github.com/users/kanoi/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/kanoi/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/kanoi/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/kanoi/subscriptions",
      "organizations_url": "https://api.github.com/users/kanoi/orgs",
      "repos_url": "https://api.github.com/users/kanoi/repos",
      "events_url": "https://api.github.com/users/kanoi/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/kanoi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 3,
    "closed_at": "2020-04-24T20:20:13Z",
    "created_at": "2015-11-18T01:02:00Z",
    "updated_at": "2022-02-15T11:02:40Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 467417697,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3NDE3Njk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467417697",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T01:02:00Z"
    },
    {
      "event": "subscribed",
      "id": 467417698,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzQxNzY5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467417698",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T01:02:00Z"
    },
    {
      "event": "commented",
      "id": 157569702,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU2OTcwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157569702",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T01:39:16Z",
      "updated_at": "2015-11-18T01:39:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> implementation depends on an external centralised network of relay servers\n\nAh, that's a common misunderstanding-- and not true. Matt does run a well maintained public network of nodes running the protocol; but it has no dependence on it. And anyone can run the same software.\n\nWe've considered it a goal to include more efficient block relaying in core though, and have mostly just been waiting for the protocols implementing it to mature.\n\n> Compression - binary data, and also compression of that data \n\nThe bitcoin p2p protocol is already binary. Traditional data compression is not terribly useful except in the presence of address reuse, and not needed over and above mempool relative differential transmission-- which is critical to get any efficiency gain at all.\n\n> Early relay\n\nThis is orthogonal to more efficient transmission and could just be done in the ordinary p2p protocol with, a \"unverified block\" message.  Luke-jr implemented this a couple years ago but it provided no meaningful speedup at the time (presumably due to other delay factors which we've since eliminated).  So long as all parties involved know they're getting something non-validated, there isn't much harm in passing it along; as a combination of POW, chain consistency (e.g. extends the current tip), and serialization rules is enough to prevent denial of service.\n\n> and a separate client that talks to bitcoind.\n\nOur preferred method of adding new protocols is via gatewaying from another process, for reliability and security reasons. \n\n> such a network similar to the one that already exists that you could configure in a higher trust rating based\n\nIn general our experience suggests that trust settings are black magic that cannot be configured correctly even by experts-- that even trusted things fail, and their doing so magnifies fault domains, so we should avoid them wherever possible.  Fortunately, I don't see anything you've suggested that has any need for such settings.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7049#issuecomment-157569702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049"
    },
    {
      "event": "labeled",
      "id": 469208384,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2OTIwODM4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/469208384",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-19T14:19:47Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 160289860,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDI4OTg2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160289860",
      "actor": {
        "login": "kanoi",
        "id": 1059166,
        "node_id": "MDQ6VXNlcjEwNTkxNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1059166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kanoi",
        "html_url": "https://github.com/kanoi",
        "followers_url": "https://api.github.com/users/kanoi/followers",
        "following_url": "https://api.github.com/users/kanoi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kanoi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kanoi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kanoi/subscriptions",
        "organizations_url": "https://api.github.com/users/kanoi/orgs",
        "repos_url": "https://api.github.com/users/kanoi/repos",
        "events_url": "https://api.github.com/users/kanoi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kanoi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-28T12:36:11Z",
      "updated_at": "2015-11-28T12:36:11Z",
      "author_association": "NONE",
      "body": "> ```\n> implementation depends on an external centralised network of relay servers\n> ```\n> \n> Ah, that's a common misunderstanding-- and not true.\n\nAh, that's an incorrect statement of yours-- and not true.\n\nJust as there are many bitcoin 'centralised' pools, many 'centralised' relays are still 'centralised' relays.\nMoving it to being part of the bitcoin protocol is what is called 'decentralised' and then only if not using centralised 'networks' like the current relay.\n\n> ```\n> Early relay\n> ```\n> \n> This is orthogonal to more efficient transmission and could just be done in the ordinary p2p protocol with, a \"unverified block\" message.\n\nIndeed and your suggestion that people should be using multiple daemons to solve this problem:\nhttps://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156605612\nrequires this \"early relay\" since otherwise even a local set of (as you said):\n\n> to work around this today (run multiple daemons).\n\nwill relay to each other slowly since they must wait for full verification before passing the block on to any other local daemon\n\n> ```\n> and a separate client that talks to bitcoind.\n> ```\n> \n> Our preferred method of adding new protocols is via gatewaying from another process, for reliability and security reasons.\n\nThat of course would be handled in an intelligent way - just as there are compiled in options for bitcoin core already - cli, qt, server (even compiling 'out' wallet)\nIn this case, since the client would require a lot of bitcoin core, it would be a bad design to make that some other project requiring a second implementation of the rules already in bitcoin core.\nIt could indeed be another program compilable with bitcoin core.\nThe trust design would allow levels - and thus the 'relay client' would be a lot of bitcoin core including the code that performs the various checks in core applied before relaying the block, according to the trust level requirements.\n\n> ```\n> such a network similar to the one that already exists that you could\n> configure in a higher trust rating based\n> ```\n> \n> In general our experience suggests that trust settings are black magic that cannot be configured correctly even by experts-- that even trusted things fail, and their doing so magnifies fault domains, so we should avoid them wherever possible. Fortunately, I don't see anything you've suggested that has any need for such settings.\n\nI'm not sure what grade school you experienced your methods of software design, or who wrote software that you consider black magic, but dumbing down software and limiting it's performance because **YOU** believe you are unable to understand the concept of trust, sounds like a bad idea to me.\n\nIn fact even in the current design there is a rather obvious point of trust that could implement the relaying of non-fully verified blocks to your own list of bitcoinds - that would be a block submitted to the RPC - that already has a trust given to it to allow access to the RPC\n\nThe use of not relaying something, is to save the target from checking it, when you consider it invalid. Relaying something, that you may rarely consider bad, means that those who receive it must check it ... as they already do with everything else they receive.\n\nAs stated here: https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156605612\nThere is indeed a very clear need for it in **your** 'opinion' of how to solve that problem, without resorting to a simple improvement of the code, that I stated there: https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157942182\n\nIn that example given, that raised the issue, and your 'supposed' solution to it, in fact what currently happens is work is supplied that is already stale even though bitcoin core code has the data that knows this in an extremely high percentage of those cases, but due to some unexplained locking failure of understanding, it's decided ok to increase network divergence.\n\nIf you had multiple bitcoinds, and didn't submit the block to the getblocktemplate bticoind, i.e. only submit the block to another one (or more) to process, and then be given back to the getblocktemplate source bitcoind via those, that would double the amount of time spent working on stale work.\n",
      "user": {
        "login": "kanoi",
        "id": 1059166,
        "node_id": "MDQ6VXNlcjEwNTkxNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1059166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kanoi",
        "html_url": "https://github.com/kanoi",
        "followers_url": "https://api.github.com/users/kanoi/followers",
        "following_url": "https://api.github.com/users/kanoi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kanoi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kanoi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kanoi/subscriptions",
        "organizations_url": "https://api.github.com/users/kanoi/orgs",
        "repos_url": "https://api.github.com/users/kanoi/repos",
        "events_url": "https://api.github.com/users/kanoi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kanoi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7049#issuecomment-160289860",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049"
    },
    {
      "event": "labeled",
      "id": 551930484,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDU1MTkzMDQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/551930484",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-16T12:06:21Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "commented",
      "id": 619221163,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTIyMTE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619221163",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T20:20:13Z",
      "updated_at": "2020-04-24T20:20:13Z",
      "author_association": "MEMBER",
      "body": "block relay network has been implemented in #15759 ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7049#issuecomment-619221163",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7049"
    },
    {
      "event": "closed",
      "id": 3270902195,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzI3MDkwMjE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3270902195",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T20:20:13Z"
    },
    {
      "event": "locked",
      "id": 6074003390,
      "node_id": "LOE_lADOABII584HALgdzwAAAAFqCe--",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074003390",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:02:40Z",
      "lock_reason": "resolved"
    }
  ]
}