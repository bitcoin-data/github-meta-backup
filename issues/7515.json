{
  "type": "issue",
  "issue": {
    "id": 132943071,
    "node_id": "MDU6SXNzdWUxMzI5NDMwNzE=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/7515",
    "number": 7515,
    "state": "closed",
    "state_reason": "completed",
    "title": "recipe for target 'libbitcoin_server_a-init.o' failed",
    "body": "Trying to build on OpenBSD 5.8.\n\n```\n# gmake\nMaking all in src\ngmake[1]: Entering directory '/home/bitcoin/bitcoin/src'\ngmake[2]: Entering directory '/home/bitcoin/bitcoin/src'\n  CXX      crypto/libbitcoinconsensus_la-hmac_sha256.lo\n  CXX      crypto/libbitcoinconsensus_la-hmac_sha512.lo\n  CXX      crypto/libbitcoinconsensus_la-ripemd160.lo\n  CXX      crypto/libbitcoinconsensus_la-sha1.lo\n  CXX      crypto/libbitcoinconsensus_la-sha256.lo\n  CXX      crypto/libbitcoinconsensus_la-sha512.lo\n  CXX      libbitcoinconsensus_la-arith_uint256.lo\n  CXX      consensus/libbitcoinconsensus_la-merkle.lo\n  CXX      libbitcoinconsensus_la-hash.lo\n  CXX      primitives/libbitcoinconsensus_la-block.lo\n  CXX      primitives/libbitcoinconsensus_la-transaction.lo\n  CXX      libbitcoinconsensus_la-pubkey.lo\n  CXX      script/libbitcoinconsensus_la-bitcoinconsensus.lo\n  CXX      script/libbitcoinconsensus_la-interpreter.lo\n  CXX      script/libbitcoinconsensus_la-script.lo\n  CXX      script/libbitcoinconsensus_la-script_error.lo\n  CXX      libbitcoinconsensus_la-uint256.lo\n  CXX      libbitcoinconsensus_la-utilstrencodings.lo\ngmake[3]: Entering directory '/home/bitcoin/bitcoin/src/secp256k1'\ngcc -I. -g -O2 -Wall -Wextra -Wno-unused-function -c src/gen_context.c -o gen_context.o\ngcc gen_context.o -o gen_context\n./gen_context\n  CC       src/libsecp256k1_la-secp256k1.lo\n  CCLD     libsecp256k1.la\ngmake[3]: Leaving directory '/home/bitcoin/bitcoin/src/secp256k1'\n  CXXLD    libbitcoinconsensus.la\n\n*** Warning: This system can not link to static lib archive secp256k1/libsecp256k1.la.\n*** I have the capability to make that library automatically link in when\n*** you link to this library.  But I can only do this if you have a\n*** shared version of the library, which you do not appear to have.\n  CXX      bitcoind-bitcoind.o\n  CXX      libbitcoin_server_a-addrman.o\n  CXX      libbitcoin_server_a-alert.o\n  CXX      libbitcoin_server_a-bloom.o\n  CXX      libbitcoin_server_a-chain.o\n  CXX      libbitcoin_server_a-checkpoints.o\n  CXX      libbitcoin_server_a-httprpc.o\nIn file included from ui_interface.h:12:0,\n                 from httprpc.cpp:16:\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(T1, T2, T3) [with R = bool; T1 = const std::basic_string<char>&; T2 = const std::basic_string<char>&; T3 = unsigned int; Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type = bool]':\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:51:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(value) return value.get();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:41:21: note: '*((void*)& value +1)' was declared here\n         optional<T> value;\n                     ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\n  CXX      libbitcoin_server_a-httpserver.o\nIn file included from ui_interface.h:12:0,\n                 from httpserver.cpp:13:\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(T1, T2, T3) [with R = bool; T1 = const std::basic_string<char>&; T2 = const std::basic_string<char>&; T3 = unsigned int; Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type = bool]':\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:51:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(value) return value.get();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:41:21: note: '*((void*)& value +1)' was declared here\n         optional<T> value;\n                     ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\n  CXX      libbitcoin_server_a-init.o\nIn file included from addrman.h:14:0,\n                 from init.cpp:12:\ninit.cpp: In function 'bool AppInit2(boost::thread_group&, CScheduler&)':\ninit.cpp:1095:61: error: 'OPENSSL_VERSION' was not declared in this scope\n     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n                                                             ^\nutil.h:77:39: note: in definition of macro 'LogPrintf'\n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n                                       ^\ninit.cpp:1095:76: error: 'OpenSSL_version' was not declared in this scope\n     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n                                                                            ^\nutil.h:77:39: note: in definition of macro 'LogPrintf'\n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n                                       ^\nIn file included from /home/bitcoin/bitcoin/boost/include/boost/system/system_error.hpp:14:0,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/exceptions.hpp:22,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/pthread/thread_data.hpp:10,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/pthread/condition_variable.hpp:12,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/condition_variable.hpp:16,\n                 from sync.h:11,\n                 from addrman.h:12,\n                 from init.cpp:12:\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp: At global scope:\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp:221:36: warning: 'boost::system::posix_category' defined but not used [-Wunused-variable]\n     static const error_category &  posix_category = generic_category();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp:222:36: warning: 'boost::system::errno_ecat' defined but not used [-Wunused-variable]\n     static const error_category &  errno_ecat     = generic_category();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp:223:36: warning: 'boost::system::native_ecat' defined but not used [-Wunused-variable]\n     static const error_category &  native_ecat    = system_category();\n                                    ^\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\nMakefile:3916: recipe for target 'libbitcoin_server_a-init.o' failed\ngmake[2]: *** [libbitcoin_server_a-init.o] Error 1\ngmake[2]: Leaving directory '/home/bitcoin/bitcoin/src'\nMakefile:7057: recipe for target 'all-recursive' failed\ngmake[1]: *** [all-recursive] Error 1\ngmake[1]: Leaving directory '/home/bitcoin/bitcoin/src'\nMakefile:666: recipe for target 'all-recursive' failed\ngmake: *** [all-recursive] Error 1\n```\n",
    "user": {
      "login": "dotgodly",
      "id": 17176322,
      "node_id": "MDQ6VXNlcjE3MTc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dotgodly",
      "html_url": "https://github.com/dotgodly",
      "followers_url": "https://api.github.com/users/dotgodly/followers",
      "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
      "organizations_url": "https://api.github.com/users/dotgodly/orgs",
      "repos_url": "https://api.github.com/users/dotgodly/repos",
      "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dotgodly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 234878,
        "node_id": "MDU6TGFiZWwyMzQ4Nzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Linux/Unix",
        "name": "Linux/Unix",
        "color": "770000",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 20,
    "closed_at": "2016-02-11T11:52:07Z",
    "created_at": "2016-02-11T11:00:09Z",
    "updated_at": "2021-09-08T12:34:35Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 182811482,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgxMTQ4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182811482",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T11:07:04Z",
      "updated_at": "2016-02-11T11:07:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "```\ninit.cpp:1095:61: error: 'OPENSSL_VERSION' was not declared in this scope\n```\n\nOpenBSD is probably using LibreSSL...\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182811482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182811564,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgxMTU2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182811564",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T11:07:27Z",
      "updated_at": "2016-02-11T11:07:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can you please post `configure` output and `config.log`?\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182811564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182812203,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgxMjIwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182812203",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T11:11:11Z",
      "updated_at": "2016-02-11T11:11:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "See also #7447.\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182812203",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182825226,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgyNTIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182825226",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T11:52:07Z",
      "updated_at": "2016-02-11T11:52:07Z",
      "author_association": "NONE",
      "body": "#7447 fixes my issue. More specifally, running `pkg_add openssl` and adding `-I/usr/local/include/eopenssl/` to CPPFLAGS worked.\n",
      "user": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182825226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "closed",
      "id": 547043719,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTQ3MDQzNzE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/547043719",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T11:52:07Z"
    },
    {
      "event": "commented",
      "id": 182826972,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgyNjk3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182826972",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T12:01:02Z",
      "updated_at": "2016-02-11T12:01:02Z",
      "author_association": "MEMBER",
      "body": "Strange. This construction was made to avoid this:\n\n```\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n#else\n    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n#endif\n```\n\nSo old OpenSSLs have SSLEAY_VERSION, newer ones OPENSSL_VERSION. Maybe the threshold was set at the wrong point?\n\n> OpenBSD is probably using LibreSSL...\n\nBitcoin should be compatible with that, especially now that OpenSSL is no longer part of the consensus there should be no reason why you'd not use LibreSSL, which is supposed to be a compatible drop-in replacement. Maybe the above construct broke that?\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182826972",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182831107,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgzMTEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182831107",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T12:11:50Z",
      "updated_at": "2016-02-11T12:11:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "It looks like OPENSSL_VERSION is not defined in LibreSSL: https://github.com/libressl-portable/openbsd/blob/7a07b33b0687f52b5a4f33799c111800f3124dfc/src/lib/libssl/src/crypto/opensslv.h\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182831107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182832262,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjgzMjI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182832262",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T12:17:10Z",
      "updated_at": "2016-02-11T12:17:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "So maybe something like\n\n``` c++\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n#else if defined OPENSSL_VERSION\n    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n#else if defined LIBRESSL_VERSION_TEXT\n   LogPrintf(\"Using %s\\n\", LIBRESSL_VERSION_TEXT);\n#endif\n```\n\nnot tested...\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182832262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182847160,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg0NzE2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182847160",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T12:46:24Z",
      "updated_at": "2016-02-11T12:46:24Z",
      "author_association": "MEMBER",
      "body": "Yes something like that would make sense.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182847160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182891641,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg5MTY0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182891641",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T14:39:25Z",
      "updated_at": "2016-02-11T14:39:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@984541351684 Can you please test it (after removing the newly added package)?\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182891641",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "mentioned",
      "id": 547229300,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTQ3MjI5MzAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/547229300",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T14:39:25Z"
    },
    {
      "event": "subscribed",
      "id": 547229301,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU0NzIyOTMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/547229301",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T14:39:25Z"
    },
    {
      "event": "commented",
      "id": 182978288,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjk3ODI4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182978288",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T17:52:44Z",
      "updated_at": "2016-02-11T17:52:44Z",
      "author_association": "NONE",
      "body": "Should I just add it to init.cpp? (Line 1092) I'm not a C++ developer, so excuse my ignorance. \n",
      "user": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182978288",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 182986134,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjk4NjEzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/182986134",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T18:17:15Z",
      "updated_at": "2016-02-11T18:17:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just replace the construction used there in init.cpp. The file contains:\n\n```\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n#else\n    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n#endif\n```\n\nRemove it all and replace it with:\n\n```\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n#else if defined OPENSSL_VERSION\n    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n#else if defined LIBRESSL_VERSION_TEXT\n   LogPrintf(\"Using %s\\n\", LIBRESSL_VERSION_TEXT);\n#endif\n```\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-182986134",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183009505,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzAwOTUwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183009505",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T18:56:08Z",
      "updated_at": "2016-02-11T18:56:08Z",
      "author_association": "NONE",
      "body": "Nope, doesn't work for me.\n\nHere's my configure:\n\n```\n\n# ./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n>     CC=egcc CXX=eg++ CPP=ecpp \\\n>     LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\nchecking build system type... x86_64-unknown-openbsd5.8\nchecking host system type... x86_64-unknown-openbsd5.8\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking whether to enable maintainer-specific portions of Makefiles... yes\nchecking whether make supports nested variables... (cached) yes\nchecking whether the C++ compiler works... yes\nchecking for C++ compiler default output file name... a.out\nchecking for suffix of executables...\nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C++ compiler... yes\nchecking whether eg++ accepts -g... yes\nchecking for style of include used by make... GNU\nchecking dependency style of eg++... gcc3\nchecking for g++... g++\nchecking whether we are using the GNU Objective C++ compiler... no\nchecking whether g++ accepts -g... no\nchecking dependency style of g++... gcc3\nchecking how to print strings... print -r\nchecking for gcc... egcc\nchecking whether we are using the GNU C compiler... yes\nchecking whether egcc accepts -g... yes\nchecking for egcc option to accept ISO C89... none needed\nchecking whether egcc understands -c and -o together... yes\nchecking dependency style of egcc... gcc3\nchecking for a sed that does not truncate output... /usr/bin/sed\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for fgrep... /usr/bin/grep -F\nchecking for ld used by egcc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 196608\nchecking whether the shell understands some XSI constructs... yes\nchecking whether the shell understands \"+=\"... no\nchecking how to convert x86_64-unknown-openbsd5.8 file names to x86_64-unknown-openbsd5.8 format... func_convert_file_noop\nchecking how to convert x86_64-unknown-openbsd5.8 file names to toolchain format... func_convert_file_noop\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|\\.so|_pic\\.a)$\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... print -r --\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from egcc object... ok\nchecking for sysroot... no\nchecking for mt... mt\nchecking if mt is a manifest tool... no\nchecking how to run the C preprocessor... ecpp\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if egcc supports -fno-rtti -fno-exceptions... no\nchecking for egcc option to produce PIC... -fPIC -DPIC\nchecking if egcc PIC flag -fPIC -DPIC works... yes\nchecking if egcc static flag -static works... yes\nchecking if egcc supports -c -o file.o... yes\nchecking if egcc supports -c -o file.o... (cached) yes\nchecking whether the egcc linker (/usr/bin/ld) supports shared libraries... yes\nchecking whether -lc should be explicitly linked in... yes\nchecking dynamic linker characteristics... openbsd5.8 ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... yes\nchecking whether to build static libraries... yes\nchecking how to run the C++ preprocessor... eg++ -E\nchecking for ld used by eg++... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking whether the eg++ linker (/usr/bin/ld) supports shared libraries... yes\nchecking for eg++ option to produce PIC... -fPIC -DPIC\nchecking if eg++ PIC flag -fPIC -DPIC works... yes\nchecking if eg++ static flag -static works... yes\nchecking if eg++ supports -c -o file.o... yes\nchecking if eg++ supports -c -o file.o... (cached) yes\nchecking whether the eg++ linker (/usr/bin/ld) supports shared libraries... yes\nchecking dynamic linker characteristics... openbsd5.8 ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking for ar... /usr/bin/ar\nchecking for ranlib... /usr/bin/ranlib\nchecking for strip... /usr/bin/strip\nchecking for gcov... /usr/bin/gcov\nchecking for lcov... no\nchecking for java... no\nchecking for python... no\nchecking for genhtml... no\nchecking for git... /usr/local/bin/git\nchecking for ccache... no\nchecking for xgettext... no\nchecking for hexdump... /usr/bin/hexdump\nchecking for readelf... /usr/bin/readelf\nchecking for c++filt... /usr/bin/c++filt\nchecking for pkg-config... /usr/bin/pkg-config\nchecking pkg-config is at least version 0.9.0... yes\nchecking whether byte ordering is bigendian... no\nchecking if compiler needs -Werror to reject unknown flags... no\nchecking for the pthreads library -lpthreads... no\nchecking whether pthreads work without any flags... no\nchecking whether pthreads work with -Kthread... no\nchecking whether pthreads work with -kthread... no\nchecking for the pthreads library -llthread... no\nchecking whether pthreads work with -pthread... yes\nchecking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\nchecking if more special flags are required for pthreads... no\nchecking for PTHREAD_PRIO_INHERIT... yes\nchecking for special C compiler options needed for large files... no\nchecking for _FILE_OFFSET_BITS value needed for large files... no\nchecking whether strerror_r is declared... yes\nchecking for strerror_r... yes\nchecking whether strerror_r returns char *... no\nchecking whether the linker accepts -Wl,--large-address-aware... no\nchecking for __attribute__((visibility))... yes\nchecking for __attribute__((dllexport))... no\nchecking for __attribute__((dllimport))... no\nchecking for library containing clock_gettime... none required\nchecking whether C++ compiler accepts -fPIC... yes\nchecking whether C++ compiler accepts -Wstack-protector... yes\nchecking whether C++ compiler accepts -fstack-protector-all... yes\nchecking whether C++ preprocessor accepts -D_FORTIFY_SOURCE=2... yes\nchecking whether C++ preprocessor accepts -U_FORTIFY_SOURCE... yes\nchecking whether the linker accepts -Wl,--dynamicbase... no\nchecking whether the linker accepts -Wl,--nxcompat... no\nchecking whether the linker accepts -Wl,-z,relro... yes\nchecking whether the linker accepts -Wl,-z,now... yes\nchecking whether C++ compiler accepts -fPIE... yes\nchecking whether the linker accepts -pie... yes\nchecking endian.h usability... yes\nchecking endian.h presence... yes\nchecking for endian.h... yes\nchecking sys/endian.h usability... yes\nchecking sys/endian.h presence... yes\nchecking for sys/endian.h... yes\nchecking byteswap.h usability... no\nchecking byteswap.h presence... no\nchecking for byteswap.h... no\nchecking stdio.h usability... yes\nchecking stdio.h presence... yes\nchecking for stdio.h... yes\nchecking for stdlib.h... (cached) yes\nchecking for unistd.h... (cached) yes\nchecking for strings.h... (cached) yes\nchecking for sys/types.h... (cached) yes\nchecking for sys/stat.h... (cached) yes\nchecking sys/select.h usability... yes\nchecking sys/select.h presence... yes\nchecking for sys/select.h... yes\nchecking sys/prctl.h usability... no\nchecking sys/prctl.h presence... no\nchecking for sys/prctl.h... no\nchecking for library containing getaddrinfo_a... no\nchecking for library containing inet_pton... none required\nchecking whether strnlen is declared... yes\nchecking whether le16toh is declared... yes\nchecking whether le32toh is declared... yes\nchecking whether le64toh is declared... yes\nchecking whether htole16 is declared... yes\nchecking whether htole32 is declared... yes\nchecking whether htole64 is declared... yes\nchecking whether be16toh is declared... yes\nchecking whether be32toh is declared... yes\nchecking whether be64toh is declared... yes\nchecking whether htobe16 is declared... yes\nchecking whether htobe32 is declared... yes\nchecking whether htobe64 is declared... yes\nchecking whether bswap_16 is declared... no\nchecking whether bswap_32 is declared... no\nchecking whether bswap_64 is declared... no\nchecking for MSG_NOSIGNAL... yes\nchecking for visibility attribute... yes\nchecking for Berkeley DB C++ headers... default\nchecking for main in -ldb_cxx-4.8... yes\nchecking miniupnpc/miniwget.h usability... no\nchecking miniupnpc/miniwget.h presence... no\nchecking for miniupnpc/miniwget.h... no\nchecking miniupnpc/miniupnpc.h usability... no\nchecking miniupnpc/miniupnpc.h presence... no\nchecking for miniupnpc/miniupnpc.h... no\nchecking miniupnpc/upnpcommands.h usability... no\nchecking miniupnpc/upnpcommands.h presence... no\nchecking for miniupnpc/upnpcommands.h... no\nchecking miniupnpc/upnperrors.h usability... no\nchecking miniupnpc/upnperrors.h presence... no\nchecking for miniupnpc/upnperrors.h... no\nchecking whether to build Bitcoin Core GUI... no (Qt)\nchecking for boostlib >= 1.20.0... yes\nchecking whether the Boost::System library is available... yes\nchecking for exit in -lboost_system-mt... yes\nchecking whether the Boost::Filesystem library is available... yes\nchecking for exit in -lboost_filesystem-mt... yes\nchecking whether the Boost::Program_Options library is available... yes\nchecking for exit in -lboost_program_options-mt... yes\nchecking whether the Boost::Thread library is available... yes\n./configure: break: cannot break\nchecking for exit in -lboost_thread-mt... yes\n./configure: break: cannot break\nchecking whether the Boost::Chrono library is available... yes\nchecking for exit in -lboost_chrono-mt... yes\nchecking whether the Boost::Unit_Test_Framework library is available... yes\nchecking for dynamic linked boost test... no\nchecking for mismatched boost c++11 scoped enums... ok\nchecking for SSL... yes\nchecking for CRYPTO... yes\nchecking for EVENT... yes\nchecking for EVENT_PTHREADS... yes\nchecking for ZMQ... no\nconfigure: WARNING: libzmq version 4.x or greater not found, disabling\nchecking openssl/ec.h usability... yes\nchecking openssl/ec.h presence... yes\nchecking for openssl/ec.h... yes\nchecking whether to build bitcoind... yes\nchecking whether to build utils (bitcoin-cli bitcoin-tx)... yes\nchecking whether to build libraries... yes\nchecking if ccache should be used... no\nchecking if wallet should be enabled... yes\nchecking whether to build with support for UPnP... no\nchecking whether to build test_bitcoin... yes\nchecking whether to reduce exports... no\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating libbitcoinconsensus.pc\nconfig.status: creating Makefile\nconfig.status: creating src/Makefile\nconfig.status: creating share/setup.nsi\nconfig.status: creating share/qt/Info.plist\nconfig.status: creating src/test/buildenv.py\nconfig.status: creating qa/pull-tester/run-bitcoind-for-test.sh\nconfig.status: creating qa/pull-tester/tests_config.py\nconfig.status: creating src/config/bitcoin-config.h\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\n=== configuring in src/univalue (/home/bitcoin/src/univalue)\nconfigure: running /bin/sh ./configure --disable-option-checking '--prefix=/usr/local'  '--with-gui=no' '--with-boost=/home/bitcoin/boost' 'CC=egcc' 'CXX=eg++' 'CPP=ecpp' 'LDFLAGS=-L/home/bitcoin/db4/lib/' 'CPPFLAGS=-I/home/bitcoin/db4/include/' '--disable-shared' '--with-pic' '--with-bignum=no' '--enable-module-recovery' --cache-file=/dev/null --srcdir=.\nchecking whether make supports nested variables... yes\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking build system type... x86_64-unknown-openbsd5.8\nchecking host system type... x86_64-unknown-openbsd5.8\nchecking how to print strings... print -r\nchecking for style of include used by make... GNU\nchecking for gcc... egcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables...\nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether egcc accepts -g... yes\nchecking for egcc option to accept ISO C89... none needed\nchecking whether egcc understands -c and -o together... yes\nchecking dependency style of egcc... gcc3\nchecking for a sed that does not truncate output... /usr/bin/sed\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for fgrep... /usr/bin/grep -F\nchecking for ld used by egcc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 196608\nchecking whether the shell understands some XSI constructs... yes\nchecking whether the shell understands \"+=\"... no\nchecking how to convert x86_64-unknown-openbsd5.8 file names to x86_64-unknown-openbsd5.8 format... func_convert_file_noop\nchecking how to convert x86_64-unknown-openbsd5.8 file names to toolchain format... func_convert_file_noop\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|\\.so|_pic\\.a)$\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... print -r --\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from egcc object... ok\nchecking for sysroot... no\nchecking for mt... mt\nchecking if mt is a manifest tool... no\nchecking how to run the C preprocessor... ecpp\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if egcc supports -fno-rtti -fno-exceptions... no\nchecking for egcc option to produce PIC... -fPIC -DPIC\nchecking if egcc PIC flag -fPIC -DPIC works... yes\nchecking if egcc static flag -static works... yes\nchecking if egcc supports -c -o file.o... yes\nchecking if egcc supports -c -o file.o... (cached) yes\nchecking whether the egcc linker (/usr/bin/ld) supports shared libraries... yes\nchecking dynamic linker characteristics... openbsd5.8 ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... no\nchecking whether to build static libraries... yes\nchecking whether we are using the GNU C++ compiler... yes\nchecking whether eg++ accepts -g... yes\nchecking dependency style of eg++... gcc3\nchecking how to run the C++ preprocessor... eg++ -E\nchecking for ld used by eg++... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking whether the eg++ linker (/usr/bin/ld) supports shared libraries... yes\nchecking for eg++ option to produce PIC... -fPIC -DPIC\nchecking if eg++ PIC flag -fPIC -DPIC works... yes\nchecking if eg++ static flag -static works... yes\nchecking if eg++ supports -c -o file.o... yes\nchecking if eg++ supports -c -o file.o... (cached) yes\nchecking whether the eg++ linker (/usr/bin/ld) supports shared libraries... yes\nchecking dynamic linker characteristics... openbsd5.8 ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating pc/libunivalue.pc\nconfig.status: creating pc/libunivalue-uninstalled.pc\nconfig.status: creating univalue-config.h\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\n=== configuring in src/secp256k1 (/home/bitcoin/src/secp256k1)\nconfigure: running /bin/sh ./configure --disable-option-checking '--prefix=/usr/local'  '--with-gui=no' '--with-boost=/home/bitcoin/boost' 'CC=egcc' 'CXX=eg++' 'CPP=ecpp' 'LDFLAGS=-L/home/bitcoin/db4/lib/' 'CPPFLAGS=-I/home/bitcoin/db4/include/' '--disable-shared' '--with-pic' '--with-bignum=no' '--enable-module-recovery' --cache-file=/dev/null --srcdir=.\nchecking build system type... x86_64-unknown-openbsd5.8\nchecking host system type... x86_64-unknown-openbsd5.8\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking how to print strings... print -r\nchecking for style of include used by make... GNU\nchecking for gcc... egcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables...\nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether egcc accepts -g... yes\nchecking for egcc option to accept ISO C89... none needed\nchecking whether egcc understands -c and -o together... yes\nchecking dependency style of egcc... gcc3\nchecking for a sed that does not truncate output... /usr/bin/sed\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for fgrep... /usr/bin/grep -F\nchecking for ld used by egcc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 196608\nchecking whether the shell understands some XSI constructs... yes\nchecking whether the shell understands \"+=\"... no\nchecking how to convert x86_64-unknown-openbsd5.8 file names to x86_64-unknown-openbsd5.8 format... func_convert_file_noop\nchecking how to convert x86_64-unknown-openbsd5.8 file names to toolchain format... func_convert_file_noop\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|\\.so|_pic\\.a)$\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... print -r --\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from egcc object... ok\nchecking for sysroot... no\nchecking for mt... mt\nchecking if mt is a manifest tool... no\nchecking how to run the C preprocessor... ecpp\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if egcc supports -fno-rtti -fno-exceptions... no\nchecking for egcc option to produce PIC... -fPIC -DPIC\nchecking if egcc PIC flag -fPIC -DPIC works... yes\nchecking if egcc static flag -static works... yes\nchecking if egcc supports -c -o file.o... yes\nchecking if egcc supports -c -o file.o... (cached) yes\nchecking whether the egcc linker (/usr/bin/ld) supports shared libraries... yes\nchecking dynamic linker characteristics... openbsd5.8 ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... no\nchecking whether to build static libraries... yes\nchecking whether make supports nested variables... (cached) yes\nchecking for pkg-config... /usr/bin/pkg-config\nchecking pkg-config is at least version 0.9.0... yes\nchecking for ar... /usr/bin/ar\nchecking for ranlib... /usr/bin/ranlib\nchecking for strip... /usr/bin/strip\nchecking for gcc... gcc\nchecking whether we are using the GNU C compiler... (cached) yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... (cached) none needed\nchecking whether gcc understands -c and -o together... (cached) yes\nchecking dependency style of gcc... (cached) gcc3\nchecking how to run the C preprocessor... gcc -E\nchecking for egcc option to accept ISO C89... (cached) none needed\nchecking if egcc supports -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wno-unused-function -Wno-long-long -Wno-overlength-strings... yes\nchecking if egcc supports -fvisibility=hidden... yes\nchecking for __int128... yes\nchecking for __builtin_expect... yes\nchecking for x86_64 assembly availability... yes\nchecking for CRYPTO... yes\nchecking for main in -lcrypto... yes\nchecking for EC functions in libcrypto... yes\nchecking whether byte ordering is bigendian... no\nconfigure: Using assembly optimizations: x86_64\nconfigure: Using field implementation: 64bit\nconfigure: Using bignum implementation: no\nconfigure: Using scalar implementation: 64bit\nconfigure: Using endomorphism optimizations: no\nconfigure: Building ECDH module: no\nconfigure: Building Schnorr signatures module: no\nconfigure: Building ECDSA pubkey recovery module: yes\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating libsecp256k1.pc\nconfig.status: creating src/libsecp256k1-config.h\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\n```\n\nand the build:\n\n```\n\n# gmake\nMaking all in src\ngmake[1]: Entering directory '/home/bitcoin/src'\ngmake[2]: Entering directory '/home/bitcoin/src'\n  CXX      crypto/libbitcoinconsensus_la-hmac_sha256.lo\n  CXX      crypto/libbitcoinconsensus_la-hmac_sha512.lo\n  CXX      crypto/libbitcoinconsensus_la-ripemd160.lo\n  CXX      crypto/libbitcoinconsensus_la-sha1.lo\n  CXX      crypto/libbitcoinconsensus_la-sha256.lo\n  CXX      crypto/libbitcoinconsensus_la-sha512.lo\n  CXX      libbitcoinconsensus_la-arith_uint256.lo\n  CXX      consensus/libbitcoinconsensus_la-merkle.lo\n  CXX      libbitcoinconsensus_la-hash.lo\n  CXX      primitives/libbitcoinconsensus_la-block.lo\n  CXX      primitives/libbitcoinconsensus_la-transaction.lo\n  CXX      libbitcoinconsensus_la-pubkey.lo\n  CXX      script/libbitcoinconsensus_la-bitcoinconsensus.lo\n  CXX      script/libbitcoinconsensus_la-interpreter.lo\n  CXX      script/libbitcoinconsensus_la-script.lo\n  CXX      script/libbitcoinconsensus_la-script_error.lo\n  CXX      libbitcoinconsensus_la-uint256.lo\n  CXX      libbitcoinconsensus_la-utilstrencodings.lo\ngmake[3]: Entering directory '/home/bitcoin/src/secp256k1'\ngcc -I. -g -O2 -Wall -Wextra -Wno-unused-function -c src/gen_context.c -o gen_context.o\ngcc gen_context.o -o gen_context\n./gen_context\n  CC       src/libsecp256k1_la-secp256k1.lo\n  CCLD     libsecp256k1.la\ngmake[3]: Leaving directory '/home/bitcoin/src/secp256k1'\n  CXXLD    libbitcoinconsensus.la\n\n*** Warning: This system can not link to static lib archive secp256k1/libsecp256k1.la.\n*** I have the capability to make that library automatically link in when\n*** you link to this library.  But I can only do this if you have a\n*** shared version of the library, which you do not appear to have.\n  CXX      bitcoind-bitcoind.o\n  CXX      libbitcoin_server_a-addrman.o\n  CXX      libbitcoin_server_a-alert.o\n  CXX      libbitcoin_server_a-bloom.o\n  CXX      libbitcoin_server_a-chain.o\n  CXX      libbitcoin_server_a-checkpoints.o\n  CXX      libbitcoin_server_a-httprpc.o\nIn file included from ui_interface.h:12:0,\n                 from httprpc.cpp:16:\n/home/bitcoin/boost/include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(T1, T2, T3) [with R = bool; T1 = const std::basic_string<char>&; T2 = const std::basic_string<char>&; T3 = unsigned int; Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type = bool]':\n/home/bitcoin/boost/include/boost/signals2/last_value.hpp:51:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(value) return value.get();\n                                    ^\n/home/bitcoin/boost/include/boost/signals2/last_value.hpp:41:21: note: '*((void*)& value +1)' was declared here\n         optional<T> value;\n                     ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\n  CXX      libbitcoin_server_a-httpserver.o\nIn file included from ui_interface.h:12:0,\n                 from httpserver.cpp:13:\n/home/bitcoin/boost/include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(T1, T2, T3) [with R = bool; T1 = const std::basic_string<char>&; T2 = const std::basic_string<char>&; T3 = unsigned int; Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type = bool]':\n/home/bitcoin/boost/include/boost/signals2/last_value.hpp:51:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(value) return value.get();\n                                    ^\n/home/bitcoin/boost/include/boost/signals2/last_value.hpp:41:21: note: '*((void*)& value +1)' was declared here\n         optional<T> value;\n                     ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\n  CXX      libbitcoin_server_a-init.o\ninit.cpp:1094:7: warning: extra tokens at end of #else directive\n #else if defined OPENSSL_VERSION\n       ^\ninit.cpp:1096:2: error: #else after #else\n #else if defined LIBRESSL_VERSION_TEXT\n  ^\ninit.cpp:1092:0: error: the conditional began here\n #if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n ^\ninit.cpp:1096:7: warning: extra tokens at end of #else directive\n #else if defined LIBRESSL_VERSION_TEXT\n       ^\nIn file included from addrman.h:14:0,\n                 from init.cpp:12:\ninit.cpp: In function 'bool AppInit2(boost::thread_group&, CScheduler&)':\ninit.cpp:1095:61: error: 'OPENSSL_VERSION' was not declared in this scope\n     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n                                                             ^\nutil.h:77:39: note: in definition of macro 'LogPrintf'\n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n                                       ^\ninit.cpp:1095:76: error: 'OpenSSL_version' was not declared in this scope\n     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n                                                                            ^\nutil.h:77:39: note: in definition of macro 'LogPrintf'\n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n                                       ^\nIn file included from /home/bitcoin/boost/include/boost/system/system_error.hpp:14:0,\n                 from /home/bitcoin/boost/include/boost/thread/exceptions.hpp:22,\n                 from /home/bitcoin/boost/include/boost/thread/pthread/thread_data.hpp:10,\n                 from /home/bitcoin/boost/include/boost/thread/pthread/condition_variable.hpp:12,\n                 from /home/bitcoin/boost/include/boost/thread/condition_variable.hpp:16,\n                 from sync.h:11,\n                 from addrman.h:12,\n                 from init.cpp:12:\n/home/bitcoin/boost/include/boost/system/error_code.hpp: At global scope:\n/home/bitcoin/boost/include/boost/system/error_code.hpp:221:36: warning: 'boost::system::posix_category' defined but not used [-Wunused-variable]\n     static const error_category &  posix_category = generic_category();\n                                    ^\n/home/bitcoin/boost/include/boost/system/error_code.hpp:222:36: warning: 'boost::system::errno_ecat' defined but not used [-Wunused-variable]\n     static const error_category &  errno_ecat     = generic_category();\n                                    ^\n/home/bitcoin/boost/include/boost/system/error_code.hpp:223:36: warning: 'boost::system::native_ecat' defined but not used [-Wunused-variable]\n     static const error_category &  native_ecat    = system_category();\n                                    ^\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\nMakefile:3916: recipe for target 'libbitcoin_server_a-init.o' failed\ngmake[2]: *** [libbitcoin_server_a-init.o] Error 1\ngmake[2]: Leaving directory '/home/bitcoin/src'\nMakefile:7057: recipe for target 'all-recursive' failed\ngmake[1]: *** [all-recursive] Error 1\ngmake[1]: Leaving directory '/home/bitcoin/src'\nMakefile:666: recipe for target 'all-recursive' failed\ngmake: *** [all-recursive] Error 1\n```\n",
      "user": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183009505",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183019928,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzAxOTkyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183019928",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T19:21:49Z",
      "updated_at": "2016-02-11T19:21:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ah, please use this instead, sorry:\n\n```\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n#elif defined OPENSSL_VERSION\n    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n#elif defined LIBRESSL_VERSION_TEXT\n   LogPrintf(\"Using %s\\n\", LIBRESSL_VERSION_TEXT);\n#endif\n```\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183019928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183036387,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzAzNjM4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183036387",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T19:55:16Z",
      "updated_at": "2016-02-11T19:55:16Z",
      "author_association": "NONE",
      "body": "Yep, the build succeeds. Do you need the ouput from gmake?\n",
      "user": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183036387",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183043320,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA0MzMyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183043320",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T20:06:04Z",
      "updated_at": "2016-02-11T20:06:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "No, no, thank you for testing. I'll PR the change for inclusion tomorrow.\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183043320",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183047321,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA0NzMyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183047321",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T20:19:52Z",
      "updated_at": "2016-02-11T20:19:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just of curiosity, can you please run the following?\n\n```\n./bitcoind -debug -printtoconsole | grep Using\n```\n\nDoes it print your LibreSSL version correctly?\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183047321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183049789,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA0OTc4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183049789",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T20:29:56Z",
      "updated_at": "2016-02-11T20:29:56Z",
      "author_association": "NONE",
      "body": "Yep!\n\n```\n# ./bitcoind -debug -printtoconsole | grep Using\n2016-02-11 20:28:23 Using LibreSSL 2.2.2\n2016-02-11 20:28:23 Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\n2016-02-11 20:28:23 Using data directory /root/.bitcoin\n2016-02-11 20:28:23 Using config file /root/.bitcoin/bitcoin.conf\n2016-02-11 20:28:23 Using at most 125 connections (275 file descriptors available)\n2016-02-11 20:28:23 Using 0 threads for script verification\n2016-02-11 20:28:23 Using wallet wallet.dat\n2016-02-11 20:28:23 * Using 2.0MiB for block index database\n2016-02-11 20:28:23 * Using 32.5MiB for chain state database\n2016-02-11 20:28:23 * Using 65.5MiB for in-memory UTXO set\n```\n",
      "user": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183049789",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183050434,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA1MDQzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183050434",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T20:32:20Z",
      "updated_at": "2016-02-11T20:32:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dotgodly Great! Thanks for checking the fix.\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183050434",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "mentioned",
      "id": 547717435,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTQ3NzE3NDM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/547717435",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T20:32:21Z"
    },
    {
      "event": "subscribed",
      "id": 547717436,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU0NzcxNzQzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/547717436",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T20:32:21Z"
    },
    {
      "event": "commented",
      "id": 183059101,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA1OTEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183059101",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T21:03:31Z",
      "updated_at": "2016-02-11T21:03:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "BTW - I do not recommend to run `bitcoind` as root...\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183059101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "commented",
      "id": 183063001,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA2MzAwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/183063001",
      "actor": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-11T21:17:15Z",
      "updated_at": "2016-02-11T21:17:15Z",
      "author_association": "NONE",
      "body": "Just testing it haha. I've been trying to build for 3 days.\n",
      "user": {
        "login": "dotgodly",
        "id": 17176322,
        "node_id": "MDQ6VXNlcjE3MTc2MzIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/17176322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dotgodly",
        "html_url": "https://github.com/dotgodly",
        "followers_url": "https://api.github.com/users/dotgodly/followers",
        "following_url": "https://api.github.com/users/dotgodly/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dotgodly/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dotgodly/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dotgodly/subscriptions",
        "organizations_url": "https://api.github.com/users/dotgodly/orgs",
        "repos_url": "https://api.github.com/users/dotgodly/repos",
        "events_url": "https://api.github.com/users/dotgodly/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dotgodly/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7515#issuecomment-183063001",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7515"
    },
    {
      "event": "labeled",
      "id": 551966333,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDU1MTk2NjMzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/551966333",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-16T12:43:50Z",
      "label": {
        "name": "Linux/Unix",
        "color": "770000"
      }
    },
    {
      "event": "locked",
      "id": 5272013480,
      "node_id": "LOE_lADOABII584H7IzfzwAAAAE6PIqo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5272013480",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:34:35Z",
      "lock_reason": "resolved"
    }
  ]
}