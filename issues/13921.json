{
  "type": "issue",
  "issue": {
    "id": 348962613,
    "node_id": "MDU6SXNzdWUzNDg5NjI2MTM=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/13921",
    "number": 13921,
    "state": "closed",
    "state_reason": "completed",
    "title": "Issue on configuring the bitcoin core build ",
    "body": "<!-- This issue tracker is only for technical issues related to Bitcoin Core.\r\n\r\nGeneral bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\r\n\r\nFor reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\r\n\r\nIf the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\r\n\r\n<!-- Describe the issue -->\r\n<!--- What behavior did you expect? -->\r\n\r\n<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\r\n\r\n<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\r\n\r\n<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\r\n\r\n<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\r\n\r\n<!-- Any extra information that might be useful in the debugging process. -->\r\n<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->\r\n\r\nHi all ,\r\n\r\nI am trying to configure the bitcoin core build on Ubuntu-18.04 , as I tried the 'make' command , I received the following issue . How can I fix this ? Thanks in advance .\r\n\r\n<pre><code>fu@fu-VirtualBox:~/Desktop/bitcoin$ make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/fu/Desktop/bitcoin/src'\r\nmake  all-recursive\r\nmake[2]: Entering directory '/home/fu/Desktop/bitcoin/src'\r\nMaking all in .\r\nmake[3]: Entering directory '/home/fu/Desktop/bitcoin/src'\r\n  CXX      addrman.o\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h:56:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\r\n class CBigNum : public BIGNUM\r\n                        ^~~~~~\r\nIn file included from /usr/include/openssl/crypto.h:31:0,\r\n                 from allocators.h:15,\r\n                 from serialize.h:9,\r\n                 from netbase.h:13,\r\n                 from addrman.h:8,\r\n                 from addrman.cpp:5:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of ‘BIGNUM {aka struct bignum_st}’\r\n typedef struct bignum_st BIGNUM;\r\n                ^~~~~~~~~\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In constructor ‘CBigNum::CBigNum()’:\r\nbignum.h:61:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nbignum.h:61:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nbignum.h: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\r\nbignum.h:66:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nbignum.h:66:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nbignum.h:67:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h:69:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n             BN_clear_free(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\r\nbignum.h:76:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h: In destructor ‘CBigNum::~CBigNum()’:\r\nbignum.h:83:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n         BN_clear_free(this);\r\n                           ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(signed char)’:\r\nbignum.h:87:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(signed char n)        { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\nbignum.h:87:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(signed char n)        { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short int)’:\r\nbignum.h:88:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(short n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\nbignum.h:88:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(short n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(int)’:\r\nbignum.h:89:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int n)                { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\nbignum.h:89:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(int n)                { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long int)’:\r\nbignum.h:90:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long n)               { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\nbignum.h:90:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(long n)               { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long long int)’:\r\nbignum.h:91:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long long n)          { BN_init(this); setint64(n); }\r\n                                     ^~~~~~~\r\nbignum.h:91:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(long long n)          { BN_init(this); setint64(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned char)’:\r\nbignum.h:92:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned char n)      { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\nbignum.h:92:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned char n)      { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short unsigned int)’:\r\nbignum.h:93:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned short n)     { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\nbignum.h:93:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned short n)     { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned int)’:\r\nbignum.h:94:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned int n)       { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\nbignum.h:94:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned int n)       { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long unsigned int)’:\r\nbignum.h:95:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long n)      { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\nbignum.h:95:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned long n)      { BN_init(this); setulong(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long long unsigned int)’:\r\nbignum.h:96:37: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long long n) { BN_init(this); setuint64(n); }\r\n                                     ^~~~~~~\r\nbignum.h:96:37: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned long long n) { BN_init(this); setuint64(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(uint256)’:\r\nbignum.h:97:37: error: ‘BN_init’ was not declared in this scope\r\n     explicit CBigNum(uint256 n)   { BN_init(this); setuint256(n); }\r\n                                     ^~~~~~~\r\nbignum.h:97:37: note: suggested alternative: ‘BN_print’\r\n     explicit CBigNum(uint256 n)   { BN_init(this); setuint256(n); }\r\n                                     ^~~~~~~\r\n                                     BN_print\r\nbignum.h: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\r\nbignum.h:101:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nbignum.h:101:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nbignum.h: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\nbignum.h:107:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nbignum.h: In member function ‘long unsigned int CBigNum::getulong() const’:\r\nbignum.h:113:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘unsigned int CBigNum::getuint() const’:\r\nbignum.h:118:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘int CBigNum::getint() const’:\r\nbignum.h:123:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nbignum.h:124:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In member function ‘void CBigNum::setint64(int64_t)’:\r\nbignum.h:172:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘void CBigNum::setuint64(uint64_t)’:\r\nbignum.h:199:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘void CBigNum::setuint256(uint256)’:\r\nbignum.h:227:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘uint256 CBigNum::getuint256() const’:\r\nbignum.h:232:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:236:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\nbignum.h:257:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nbignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\nbignum.h:262:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:266:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\nbignum.h:302:36: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nbignum.h:306:36: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nbignum.h:307:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n             BN_lshift(this, this, 8*(nSize-3));\r\n                                              ^\r\nbignum.h:309:40: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(this, fNegative);\r\n                                        ^\r\nIn file included from bignum.h:17:0,\r\n                 from chainparams.h:9,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\nbignum.h:315:30: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_num_bits(const BIGNUM*)’\r\n         unsigned int nSize = BN_num_bytes(this);\r\n                              ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h:318:40: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n             nCompact = BN_get_word(this) << 8*(3-nSize);\r\n                                        ^\r\nbignum.h:322:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n             BN_rshift(&bn, this, 8*(nSize-3));\r\n                                             ^\r\nbignum.h:323:39: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n             nCompact = BN_get_word(&bn);\r\n                                       ^\r\nbignum.h:333:41: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\r\n                                         ^\r\nbignum.h: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\nbignum.h:374:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nbignum.h:377:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nbignum.h:379:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nbignum.h:381:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nbignum.h:387:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\nbignum.h: In member function ‘bool CBigNum::operator!() const’:\r\nbignum.h:420:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\nbignum.h:425:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\nbignum.h:439:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\nbignum.h:458:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\nbignum.h:469:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nbignum.h:475:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator++()’:\r\nbignum.h:484:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator--()’:\r\nbignum.h:501:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nbignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\nbignum.h:526:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\nbignum.h:534:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\r\nbignum.h:542:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nbignum.h: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\nbignum.h:550:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nbignum.h: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\nbignum.h:559:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from bignum.h:17:0,\r\n                 from chainparams.h:9,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\nbignum.h:568:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\nbignum.h:576:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nbignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\nbignum.h:588:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n um& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                 ^\r\nbignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:589:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n um& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                 ^\r\nbignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:590:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n um& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                 ^\r\nbignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:591:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n um& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                 ^\r\nbignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nbignum.h:592:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n um& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                  ^\r\nbignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nbignum.h:593:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n um& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                  ^\r\nIn file included from util.h:15:0,\r\n                 from addrman.h:11,\r\n                 from addrman.cpp:5:\r\ntinyformat.h: In static member function ‘static const char* tinyformat::detail::FormatIterator::streamStateFromFormat(std::ostream&, unsigned int&, const char*, int, int)’:\r\ntinyformat.h:784:21: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             out.setf(std::ios::uppercase);\r\n             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\r\ntinyformat.h:785:9: note: here\r\n         case 'x': case 'p':\r\n         ^~~~\r\ntinyformat.h:790:21: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             out.setf(std::ios::uppercase);\r\n             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\r\ntinyformat.h:791:9: note: here\r\n         case 'e':\r\n         ^~~~\r\ntinyformat.h:796:21: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             out.setf(std::ios::uppercase);\r\n             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\r\ntinyformat.h:797:9: note: here\r\n         case 'f':\r\n         ^~~~\r\ntinyformat.h:801:21: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             out.setf(std::ios::uppercase);\r\n             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\r\ntinyformat.h:802:9: note: here\r\n         case 'g':\r\n         ^~~~\r\nMakefile:838: recipe for target 'addrman.o' failed\r\nmake[3]: *** [addrman.o] Error 1\r\nmake[3]: Leaving directory '/home/fu/Desktop/bitcoin/src'\r\nMakefile:860: recipe for target 'all-recursive' failed\r\nmake[2]: *** [all-recursive] Error 1\r\nmake[2]: Leaving directory '/home/fu/Desktop/bitcoin/src'\r\nMakefile:652: recipe for target 'all' failed\r\nmake[1]: *** [all] Error 2\r\nmake[1]: Leaving directory '/home/fu/Desktop/bitcoin/src'\r\nMakefile:509: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1 <code><pre>\r\n\r\n",
    "user": {
      "login": "funasty1985",
      "id": 41632724,
      "node_id": "MDQ6VXNlcjQxNjMyNzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/41632724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/funasty1985",
      "html_url": "https://github.com/funasty1985",
      "followers_url": "https://api.github.com/users/funasty1985/followers",
      "following_url": "https://api.github.com/users/funasty1985/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/funasty1985/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/funasty1985/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/funasty1985/subscriptions",
      "organizations_url": "https://api.github.com/users/funasty1985/orgs",
      "repos_url": "https://api.github.com/users/funasty1985/repos",
      "events_url": "https://api.github.com/users/funasty1985/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/funasty1985/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 3,
    "closed_at": "2018-08-10T01:44:33Z",
    "created_at": "2018-08-09T03:19:31Z",
    "updated_at": "2021-09-08T12:38:32Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 411744474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc0NDQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411744474",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-09T12:44:45Z",
      "updated_at": "2018-08-09T12:44:53Z",
      "author_association": "MEMBER",
      "body": "What is your config.log saying?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/13921#issuecomment-411744474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921"
    },
    {
      "event": "commented",
      "id": 411933452,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTkzMzQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411933452",
      "actor": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-09T23:53:36Z",
      "updated_at": "2018-08-09T23:53:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Why do you have `bignum.h`? That file was deleted at few years ago.\r\n\r\nYou might need to `git checkout` the branch, tag or commit you want.",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/13921#issuecomment-411933452",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921"
    },
    {
      "event": "closed",
      "id": 1781532263,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTc4MTUzMjI2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1781532263",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T01:44:33Z"
    },
    {
      "event": "commented",
      "id": 411960366,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTk2MDM2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411960366",
      "actor": {
        "login": "funasty1985",
        "id": 41632724,
        "node_id": "MDQ6VXNlcjQxNjMyNzI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/41632724?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/funasty1985",
        "html_url": "https://github.com/funasty1985",
        "followers_url": "https://api.github.com/users/funasty1985/followers",
        "following_url": "https://api.github.com/users/funasty1985/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/funasty1985/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/funasty1985/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/funasty1985/subscriptions",
        "organizations_url": "https://api.github.com/users/funasty1985/orgs",
        "repos_url": "https://api.github.com/users/funasty1985/repos",
        "events_url": "https://api.github.com/users/funasty1985/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/funasty1985/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T02:54:31Z",
      "updated_at": "2018-08-10T02:58:09Z",
      "author_association": "NONE",
      "body": "I used the old 0.9 version of bitcoin , I am able to run `make` once I switch to v0.16.0.  Thank you ",
      "user": {
        "login": "funasty1985",
        "id": 41632724,
        "node_id": "MDQ6VXNlcjQxNjMyNzI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/41632724?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/funasty1985",
        "html_url": "https://github.com/funasty1985",
        "followers_url": "https://api.github.com/users/funasty1985/followers",
        "following_url": "https://api.github.com/users/funasty1985/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/funasty1985/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/funasty1985/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/funasty1985/subscriptions",
        "organizations_url": "https://api.github.com/users/funasty1985/orgs",
        "repos_url": "https://api.github.com/users/funasty1985/repos",
        "events_url": "https://api.github.com/users/funasty1985/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/funasty1985/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/13921#issuecomment-411960366",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13921"
    },
    {
      "event": "locked",
      "id": 5272035372,
      "node_id": "LOE_lADOABII584UzL81zwAAAAE6POAs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5272035372",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:38:32Z",
      "lock_reason": "resolved"
    }
  ]
}