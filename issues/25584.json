{
  "type": "issue",
  "issue": {
    "id": 1300439414,
    "node_id": "I_kwDOABII585NgyF2",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/25584",
    "number": 25584,
    "state": "open",
    "state_reason": null,
    "title": "Mempool + Validation Code Organization",
    "body": "From a commit message in #25487:\r\n\r\n>In the long run, I think we should probably invert the validation <->\r\nmempool relationship. Instead of mempool not depending on validation, we\r\nshould have validation not depend on mempool.\r\n\r\nBackground: We used to have a circular dependency between txmempool <-> validation. This was cut in #22677, so now we have validation -> txmempool.\r\n\r\nDidn't want to pollute the review comments there, so opening this to discuss removing mempool-related things from validation.{h,cpp} and what the ideal organization might look like.",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 6,
    "created_at": "2022-07-11T09:23:02Z",
    "updated_at": "2022-07-25T00:16:22Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 6967923163,
      "node_id": "LE_lADOABII585NgyF2zwAAAAGfUhHb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6967923163",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T09:23:02Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "labeled",
      "id": 6967923165,
      "node_id": "LE_lADOABII585NgyF2zwAAAAGfUhHd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6967923165",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T09:23:02Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 1180166083,
      "node_id": "IC_kwDOABII585GV-fD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180166083",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T09:23:35Z",
      "updated_at": "2022-07-11T09:23:35Z",
      "author_association": "MEMBER",
      "body": "My thoughts:\r\n\r\nDefining \"validation\":\r\n- If thinking about \"validation\" as management of chainstate, applying consensus rules to blocks and block transactions, etc., there is definitely no reason for validation to even know what a mempool is.\r\n- If thinking about \"validation\" as what is currently housed in validation.{h, cpp}, it's really block + mempool validation. It houses `MemPoolAccept`, `ChainstateManager` has a reference to the mempool to call ATMP, etc. So it naturally has a dependency on txmempool.\r\n\r\nDefining \"txmempool\":\r\nSimilarly, I think there's a difference between what we think of conceptually vs where code is located.\r\nI think of these as tightly related but distinct mempool \"modules\":\r\n-  `CTxMemPool`  + `CTxMemPoolEntry` data structures which store transactions but aren't responsible for validation, policy, etc.\r\n- Policy logic and constants (e.g. RBF signals, standard script policy flags, default ancestor limits) and runtime settings (e.g. configured min relay feerate)\r\n- Mempool validation, i.e. `MemPoolAccept`\r\n- Fee estimator, which needs to know when transactions enter/leave the mempool\r\n- Miner `BlockAssembler` (i.e. the ancestor feerate algo which operates on the contents of the mempool, not the PoW part)\r\n- Others?\r\n\r\nI'm not sure if this should all be in txmempool.{h,cpp} (my philosophy in #22677 was that it should just have `CTxMemPool`  + `CTxMemPoolEntry` data structures, and thought it was weird to have `removeForReorg()`  calling `CheckSequenceLocks()`, which is why I went with the direction of passing in a callable). In the future, perhaps we want to move towards having a `MempoolManager` responsible for mempool validation, policy settings, fee estimator, miner/block template building, etc. I imagine replacing `ChainstateManager` and `PeerManager`'s references to `CTxMemPool` with a reference to `MempoolManager`.\r\n\r\nSpoke to @dongcarl about mempool vs validation previously (in the context of what it would look like to remove mempool from libbitcoinkernel), and a few ideas were discussed:\r\n- Have mempool be a client of `CValidationInterface`. This would require quite a few changes, including separating `TransactionAddedToMempool()` and `TransactionRemovedFromMempool` into a separate interface and iirc change the interface for transactions removed for block. I think #11775 does this somewhat?\r\n- As a less invasive step in the direction of making validation not require txmempool, pass callbacks to validation functions doing mempool things synchronously.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25584#issuecomment-1180166083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584"
    },
    {
      "event": "mentioned",
      "id": 6967927010,
      "node_id": "MEE_lADOABII585NgyF2zwAAAAGfUiDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6967927010",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T09:23:36Z"
    },
    {
      "event": "subscribed",
      "id": 6967927018,
      "node_id": "SE_lADOABII585NgyF2zwAAAAGfUiDq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6967927018",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T09:23:36Z"
    },
    {
      "event": "commented",
      "id": 1180607148,
      "node_id": "IC_kwDOABII585GXqKs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180607148",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T16:16:43Z",
      "updated_at": "2022-07-11T16:16:43Z",
      "author_association": "MEMBER",
      "body": "I'm not sure it is possible to come up with a grand plan here, but doesn't hurt to try. Validation code is a big monolith, and mempool code is somewhat monolithic too, so I think any time you can pull pieces of validation code or mempool code out of their respective monoliths into smaller modules which are coherent (block managers, chain states, fee estimators, utxo databases, etc), you are probably doing a good thing. When we see the opportunities to pull things out of `src/validation.cpp` and `src/txmempool.cpp` and move them into smaller files in `src/kernel/`[1], we should generally take them, and I think if we do that, the questions about what should depend on what will be simpler. It's easier to figure out what dependencies should be between small focused modules than big blobby modules.\r\n\r\n[1] Before introduction of the kernel library, it would have made sense to put new modules in `src/node/` not `src/kernel/`, but now most things in `src/node/` should actually move to `src/kernel/`.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25584#issuecomment-1180607148",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584"
    },
    {
      "event": "commented",
      "id": 1184289153,
      "node_id": "IC_kwDOABII585GltGB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184289153",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:45:22Z",
      "updated_at": "2022-07-14T10:45:51Z",
      "author_association": "MEMBER",
      "body": "Regarding https://github.com/bitcoin/bitcoin/pull/11775, i'm not sure. After #25380, we can't just make the fee estimator only a client of the validation interface: it needs an access to `CTxMemPool`. I also think it's natural for the fee estimator to be connected to `CTxMemPool`, and we'll need it if we want to give accurate estimates for packages.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25584#issuecomment-1184289153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584"
    },
    {
      "event": "commented",
      "id": 1185560253,
      "node_id": "IC_kwDOABII585Gqja9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1185560253",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-15T13:43:05Z",
      "updated_at": "2022-07-15T13:43:05Z",
      "author_association": "MEMBER",
      "body": "> I also think it's natural for the fee estimator to be connected to CTxMemPool, and we'll need it if we want to give accurate estimates for packages.\r\n\r\nI agree, but my point is that the relationship should be fee estimator depending on txmempool, and txmempool not depending on fee estimator (currently we have circular). It could be a client of validation interface and have access to mempool.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25584#issuecomment-1185560253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584"
    },
    {
      "event": "commented",
      "id": 1189682656,
      "node_id": "IC_kwDOABII585G6R3g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189682656",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T00:44:18Z",
      "updated_at": "2022-07-20T00:44:18Z",
      "author_association": "MEMBER",
      "body": ">     If thinking about \"validation\" as management of chainstate, applying consensus rules to blocks and block transactions, etc., there is definitely no reason for validation to even know what a mempool is.\r\n>     If thinking about \"validation\" as what is currently housed in validation.{h, cpp}, it's really block + mempool validation. It houses MemPoolAccept, ChainstateManager has a reference to the mempool to call ATMP, etc. So it naturally has a dependency on txmempool.\r\n\r\nI would lean for the first thinking, defining \"validation\" in term of a conceptual unit. However, I'm not sure it's that's simple as we might have a conceptual dependency between the two in the sense of `g_scriptExecutionCache` fulfilled by `ConsensusScriptChecks()` present in the mempool acceptance paths. In the eventuality we would like to disentangle \"mempool\" from \"validation\" code to introduce in between a `src/interfaces/validation.h` to enable process separation, `g_scriptExecutionCache` could be a bottleneck as the validation process might have to expose internal writeable state to the mempool process (and I guess you might have to batch the script cache writes otherwise the processes context-switch would likely swallow the perf opti of `CuckooCache`).\r\n\r\n>    CTxMemPool + CTxMemPoolEntry data structures which store transactions but aren't responsible for validation, policy, etc.\r\n>    Policy logic and constants (e.g. RBF signals, standard script policy flags, default ancestor limits) and runtime settings (e.g. configured min relay feerate)\r\n>    Mempool validation, i.e. MemPoolAccept\r\n>    Fee estimator, which needs to know when transactions enter/leave the mempool\r\n>    Miner BlockAssembler (i.e. the ancestor feerate algo which operates on the contents of the mempool, not the PoW part)\r\n>    Others?\r\n\r\nYes, I think that's a good list of mempool \"modules\". note, I believe what we define as policy logic isn't that straightforward. E.g, we have `AVG_FEEFILTER_BROADCAST_INTERVAL` and `MAX_FEEFILTER_CHANGE_DELAY` in `net_processing.cpp`, do they belong to the transaction-relay policy scope or the mempool policy one as ultimately they influence your mempool content ? I don't know if we have heuristics there, though I think it's worthy to have clear view of the sets of policy constants to ease the understanding of implications on network behavior if we change any of them. There is also the fact that the wallet could have its own default view of the mempool, decoupled from the effective mempool settings, i.e to increase the propagation odds of your wallet-issued chain of transactions, I think the default run by the other nodes matter more and if your local settings are more permissive you should stick to Core default imo. For now, I think the wallet policy view is coupled to the default settings one (see `relayMinFee()` or `checkChainLimits()`).\r\n\r\n> I'm not sure if this should all be in txmempool.{h,cpp} (my philosophy in #22677 was that it should just have CTxMemPool + CTxMemPoolEntry data structures, and thought it was weird to have removeForReorg()> calling CheckSequenceLocks(), which is why I went with the direction of passing in a callable). In the future, perhaps we want to move towards having a MempoolManager responsible for mempool validation, policy settings, fee estimator, miner/block template building, etc. I imagine replacing ChainstateManager and PeerManager's references to CTxMemPool with a reference to MempoolManager.\r\n \r\nYeah sounds a good direction to encapsulate slowly everything in `MemPoolManager`. I don't have opinion on the path forward to remove the validation dependending on mempool current state of things.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25584#issuecomment-1189682656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25584"
    }
  ]
}