{
  "type": "issue",
  "issue": {
    "id": 1031598650,
    "node_id": "I_kwDOABII5849fPI6",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/23326",
    "number": 23326,
    "state": "open",
    "state_reason": null,
    "title": "MuSig2 support",
    "body": "ElementsProject/secp256k1-zkp#131 adds MuSig2 support to secp256k1-zkp, which is an experimental fork of [secp256k1](https://github.com/bitcoin-core/secp256k1). I think it would be useful to have a (series of) draft pr(s) implementing support for this in Bitcoin Core. If only to make it easier to actually test MuSig2.\r\n\r\nMuSig2 paper: \"MuSig2: Simple Two-Round Schnorr Multi-Signatures\" (https://eprint.iacr.org/2020/1261)\r\n\r\nTo simplify things a bit, I'm assuming a things for now:\r\n1. The Bitcoin Core wallet coordinates setup and also takes the initiative for proposing a new transaction\r\n2. Two communication rounds are needed for signing ([no storing nonces in advance](https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-947898104)) \r\n3. ~Only key path spending (for script path spending we probably want miniscript support first anyway)~ (probably not an issue)\r\n4. Our wallet has private keys (after setup we import the musig descriptor and mark that as active)\r\n\r\nOne challenge is how to include secp256k1-zkp (I suppose a proof of concept PR can just swap out the git subtree).\r\n\r\n**Wallet setup**\r\n\r\nWe obtain an xpub with origin info from ourselves and the other signers. Perhaps at the [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki) derivation of `m/87'/0'/0'`.\r\n\r\nTodo:\r\n- [ ] #22341\r\n- [ ] ...\r\n\r\nPass them into `secp256k1_musig_pubkey_agg`. Apparently it's possible to aggregate an xpub in one go, instead of calling this function on each and every derived key. But there's some caveats, perhaps @jonasnick can clarify:\r\n* This results in a new xpub, which can be used just fine by a watch-only wallet (which doesn't need to know MuSig2 was involved); but\r\n* agg(xpubA, xpubB)/* != agg(xpubA/*, xpubB/*)\r\n* what about the chain codes?\r\n* do we need to track xpub and/or origin info for the other signers? (this seems practical in any case when dealing with a dumb external signer)\r\n\r\nTodo:\r\n- [ ] RPC or bitcoin-util / bitcoin-wallet command that takes xpub(s), etc and does this\r\n   - since we have to call libsecp functions, a Python script doesn't seem like the right approach\r\n   - the result could be a fresh (public key) descriptor, that is either automatically or manually imported in the wallet\r\n- [ ] add musig2 descriptor (which tracks our own xpub at minimum, as well as the aggregated xpub or/and the other xpubs)\r\n\r\n**Round one nonces**\r\n\r\nOne nice aspect of MuSig2 is that the nonces required for round 1 can:\r\n1. be generated in advance\r\n2. be regenerated if a signer loses them\r\n3. support only 1 cosigner if that's easier\r\n\r\nSo it's tempting to collect a bunch of nonces during the setup. However this is very non-trivial, so let's not for now... https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-947898104\r\n\r\nInstead, we generate our nonce and request one from each participant. Probably the most practical way is to create a PSBT, put our first nonce in it, pass it to the next signer who reads ours and adds theirs. We then get the PSBT back from the last signer.\r\n\r\n- [ ] add PSBT fields\r\n\r\n**Round two: signing**\r\n\r\nPerform step 1 and 2 of [signing process](https://github.com/jonasnick/secp256k1-zkp/blob/musig2/src/modules/musig/musig.md#signing) on the nonces we have.\r\n\r\nGenerate our round 2 nonce with `secp256k1_musig_nonce_gen ` (step 4) and add those to the PSBT\r\n\r\nPass the PSBT to the other signer(s):\r\n1. if there's only 1 co-signer they can generate their nonce and `secp256k1_musig_partial_sign` in one go, and give us the result\r\n2. if there's 2+ co-signers???\r\n\r\nAdd our partial signature:\r\n\r\n- [ ] `secp256k1_musig_partial_sign` (by `walletprocesspsbt`?)\r\n\r\nGenerate full signature:\r\n\r\n- [ ] have one or more of PSBT method(s) do `secp256k1_musig_partial_sig_agg` (does not need wallet)  \r\n\r\nProfit.\r\n\r\n**Updates**\r\n2021-10-20 18:48 UTC: forget about pre committing nonces for round 1, instead use two signing rounds: https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-947898104",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 9,
    "created_at": "2021-10-20T16:20:01Z",
    "updated_at": "2021-11-23T18:11:53Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 5493110578,
      "node_id": "MEE_lADOABII5849fPI6zwAAAAFHajcy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493110578",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T16:20:02Z"
    },
    {
      "event": "subscribed",
      "id": 5493110583,
      "node_id": "SE_lADOABII5849fPI6zwAAAAFHajc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493110583",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T16:20:02Z"
    },
    {
      "event": "commented",
      "id": 947898104,
      "node_id": "IC_kwDOABII5844f8b4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947898104",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T17:47:35Z",
      "updated_at": "2021-10-20T17:47:35Z",
      "author_association": "MEMBER",
      "body": "@Sjors\r\n\r\nMy thinking was that once it's deemed ready, we'd forward port the MuSig(2) support in secp256k1-zkp to libsecp256k1. That'd solve the issue of implementation compatibility.\r\n\r\nBeyond that, there are indeed a number of things that need to be decided:\r\n\r\n* How to integrate into descriptors. One possibility is to only support an `agg` fragment as leaf key (e.g. `agg(xpub1/.../*,xpub2/.../*)`), but it's also possible I think to support treating `agg` of xpubs as a new \"xpub\" itself (e.g. `agg(xpub1/...,xpub2/...)/*`) for example by defining the aggregated chaincode as a hash of the child chaincodes. This complicates signing further, however, though I don't think there are fundamental problems with this (I've had some discussions with @jonasnick with this).\r\n\r\n* Signing support feels like it'd be pretty much orthogonal to the descriptors integration. My thinking is that there is no need to restrict it - whatever our descriptors signing logic support will pretty much automatically be supported by MuSig signing code once we have it. `tr()` descriptors right now are very limited (only key path, and `pk(X)` leaves), but if that gets extended, all places that were key expressions are supported in there should also deal fine with MuSig keys.\r\n\r\n* I think you're misunderstanding how the pre-generated nonce variant of MuSig2 works. It isn't sufficient to generate the nonces ahead of time - they also need to be distributed to the co-signers ahead of time (in such a way that they know which nonce is going to be used with which signing attempt, **before** that signing attempt is made). This is both logistically hard (it's essentially incompatible with descriptors, as you can't go and generate/pay to addresses before nonce material has been exchanged), and a huge footgun (all participants need to increment positions in lockstep, make sure never to reuse, need to re-distribute nonces in case of loss of key material; backups are a huge hazard, ...). In my view, this variant is for very specialized applications where latency matters, and you have a well-defined protocol between known-to-be-online co-signers already that it can be integrated into (e.g. I can imagine Lightning using them). In a more \"general purpose\" setting like Bitcoin Core should probably cater to, it feels much safer & saner to stick to the non-interactive setup + 2-round signing version of the protocol.\r\n\r\n* PSBT extensions need to be defined for both rounds (for announcing which public nonces every co-signing is going to use, and for the partial signatures).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-947898104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "mentioned",
      "id": 5493580185,
      "node_id": "MEE_lADOABII5849fPI6zwAAAAFHcWGZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493580185",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T17:47:35Z"
    },
    {
      "event": "subscribed",
      "id": 5493580190,
      "node_id": "SE_lADOABII5849fPI6zwAAAAFHcWGe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493580190",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T17:47:35Z"
    },
    {
      "event": "mentioned",
      "id": 5493580196,
      "node_id": "MEE_lADOABII5849fPI6zwAAAAFHcWGk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493580196",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T17:47:35Z"
    },
    {
      "event": "subscribed",
      "id": 5493580199,
      "node_id": "SE_lADOABII5849fPI6zwAAAAFHcWGn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493580199",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T17:47:35Z"
    },
    {
      "event": "commented",
      "id": 947942068,
      "node_id": "IC_kwDOABII5844gHK0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947942068",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T18:47:07Z",
      "updated_at": "2021-10-20T18:56:43Z",
      "author_association": "MEMBER",
      "body": "> it's deemed ready, we'd forward port the MuSig(2) support in secp256k1-zkp to libsecp256k1. \r\n\r\nThat makes sense, but I suspect more people will review the secp256k1 PR, and more practical issues will come to light, if there's a (draft) Bitcoin Core integration. So it's a bit of chicken-egg.\r\n\r\n> It isn't sufficient to generate the nonces ahead of time - they also need to be distributed to the co-signers ahead of time (in such a way that they know which nonce is going to be used with which signing attempt, before that signing attempt is made)\r\n\r\nAh, the first constraint might be solvable by exporting it along with descriptors (which hardware wallets should store anyway for change detection). But the second constraint makes that a lot more complicated. \r\n\r\n> it feels much safer & saner to stick to the non-interactive setup + 2-round signing version of the protocol\r\n\r\nThat makes sense. Two rounds is annoying when any physical travel is involved, but it does seem much more realistic to implement in the near term. For a simple computer + hardware wallet setup two rounds are no problem; just a matter of calling HWI twice.\r\n\r\nI updated the description to reflect this.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-947942068",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 949972894,
      "node_id": "IC_kwDOABII5844n2-e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/949972894",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-22T21:35:52Z",
      "updated_at": "2021-10-22T21:35:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "If the non-interactive setup of MuSig 2 without preprocessing is what is being discussed, have the pros/cons of MuSig-DN been reconsidered? They would now be the same number of rounds, with MuSig-DN having all the security benefits of deterministic nonces (with the costs of implementation complexity and increased verification times).\r\n\r\n",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-949972894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 950132928,
      "node_id": "IC_kwDOABII5844oeDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/950132928",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-23T10:42:24Z",
      "updated_at": "2021-10-23T10:42:24Z",
      "author_association": "MEMBER",
      "body": "From the [MuSig-DN paper](https://eprint.iacr.org/2020/1057): \"This makes it possible to realize MuSig-DN efficiently using zero-knowledge proof frameworks for arithmetic circuits which support inputs given in Pedersen commitments, e.g., Bulletproofs. \"\r\n\r\nIn other words this adds a cryptographic assumption, as well as additional dependencies to implement said cryptography.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-950132928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 950163967,
      "node_id": "IC_kwDOABII5844oln_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/950163967",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-23T14:52:27Z",
      "updated_at": "2021-10-23T14:53:03Z",
      "author_association": "MEMBER",
      "body": "So the advantages of MuSig-DN over MuSig:\r\n* Stateless signing: signers don't need any memory between signing sessions (either within rounds, or across rounds).\r\n* Compared to MuSig1: one fewer round (but 2-round MuSig2 has the same number of rounds).\r\n\r\nIt's easy to think MuSig-DN also avoids the need for randomness at signing time as well. While that's true on its face, MuSig2 can avoid it too: as the signers need state anyway, and a private key, they can use a counter in their state together with the private key to generate randomness (use H(counter++ || privkey) as RNG).\r\n\r\nThe disadvantages are:\r\n* MuSig-DN is far slower (~1000x) in terms of CPU cost.\r\n* Complicates setup (in addition to participant keys, co-signers also need to know each other's 512-bit host key) compared to 2-round MuSig2 (but 1-round MuSig2 is harder still).\r\n* Implementation complexity (needs arithmetic over two different curves (not secp256k1), needs Bulletproofs or other NIZK proof system, and a relatively complex statement (2030 gates) to prove in it). Also, only very experimental code for MuSig-DN exists; MuSig2 has an implementation that's pretty close to production-ready.\r\n* Additional security assumptions (DDH over two different elliptic curves).\r\n\r\nSo while MuSig-DN is conceptually a nice solution to the problem of having stateful signers (which is definitely annoying, and a risk for unsafe implementations), I don't think the downsides weigh up against it. The additional signing computational cost pretty much puts it pretty out of reach of hardware signing devices, for example. Plus, its only real advantage is a concern about unsafe implementations (which deal incorrectly with signing state) - but it does so by increasing implementation complexity in other ways which also increases risk. With MuSig2, the picture is even less rosy, as the round number advantage is gone too.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-950163967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 950168972,
      "node_id": "IC_kwDOABII5844om2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/950168972",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-23T15:30:40Z",
      "updated_at": "2021-10-23T15:30:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the explanation!\r\n\r\nI will have to think how this could affect systems like Qubes due to the hypervisor, or amnesiac systems like Tails.",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-950168972",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 950694747,
      "node_id": "IC_kwDOABII5844qnNb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/950694747",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-25T09:05:25Z",
      "updated_at": "2021-10-25T09:05:25Z",
      "author_association": "MEMBER",
      "body": "> So while MuSig-DN is conceptually a nice solution to the problem of having stateful signers (which is definitely annoying, and a risk for unsafe implementations), I don't think the downsides weigh up against it. \r\n\r\nAgreed. MuSig-DN (or the more efficient scheme in https://eprint.iacr.org/2021/1055.pdf) is still more in the academic realm. Technically it does its job but it's hard to use in practice. I think we'll need more research to make deterministic nonces in multisig more efficient and simpler to implement if we want something that fits in Bitcoin Core.  ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-950694747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 952101154,
      "node_id": "IC_kwDOABII5844v-ki",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952101154",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T16:19:09Z",
      "updated_at": "2021-10-26T16:19:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> it's also possible I think to support treating agg of xpubs as a new \"xpub\" itself (e.g. agg(xpub1/...,xpub2/...)/*) for example by defining the aggregated chaincode as a hash of the child chaincodes.\r\n\r\nI don't think there's a fundamental problem with that. I opened a [libsecp-zkp PR](https://github.com/ElementsProject/secp256k1-zkp/pull/151) that allows BIP32-tweaking an aggregate public key and signing for it. Luckily, it's not terribly complicated (see the commit that updates the musig example code [here](https://github.com/ElementsProject/secp256k1-zkp/pull/151/commits/8d1ece06a28128ad8810fdf52a1f88d78ce1e7ee)).",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-952101154",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    },
    {
      "event": "commented",
      "id": 976960583,
      "node_id": "IC_kwDOABII5846OzxH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/976960583",
      "actor": {
        "login": "brandonblack",
        "id": 90655836,
        "node_id": "MDQ6VXNlcjkwNjU1ODM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/90655836?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandonblack",
        "html_url": "https://github.com/brandonblack",
        "followers_url": "https://api.github.com/users/brandonblack/followers",
        "following_url": "https://api.github.com/users/brandonblack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brandonblack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brandonblack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brandonblack/subscriptions",
        "organizations_url": "https://api.github.com/users/brandonblack/orgs",
        "repos_url": "https://api.github.com/users/brandonblack/repos",
        "events_url": "https://api.github.com/users/brandonblack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brandonblack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-23T18:11:53Z",
      "updated_at": "2021-11-23T18:11:53Z",
      "author_association": "NONE",
      "body": "I think it's useful to describe the required behaviors in more detail, and with reference to the PSBT roles:\r\n\r\n#### Existing Creator, Updater, and Combiner behaviors...\r\n\r\n#### MuSig2 Round 1\r\n\r\n* PSBT is distributed to all Signers\r\n* Signers generate nonces (either from a monotonic counter and PRF or high quality RNG)\r\n* Signers add their nonces to PSBT\r\n* Combiner merges Signers' PSBTs\r\n* Optional: Combiner runs SignAgg on Signers' nonces \r\n  * Combiner adds aggregated nonce to PSBT\r\n  * Optional: Combiner removes individual Signers' nonces from PSBT\r\n\r\n#### MuSig2 Round 2\r\n\r\n* PSBT is distributed to all Signers\r\n* If PSBT contains individual Signers' nonces\r\n  * If PSBT does not contain aggregate nonce\r\n    * Signers run SignAgg to produce aggregate nonce\r\n  * Optional: Signers run Partial Verification\r\n* Signers run Sign'\r\n* Signers add their partial signatures to PSBT\r\n* Finalizer aggregates partial signatures and nonces\r\n* Finalizer validates final signature\r\n* Finalizer adds final signature to PSBT\r\n\r\n#### Existing Finalizer / Extractor behaviors...",
      "user": {
        "login": "brandonblack",
        "id": 90655836,
        "node_id": "MDQ6VXNlcjkwNjU1ODM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/90655836?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandonblack",
        "html_url": "https://github.com/brandonblack",
        "followers_url": "https://api.github.com/users/brandonblack/followers",
        "following_url": "https://api.github.com/users/brandonblack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brandonblack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brandonblack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brandonblack/subscriptions",
        "organizations_url": "https://api.github.com/users/brandonblack/orgs",
        "repos_url": "https://api.github.com/users/brandonblack/repos",
        "events_url": "https://api.github.com/users/brandonblack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brandonblack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-976960583",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23326"
    }
  ]
}