{
  "type": "issue",
  "issue": {
    "id": 30721356,
    "node_id": "MDU6SXNzdWUzMDcyMTM1Ng==",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3997",
    "number": 3997,
    "state": "closed",
    "state_reason": "completed",
    "title": "crash in CMerkleTx::GetDepthInMainChainINTERNAL()",
    "body": "I've been running bitcoin-qt inside gdb for over a year now, because it used to crash pretty often.  It just crashed for the first time in over 6 months, a week or two after upgrading to the recent release.  I would guess this is a new issue introduced in 0.9.\n\nI built the code myself, from the git v0.9.0 tag, on a 64 bit Linux system.\n\nHere's what gdb said:\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\nCMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffb77d7ac0, \n    pindexRet=@0x7fffffffd148: 0x555556ca0120) at main.cpp:884\n884     if (!pindex || !chainActive.Contains(pindex))\n(gdb) where\n#0  CMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffb77d7ac0, \n    pindexRet=@0x7fffffffd148: 0x555556ca0120) at main.cpp:884\n#1  0x000055555571dca6 in CMerkleTx::GetDepthInMainChain (\n    this=this@entry=0x7fffb77d7ac0, pindexRet=@0x7fffffffd148: 0x555556ca0120)\n    at main.cpp:901\n#2  0x00005555556b632d in GetDepthInMainChain (this=0x7fffb77d7ac0)\n    at ../../src/main.h:466\n#3  CWalletTx::IsTrusted (this=this@entry=0x7fffb77d7ac0)\n    at ../../src/wallet.h:665\n#4  0x00005555556b40cd in TransactionRecord::updateStatus (\n    this=this@entry=0x555556c00ca0, wtx=...) at transactionrecord.cpp:167\n#5  0x00005555556933cd in TransactionTablePriv::index (this=<optimized out>, \n    idx=idx@entry=6314) at transactiontablemodel.cpp:201\n#6  0x000055555569231e in TransactionTableModel::index (this=0x555556a5b340, \n    row=6314, column=0, parent=...) at transactiontablemodel.cpp:615\n#7  0x000055555568f398 in TransactionFilterProxy::filterAcceptsRow (this=\n    0x55555625ee30, sourceRow=6314, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n```\n\nand here's debug.log (it looks like bitcoin-qt was only just getting started):\n\n```\n2014-03-31 04:41:51 Bitcoin version v0.9.0-1-gd824858-beta (2014-03-20 09:19:05 -0700)\n2014-03-31 04:41:51 Using OpenSSL version OpenSSL 1.0.1c 10 May 2012\n2014-03-31 04:41:51 Default data directory /home/chris/.bitcoin\n2014-03-31 04:41:51 Using data directory /home/chris/.bitcoin\n2014-03-31 04:41:51 Using at most 125 connections (1024 file descriptors available)\n2014-03-31 04:41:51 Using 2 threads for script verification\n2014-03-31 04:41:51 Using wallet wallet.dat\n2014-03-31 04:41:51 init message: Verifying wallet...\n2014-03-31 04:41:51 dbenv.open LogDir=/home/chris/.bitcoin/database ErrorFile=/home/chris/.bitcoin/db.log\n2014-03-31 04:42:16 Bound to [::]:8333\n2014-03-31 04:42:16 Bound to 0.0.0.0:8333\n2014-03-31 04:42:16 init message: Loading block index...\n2014-03-31 04:42:16 Opening LevelDB in /home/chris/.bitcoin/blocks/index\n2014-03-31 04:42:17 Opened LevelDB successfully\n2014-03-31 04:42:17 Opening LevelDB in /home/chris/.bitcoin/chainstate\n2014-03-31 04:42:18 Opened LevelDB successfully\n2014-03-31 04:42:36 LoadBlockIndexDB(): last block file = 89\n2014-03-31 04:42:36 LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=338, size=67010312, heights=292948...293280, time=2014-03-28...2014-03-30)\n2014-03-31 04:42:36 LoadBlockIndexDB(): transaction index disabled\n2014-03-31 04:42:36 LoadBlockIndexDB(): hashBestChain=000000000000000052d11e4b468cf8e66152f4687ccf6f7b24a4eb8c7c183bbb height=293280 date=2014-03-30 20:05:47 progress=0.998126\n2014-03-31 04:42:36 init message: Verifying blocks...\n2014-03-31 04:42:36 Verifying last 288 blocks at level 2\n2014-03-31 04:43:30 No coin database inconsistencies in last 0 blocks (0 transactions)\n2014-03-31 04:43:30  block index           74479ms\n2014-03-31 04:43:30 init message: Loading wallet...\n2014-03-31 04:44:50 nFileVersion = 90000\n2014-03-31 04:44:50 Keys: 36667 plaintext, 0 encrypted, 0 w/ metadata, 36667 total\n2014-03-31 04:44:50  wallet                80181ms\n2014-03-31 04:44:50 init message: Loading addresses...\n2014-03-31 04:44:50 Loaded 18722 addresses from peers.dat  118ms\n2014-03-31 04:44:50 mapBlockIndex.size() = 293606\n2014-03-31 04:44:50 nBestHeight = 293280\n2014-03-31 04:44:50 setKeyPool.size() = 4996\n2014-03-31 04:44:50 mapWallet.size() = 30432\n2014-03-31 04:44:50 mapAddressBook.size() = 19485\n2014-03-31 04:44:50 ext-ip thread start\n2014-03-31 04:44:50 dnsseed thread start\n2014-03-31 04:44:50 net thread start\n2014-03-31 04:44:50 Loading addresses from DNS seeds (could take a while)\n2014-03-31 04:44:50 addcon thread start\n2014-03-31 04:44:50 msghand thread start\n2014-03-31 04:44:50 opencon thread start\n2014-03-31 04:44:50 dumpaddr thread start\n2014-03-31 04:44:50 init message: Done loading\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 GetMyExternalIP() received [a.b.c.d] a.b.c.d:0\n2014-03-31 04:44:51 GetMyExternalIP() returned a.b.c.d\n2014-03-31 04:44:51 AddLocal(a.b.c.d:8333,4)\n2014-03-31 04:44:51 ext-ip thread exit\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 receive version message: /Satoshi:0.8.6/: version 70001, blocks=293333, us=a.b.c.d:9089, them=e.f.g.h:8333, peer=e.f.g.h:8333\n2014-03-31 04:44:51 Added time data, samples 2, offset -7 (+0 minutes)\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 Initialization result: 1\n2014-03-31 04:44:53 Pre-allocating up to position 0x5000000 in blk00089.dat\n2014-03-31 04:45:08 118 addresses found from DNS seeds\n2014-03-31 04:45:08 dnsseed thread exit\n```\n",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 32,
    "closed_at": "2014-04-22T11:35:47Z",
    "created_at": "2014-04-02T20:16:29Z",
    "updated_at": "2021-09-08T12:29:01Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 108057268,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEwODA1NzI2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/108057268",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-02T20:20:40Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "commented",
      "id": 39379535,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzc5NTM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39379535",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-02T20:30:40Z",
      "updated_at": "2014-04-02T20:30:40Z",
      "author_association": "MEMBER",
      "body": "This looks weird. Could be a synchronization problem.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-39379535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 39379870,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzc5ODcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39379870",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-02T20:33:55Z",
      "updated_at": "2014-04-02T20:33:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "I also ran a:\n\n```\n(gdb) thread apply all bt full\n```\n\nbut the output contains a lot of binary data, so I'm not sure it's safe to post it here.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-39379870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 39410510,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDEwNTEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39410510",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-03T03:59:05Z",
      "updated_at": "2014-04-03T03:59:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "The wallet.dat is an old \"hot wallet\" from the Just-Dice server.  I retired it when it got too big.  It's about 157MB.  I don't know if any of that is relevant.\n\nRestarting bitcoin-qt went fine however.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-39410510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 40124253,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTI0MjUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40124253",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-10T18:55:41Z",
      "updated_at": "2014-04-10T18:55:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "I just had the same crash again.\n\nHere's the backtrace:\n\n```\n[New Thread 0x7fff86f5d700 (LWP 20786)]\n[Thread 0x7fffbccc7700 (LWP 20776) exited]\n[New Thread 0x7fff8670c700 (LWP 20787)]\n\nProgram received signal SIGSEGV, Segmentation fault.\nCMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffab600f90, \n    pindexRet=@0x7fffffffd448: 0x555556bb0120) at main.cpp:884\n884     if (!pindex || !chainActive.Contains(pindex))\n(gdb) where\n#0  CMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffab600f90, \n    pindexRet=@0x7fffffffd448: 0x555556bb0120) at main.cpp:884\n#1  0x000055555571dca6 in CMerkleTx::GetDepthInMainChain (\n    this=this@entry=0x7fffab600f90, pindexRet=@0x7fffffffd448: 0x555556bb0120)\n    at main.cpp:901\n#2  0x00005555556b632d in GetDepthInMainChain (this=0x7fffab600f90)\n    at ../../src/main.h:466\n#3  CWalletTx::IsTrusted (this=this@entry=0x7fffab600f90)\n    at ../../src/wallet.h:665\n#4  0x00005555556b40cd in TransactionRecord::updateStatus (\n    this=this@entry=0x5555571f9720, wtx=...) at transactionrecord.cpp:167\n#5  0x00005555556933cd in TransactionTablePriv::index (this=<optimized out>, \n    idx=idx@entry=29366) at transactiontablemodel.cpp:201\n#6  0x000055555569231e in TransactionTableModel::index (this=0x555556a62f70, \n    row=29366, column=0, parent=...) at transactiontablemodel.cpp:615\n#7  0x000055555568f398 in TransactionFilterProxy::filterAcceptsRow (this=\n    0x5555572e0940, sourceRow=29366, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n```\n\nand here's the debug.log:\n\n```\n2014-04-10 18:43:25 Bitcoin version v0.9.0-1-gd824858-beta (2014-03-20 09:19:05 -0700)\n2014-04-10 18:43:25 Using OpenSSL version OpenSSL 1.0.1e 11 Feb 2013\n2014-04-10 18:43:25 Default data directory /home/chris/.bitcoin\n2014-04-10 18:43:25 Using data directory /home/chris/.bitcoin\n2014-04-10 18:43:25 Using at most 125 connections (1024 file descriptors available)\n2014-04-10 18:43:25 Using 4 threads for script verification\n2014-04-10 18:43:25 Using wallet wallet.dat\n2014-04-10 18:43:25 init message: Verifying wallet...\n2014-04-10 18:43:25 dbenv.open LogDir=/home/chris/.bitcoin/database ErrorFile=/home/chris/.bitcoin/db.log\n2014-04-10 18:43:31 Bound to [::]:8333\n2014-04-10 18:43:31 Bound to 0.0.0.0:8333\n2014-04-10 18:43:31 init message: Loading block index...\n2014-04-10 18:43:31 Opening LevelDB in /home/chris/.bitcoin/blocks/index\n2014-04-10 18:43:31 Opened LevelDB successfully\n2014-04-10 18:43:31 Opening LevelDB in /home/chris/.bitcoin/chainstate\n2014-04-10 18:43:33 Opened LevelDB successfully\n2014-04-10 18:43:39 LoadBlockIndexDB(): last block file = 91\n2014-04-10 18:43:39 LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=557, size=134128178, heights=294301...294855, time=2014-04-05...2014-04-08)\n2014-04-10 18:43:39 LoadBlockIndexDB(): transaction index disabled\n2014-04-10 18:43:39 LoadBlockIndexDB(): hashBestChain=00000000000000001ace9b38d37f391b04e9e094dd22e2f141a6d01b955907b0 height=294855 date=2014-04-08 23:28:27 progress=0.991102\n2014-04-10 18:43:39 init message: Verifying blocks...\n2014-04-10 18:43:39 Verifying last 288 blocks at level 2\n2014-04-10 18:43:51 No coin database inconsistencies in last 0 blocks (0 transactions)\n2014-04-10 18:43:51  block index           20269ms\n2014-04-10 18:43:51 init message: Loading wallet...\n2014-04-10 18:46:18 nFileVersion = 90000\n2014-04-10 18:46:18 Keys: 36667 plaintext, 0 encrypted, 0 w/ metadata, 36667 total\n2014-04-10 18:46:19  wallet               147566ms\n2014-04-10 18:46:19 init message: Loading addresses...\n2014-04-10 18:46:19 Loaded 18216 addresses from peers.dat  151ms\n2014-04-10 18:46:19 mapBlockIndex.size() = 295183\n2014-04-10 18:46:19 nBestHeight = 294855\n2014-04-10 18:46:19 setKeyPool.size() = 4996\n2014-04-10 18:46:19 mapWallet.size() = 30434\n2014-04-10 18:46:19 mapAddressBook.size() = 19485\n2014-04-10 18:46:19 ext-ip thread start\n2014-04-10 18:46:19 dnsseed thread start\n2014-04-10 18:46:19 Loading addresses from DNS seeds (could take a while)\n2014-04-10 18:46:19 net thread start\n2014-04-10 18:46:19 addcon thread start\n2014-04-10 18:46:19 opencon thread start\n2014-04-10 18:46:19 msghand thread start\n2014-04-10 18:46:19 dumpaddr thread start\n2014-04-10 18:46:19 init message: Done loading\n2014-04-10 18:46:19 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-04-10 18:46:20 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-04-10 18:46:20 GetMyExternalIP() received [a.b.c.d] a.b.c.d:0\n2014-04-10 18:46:20 GetMyExternalIP() returned a.b.c.d\n2014-04-10 18:46:20 AddLocal(a.b.c.d:8333,4)\n2014-04-10 18:46:20 ext-ip thread exit\n2014-04-10 18:46:20 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-04-10 18:46:20 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-04-10 18:46:20 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-04-10 18:46:20 Initialization result: 1\n2014-04-10 18:46:21 receive version message: /Satoshi:0.8.5/: version 70001, blocks=295149, us=a.b.c.d:41277, them=e.f.g.h:8333, peer=e.f.g.h:8333\n2014-04-10 18:46:21 Added time data, samples 2, offset +2 (+0 minutes)\n2014-04-10 18:46:26 Leaving block file 91: CBlockFileInfo(blocks=557, size=134128178, heights=294301...294855, time=2014-04-05...2014-04-08)\n2014-04-10 18:46:26 Pre-allocating up to position 0x1000000 in blk00092.dat\n2014-04-10 18:46:28 Pre-allocating up to position 0x100000 in rev00092.dat\n2014-04-10 18:46:28 UpdateTip: new best=00000000000000005bc86c2eb08ffb68d420c895b59cc98019cad366e54ad945  height=294856  log2_work=77.845013  tx=36485528  date=2014-04-08 23:55:49 progress=0.991186\nRequesting initialize\nRunning AppInit2 in thread\n2014-04-10 18:47:21 \n```\n\nThere's mention of dust transactions again.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40124253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "labeled",
      "id": 110794375,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDExMDc5NDM3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/110794375",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-11T05:53:00Z",
      "label": {
        "name": "Priority High",
        "color": "e10c02"
      }
    },
    {
      "event": "commented",
      "id": 40173160,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTczMTYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40173160",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-11T06:00:31Z",
      "updated_at": "2014-04-11T06:00:31Z",
      "author_association": "MEMBER",
      "body": "Bumping this to high priority.\n\nGiven the backtrace I doubt it has anything to do with dust transactions, though this is of course not impossible (possible scenario: wallet tries to accept unconfirmed dust transaction to mempool, this fails, wallet keeps some pointer at NULL. Gdb is not very helpful there, note that the value of 'this' is conveniently not shown in the backtrace).\n\nBut more likely still is that there is a small time at which chainActive is invalid. I wonder if we acquire the right mutexes there.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40173160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 40272965,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjcyOTY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40272965",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T06:15:14Z",
      "updated_at": "2014-04-12T06:15:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Is there anything I can usefully type at the (gdb) prompt at the point of the crash?  I have the prompt in a terminal now, having seen the crash for a 3rd time.\n\nI tried a few things, but I've no idea what I'm doing (as is apparent from the log below):\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\nCMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffaf4ca830, \n    pindexRet=@0x7fffffffd348: 0x7fffffff0120) at main.cpp:884\n884     if (!pindex || !chainActive.Contains(pindex))\n(gdb) where\n#0  CMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffaf4ca830, \n    pindexRet=@0x7fffffffd348: 0x7fffffff0120) at main.cpp:884\n#1  0x00005555556d2d84 in CMerkleTx::GetDepthInMainChain (\n    this=this@entry=0x7fffaf4ca830, pindexRet=@0x7fffffffd348: 0x7fffffff0120)\n    at main.cpp:901\n(gdb) p pindex\n$1 = (CBlockIndex *) 0x7fffce1d27c0\n(gdb) p *pindex\n$2 = {phashBlock = 0x7fffce1d2870, pprev = 0x7fffce76e280, nHeight = 278865, \n  nFile = 67, nDataPos = 35780181, nUndoPos = 4688225, \n  nChainWork = {<base_uint<256u>> = {pn = {3983914728, 3086537670, 2818, 0, \n        0, 0, 0, 0}}, <No data fields>}, nTx = 657, nChainTx = 30494343, \n  nStatus = 29, nVersion = 2, hashMerkleRoot = {<base_uint<256u>> = {pn = {\n        2507042385, 3851559055, 2920226300, 340783779, 2588707176, \n        2242370894, 447711919, 1858711587}}, <No data fields>}, \n  nTime = 1388979213, nBits = 419628831, nNonce = 3562446643, nSequenceId = 0}\n(gdb) p this\n$3 = (const CMerkleTx * const) 0x7fffaf4ca830\n(gdb) p *this\n$4 = {<CTransaction> = {static nMinTxFee = 10000, \n    static nMinRelayTxFee = 1000, static CURRENT_VERSION = 1, nVersion = 1, \n    vin = {<std::_Vector_base<CTxIn, std::allocator<CTxIn> >> = {\n        _M_impl = {<std::allocator<CTxIn>> = {<__gnu_cxx::new_allocator<CTxIn>> = {<No data fields>}, <No data fields>}, _M_start = 0x7fffaf4ca960, \n          _M_finish = 0x7fffaf4ca9f0, \n          _M_end_of_storage = 0x7fffaf4ca9f0}}, <No data fields>}, \n    vout = {<std::_Vector_base<CTxOut, std::allocator<CTxOut> >> = {\n        _M_impl = {<std::allocator<CTxOut>> = {<__gnu_cxx::new_allocator<CTxOut>> = {<No data fields>}, <No data fields>}, _M_start = 0x7fffaf4caa70, \n          _M_finish = 0x7fffaf4caa90, \n          _M_end_of_storage = 0x7fffaf4caa90}}, <No data fields>}, \n    nLockTime = 0}, hashBlock = {<base_uint<256u>> = {pn = {1286607707, \n        3584892090, 1270973470, 1740750181, 949783574, 2764214055, 0, \n        0}}, <No data fields>}, \n  vMerkleBranch = {<std::_Vector_base<uint256, std::allocator<uint256> >> = {\n      _M_impl = {<std::allocator<uint256>> = {<__gnu_cxx::new_allocator<uint256>> = {<No data fields>}, <No data fields>}, _M_start = 0x7fffaf4caaa0, \n        _M_finish = 0x7fffaf4cabe0, \n        _M_end_of_storage = 0x7fffaf4cabe0}}, <No data fields>}, \n  nIndex = 587, fMerkleVerified = true}\n(gdb) p chainActive\n$5 = {\n  vChain = {<std::_Vector_base<CBlockIndex*, std::allocator<CBlockIndex*> >> = {\n      _M_impl = {<std::allocator<CBlockIndex*>> = {<__gnu_cxx::new_allocator<CBlockIndex*>> = {<No data fields>}, <No data fields>}, _M_start = 0x7fff959fe900, \n        _M_finish = 0x7fff95c3f6c8, \n        _M_end_of_storage = 0x7fff95e80480}}, <No data fields>}}\n(gdb) p chainActive.Contains(pindex)\nCannot evaluate function -- may be inlined\n(gdb) p pindex->nHeight\n$6 = 278865\n(gdb) p (*chainActive)[278865]\nCannot resolve function operator* to any overloaded instance\n(gdb) p (chainActive)[278865]\nCould not find operator[].\n(gdb) p chainActive[278865]\nCould not find operator[].\n(gdb) p *chainActive[278865]\nCould not find operator[].\n(gdb) p chainActive.vChain\n$7 = {<std::_Vector_base<CBlockIndex*, std::allocator<CBlockIndex*> >> = {\n    _M_impl = {<std::allocator<CBlockIndex*>> = {<__gnu_cxx::new_allocator<CBlockIndex*>> = {<No data fields>}, <No data fields>}, \n      _M_start = 0x7fff959fe900, _M_finish = 0x7fff95c3f6c8, \n      _M_end_of_storage = 0x7fff95e80480}}, <No data fields>}\n(gdb) p chainActive.vChain[278865]\nCould not find operator[].\n(gdb) p *(chainActive.vChain)\nCannot resolve function operator* to any overloaded instance\n(gdb) p chainActive.vChain.size()\nCannot evaluate function -- may be inlined\n(gdb) p chainActive.vChain->size()\nCannot resolve method std::vector<CBlockIndex*, std::allocator<CBlockIndex*> >::size to any overloaded instance\n(gdb) p chainActive.vChain\n$8 = {<std::_Vector_base<CBlockIndex*, std::allocator<CBlockIndex*> >> = {\n    _M_impl = {<std::allocator<CBlockIndex*>> = {<__gnu_cxx::new_allocator<CBlockIndex*>> = {<No data fields>}, <No data fields>}, \n      _M_start = 0x7fff959fe900, _M_finish = 0x7fff95c3f6c8, \n      _M_end_of_storage = 0x7fff95e80480}}, <No data fields>}\n(gdb) p chainActive.vChain.empty()\nCannot evaluate function -- may be inlined\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40272965",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "milestoned",
      "id": 111165731,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDExMTE2NTczMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/111165731",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T13:50:18Z",
      "milestone": {
        "title": "0.9.2"
      }
    },
    {
      "event": "commented",
      "id": 40280871,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgwODcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40280871",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T13:53:00Z",
      "updated_at": "2014-04-12T13:53:00Z",
      "author_association": "MEMBER",
      "body": "Someone on IRC also reported crashes at startup with 0.9.0, at the first updateTip with a large wallet. No traceback, but is likely to be the same issue.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40280871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 40281168,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgxMTY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40281168",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T14:05:50Z",
      "updated_at": "2014-04-12T14:05:50Z",
      "author_association": "MEMBER",
      "body": "@dooglus as you're compiling the source yourself, can you try replacing line 196 in transactiontablemodel.cpp from:\n\n``` c++\nLOCK(wallet->cs_wallet);\n```\n\nto \n\n``` c++\nLOCK2(cs_main, wallet->cs_wallet);\n```\n\nI'm fairly confident that that will solve this race.\n(if this works, I'm going to add lockheld assertions over the place to see if there are other cases where, indirectly, main chainActive.\\* is called without the main lock)\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40281168",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "mentioned",
      "id": 111166720,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTExMTY2NzIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/111166720",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T14:05:50Z"
    },
    {
      "event": "subscribed",
      "id": 111166721,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExMTE2NjcyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/111166721",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T14:05:50Z"
    },
    {
      "event": "commented",
      "id": 40285200,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg1MjAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40285200",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T16:40:06Z",
      "updated_at": "2014-04-12T16:40:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "I sure can.\n\nShould I just quit the previous bitcoin-qt?  It's currently at a (gdb) prompt waiting for you to give me stuff to ask it.\n\nAlso, note that it took me maybe 10 attempts yesterday to get the crash to happen, so if it doesn't happen today it doesn't necessarily mean the bug is fixed.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40285200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 40285395,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg1Mzk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40285395",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T16:47:55Z",
      "updated_at": "2014-04-12T16:47:55Z",
      "author_association": "MEMBER",
      "body": "Yes, let's quit and re-try. I wouldn't know how to check this out on the gdb prompt. Likely the chainActive data structure is inconsistent in some way, but it takes knowledge about the internal working of libstdc++ to find out exactly what. It's nothing obvious, and if gdb hasn't optimized all the debugging info away...\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40285395",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 40285827,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg1ODI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40285827",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-12T17:05:52Z",
      "updated_at": "2014-04-12T17:08:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "I made the change you suggested, rebuilt, and it crashed the very first time I ran it.\n\nThe backtrace is a little different.  Whereas before, `CWalletTx::IsTrusted` (wallet.h:665, #3 in the trace) was being called from `TransactionRecord::updateStatus` (transactionrecord.cpp:167), now it is called from `CWallet::GetBalance` (walletmodel.cpp:66)\n\nHere's the new backtrace:\n\n```\n#0  CMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffb198b8f0, \n    pindexRet=@0x7fffffffd628: 0x7fffda16cd90) at main.cpp:884\n#1  0x00005555556d2c94 in CMerkleTx::GetDepthInMainChain (\n    this=this@entry=0x7fffb198b8f0, pindexRet=@0x7fffffffd628: 0x7fffda16cd90)\n    at main.cpp:901\n#2  0x0000555555676f0d in GetDepthInMainChain (this=0x7fffb198b8f0)\n    at ../../src/main.h:466\n#3  CWalletTx::IsTrusted (this=0x7fffb198b8f0) at ../../src/wallet.h:665\n#4  0x00005555557bbebc in CWallet::GetBalance (this=0x7fffb0f3ec80)\n    at wallet.cpp:966\n#5  0x000055555560bf19 in WalletModel::getBalance (this=this@entry=\n    0x5555567590b0, coinControl=coinControl@entry=0x0) at walletmodel.cpp:66\n#6  0x000055555564ce91 in SendCoinsDialog::setModel (this=0x5555571d7850, \n    model=model@entry=0x5555567590b0) at sendcoinsdialog.cpp:93\n#7  0x000055555561ebb1 in WalletView::setWalletModel (this=0x5555571982a0, \n    walletModel=0x5555567590b0) at walletview.cpp:113\n#8  0x000055555560ae17 in WalletFrame::addWallet (this=0x555556279540, \n    name=..., walletModel=walletModel@entry=0x5555567590b0)\n    at walletframe.cpp:48\n#9  0x00005555555d0129 in BitcoinGUI::addWallet (this=<optimized out>, \n    name=..., walletModel=walletModel@entry=0x5555567590b0)\n    at bitcoingui.cpp:428\n#10 0x00005555555bf4d7 in BitcoinApplication::initializeResult (\n    this=this@entry=0x7fffffffe2e0, retval=1) at bitcoin.cpp:400\n#11 0x00005555555bf88f in BitcoinApplication::qt_static_metacall (\n    _o=0x7fffffffe2e0, _id=<optimized out>, _a=0x7fffb02f0170, \n    _c=<optimized out>) at bitcoin.moc:169\n#12 0x00007ffff61f3dce in QObject::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#13 0x00007ffff6a58ea3 in QApplication::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#14 0x00007ffff6a53dfc in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#15 0x00007ffff6a5a470 in QApplication::notify(QObject*, QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#16 0x00007ffff61db8bd in QCoreApplication::notifyInternal(QObject*, QEvent*)\n    () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#17 0x00007ffff61dee1f in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40285827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 40310177,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzEwMTc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40310177",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-13T15:24:01Z",
      "updated_at": "2014-04-13T15:25:57Z",
      "author_association": "MEMBER",
      "body": "It is promising that the crash now happens in another place where the same problem exists.\n\nWould be safest to replace all places where the GUI locks the wallet by LOCK2(main ,wallet).\n\nEdit: hm, changing in it the GUI is not enough: CWallet::GetBalance itself locks the wallet, but not main, it should be changed as well...\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40310177",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "referenced",
      "id": 111946606,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExMTk0NjYwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/111946606",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b45e335dbf9099e6ba62f14902edd9047ed75d83",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/b45e335dbf9099e6ba62f14902edd9047ed75d83",
      "created_at": "2014-04-15T15:42:31Z"
    },
    {
      "event": "commented",
      "id": 40497730,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk3NzMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40497730",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-15T15:43:48Z",
      "updated_at": "2014-04-15T15:43:48Z",
      "author_association": "MEMBER",
      "body": "#4058 likely solves this issue\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-40497730",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "referenced",
      "id": 113030275,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExMzAzMDI3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/113030275",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "55a1db4fa2cf62b9766ef382c1e14b3ecbdf67fe",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/55a1db4fa2cf62b9766ef382c1e14b3ecbdf67fe",
      "created_at": "2014-04-18T10:54:30Z"
    },
    {
      "event": "closed",
      "id": 113831211,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTEzODMxMjEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/113831211",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-22T11:35:47Z"
    },
    {
      "event": "commented",
      "id": 41201250,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjAxMjUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41201250",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T19:03:23Z",
      "updated_at": "2014-04-23T19:03:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm still running the version that you mentioned 8 days ago:\n\n> #4058 likely solves this issue\n\nand just had it lock up:\n\n```\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\n5735c6b22004430f5e2f62933153b5a821417389b89fcdf7bf3c50f4a8a01fd8\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\n01d409dac77df5a9ba0e6793dac1e77109d23985eec0d68a638190862645a1c9\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\nerror: {\"code\":-4,\"message\":\"Insufficient funds\"}\nchris@chris:~/.bitcoin$ bc listunspent\n[lots of output]\nchris@chris:~/.bitcoin$ bc listunspent\n[no output, just hung]\n```\n\nThe end of debug.log shows:\n\n```\n2014-04-23 19:00:50 ERROR: AcceptToMemoryPool : inputs already spent\n2014-04-23 19:02:11 ResendWalletTransactions()\n2014-04-23 19:02:11 Relaying wtx 0f2b67658e43d518ad37e2d569fcbc414d90487f2ed7e10b442f8c9a2bee9b63\n2014-04-23 19:02:11 Relaying wtx 3cc79db066abc7a5582669fbd5b0c855975c4f2537ece52370c2c6eb099f5b85\n2014-04-23 19:02:11 Relaying wtx d416993c56c2e7d9e753f902ce04ce1b8c31b8cfc14fe8e17603b36cdfadeedc\n```\n\nI don't know if that means we're acquiring too many locks now, and trying to acquire the same one twice, causing a deadlock.\n\nI hit control-c in the gdb window, and got:\n\n```\nProgram received signal SIGINT, Interrupt.\n__lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n135 ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\n(gdb) where\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x0000555555664d54 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at ../../src/sync.h:118\n#7  CMutexLock (fTry=false, nLine=196, \n    pszFile=0x555555afb29d \"transactiontablemodel.cpp\", \n    pszName=<optimized out>, mutexIn=..., this=<synthetic pointer>)\n    at ../../src/sync.h:139\n#8  TransactionTablePriv::index (this=0x5555566c70d0, idx=idx@entry=23040)\n    at transactiontablemodel.cpp:196\n#9  0x0000555555663a70 in TransactionTableModel::index (this=0x555556859770, \n    row=23040, column=0, parent=...) at transactiontablemodel.cpp:615\n#10 0x0000555555660d5d in TransactionFilterProxy::filterAcceptsRow (this=\n    0x555557aad020, sourceRow=23040, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n```\n\nI ran a 'where' on all threads, and got this.  Hopefully it will tell you why it's frozen:\n\n```\n(gdb) thread apply all where\n\nThread 25 (Thread 0x7fff7d799700 (LWP 6128)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x0000555555849bfb in BGThread (this=0x7fffc81614e0)\n    at util/env_posix.cc:563\n#2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (\n    arg=0x7fffc81614e0) at util/env_posix.cc:510\n#3  0x00007ffff58c9182 in start_thread (arg=0x7fff7d799700)\n    at pthread_create.c:312\n#4  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 24 (Thread 0x7fff82da3700 (LWP 6126)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x00005555557e19d9 in MilliSleep (n=500) at util.h:97\n#6  ThreadFlushWalletDB (strFile=...) at walletdb.cpp:782\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fff82da3700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 23 (Thread 0x7fff8b7ae700 (LWP 6125)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555573b1a6 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=852, \n    pszFile=0x555555b4f980 \"rpcserver.cpp\", pszName=<optimized out>, \n    mutexIn=..., this=<synthetic pointer>) at sync.h:139\n#8  CRPCTable::execute (this=this@entry=0x555555ebd9e0 <tableRPC>, \n    strMethod=..., params=...) at rpcserver.cpp:852\n#9  0x000055555573dd78 in ServiceConnection (conn=conn@entry=0x7fff9c0018f0)\n    at rpcserver.cpp:797\n#10 0x000055555573eb50 in RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > (acceptor=..., context=..., \n    fUseSSL=<optimized out>, conn=0x7fff9c0018f0, error=...)\n    at rpcserver.cpp:495\n#11 0x000055555574383a in operator()<void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, const boost::system::error_code&), boost::_bi::list1<const boost::system::error_code&> > (\n    f=@0x7fff8b7adbf0: 0x55555573e940 <RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> >(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&)>, a=<synthetic pointer>, \n    this=0x7fff8b7adbf8) at /usr/include/boost/bind/bind.hpp:525\n#12 operator()<boost::system::error_code> (a1=..., this=0x7fff8b7adbf0)\n    at /usr/include/boost/bind/bind_template.hpp:47\n#13 operator() (this=0x7fff8b7adbf0)\n    at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#14 asio_handler_invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code> > (\n    function=<error reading variable: access outside bounds of object referenced via synthetic pointer>)\n    at /usr/include/boost/asio/handler_invoke_hook.hpp:64\n#15 invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code>, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > > (context=..., function=...)\n    at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#16 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > >::do_complete (owner=0x7fffa91a1c30, base=<optimized out>)\n    at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n#17 0x000055555574518d in complete (bytes_transferred=0, ec=..., owner=..., \n    this=<optimized out>)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#18 boost::asio::detail::epoll_reactor::descriptor_state::do_complete (\n    owner=0x7fffa91a1c30, base=0x7fffa91b7030, ec=..., \n    bytes_transferred=<optimized out>)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:651\n#19 0x000055555574678e in complete (bytes_transferred=1, ec=..., owner=..., \n    this=0x7fffa91b7030)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#20 do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91a1c30)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:384\n#21 boost::asio::detail::task_io_service::run (this=0x7fffa91a1c30, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#22 0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf8dda10)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#23 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#24 0x00007ffff58c9182 in start_thread (arg=0x7fff8b7ae700)\n    at pthread_create.c:312\n#25 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 22 (Thread 0x7fff8bfff700 (LWP 6124)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555573b1a6 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=852, \n    pszFile=0x555555b4f980 \"rpcserver.cpp\", pszName=<optimized out>, \n    mutexIn=..., this=<synthetic pointer>) at sync.h:139\n#8  CRPCTable::execute (this=this@entry=0x555555ebd9e0 <tableRPC>, \n    strMethod=..., params=...) at rpcserver.cpp:852\n#9  0x000055555573dd78 in ServiceConnection (conn=conn@entry=0x7fff9c01e030)\n    at rpcserver.cpp:797\n#10 0x000055555573eb50 in RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > (acceptor=..., context=..., \n    fUseSSL=<optimized out>, conn=0x7fff9c01e030, error=...)\n    at rpcserver.cpp:495\n#11 0x000055555574383a in operator()<void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, const boost::system::error_code&), boost::_bi::list1<const boost::system::error_code&> > (\n    f=@0x7fff8bffebf0: 0x55555573e940 <RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> >(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&)>, a=<synthetic pointer>, \n    this=0x7fff8bffebf8) at /usr/include/boost/bind/bind.hpp:525\n#12 operator()<boost::system::error_code> (a1=..., this=0x7fff8bffebf0)\n    at /usr/include/boost/bind/bind_template.hpp:47\n#13 operator() (this=0x7fff8bffebf0)\n    at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#14 asio_handler_invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code> > (\n    function=<error reading variable: access outside bounds of object referenced via synthetic pointer>)\n    at /usr/include/boost/asio/handler_invoke_hook.hpp:64\n#15 invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code>, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > > (context=..., function=...)\n    at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#16 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > >::do_complete (owner=0x7fffa91a1c30, base=<optimized out>)\n    at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n#17 0x000055555574518d in complete (bytes_transferred=0, ec=..., owner=..., \n    this=<optimized out>)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#18 boost::asio::detail::epoll_reactor::descriptor_state::do_complete (\n    owner=0x7fffa91a1c30, base=0x7fffa91b7030, ec=..., \n    bytes_transferred=<optimized out>)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:651\n#19 0x000055555574678e in complete (bytes_transferred=1, ec=..., owner=..., \n    this=0x7fffa91b7030)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#20 do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91a1c30)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:384\n#21 boost::asio::detail::task_io_service::run (this=0x7fffa91a1c30, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#22 0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf8dda10)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#23 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#24 0x00007ffff58c9182 in start_thread (arg=0x7fff8bfff700)\n    at pthread_create.c:312\n#25 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 21 (Thread 0x7fffa0c13700 (LWP 6123)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555573b1a6 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=852, \n    pszFile=0x555555b4f980 \"rpcserver.cpp\", pszName=<optimized out>, \n    mutexIn=..., this=<synthetic pointer>) at sync.h:139\n#8  CRPCTable::execute (this=this@entry=0x555555ebd9e0 <tableRPC>, \n    strMethod=..., params=...) at rpcserver.cpp:852\n#9  0x000055555573dd78 in ServiceConnection (conn=conn@entry=0x7fff74000960)\n    at rpcserver.cpp:797\n#10 0x000055555573eb50 in RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > (acceptor=..., context=..., \n    fUseSSL=<optimized out>, conn=0x7fff74000960, error=...)\n    at rpcserver.cpp:495\n#11 0x000055555574383a in operator()<void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, const boost::system::error_code&), boost::_bi::list1<const boost::system::error_code&> > (\n    f=@0x7fffa0c12bf0: 0x55555573e940 <RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> >(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&)>, a=<synthetic pointer>, \n    this=0x7fffa0c12bf8) at /usr/include/boost/bind/bind.hpp:525\n#12 operator()<boost::system::error_code> (a1=..., this=0x7fffa0c12bf0)\n    at /usr/include/boost/bind/bind_template.hpp:47\n#13 operator() (this=0x7fffa0c12bf0)\n    at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#14 asio_handler_invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code> > (\n    function=<error reading variable: access outside bounds of object referenced via synthetic pointer>)\n    at /usr/include/boost/asio/handler_invoke_hook.hpp:64\n#15 invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code>, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > > (context=..., function=...)\n    at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#16 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > >::do_complete (owner=0x7fffa91a1c30, base=<optimized out>)\n    at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n#17 0x000055555574518d in complete (bytes_transferred=0, ec=..., owner=..., \n    this=<optimized out>)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#18 boost::asio::detail::epoll_reactor::descriptor_state::do_complete (\n    owner=0x7fffa91a1c30, base=0x7fffa91b7030, ec=..., \n    bytes_transferred=<optimized out>)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:651\n#19 0x000055555574678e in complete (bytes_transferred=1, ec=..., owner=..., \n    this=0x7fffa91b7030)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#20 do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91a1c30)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:384\n#21 boost::asio::detail::task_io_service::run (this=0x7fffa91a1c30, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#22 0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf8dda10)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#23 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#24 0x00007ffff58c9182 in start_thread (arg=0x7fffa0c13700)\n    at pthread_create.c:312\n#25 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 20 (Thread 0x7fffa166a700 (LWP 6122)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555573b1a6 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=852, \n    pszFile=0x555555b4f980 \"rpcserver.cpp\", pszName=<optimized out>, \n    mutexIn=..., this=<synthetic pointer>) at sync.h:139\n#8  CRPCTable::execute (this=this@entry=0x555555ebd9e0 <tableRPC>, \n    strMethod=..., params=...) at rpcserver.cpp:852\n#9  0x000055555573dd78 in ServiceConnection (conn=conn@entry=0x7fff700149c0)\n    at rpcserver.cpp:797\n#10 0x000055555573eb50 in RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > (acceptor=..., context=..., \n    fUseSSL=<optimized out>, conn=0x7fff700149c0, error=...)\n    at rpcserver.cpp:495\n#11 0x000055555574383a in operator()<void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, const boost::system::error_code&), boost::_bi::list1<const boost::system::error_code&> > (\n    f=@0x7fffa1669bf0: 0x55555573e940 <RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> >(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&)>, a=<synthetic pointer>, \n    this=0x7fffa1669bf8) at /usr/include/boost/bind/bind.hpp:525\n#12 operator()<boost::system::error_code> (a1=..., this=0x7fffa1669bf0)\n    at /usr/include/boost/bind/bind_template.hpp:47\n#13 operator() (this=0x7fffa1669bf0)\n    at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#14 asio_handler_invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code> > (\n    function=<error reading variable: access outside bounds of object referenced via synthetic pointer>)\n    at /usr/include/boost/asio/handler_invoke_hook.hpp:64\n#15 invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code>, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > > (context=..., function=...)\n    at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#16 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > >::do_complete (owner=0x7fffa91a1c30, base=<optimized out>)\n    at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n#17 0x000055555574518d in complete (bytes_transferred=0, ec=..., owner=..., \n    this=<optimized out>)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#18 boost::asio::detail::epoll_reactor::descriptor_state::do_complete (\n    owner=0x7fffa91a1c30, base=0x7fffa91b7030, ec=..., \n    bytes_transferred=<optimized out>)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:651\n#19 0x000055555574678e in complete (bytes_transferred=1, ec=..., owner=..., \n    this=0x7fffa91b7030)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#20 do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91a1c30)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:384\n#21 boost::asio::detail::task_io_service::run (this=0x7fffa91a1c30, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#22 0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf8dda10)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#23 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#24 0x00007ffff58c9182 in start_thread (arg=0x7fffa166a700)\n    at pthread_create.c:312\n#25 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 19 (Thread 0x7fffa1ebb700 (LWP 6121)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x000055555571e28d in MilliSleep (n=900000) at util.h:97\n#6  LoopForever<void (*)()> (name=0x555555b38008 \"dumpaddr\", \n    func=0x555555711a70 <DumpAddresses()>, msecs=900000) at util.h:550\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffa1ebb700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 18 (Thread 0x7fffa270c700 (LWP 6120)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (mutex=0x7fffad215600)\n    at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555561c0ad in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=0x7fffa270aa60) at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=0x7fffa270aa60) at ../../src/sync.h:118\n#7  CMutexLock<AnnotatedMixin<boost::recursive_mutex> >::CMutexLock (\n    this=0x7fffa270aa60, mutexIn=..., pszName=<optimized out>, \n    pszFile=<optimized out>, nLine=<optimized out>, fTry=<optimized out>)\n    at ../../src/sync.h:139\n#8  0x00005555557ce266 in CWallet::SyncTransaction (this=0x7fffad2154b0, \n    hash=..., tx=..., pblock=0x0) at wallet.cpp:609\n#9  0x00005555556ff0d5 in operator() (a2=<optimized out>, a1=..., a0=..., \n    this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#10 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:363\n#11 operator() (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#12 dereference (this=0x7fffa270ab60)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#13 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, const uint256&, const CTransaction&, const CBlock*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, const CTransaction&, const CBlock*)>, boost::function<void(const boost::signals2::connection&, const uint256&, const CTransaction&, const CBlock*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, const uint256&, const CTransaction&, const CBlock*, boost::function<void(const uint256&, const CTransaction&, const CBlock*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, const uint256&, const CTransaction&, const CBlock*, boost::function<void(const uint256&, const CTransaction&, const CBlock*)> >, boost::signals2::mutex> > > (f=...)\n    at /usr/include/boost/iterator/iterator_facade.hpp:514\n#14 operator* (this=0x7fffa270ab60)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#15 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, const uint256&, const CTransaction&, const CBlock*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, const CTransaction&, const CBlock*)>, boost::function<void(const boost::signals2::connection&, const uint256&, const CTransaction&, const CBlock*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, const uint256&, const CTransaction&, const CBlock*, boost::function<void(const uint256&, const CTransaction&, const CBlock*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, const uint256&, const CTransaction&, const CBlock*, boost::function<void(const uint256&, const CTransaction&, const CBlock*)> >, boost::signals2::mutex> > > (\n    this=<optimized out>, first=..., last=...)\n    at /usr/include/boost/signals2/optional_last_value.hpp:55\n#16 operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, const uint256&, const CTransaction&, const CBlock*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, const CTransaction&, const CBlock*)>, boost::function<void(const boost::signals2::connection&, const uint256&, const CTransaction&, const CBlock*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, const uint256&, const CTransaction&, const CBlock*, boost::function<void(const uint256&, const CTransaction&, const CBlock*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, const uint256&, const CTransaction&, const CBlock*, boost::function<void(const uint256&, const CTransaction&, const CBlock*)> >, boost::signals2::mutex> > > (this=<optimized out>, combiner=..., first=..., \n    last=...) at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:64\n#17 boost::signals2::detail::signal3_impl<void, uint256 const&, CTransaction const&, CBlock const*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (uint256 const&, CTransaction const&, CBlock const*)>, boost::function<void (boost::signals2::connection const&, uint256 const&, CTransaction const&, CBlock const*)>, boost::signals2::mutex>::operator()(uint256 const&, CTransaction const&, CBlock const*) (this=<optimized out>, \n    arg1=..., arg2=..., arg3=arg3@entry=0x0)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#18 0x00005555556c63dc in operator() (arg3=0x0, arg2=..., arg1=..., \n    this=0x555555ebce20 <(anonymous namespace)::g_signals>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#19 AcceptToMemoryPool (pool=..., state=..., tx=..., \n    fLimitFree=fLimitFree@entry=true, \n    pfMissingInputs=pfMissingInputs@entry=0x7fffa270b0e5, \n    fRejectInsaneFee=fRejectInsaneFee@entry=false) at main.cpp:955\n#20 0x00005555556cdae1 in ProcessMessage (pfrom=pfrom@entry=0x7fff8c002b00, \n    strCommand=..., vRecv=...) at main.cpp:3721\n#21 0x00005555556cfde2 in ProcessMessages (pfrom=0x7fff8c002b00)\n    at main.cpp:4124\n#22 0x000055555572b524 in operator() (a0=<optimized out>, \n    this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#23 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:368\n#24 operator() (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#25 dereference (this=0x7fffa270bb30)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#26 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (\n    f=...) at /usr/include/boost/iterator/iterator_facade.hpp:514\n#27 operator* (this=0x7fffa270bb30)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#28 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (\n    last=..., first=..., this=<optimized out>)\n    at /usr/include/boost/signals2/optional_last_value.hpp:34\n#29 operator()<boost::signals2::optional_last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (this=<optimized out>, last=..., \n    first=..., combiner=...)\n    at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\n#30 boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool (CNode*)>, boost::function<bool (boost::signals2::connection const&, CNode*)>, boost::signals2::mutex>::operator()(CNode*) (this=<optimized out>, \n    arg1=arg1@entry=0x7fff8c002b00)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#31 0x0000555555716836 in operator() (arg1=0x7fff8c002b00, \n    this=0x555555ebd738 <g_signals+24>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#32 ThreadMessageHandler () at net.cpp:1544\n#33 0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b38000 \"msghand\", \n    func=0x555555716620 <ThreadMessageHandler()>) at util.h:576\n#34 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#35 0x00007ffff58c9182 in start_thread (arg=0x7fffa270c700)\n    at pthread_create.c:312\n#36 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 17 (Thread 0x7fffa2f5d700 (LWP 6119)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x00005555556b1611 in lock (this=0x555555ebcb80 <cs_main>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=0x555555ebcb80 <cs_main>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=237, pszFile=0x555555b1a81e \"main.cpp\", \n    pszName=0x555555880e59 \"cs_main\", mutexIn=..., this=<synthetic pointer>)\n    at sync.h:139\n#8  (anonymous namespace)::GetHeight () at main.cpp:237\n#9  0x0000555555729479 in operator() (this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#10 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:368\n#11 operator() (this=<optimized out>, connectionBody=...)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#12 dereference (this=0x7fffa2f5c350)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#13 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<int, boost::signals2::optional_last_value<int>, int, std::less<int>, boost::function<int()>, boost::function<int(const boost::signals2::connection&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<int, boost::function<int()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<int, boost::function<int()> >, boost::signals2::mutex> > > (f=...) at /usr/include/boost/iterator/iterator_facade.hpp:514\n#14 operator* (this=0x7fffa2f5c350)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#15 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<int, boost::signals2::optional_last_value<int>, int, std::less<int>, boost::function<int()>, boost::function<int(const boost::signals2::connection&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<int, boost::function<int()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<int, boost::function<int()> >, boost::signals2::mutex> > > (last=..., first=..., this=<optimized out>)\n    at /usr/include/boost/signals2/optional_last_value.hpp:34\n#16 operator()<boost::signals2::optional_last_value<int>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<int, boost::signals2::optional_last_value<int>, int, std::less<int>, boost::function<int()>, boost::function<int(const boost::signals2::connection&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<int, boost::function<int()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<int, boost::function<int()> >, boost::signals2::mutex> > > (\n    this=<optimized out>, last=..., first=..., combiner=...)\n    at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\n#17 boost::signals2::detail::signal0_impl<int, boost::signals2::optional_last_value<int>, int, std::less<int>, boost::function<int ()>, boost::function<int (boost::signals2::connection const&)>, boost::signals2::mutex>::operator()() (\n    this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#18 0x00005555557122e7 in operator() (this=0x555555ebd720 <g_signals>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#19 CNode::PushVersion (this=this@entry=0x7fff8c004120) at net.cpp:548\n#20 0x000055555572a1f2 in CNode::CNode (this=0x7fff8c004120, \n    hSocketIn=<optimized out>, addrIn=..., addrNameIn=..., \n    fInboundIn=<optimized out>) at net.h:312\n#21 0x0000555555712c6e in ConnectNode (addrConnect=..., \n    pszDest=pszDest@entry=0x0) at net.cpp:504\n#22 0x00005555557131c2 in OpenNetworkConnection (addrConnect=..., \n    grantOutbound=grantOutbound@entry=0x7fffa2f5ccc0, \n    strDest=strDest@entry=0x0, fOneShot=fOneShot@entry=false) at net.cpp:1457\n#23 0x0000555555713f34 in ThreadOpenConnections () at net.cpp:1366\n#24 0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b37ff8 \"opencon\", \n    func=0x555555713640 <ThreadOpenConnections()>) at util.h:576\n#25 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#26 0x00007ffff58c9182 in start_thread (arg=0x7fffa2f5d700)\n    at pthread_create.c:312\n#27 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 16 (Thread 0x7fffa37ae700 (LWP 6118)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x0000555555714773 in MilliSleep (n=120000) at util.h:97\n#6  ThreadOpenAddedConnections () at net.cpp:1438\n#7  0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b37ff1 \"addcon\", \n    func=0x555555713f80 <ThreadOpenAddedConnections()>) at util.h:576\n#8  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#9  0x00007ffff58c9182 in start_thread (arg=0x7fffa37ae700)\n    at pthread_create.c:312\n#10 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 15 (Thread 0x7fffa3fff700 (LWP 6117)):\n#0  0x00007ffff43d0c33 in select () at ../sysdeps/unix/syscall-template.S:81\n#1  0x0000555555715b6e in ThreadSocketHandler () at net.cpp:896\n#2  0x000055555571e373 in TraceThread<void (*)()> (name=0x555555b06813 \"net\", \n    func=0x5555557151e0 <ThreadSocketHandler()>) at util.h:576\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffa3fff700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 11 (Thread 0x7fffc118d700 (LWP 6095)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffc118d700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 10 (Thread 0x7fffc19de700 (LWP 6094)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffc19de700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 9 (Thread 0x7fffc222f700 (LWP 6093)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffc222f700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 8 (Thread 0x7fffe2f61700 (LWP 6087)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff62067be in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#6  0x00007ffff60d4c5f in QThread::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#7  0x00007ffff60d732f in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffe2f61700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 7 (Thread 0x7fffe1ebf700 (LWP 6086)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#6  0x00007ffff60d4c5f in QThread::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#7  0x00007ffff60d732f in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffe1ebf700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 4 (Thread 0x7fffe37b2700 (LWP 6082)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff39c3129 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe37b2700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 3 (Thread 0x7fffe95de700 (LWP 6081)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c330a in g_main_loop_run ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007fffed561e16 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe95de700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 2 (Thread 0x7fffe9e2f700 (LWP 6080)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007fffe9e371ad in ?? ()\n   from /usr/lib/x86_64-linux-gnu/gio/modules/libdconfsettings.so\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe9e2f700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 1 (Thread 0x7ffff7fc77c0 (LWP 6079)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x0000555555664d54 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at ../../src/sync.h:118\n#7  CMutexLock (fTry=false, nLine=196, \n    pszFile=0x555555afb29d \"transactiontablemodel.cpp\", \n    pszName=<optimized out>, mutexIn=..., this=<synthetic pointer>)\n    at ../../src/sync.h:139\n#8  TransactionTablePriv::index (this=0x5555566c70d0, idx=idx@entry=23040)\n    at transactiontablemodel.cpp:196\n#9  0x0000555555663a70 in TransactionTableModel::index (this=0x555556859770, \n    row=23040, column=0, parent=...) at transactiontablemodel.cpp:615\n#10 0x0000555555660d5d in TransactionFilterProxy::filterAcceptsRow (\n    this=0x555557aad020, sourceRow=23040, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n#11 0x00007ffff6fccfd6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#12 0x00007ffff6fcd1cf in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#13 0x00007ffff61ed87a in QMetaObject::activate(QObject*, QMetaObject const*, int, void**) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#14 0x00007ffff6237664 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#15 0x00007ffff61d35ce in QAbstractItemModel::endInsertRows() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00005555556659fc in TransactionTablePriv::updateWallet (\n    this=0x5555566c70d0, hash=..., status=status@entry=0)\n    at transactiontablemodel.cpp:156\n#17 0x000055555566405d in TransactionTableModel::updateTransaction (\n    this=0x555556859770, hash=..., status=0) at transactiontablemodel.cpp:255\n#18 0x0000555555614566 in WalletModel::updateTransaction (\n    this=this@entry=0x55555617d5c0, hash=..., status=<optimized out>)\n    at walletmodel.cpp:127\n#19 0x000055555562cfdc in WalletModel::qt_static_metacall (_o=0x55555617d5c0, \n    _c=<optimized out>, _id=<optimized out>, _a=0x7fff70017270)\n    at moc_walletmodel.cpp:80\n#20 0x00007ffff61f1c1e in QObject::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#21 0x00007ffff6a52e2c in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#22 0x00007ffff6a594a0 in QApplication::notify(QObject*, QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#23 0x00007ffff61d94dd in QCoreApplication::notifyInternal(QObject*, QEvent*)\n    () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#24 0x00007ffff61dcb3d in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#25 0x00007ffff6206f83 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#26 0x00007ffff39c2e04 in g_main_context_dispatch ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#27 0x00007ffff39c3048 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#28 0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#29 0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#30 0x00007ffff6af4bb6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#31 0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#32 0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#33 0x00007ffff61ddb79 in QCoreApplication::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#34 0x00005555555b47e9 in main (argc=1, argv=<optimized out>)\n    at bitcoin.cpp:580\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41201250",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41202301,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjAyMzAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41202301",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T19:12:54Z",
      "updated_at": "2014-04-23T19:12:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "I restarted bitcoind, and pretty quickly it hung again.  This seems quite easily reproducible:\n\n```\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\ned9fc3069b5db658d8be4a54c9707c228242da9f49aacb96e0299f115e24a993\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\nf6a9c90d4c613cf0e76d41d012dc8277c8ebf5c6b83309c93d9087975704c946\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\n5718101a513ba18d902f7a543590edd82dc0e0bd61d7327c2c16bd3a5544c913\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\nf114730e2470d74a9289d454ae9726976f6fe6f565683ed00cb39e0a1c1a9b26\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\n838a56f87e9bb3f8690b19268b3d83dd7311cc53858e5c10bb683416ee6cbfc8\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\n41902e0c90cd155bad447904922fa359b5bf4d01ee32006c853d2121000e0fe0\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\n67e29ed40704c79392d4d82fa619c78fc0f6aade31d2ee741f961e4597c7cb91\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 50\nerror: {\"code\":-4,\"message\":\"Insufficient funds\"}\nchris@chris:~/.bitcoin$ bc listunspent 0\n[too much output]\nchris@chris:~/.bitcoin$ bc listunspent 0 | grep amount\n        \"amount\" : 0.01000059,\n        \"amount\" : 0.00090000,\n        \"amount\" : 0.02000000,\n        \"amount\" : 0.11016945,\n        \"amount\" : 0.18438206,\n        \"amount\" : 0.01390000,\n        \"amount\" : 0.00047493,\n        \"amount\" : 0.52000000,\n        \"amount\" : 4.37022011,\n        \"amount\" : 0.01900000,\n        \"amount\" : 0.09990000,\n        \"amount\" : 0.01406309,\n        \"amount\" : 0.00259388,\n        \"amount\" : 0.00016425,\n        \"amount\" : 0.00049679,\n        \"amount\" : 9.90000000,\nchris@chris:~/.bitcoin$ bc sendtoaddress 16TBqpEFpivLtDRAtmNnCxEdJW1coodiia 14\n[hung]\n```\n\ndebug.log:\n\n```\n2014-04-23 19:03:58 keypool keep 14209\n2014-04-23 19:03:58 AddToWallet 41902e0c90cd155bad447904922fa359b5bf4d01ee32006c853d2121000e0fe0  new\n2014-04-23 19:03:58 AddToWallet 41902e0c90cd155bad447904922fa359b5bf4d01ee32006c853d2121000e0fe0  \n2014-04-23 19:03:58 Relaying wtx 41902e0c90cd155bad447904922fa359b5bf4d01ee32006c853d2121000e0fe0\n2014-04-23 19:04:03 keypool reserve 14210\n2014-04-23 19:04:03 CommitTransaction:\nCTransaction(hash=67e29ed407, ver=1, vin.size=3, vout.size=2, nLockTime=0)\n    CTxIn(COutPoint(41902e0c90, 0), scriptSig=3045022100b41b59985e6945)\n    CTxIn(COutPoint(5718101a51, 1), scriptSig=3045022100d9bd04c0806130)\n    CTxIn(COutPoint(cbf9d5530d, 0), scriptSig=3044022003ddfdb6ae632423)\n    CTxOut(nValue=4.37022011, scriptPubKey=OP_DUP OP_HASH160 0cbc367a1158)\n    CTxOut(nValue=50.00000000, scriptPubKey=OP_DUP OP_HASH160 3bcc7e7aa19b)\n2014-04-23 19:04:03 keypool keep 14210\n2014-04-23 19:04:03 AddToWallet 67e29ed40704c79392d4d82fa619c78fc0f6aade31d2ee741f961e4597c7cb91  new\n2014-04-23 19:04:03 AddToWallet 67e29ed40704c79392d4d82fa619c78fc0f6aade31d2ee741f961e4597c7cb91  \n2014-04-23 19:04:03 Relaying wtx 67e29ed40704c79392d4d82fa619c78fc0f6aade31d2ee741f961e4597c7cb91\n```\n\ngdb:\n\n```\n  C-c C-c\nProgram received signal SIGINT, Interrupt.\n__lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n135 ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\n(gdb) where\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x0000555555664d54 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at ../../src/sync.h:118\n#7  CMutexLock (fTry=false, nLine=196, \n    pszFile=0x555555afb29d \"transactiontablemodel.cpp\", \n    pszName=<optimized out>, mutexIn=..., this=<synthetic pointer>)\n    at ../../src/sync.h:139\n#8  TransactionTablePriv::index (this=0x555556613f20, idx=idx@entry=64625)\n    at transactiontablemodel.cpp:196\n#9  0x0000555555663a70 in TransactionTableModel::index (this=0x55555685d8f0, \n    row=64625, column=0, parent=...) at transactiontablemodel.cpp:615\n#10 0x0000555555660d5d in TransactionFilterProxy::filterAcceptsRow (this=\n    0x555557ab0890, sourceRow=64625, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n#11 0x00007ffff6fccfd6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#12 0x00007ffff6fcd1cf in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#13 0x00007ffff61ed87a in QMetaObject::activate(QObject*, QMetaObject const*, int, void**) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#14 0x00007ffff6237664 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#15 0x00007ffff61d35ce in QAbstractItemModel::endInsertRows() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00005555556659fc in TransactionTablePriv::updateWallet (\n    this=0x555556613f20, hash=..., status=status@entry=0)\n    at transactiontablemodel.cpp:156\n#17 0x000055555566405d in TransactionTableModel::updateTransaction (\n    this=0x55555685d8f0, hash=..., status=0) at transactiontablemodel.cpp:255\n#18 0x0000555555614566 in WalletModel::updateTransaction (\n    this=this@entry=0x555556332bd0, hash=..., status=<optimized out>)\n    at walletmodel.cpp:127\n#19 0x000055555562cfdc in WalletModel::qt_static_metacall (_o=0x555556332bd0, \n    _c=<optimized out>, _id=<optimized out>, _a=0x7fff70017270)\n    at moc_walletmodel.cpp:80\n#20 0x00007ffff61f1c1e in QObject::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#21 0x00007ffff6a52e2c in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#22 0x00007ffff6a594a0 in QApplication::notify(QObject*, QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#23 0x00007ffff61d94dd in QCoreApplication::notifyInternal(QObject*, QEvent*)\n    () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#24 0x00007ffff61dcb3d in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#25 0x00007ffff6206f83 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#26 0x00007ffff39c2e04 in g_main_context_dispatch ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#27 0x00007ffff39c3048 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#28 0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#29 0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#30 0x00007ffff6af4bb6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#31 0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#32 0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#33 0x00007ffff61ddb79 in QCoreApplication::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#34 0x00005555555b47e9 in main (argc=1, argv=<optimized out>)\n    at bitcoin.cpp:580\n(gdb) thread apply all where\n\nThread 25 (Thread 0x7fff7fae6700 (LWP 6268)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x0000555555849bfb in BGThread (this=0x7fffd40e1ee0)\n    at util/env_posix.cc:563\n#2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (\n    arg=0x7fffd40e1ee0) at util/env_posix.cc:510\n#3  0x00007ffff58c9182 in start_thread (arg=0x7fff7fae6700)\n    at pthread_create.c:312\n#4  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 24 (Thread 0x7fff855e3700 (LWP 6267)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x00005555557e19d9 in MilliSleep (n=500) at util.h:97\n#6  ThreadFlushWalletDB (strFile=...) at walletdb.cpp:782\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fff855e3700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 23 (Thread 0x7fff87fff700 (LWP 6266)):\n#0  0x00007ffff43d99a3 in epoll_wait ()\n    at ../sysdeps/unix/syscall-template.S:81\n#1  0x000055555574258b in boost::asio::detail::epoll_reactor::run (\n    this=0x7fffa91aefe0, block=<optimized out>, ops=...)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:392\n#2  0x0000555555746551 in do_run_one (ec=..., this_thread=..., lock=..., \n    this=0x7fffa91ae190)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:368\n#3  boost::asio::detail::task_io_service::run (this=0x7fffa91ae190, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#4  0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf4f74f0)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#5  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#6  0x00007ffff58c9182 in start_thread (arg=0x7fff87fff700)\n    at pthread_create.c:312\n#7  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 22 (Thread 0x7fffa0a10700 (LWP 6265)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x000055555574671d in wait<boost::asio::detail::scoped_lock<boost::asio::detail::posix_mutex> > (lock=..., this=0x7fffa0a0fdb0)\n    at /usr/include/boost/asio/detail/posix_event.hpp:80\n#2  do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91ae190)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:395\n#3  boost::asio::detail::task_io_service::run (this=0x7fffa91ae190, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#4  0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf4f74f0)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#5  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#6  0x00007ffff58c9182 in start_thread (arg=0x7fffa0a10700)\n    at pthread_create.c:312\n#7  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 21 (Thread 0x7fffa1261700 (LWP 6264)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x000055555574671d in wait<boost::asio::detail::scoped_lock<boost::asio::detail::posix_mutex> > (lock=..., this=0x7fffa1260db0)\n    at /usr/include/boost/asio/detail/posix_event.hpp:80\n#2  do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91ae190)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:395\n#3  boost::asio::detail::task_io_service::run (this=0x7fffa91ae190, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#4  0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf4f74f0)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#5  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#6  0x00007ffff58c9182 in start_thread (arg=0x7fffa1261700)\n    at pthread_create.c:312\n#7  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 20 (Thread 0x7fffa1ab2700 (LWP 6263)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555573b1a6 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=852, \n    pszFile=0x555555b4f980 \"rpcserver.cpp\", pszName=<optimized out>, \n    mutexIn=..., this=<synthetic pointer>) at sync.h:139\n#8  CRPCTable::execute (this=this@entry=0x555555ebd9e0 <tableRPC>, \n    strMethod=..., params=...) at rpcserver.cpp:852\n#9  0x000055555573dd78 in ServiceConnection (conn=conn@entry=0x7fff70000cc0)\n    at rpcserver.cpp:797\n#10 0x000055555573eb50 in RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > (acceptor=..., context=..., \n    fUseSSL=<optimized out>, conn=0x7fff70000cc0, error=...)\n    at rpcserver.cpp:495\n#11 0x000055555574383a in operator()<void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, const boost::system::error_code&), boost::_bi::list1<const boost::system::error_code&> > (\n    f=@0x7fffa1ab1bf0: 0x55555573e940 <RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> >(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&)>, a=<synthetic pointer>, \n    this=0x7fffa1ab1bf8) at /usr/include/boost/bind/bind.hpp:525\n#12 operator()<boost::system::error_code> (a1=..., this=0x7fffa1ab1bf0)\n    at /usr/include/boost/bind/bind_template.hpp:47\n#13 operator() (this=0x7fffa1ab1bf0)\n    at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#14 asio_handler_invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code> > (\n    function=<error reading variable: access outside bounds of object referenced via synthetic pointer>)\n    at /usr/include/boost/asio/handler_invoke_hook.hpp:64\n#15 invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code>, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > > (context=..., function=...)\n    at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#16 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > >::do_complete (owner=0x7fffa91ae190, base=<optimized out>)\n    at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n#17 0x000055555574518d in complete (bytes_transferred=0, ec=..., owner=..., \n    this=<optimized out>)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#18 boost::asio::detail::epoll_reactor::descriptor_state::do_complete (\n    owner=0x7fffa91ae190, base=0x7fffa91c3590, ec=..., \n    bytes_transferred=<optimized out>)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:651\n#19 0x000055555574678e in complete (bytes_transferred=1, ec=..., owner=..., \n    this=0x7fffa91c3590)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#20 do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa91ae190)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:384\n#21 boost::asio::detail::task_io_service::run (this=0x7fffa91ae190, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#22 0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf4f74f0)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#23 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#24 0x00007ffff58c9182 in start_thread (arg=0x7fffa1ab2700)\n    at pthread_create.c:312\n#25 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 19 (Thread 0x7fffa2509700 (LWP 6262)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x000055555571e28d in MilliSleep (n=900000) at util.h:97\n#6  LoopForever<void (*)()> (name=0x555555b38008 \"dumpaddr\", \n    func=0x555555711a70 <DumpAddresses()>, msecs=900000) at util.h:550\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffa2509700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 18 (Thread 0x7fffa2f5d700 (LWP 6261)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (mutex=0x7fffad23e540)\n    at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555561c0ad in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=0x7fffa2f5bdb0) at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=0x7fffa2f5bdb0) at ../../src/sync.h:118\n#7  CMutexLock<AnnotatedMixin<boost::recursive_mutex> >::CMutexLock (\n    this=0x7fffa2f5bdb0, mutexIn=..., pszName=<optimized out>, \n    pszFile=<optimized out>, nLine=<optimized out>, fTry=<optimized out>)\n    at ../../src/sync.h:139\n#8  0x00005555557d295d in CWallet::Inventory (this=0x7fffad23e3f0, hash=...)\n    at wallet.h:354\n#9  0x00005555557004cc in operator() (a0=..., this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#10 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:363\n#11 operator() (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#12 dereference (this=0x7fffa2f5be80)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#13 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, const uint256&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&)>, boost::function<void(const boost::signals2::connection&, const uint256&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > > (f=...)\n    at /usr/include/boost/iterator/iterator_facade.hpp:514\n#14 operator* (this=0x7fffa2f5be80)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#15 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, const uint256&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&)>, boost::function<void(const boost::signals2::connection&, const uint256&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > > (this=<optimized out>, \n    first=..., last=...)\n    at /usr/include/boost/signals2/optional_last_value.hpp:55\n#16 operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, const uint256&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&)>, boost::function<void(const boost::signals2::connection&, const uint256&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > > (this=<optimized out>, combiner=..., first=..., last=...)\n    at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:64\n#17 boost::signals2::detail::signal1_impl<void, uint256 const&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (uint256 const&)>, boost::function<void (boost::signals2::connection const&, uint256 const&)>, boost::signals2::mutex>::operator()(uint256 const&) (\n    this=<optimized out>, arg1=...)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#18 0x00005555556cca02 in operator() (arg1=..., \n    this=0x555555ebce80 <(anonymous namespace)::g_signals+96>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#19 ProcessMessage (pfrom=pfrom@entry=0x7fff940046c0, strCommand=..., \n    vRecv=...) at main.cpp:3606\n#20 0x00005555556cfde2 in ProcessMessages (pfrom=0x7fff940046c0)\n    at main.cpp:4124\n#21 0x000055555572b524 in operator() (a0=<optimized out>, \n    this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#22 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:368\n#23 operator() (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#24 dereference (this=0x7fffa2f5cb30)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#25 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (\n    f=...) at /usr/include/boost/iterator/iterator_facade.hpp:514\n#26 operator* (this=0x7fffa2f5cb30)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#27 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (\n    last=..., first=..., this=<optimized out>)\n    at /usr/include/boost/signals2/optional_last_value.hpp:34\n#28 operator()<boost::signals2::optional_last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (this=<optimized out>, last=..., \n    first=..., combiner=...)\n    at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\n#29 boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool (CNode*)>, boost::function<bool (boost::signals2::connection const&, CNode*)>, boost::signals2::mutex>::operator()(CNode*) (this=<optimized out>, \n    arg1=arg1@entry=0x7fff940046c0)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#30 0x0000555555716836 in operator() (arg1=0x7fff940046c0, \n    this=0x555555ebd738 <g_signals+24>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#31 ThreadMessageHandler () at net.cpp:1544\n#32 0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b38000 \"msghand\", \n    func=0x555555716620 <ThreadMessageHandler()>) at util.h:576\n#33 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#34 0x00007ffff58c9182 in start_thread (arg=0x7fffa2f5d700)\n    at pthread_create.c:312\n#35 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 17 (Thread 0x7fffa37ae700 (LWP 6260)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x0000555555709c43 in boost::condition_variable::wait (\n    this=0x7fffa91ab810, m=...)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  0x000055555571390b in wait (this=0x7fffa91ab810) at sync.h:185\n#3  Acquire (this=0x7fffa37adcc0) at sync.h:218\n#4  CSemaphoreGrant (fTry=false, sema=..., this=0x7fffa37adcc0) at sync.h:249\n#5  ThreadOpenConnections () at net.cpp:1299\n#6  0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b37ff8 \"opencon\", \n    func=0x555555713640 <ThreadOpenConnections()>) at util.h:576\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffa37ae700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 16 (Thread 0x7fffa3fff700 (LWP 6259)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x0000555555714773 in MilliSleep (n=120000) at util.h:97\n#6  ThreadOpenAddedConnections () at net.cpp:1438\n#7  0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b37ff1 \"addcon\", \n    func=0x555555713f80 <ThreadOpenAddedConnections()>) at util.h:576\n#8  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#9  0x00007ffff58c9182 in start_thread (arg=0x7fffa3fff700)\n    at pthread_create.c:312\n#10 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 15 (Thread 0x7fffb09c8700 (LWP 6258)):\n#0  0x00007ffff43d0c33 in select () at ../sysdeps/unix/syscall-template.S:81\n#1  0x0000555555715b6e in ThreadSocketHandler () at net.cpp:896\n#2  0x000055555571e373 in TraceThread<void (*)()> (name=0x555555b06813 \"net\", \n    func=0x5555557151e0 <ThreadSocketHandler()>) at util.h:576\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffb09c8700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 11 (Thread 0x7fffc118d700 (LWP 6234)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffc118d700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 10 (Thread 0x7fffc19de700 (LWP 6233)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffc19de700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 9 (Thread 0x7fffc222f700 (LWP 6232)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffc222f700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 8 (Thread 0x7fffe2710700 (LWP 6230)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff62067be in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#6  0x00007ffff60d4c5f in QThread::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#7  0x00007ffff60d732f in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffe2710700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 7 (Thread 0x7fffe1ebf700 (LWP 6229)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#6  0x00007ffff60d4c5f in QThread::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#7  0x00007ffff60d732f in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffe1ebf700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 4 (Thread 0x7fffe37b2700 (LWP 6225)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff39c3129 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe37b2700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 3 (Thread 0x7fffe95de700 (LWP 6224)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c330a in g_main_loop_run ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007fffed561e16 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe95de700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 2 (Thread 0x7fffe9e2f700 (LWP 6223)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007fffe9e371ad in ?? ()\n   from /usr/lib/x86_64-linux-gnu/gio/modules/libdconfsettings.so\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe9e2f700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 1 (Thread 0x7ffff7fc77c0 (LWP 6219)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x0000555555664d54 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at ../../src/sync.h:118\n#7  CMutexLock (fTry=false, nLine=196, \n    pszFile=0x555555afb29d \"transactiontablemodel.cpp\", \n    pszName=<optimized out>, mutexIn=..., this=<synthetic pointer>)\n    at ../../src/sync.h:139\n#8  TransactionTablePriv::index (this=0x555556613f20, idx=idx@entry=64625)\n    at transactiontablemodel.cpp:196\n#9  0x0000555555663a70 in TransactionTableModel::index (this=0x55555685d8f0, \n    row=64625, column=0, parent=...) at transactiontablemodel.cpp:615\n#10 0x0000555555660d5d in TransactionFilterProxy::filterAcceptsRow (\n    this=0x555557ab0890, sourceRow=64625, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n#11 0x00007ffff6fccfd6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#12 0x00007ffff6fcd1cf in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#13 0x00007ffff61ed87a in QMetaObject::activate(QObject*, QMetaObject const*, int, void**) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#14 0x00007ffff6237664 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#15 0x00007ffff61d35ce in QAbstractItemModel::endInsertRows() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00005555556659fc in TransactionTablePriv::updateWallet (\n    this=0x555556613f20, hash=..., status=status@entry=0)\n    at transactiontablemodel.cpp:156\n#17 0x000055555566405d in TransactionTableModel::updateTransaction (\n    this=0x55555685d8f0, hash=..., status=0) at transactiontablemodel.cpp:255\n#18 0x0000555555614566 in WalletModel::updateTransaction (\n    this=this@entry=0x555556332bd0, hash=..., status=<optimized out>)\n    at walletmodel.cpp:127\n#19 0x000055555562cfdc in WalletModel::qt_static_metacall (_o=0x555556332bd0, \n    _c=<optimized out>, _id=<optimized out>, _a=0x7fff70017270)\n    at moc_walletmodel.cpp:80\n#20 0x00007ffff61f1c1e in QObject::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#21 0x00007ffff6a52e2c in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#22 0x00007ffff6a594a0 in QApplication::notify(QObject*, QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#23 0x00007ffff61d94dd in QCoreApplication::notifyInternal(QObject*, QEvent*)\n    () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#24 0x00007ffff61dcb3d in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#25 0x00007ffff6206f83 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#26 0x00007ffff39c2e04 in g_main_context_dispatch ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#27 0x00007ffff39c3048 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#28 0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#29 0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#30 0x00007ffff6af4bb6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#31 0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#32 0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#33 0x00007ffff61ddb79 in QCoreApplication::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#34 0x00005555555b47e9 in main (argc=1, argv=<optimized out>)\n    at bitcoin.cpp:580\n(gdb) \n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41202301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41203784,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjAzNzg0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41203784",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T19:26:57Z",
      "updated_at": "2014-04-23T19:26:57Z",
      "author_association": "MEMBER",
      "body": "Can you compile with -DDEBUG_LOCKORDER? If it is a lock ordering issue it should come to light then.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41203784",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41203974,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjAzOTc0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41203974",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T19:28:44Z",
      "updated_at": "2014-04-23T19:28:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sure.  Is it better to build from the trunk, or from the version I'm already using?\n\nI don't know if you've made other related changes in the last 8 days.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41203974",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41205125,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA1MTI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41205125",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T19:39:59Z",
      "updated_at": "2014-04-23T19:55:36Z",
      "author_association": "MEMBER",
      "body": "Well I merged #4085 today, which fixes a hanging GUI in some cases, but I'm not sure it would affect this. \n\nEdit: May be better not to upgrade to make sure that this problem can still be reproduced.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41205125",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41206400,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA2NDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41206400",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T19:51:30Z",
      "updated_at": "2014-04-23T19:52:02Z",
      "author_association": "MEMBER",
      "body": "Looking at the traceback of the GUI thread there is, in both cases:\n\n```\n#8  TransactionTablePriv::index (this=0x555556613f20, idx=idx@entry=64625)\n    at transactiontablemodel.cpp:196\n....\n#16 0x00005555556659fc in TransactionTablePriv::updateWallet (\n    this=0x555556613f20, hash=..., status=status@entry=0)\n    at transactiontablemodel.cpp:156\n```\n\nTransactionTablePriv::updateWallet acquires both the `cs_main` and `cs_wallet` lock using `LOCK2`. Then, with the locks held, it calls `endInsertRows()` which eventually deeper in the code ends up in `TransactionTablePriv::index()`.\n\nThis function, in turn, also does a `LOCK2(cs_main, cs_wallet)`. But weirdly enough, here it hangs. With recursive mutexes re-acquiring a lock should never hang should it? It already has both of these locks.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41206400",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41207626,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA3NjI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41207626",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:02:30Z",
      "updated_at": "2014-04-23T20:02:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't know.\n\nIt sounds like a workaround for this would be to just use bitcoind instead of bitcoin-qt, since I'm only using the RPC interface anyway and always keep the QT window minimised.\n\nAlso, how do I add the -D compiler flag in the autotools build system?\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41207626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41207816,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA3ODE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41207816",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:04:22Z",
      "updated_at": "2014-04-23T20:04:22Z",
      "author_association": "MEMBER",
      "body": "Like this:\n\n```\n./configure CPPFLAGS=\"-DDEBUG_LOCKORDER\"\n```\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41207816",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41208538,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA4NTM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41208538",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:10:38Z",
      "updated_at": "2014-04-23T20:10:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm rebuilding with the debug flag, but in the mean time it hung up again, and this time I hadn't been making any transactions at all:\n\n```\n  C-c C-c\nProgram received signal SIGINT, Interrupt.\n__lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n135 ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\n(gdb) where\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x0000555555664d54 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at ../../src/sync.h:118\n#7  CMutexLock (fTry=false, nLine=196, \n    pszFile=0x555555afb29d \"transactiontablemodel.cpp\", \n    pszName=<optimized out>, mutexIn=..., this=<synthetic pointer>)\n    at ../../src/sync.h:139\n#8  TransactionTablePriv::index (this=0x555556729f20, idx=idx@entry=40217)\n    at transactiontablemodel.cpp:196\n#9  0x0000555555663a70 in TransactionTableModel::index (this=0x555556852420, \n    row=40217, column=0, parent=...) at transactiontablemodel.cpp:615\n#10 0x0000555555660d5d in TransactionFilterProxy::filterAcceptsRow (\n    this=0x555557aa5960, sourceRow=40217, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n#11 0x00007ffff6fccfd6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#12 0x00007ffff6fcd1cf in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#13 0x00007ffff61ed87a in QMetaObject::activate(QObject*, QMetaObject const*, int, void**) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#14 0x00007ffff6237664 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#15 0x00007ffff61d35ce in QAbstractItemModel::endInsertRows() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00005555556659fc in TransactionTablePriv::updateWallet (\n    this=0x555556729f20, hash=..., status=status@entry=0)\n    at transactiontablemodel.cpp:156\n#17 0x000055555566405d in TransactionTableModel::updateTransaction (\n    this=0x555556852420, hash=..., status=0) at transactiontablemodel.cpp:255\n#18 0x0000555555614566 in WalletModel::updateTransaction (\n    this=this@entry=0x555556226790, hash=..., status=<optimized out>)\n    at walletmodel.cpp:127\n#19 0x000055555562cfdc in WalletModel::qt_static_metacall (_o=0x555556226790, \n    _c=<optimized out>, _id=<optimized out>, _a=0x7fff9158d220)\n    at moc_walletmodel.cpp:80\n#20 0x00007ffff61f1c1e in QObject::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#21 0x00007ffff6a52e2c in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#22 0x00007ffff6a594a0 in QApplication::notify(QObject*, QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#23 0x00007ffff61d94dd in QCoreApplication::notifyInternal(QObject*, QEvent*)\n    () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#24 0x00007ffff61dcb3d in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#25 0x00007ffff6206f83 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#26 0x00007ffff39c2e04 in g_main_context_dispatch ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#27 0x00007ffff39c3048 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#28 0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#29 0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#30 0x00007ffff6af4bb6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#31 0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#32 0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#33 0x00007ffff61ddb79 in QCoreApplication::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#34 0x00005555555b47e9 in main (argc=1, argv=<optimized out>)\n    at bitcoin.cpp:580\n(gdb) thread apply all where\n\nThread 25 (Thread 0x7fff7d9ce700 (LWP 6502)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x0000555555849bfb in BGThread (this=0x7fffc81fa820)\n    at util/env_posix.cc:563\n#2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (\n    arg=0x7fffc81fa820) at util/env_posix.cc:510\n#3  0x00007ffff58c9182 in start_thread (arg=0x7fff7d9ce700)\n    at pthread_create.c:312\n#4  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 24 (Thread 0x7fff890c8700 (LWP 6501)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x00005555557e19d9 in MilliSleep (n=500) at util.h:97\n#6  ThreadFlushWalletDB (strFile=...) at walletdb.cpp:782\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fff890c8700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 23 (Thread 0x7fff8b7ae700 (LWP 6500)):\n#0  0x00007ffff43d99a3 in epoll_wait ()\n    at ../sysdeps/unix/syscall-template.S:81\n#1  0x000055555574258b in boost::asio::detail::epoll_reactor::run (\n    this=0x7fffa8f6df70, block=<optimized out>, ops=...)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:392\n#2  0x0000555555746551 in do_run_one (ec=..., this_thread=..., lock=..., \n    this=0x7fffa8f6d120)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:368\n#3  boost::asio::detail::task_io_service::run (this=0x7fffa8f6d120, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#4  0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf269300)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#5  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#6  0x00007ffff58c9182 in start_thread (arg=0x7fff8b7ae700)\n    at pthread_create.c:312\n#7  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 22 (Thread 0x7fff8bfff700 (LWP 6499)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x000055555574671d in wait<boost::asio::detail::scoped_lock<boost::asio::detail::posix_mutex> > (lock=..., this=0x7fff8bffedb0)\n    at /usr/include/boost/asio/detail/posix_event.hpp:80\n#2  do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa8f6d120)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:395\n#3  boost::asio::detail::task_io_service::run (this=0x7fffa8f6d120, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#4  0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf269300)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#5  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#6  0x00007ffff58c9182 in start_thread (arg=0x7fff8bfff700)\n    at pthread_create.c:312\n#7  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 21 (Thread 0x7fffa0e19700 (LWP 6498)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x000055555574671d in wait<boost::asio::detail::scoped_lock<boost::asio::detail::posix_mutex> > (lock=..., this=0x7fffa0e18db0)\n    at /usr/include/boost/asio/detail/posix_event.hpp:80\n#2  do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa8f6d120)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:395\n#3  boost::asio::detail::task_io_service::run (this=0x7fffa8f6d120, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#4  0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf269300)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#5  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#6  0x00007ffff58c9182 in start_thread (arg=0x7fffa0e19700)\n    at pthread_create.c:312\n#7  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 20 (Thread 0x7fffa166a700 (LWP 6497)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555573b1a6 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at sync.h:118\n#7  CMutexLock (fTry=false, nLine=852, \n    pszFile=0x555555b4f980 \"rpcserver.cpp\", pszName=<optimized out>, \n    mutexIn=..., this=<synthetic pointer>) at sync.h:139\n#8  CRPCTable::execute (this=this@entry=0x555555ebd9e0 <tableRPC>, \n    strMethod=..., params=...) at rpcserver.cpp:852\n#9  0x000055555573dd78 in ServiceConnection (conn=conn@entry=0x7fff700148b0)\n    at rpcserver.cpp:797\n#10 0x000055555573eb50 in RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > (acceptor=..., context=..., \n    fUseSSL=<optimized out>, conn=0x7fff700148b0, error=...)\n    at rpcserver.cpp:495\n#11 0x000055555574383a in operator()<void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, const boost::system::error_code&), boost::_bi::list1<const boost::system::error_code&> > (\n    f=@0x7fffa1669bf0: 0x55555573e940 <RPCAcceptHandler<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> >(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&)>, a=<synthetic pointer>, \n    this=0x7fffa1669bf8) at /usr/include/boost/bind/bind.hpp:525\n#12 operator()<boost::system::error_code> (a1=..., this=0x7fffa1669bf0)\n    at /usr/include/boost/bind/bind_template.hpp:47\n#13 operator() (this=0x7fffa1669bf0)\n    at /usr/include/boost/asio/detail/bind_handler.hpp:47\n#14 asio_handler_invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code> > (\n    function=<error reading variable: access outside bounds of object referenced via synthetic pointer>)\n    at /usr/include/boost/asio/handler_invoke_hook.hpp:64\n#15 invoke<boost::asio::detail::binder1<boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> >, boost::system::error_code>, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp> > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > > (context=..., function=...)\n    at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:37\n#16 boost::asio::detail::reactive_socket_accept_op<boost::asio::basic_socket<boost::asio::ip::tcp, boost::asio::stream_socket_service<boost::asio::ip::tcp> >, boost::asio::ip::tcp, boost::_bi::bind_t<void, void (*)(boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > >, boost::asio::ssl::context&, bool, AcceptedConnection*, boost::system::error_code const&), boost::_bi::list5<boost::_bi::value<boost::shared_ptr<boost::asio::basic_socket_acceptor<boost::asio::ip::tcp, boost::asio::socket_acceptor_service<boost::asio::ip::tcp> > > >, boost::reference_wrapper<boost::asio::ssl::context>, boost::_bi::value<bool>, boost::_bi::value<AcceptedConnectionImpl<boost::asio::ip::tcp>*>, boost::arg<1> (*)()> > >::do_complete (owner=0x7fffa8f6d120, base=<optimized out>)\n    at /usr/include/boost/asio/detail/reactive_socket_accept_op.hpp:123\n#17 0x000055555574518d in complete (bytes_transferred=0, ec=..., owner=..., \n    this=<optimized out>)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#18 boost::asio::detail::epoll_reactor::descriptor_state::do_complete (\n    owner=0x7fffa8f6d120, base=0x7fffa8f82520, ec=..., \n    bytes_transferred=<optimized out>)\n    at /usr/include/boost/asio/detail/impl/epoll_reactor.ipp:651\n#19 0x000055555574678e in complete (bytes_transferred=1, ec=..., owner=..., \n    this=0x7fffa8f82520)\n    at /usr/include/boost/asio/detail/task_io_service_operation.hpp:37\n#20 do_run_one (ec=..., this_thread=..., lock=..., this=0x7fffa8f6d120)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:384\n#21 boost::asio::detail::task_io_service::run (this=0x7fffa8f6d120, ec=...)\n    at /usr/include/boost/asio/detail/impl/task_io_service.ipp:153\n#22 0x0000555555747006 in boost::asio::io_service::run (this=0x7fffaf269300)\n    at /usr/include/boost/asio/impl/io_service.ipp:59\n#23 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#24 0x00007ffff58c9182 in start_thread (arg=0x7fffa166a700)\n    at pthread_create.c:312\n#25 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 19 (Thread 0x7fffa1ebb700 (LWP 6496)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x000055555571e28d in MilliSleep (n=900000) at util.h:97\n#6  LoopForever<void (*)()> (name=0x555555b38008 \"dumpaddr\", \n    func=0x555555711a70 <DumpAddresses()>, msecs=900000) at util.h:550\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffa1ebb700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 18 (Thread 0x7fffa270c700 (LWP 6495)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (mutex=0x7fffad00b000)\n    at ../nptl/pthread_mutex_lock.c:114\n#3  0x000055555561c0ad in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=0x7fffa270adb0) at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=0x7fffa270adb0) at ../../src/sync.h:118\n#7  CMutexLock<AnnotatedMixin<boost::recursive_mutex> >::CMutexLock (\n    this=0x7fffa270adb0, mutexIn=..., pszName=<optimized out>, \n    pszFile=<optimized out>, nLine=<optimized out>, fTry=<optimized out>)\n    at ../../src/sync.h:139\n#8  0x00005555557d295d in CWallet::Inventory (this=0x7fffad00aeb0, hash=...)\n    at wallet.h:354\n#9  0x00005555557004cc in operator() (a0=..., this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#10 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:363\n#11 operator() (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#12 dereference (this=0x7fffa270ae80)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#13 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, const uint256&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&)>, boost::function<void(const boost::signals2::connection&, const uint256&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > > (f=...)\n    at /usr/include/boost/iterator/iterator_facade.hpp:514\n#14 operator* (this=0x7fffa270ae80)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#15 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, const uint256&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&)>, boost::function<void(const boost::signals2::connection&, const uint256&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > > (this=<optimized out>, \n    first=..., last=...)\n    at /usr/include/boost/signals2/optional_last_value.hpp:55\n#16 operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, const uint256&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&)>, boost::function<void(const boost::signals2::connection&, const uint256&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const uint256&, boost::function<void(const uint256&)> >, boost::signals2::mutex> > > (this=<optimized out>, combiner=..., first=..., last=...)\n    at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:64\n#17 boost::signals2::detail::signal1_impl<void, uint256 const&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (uint256 const&)>, boost::function<void (boost::signals2::connection const&, uint256 const&)>, boost::signals2::mutex>::operator()(uint256 const&) (\n    this=<optimized out>, arg1=...)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#18 0x00005555556cca02 in operator() (arg1=..., \n    this=0x555555ebce80 <(anonymous namespace)::g_signals+96>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#19 ProcessMessage (pfrom=pfrom@entry=0x7fff8c004dd0, strCommand=..., \n    vRecv=...) at main.cpp:3606\n#20 0x00005555556cfde2 in ProcessMessages (pfrom=0x7fff8c004dd0)\n    at main.cpp:4124\n#21 0x000055555572b524 in operator() (a0=<optimized out>, \n    this=<optimized out>)\n    at /usr/include/boost/function/function_template.hpp:767\n#22 m_invoke (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:368\n#23 operator() (connectionBody=..., this=<optimized out>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:345\n#24 dereference (this=0x7fffa270bb30)\n    at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\n#25 dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (\n    f=...) at /usr/include/boost/iterator/iterator_facade.hpp:514\n#26 operator* (this=0x7fffa270bb30)\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\n#27 operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (\n    last=..., first=..., this=<optimized out>)\n    at /usr/include/boost/signals2/optional_last_value.hpp:34\n#28 operator()<boost::signals2::optional_last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > > (this=<optimized out>, last=..., \n    first=..., combiner=...)\n    at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\n#29 boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool (CNode*)>, boost::function<bool (boost::signals2::connection const&, CNode*)>, boost::signals2::mutex>::operator()(CNode*) (this=<optimized out>, \n    arg1=arg1@entry=0x7fff8c004dd0)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\n#30 0x0000555555716836 in operator() (arg1=0x7fff8c004dd0, \n    this=0x555555ebd738 <g_signals+24>)\n    at /usr/include/boost/signals2/detail/signal_template.hpp:695\n#31 ThreadMessageHandler () at net.cpp:1544\n#32 0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b38000 \"msghand\", \n    func=0x555555716620 <ThreadMessageHandler()>) at util.h:576\n#33 0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#34 0x00007ffff58c9182 in start_thread (arg=0x7fffa270c700)\n    at pthread_create.c:312\n#35 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 17 (Thread 0x7fffa2f5d700 (LWP 6494)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x0000555555709c43 in boost::condition_variable::wait (\n    this=0x7fffa8f6a7a0, m=...)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  0x000055555571390b in wait (this=0x7fffa8f6a7a0) at sync.h:185\n#3  Acquire (this=0x7fffa2f5ccc0) at sync.h:218\n#4  CSemaphoreGrant (fTry=false, sema=..., this=0x7fffa2f5ccc0) at sync.h:249\n#5  ThreadOpenConnections () at net.cpp:1299\n#6  0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b37ff8 \"opencon\", \n    func=0x555555713640 <ThreadOpenConnections()>) at util.h:576\n#7  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffa2f5d700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 16 (Thread 0x7fffa37ae700 (LWP 6493)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238\n#1  0x00007ffff754bacc in boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#2  0x00007ffff75484ba in boost::this_thread::hiden::sleep_for(timespec const&) () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#3  0x0000555555709924 in sleep_for (ns=<synthetic pointer>)\n    at /usr/include/boost/thread/pthread/thread_data.hpp:235\n#4  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...)\n    at /usr/include/boost/thread/v2/thread.hpp:53\n#5  0x0000555555714773 in MilliSleep (n=120000) at util.h:97\n#6  ThreadOpenAddedConnections () at net.cpp:1438\n#7  0x000055555571e373 in TraceThread<void (*)()> (\n    name=0x555555b37ff1 \"addcon\", \n    func=0x555555713f80 <ThreadOpenAddedConnections()>) at util.h:576\n#8  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#9  0x00007ffff58c9182 in start_thread (arg=0x7fffa37ae700)\n    at pthread_create.c:312\n#10 0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 15 (Thread 0x7fffa3fff700 (LWP 6492)):\n#0  0x00007ffff43d0c33 in select () at ../sysdeps/unix/syscall-template.S:81\n#1  0x0000555555715b6e in ThreadSocketHandler () at net.cpp:896\n#2  0x000055555571e373 in TraceThread<void (*)()> (name=0x555555b06813 \"net\", \n    func=0x5555557151e0 <ThreadSocketHandler()>) at util.h:576\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffa3fff700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 11 (Thread 0x7fffbd1b4700 (LWP 6471)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffbd1b4700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 10 (Thread 0x7fffbda05700 (LWP 6470)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffbda05700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 9 (Thread 0x7fffe2710700 (LWP 6469)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00005555556f7033 in wait (m=..., \n    this=0x555555ebcce8 <scriptcheckqueue+40>)\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x555555ebccc0 <scriptcheckqueue>, \n    fMaster=false) at checkqueue.h:95\n#3  0x00007ffff7547a4a in ?? ()\n   from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.54.0\n#4  0x00007ffff58c9182 in start_thread (arg=0x7fffe2710700)\n    at pthread_create.c:312\n#5  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 8 (Thread 0x7fffcf2dd700 (LWP 6463)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff62067be in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#6  0x00007ffff60d4c5f in QThread::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#7  0x00007ffff60d732f in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffcf2dd700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 7 (Thread 0x7fffe1ebf700 (LWP 6462)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#4  0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#5  0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#6  0x00007ffff60d4c5f in QThread::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#7  0x00007ffff60d732f in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#8  0x00007ffff58c9182 in start_thread (arg=0x7fffe1ebf700)\n    at pthread_create.c:312\n#9  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 4 (Thread 0x7fffe37b2700 (LWP 6458)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007ffff39c3129 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe37b2700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 3 (Thread 0x7fffe95de700 (LWP 6457)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c330a in g_main_loop_run ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007fffed561e16 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe95de700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 2 (Thread 0x7fffe9e2f700 (LWP 6456)):\n#0  0x00007ffff43cbfbd in poll () at ../sysdeps/unix/syscall-template.S:81\n#1  0x00007ffff39c2fe4 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#2  0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#3  0x00007fffe9e371ad in ?? ()\n   from /usr/lib/x86_64-linux-gnu/gio/modules/libdconfsettings.so\n#4  0x00007ffff39e7f15 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#5  0x00007ffff58c9182 in start_thread (arg=0x7fffe9e2f700)\n    at pthread_create.c:312\n#6  0x00007ffff43d930d in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n\nThread 1 (Thread 0x7ffff7fc77c0 (LWP 6454)):\n#0  __lll_lock_wait ()\n    at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\n#1  0x00007ffff58cb672 in _L_lock_953 ()\n   from /lib/x86_64-linux-gnu/libpthread.so.0\n#2  0x00007ffff58cb4da in __GI___pthread_mutex_lock (\n    mutex=0x555555ebcb80 <cs_main>) at ../nptl/pthread_mutex_lock.c:114\n#3  0x0000555555664d54 in lock (this=<optimized out>)\n    at /usr/include/boost/thread/pthread/recursive_mutex.hpp:110\n#4  lock (this=<optimized out>) at ../../src/sync.h:66\n#5  lock (this=<synthetic pointer>)\n    at /usr/include/boost/thread/lock_types.hpp:346\n#6  Enter (pszName=<optimized out>, pszFile=<optimized out>, \n    nLine=<optimized out>, this=<synthetic pointer>) at ../../src/sync.h:118\n#7  CMutexLock (fTry=false, nLine=196, \n    pszFile=0x555555afb29d \"transactiontablemodel.cpp\", \n    pszName=<optimized out>, mutexIn=..., this=<synthetic pointer>)\n    at ../../src/sync.h:139\n#8  TransactionTablePriv::index (this=0x555556729f20, idx=idx@entry=40217)\n    at transactiontablemodel.cpp:196\n#9  0x0000555555663a70 in TransactionTableModel::index (this=0x555556852420, \n    row=40217, column=0, parent=...) at transactiontablemodel.cpp:615\n#10 0x0000555555660d5d in TransactionFilterProxy::filterAcceptsRow (\n    this=0x555557aa5960, sourceRow=40217, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n#11 0x00007ffff6fccfd6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#12 0x00007ffff6fcd1cf in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#13 0x00007ffff61ed87a in QMetaObject::activate(QObject*, QMetaObject const*, int, void**) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#14 0x00007ffff6237664 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#15 0x00007ffff61d35ce in QAbstractItemModel::endInsertRows() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#16 0x00005555556659fc in TransactionTablePriv::updateWallet (\n    this=0x555556729f20, hash=..., status=status@entry=0)\n    at transactiontablemodel.cpp:156\n#17 0x000055555566405d in TransactionTableModel::updateTransaction (\n    this=0x555556852420, hash=..., status=0) at transactiontablemodel.cpp:255\n#18 0x0000555555614566 in WalletModel::updateTransaction (\n    this=this@entry=0x555556226790, hash=..., status=<optimized out>)\n    at walletmodel.cpp:127\n#19 0x000055555562cfdc in WalletModel::qt_static_metacall (_o=0x555556226790, \n    _c=<optimized out>, _id=<optimized out>, _a=0x7fff9158d220)\n    at moc_walletmodel.cpp:80\n#20 0x00007ffff61f1c1e in QObject::event(QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#21 0x00007ffff6a52e2c in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#22 0x00007ffff6a594a0 in QApplication::notify(QObject*, QEvent*) ()\n   from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#23 0x00007ffff61d94dd in QCoreApplication::notifyInternal(QObject*, QEvent*)\n    () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#24 0x00007ffff61dcb3d in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#25 0x00007ffff6206f83 in ?? () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#26 0x00007ffff39c2e04 in g_main_context_dispatch ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#27 0x00007ffff39c3048 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#28 0x00007ffff39c30ec in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#29 0x00007ffff62067a1 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#30 0x00007ffff6af4bb6 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4\n#31 0x00007ffff61d80af in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#32 0x00007ffff61d83a5 in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#33 0x00007ffff61ddb79 in QCoreApplication::exec() ()\n   from /usr/lib/x86_64-linux-gnu/libQtCore.so.4\n#34 0x00005555555b47e9 in main (argc=1, argv=<optimized out>)\n    at bitcoin.cpp:580\n(gdb) \n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41208538",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41209569,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA5NTY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41209569",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:20:09Z",
      "updated_at": "2014-04-23T20:20:09Z",
      "author_association": "MEMBER",
      "body": "Looking at just thread 1 it again seems the same problem. Would be interesting to see if DEBUG_LOCKORDER turns something up.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41209569",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41210392,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjEwMzky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41210392",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:27:45Z",
      "updated_at": "2014-04-23T20:27:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "It does:\n\n```\n2014-04-23 20:26:40 UpdateTip: new best=00000000000000002f4c09eee4cd30bb305bc28e048e8b0a4afd0ebb6ced16a7  height=297363  log2_work=78.174438  tx=37418866  date=2014-04-23 20:10:17 progress=0.999947\n2014-04-23 20:26:40 AddToWallet 838a56f87e9bb3f8690b19268b3d83dd7311cc53858e5c10bb683416ee6cbfc8  \n2014-04-23 20:26:40 ProcessBlock: ACCEPTED\n2014-04-23 20:27:05 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:27:05 Previous lock order was:\n2014-04-23 20:27:05  (1) wallet->cs_wallet  transactiontablemodel.cpp:99\n2014-04-23 20:27:05  (2) cs_main  transactiontablemodel.cpp:196\n2014-04-23 20:27:05 Current lock order is:\n2014-04-23 20:27:05  (2) cs_main  wallet.cpp:837\n2014-04-23 20:27:05  (1) cs_wallet  wallet.cpp:837\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41210392",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41210557,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjEwNTU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41210557",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:29:12Z",
      "updated_at": "2014-04-23T20:29:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "For the record, that is commit b45e335db \"Solve chainActive-related locking issues\"\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41210557",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41211098,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjExMDk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41211098",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:34:11Z",
      "updated_at": "2014-04-23T21:04:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "It happened again on the very next block:\n\n```\n2014-04-23 20:32:21 UpdateTip: new best=00000000000000005715cefa23772ecb945ac63695f48dc87bc7dcb529803e7d  height=297364  log2_work=78.174564  tx=37419550  date=2014-04-23 20:27:50 progress=0.999986\n2014-04-23 20:32:21 AddToWallet 5718101a513ba18d902f7a543590edd82dc0e0bd61d7327c2c16bd3a5544c913  \n2014-04-23 20:32:21 AddToWallet 1db71fe7dc58cef500d5c4ecef1e849618cf135ed05fe7f0158326643f38180a  \n2014-04-23 20:32:21 AddToWallet 934c59fcfacd33bd9fecd85b849c1933fc03784762b12abb2f13476e27ff8a5d  \n2014-04-23 20:32:21 ProcessBlock: ACCEPTED\n2014-04-23 20:32:27 receive version message: /[...]\n2014-04-23 20:32:27 Added time data, samples 4, offset -1 (+0 minutes)\n2014-04-23 20:32:43 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:32:43 Previous lock order was:\n2014-04-23 20:32:43  (1) wallet->cs_wallet  transactiontablemodel.cpp:99\n2014-04-23 20:32:43  (2) cs_main  transactiontablemodel.cpp:196\n2014-04-23 20:32:43 Current lock order is:\n2014-04-23 20:32:43  (2) cs_main  wallet.cpp:837\n2014-04-23 20:32:43  (1) cs_wallet  wallet.cpp:837\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41211098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41211486,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjExNDg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41211486",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T20:37:41Z",
      "updated_at": "2014-04-23T20:37:41Z",
      "author_association": "MEMBER",
      "body": "Argh, seems that you have an earlier revision of that pull, not the one that was merged into master (which is 55a1db4). We're debugging a problem that was solved even before pulling it into master.\nLet's just update to master HEAD.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41211486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41214577,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjE0NTc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41214577",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T21:04:24Z",
      "updated_at": "2014-04-23T21:04:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "I started it again.  This time I see a bunch of warnings but it hasn't locked up yet:\n\n```\n2014-04-23 20:46:19 Added time data, samples 5, offset -1 (+0 minutes)\n2014-04-23 20:46:19 nTimeOffset = +0  (+0 minutes)\n2014-04-23 20:46:53 receive version message: /[...]\n2014-04-23 20:46:53 Added time data, samples 6, offset -2 (+0 minutes)\n2014-04-23 20:46:53 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:46:53 Previous lock order was:\n2014-04-23 20:46:53  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 20:46:53  (1) cs_main  main.cpp:3245\n2014-04-23 20:46:53  cs_mapRelay  main.cpp:3325\n2014-04-23 20:46:53  (2) cs_vSend  net.h:449\n2014-04-23 20:46:53 Current lock order is:\n2014-04-23 20:46:53  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 20:46:53  (1) cs_main  main.cpp:4205\n2014-04-23 20:46:53  (1) cs_main  main.cpp:1313\n2014-04-23 20:46:59 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:46:59 Previous lock order was:\n2014-04-23 20:46:59  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 20:46:59  (1) cs_main  main.cpp:3245\n2014-04-23 20:46:59  cs_mapRelay  main.cpp:3325\n2014-04-23 20:46:59  (2) cs_vSend  net.h:449\n2014-04-23 20:46:59 Current lock order is:\n2014-04-23 20:46:59  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 20:46:59  (1) cs_main  main.cpp:4205\n2014-04-23 20:46:59  (1) cs_main  main.cpp:1313\n2014-04-23 20:47:06 receive version message: /[...]\n2014-04-23 20:47:06 Added time data, samples 7, offset +0 (+0 minutes)\n2014-04-23 20:47:06 nTimeOffset = +0  (+0 minutes)\n2014-04-23 20:47:22 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:47:22 Previous lock order was:\n2014-04-23 20:47:22  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 20:47:22  (1) cs_main  main.cpp:3245\n2014-04-23 20:47:22  cs_mapRelay  main.cpp:3325\n2014-04-23 20:47:22  (2) cs_vSend  net.h:449\n2014-04-23 20:47:22 Current lock order is:\n2014-04-23 20:47:22  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 20:47:22  (1) cs_main  main.cpp:4205\n2014-04-23 20:47:22  (1) cs_main  main.cpp:1313\n2014-04-23 20:47:43 receive version message: /[...]\n2014-04-23 20:47:43 Added time data, samples 8, offset -1 (+0 minutes)\n2014-04-23 20:47:47 receive version message: /[...]\n2014-04-23 20:47:47 Added time data, samples 9, offset +0 (+0 minutes)\n2014-04-23 20:47:47 nTimeOffset = +0  (+0 minutes)\n2014-04-23 20:48:26 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:48:26 Previous lock order was:\n2014-04-23 20:48:26  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 20:48:26  (1) cs_main  main.cpp:3245\n2014-04-23 20:48:26  cs_mapRelay  main.cpp:3325\n2014-04-23 20:48:26  (2) cs_vSend  net.h:449\n2014-04-23 20:48:26 Current lock order is:\n2014-04-23 20:48:26  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 20:48:26  (1) cs_main  main.cpp:4205\n2014-04-23 20:48:26  (1) cs_main  main.cpp:1313\n2014-04-23 20:52:01 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:52:01 Previous lock order was:\n2014-04-23 20:52:01  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 20:52:01  (1) cs_main  main.cpp:3245\n2014-04-23 20:52:01  cs_mapRelay  main.cpp:3325\n2014-04-23 20:52:01  (2) cs_vSend  net.h:449\n2014-04-23 20:52:01 Current lock order is:\n2014-04-23 20:52:01  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 20:52:01  (1) cs_main  main.cpp:4205\n2014-04-23 20:52:01  (1) cs_main  main.cpp:1313\n2014-04-23 20:55:26 POTENTIAL DEADLOCK DETECTED\n2014-04-23 20:55:26 Previous lock order was:\n2014-04-23 20:55:26  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 20:55:26  (1) cs_main  main.cpp:3245\n2014-04-23 20:55:26  cs_mapRelay  main.cpp:3325\n2014-04-23 20:55:26  (2) cs_vSend  net.h:449\n2014-04-23 20:55:26 Current lock order is:\n2014-04-23 20:55:26  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 20:55:26  (1) cs_main  main.cpp:4205\n2014-04-23 20:55:26  (1) cs_main  main.cpp:1313\n2014-04-23 21:03:45 POTENTIAL DEADLOCK DETECTED\n2014-04-23 21:03:45 Previous lock order was:\n2014-04-23 21:03:45  pnode->cs_vRecvMsg  net.cpp:1541\n2014-04-23 21:03:45  (1) cs_main  main.cpp:3245\n2014-04-23 21:03:45  cs_mapRelay  main.cpp:3325\n2014-04-23 21:03:45  (2) cs_vSend  net.h:449\n2014-04-23 21:03:45 Current lock order is:\n2014-04-23 21:03:45  (2) pnode->cs_vSend  net.cpp:1560\n2014-04-23 21:03:45  (1) cs_main  main.cpp:4205\n2014-04-23 21:03:45  (1) cs_main  main.cpp:1313\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41214577",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41220141,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjIwMTQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41220141",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-23T21:58:31Z",
      "updated_at": "2014-04-23T21:58:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "OK, I rebuilt from HEAD, and haven't seen it hang since.  I still get warnings like these:\n\n```\n2014-04-23 21:52:39 Added time data, samples 8, offset +0 (+0 minutes)\n2014-04-23 21:52:56 POTENTIAL DEADLOCK DETECTED\n2014-04-23 21:52:56 Previous lock order was:\n2014-04-23 21:52:56  pnode->cs_vRecvMsg  net.cpp:1537\n2014-04-23 21:52:56  (1) cs_main  main.cpp:3246\n2014-04-23 21:52:56  cs_mapRelay  main.cpp:3326\n2014-04-23 21:52:56  (2) cs_vSend  net.h:449\n2014-04-23 21:52:56 Current lock order is:\n2014-04-23 21:52:56  (2) pnode->cs_vSend  net.cpp:1556\n2014-04-23 21:52:56  (1) cs_main  main.cpp:4206\n2014-04-23 21:52:56  (1) cs_main  main.cpp:1313\n2014-04-23 21:53:47 receive version message: /Satoshi:0.8.5/:\n2014-04-23 21:53:47 Added time data, samples 9, offset +14 (+0 minutes)\n2014-04-23 21:53:47 nTimeOffset = -2  (+0 minutes)\n2014-04-23 21:56:50 POTENTIAL DEADLOCK DETECTED\n2014-04-23 21:56:50 Previous lock order was:\n2014-04-23 21:56:50  pnode->cs_vRecvMsg  net.cpp:1537\n2014-04-23 21:56:50  (1) cs_main  main.cpp:3246\n2014-04-23 21:56:50  cs_mapRelay  main.cpp:3326\n2014-04-23 21:56:50  (2) cs_vSend  net.h:449\n2014-04-23 21:56:50 Current lock order is:\n2014-04-23 21:56:50  (2) pnode->cs_vSend  net.cpp:1556\n2014-04-23 21:56:50  (1) cs_main  main.cpp:4206\n2014-04-23 21:56:50  (1) cs_main  main.cpp:1313\n2014-04-23 21:56:51 POTENTIAL DEADLOCK DETECTED\n2014-04-23 21:56:51 Previous lock order was:\n2014-04-23 21:56:51  pnode->cs_vRecvMsg  net.cpp:1537\n2014-04-23 21:56:51  (1) cs_main  main.cpp:3246\n2014-04-23 21:56:51  cs_mapRelay  main.cpp:3326\n2014-04-23 21:56:51  (2) cs_vSend  net.h:449\n2014-04-23 21:56:51 Current lock order is:\n2014-04-23 21:56:51  (2) pnode->cs_vSend  net.cpp:1556\n2014-04-23 21:56:51  (1) cs_main  main.cpp:4206\n2014-04-23 21:56:51  (1) cs_main  main.cpp:1313\n2014-04-23 21:57:06 ERROR: CheckTransaction() : vin empty\n2014-04-23 21:57:06 ERROR: AcceptToMemoryPool: : CheckTransaction failed\n2014-04-23 21:57:06 POTENTIAL DEADLOCK DETECTED\n2014-04-23 21:57:06 Previous lock order was:\n2014-04-23 21:57:06  pnode->cs_vRecvMsg  net.cpp:1537\n2014-04-23 21:57:06  (1) cs_main  main.cpp:3718\n2014-04-23 21:57:06  (2) cs_vSend  net.h:449\n2014-04-23 21:57:06 Current lock order is:\n2014-04-23 21:57:06  (2) pnode->cs_vSend  net.cpp:1556\n2014-04-23 21:57:06  (1) cs_main  main.cpp:4206\n2014-04-23 21:57:06  (1) cs_main  main.cpp:1313\n```\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41220141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41232291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMyMjkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41232291",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-24T00:54:35Z",
      "updated_at": "2014-04-24T00:54:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "I rebuilt against HEAD, but found a few transactions were missing / conflicted - presumably from all the times I quit it when it hung earlier.  So I'm running with -zapwallettxes to get rid of the confusion, and that's going to take about 14 hours to run, if it continues at the current speed.  Ugh.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41232291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "commented",
      "id": 41253078,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjUzMDc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41253078",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-24T07:56:37Z",
      "updated_at": "2014-04-24T07:56:37Z",
      "author_association": "MEMBER",
      "body": "@dooglus so it appears that there are some locking inconsistencies in the network code. This is unrelated to the activechain-related locking issues (which only dealt with cs_main and cs_wallet) but worth creating a new issue for.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41253078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "mentioned",
      "id": 114621766,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE0NjIxNzY2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/114621766",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-24T07:56:37Z"
    },
    {
      "event": "subscribed",
      "id": 114621767,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExNDYyMTc2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/114621767",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-24T07:56:37Z"
    },
    {
      "event": "commented",
      "id": 41255080,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU1MDgw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41255080",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-24T08:23:38Z",
      "updated_at": "2014-04-24T08:23:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "The -zapwallettxes is still running: http://pastie.org/9107067\n\nWhen that's done, I'll see if I'm still getting the lock order warnings and make a new issue.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/3997#issuecomment-41255080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997"
    },
    {
      "event": "referenced",
      "id": 197377055,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NzM3NzA1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/197377055",
      "actor": {
        "login": "MathyV",
        "id": 6393603,
        "node_id": "MDQ6VXNlcjYzOTM2MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6393603?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MathyV",
        "html_url": "https://github.com/MathyV",
        "followers_url": "https://api.github.com/users/MathyV/followers",
        "following_url": "https://api.github.com/users/MathyV/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MathyV/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MathyV/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MathyV/subscriptions",
        "organizations_url": "https://api.github.com/users/MathyV/orgs",
        "repos_url": "https://api.github.com/users/MathyV/repos",
        "events_url": "https://api.github.com/users/MathyV/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MathyV/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bf1b8ab64e2fe6b1b9e4ba06d95e1e656a03deea",
      "commit_url": "https://api.github.com/repos/reddcoin-project/reddcoin/commits/bf1b8ab64e2fe6b1b9e4ba06d95e1e656a03deea",
      "created_at": "2014-11-23T22:32:15Z"
    },
    {
      "event": "locked",
      "id": 5271984267,
      "node_id": "LOE_lADOABII584B1MVMzwAAAAE6PBiL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271984267",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:29:01Z",
      "lock_reason": "resolved"
    }
  ]
}