{
  "type": "issue",
  "issue": {
    "id": 712225587,
    "node_id": "MDU6SXNzdWU3MTIyMjU1ODc=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/20049",
    "number": 20049,
    "state": "closed",
    "state_reason": "completed",
    "title": "De-globalizing ChainstateManager",
    "body": "## Update\r\n\r\nDraft overall changeset published in #20158, closing this in favor of discussing in #20158.\r\n\r\n## Prelude\r\nFrom my reading of past conversations and from a few offline chats, it seems that modularizing our consensus engine is a worthwhile first step towards a more complete isolation of said engine from non-consensus code.\r\n\r\nModularizing our consensus engine means that:\r\n\r\n1. We get clearer visibility into what currently lies in consensus codepaths **and** what depends on our consensus engine\r\n1. We can coalesce duplicate consensus initialization codepaths, mitigating against bugs that arise out of test/non-test initialization inconsistencies\r\n\r\n## De-globalizing `g_chainman`\r\n\r\nIn order to modularize our consensus engine, we need to first de-globalize the global `ChainstateManager` -- namely `g_chainman` -- as it and its dependencies are what makes up the bulk of our consensus engine. A few direct references to `g_chainman` have already been removed in #19927, however, its indirect uses (mainly via `::Chain(state|)Active()`) are numerous in our codebase and often used to ~~cheat~~ avoid obtaining a `ChainstateManager` reference.\r\n\r\nIn a series of PRs, I plan to remove the `g_chainman` global and ensure that codepaths which depend on our consensus engine have a non-global reference to the object they require (be it `ChainstateManger`, `CChainState`, `BlockManager`, or something more specific).\r\n\r\n### Order of commits\r\n\r\nAfter having reorganized my commits a few times, I've realized that the ordering of commits can drastically influence both the review complexity of each diff and the number of commits needed in total to achieve the same thing. My current approach is basically to \"continuously trim the leaves of the g_chainman call graph\".\r\n\r\nTake, as an example, the following call graph where all of these functions either directly or indirectly reference `g_chainman`/`::Chain(state|)Active()`:\r\n\r\n![ChainmanCall](https://user-images.githubusercontent.com/3445290/94731545-7c270400-0354-11eb-8725-046f53a2bcde.png)\r\n\r\nI can start with `Qux`, and do the following:\r\n1. Does it need all of `ChainstateManger`? Or does it just need a `CChainState`? Or just a `BlockManager`? Or just the `ChainstateManager::ActiveTip()`?\r\n2. If it already has the reference that it needs (as a member of the class it belongs to, as a function parameter, etc.) -> Use it\r\n3. If we're dealing with a function which looks like it should be a member of a class that would have that reference -> Move the function to that class\r\n4. Otherwise, we need to pass the reference to `Qux`.\r\n\r\nWhen we have to invoke the last two options, we propagate the dependency on `g_chainman`/`::Chain(state|)Active()` up to `Wibble` and `Wobble`. In the case of (3), it'll look something like `::ChainstateActive().Qux()`; whereas in the case of (4), it'll look something like `Qux(::ChainstateActive())`. \r\n\r\nThis mean that, for some functions (`LookupBlockIndex` being the main culprit), a resolution of their dependency on the `g_chainman`/`::Chain(state|)Active()` globals results in an increase in apparent references to `g_chainman`/`::Chain(state|)Active()`. However, it is important to note that these are not _new_ dependencies by any means, those dependency were always there -- they was just hidden by `Qux`'s use of the globals. Furthermore, all of these \"new\" apparent references to `g_chainman`/`::Chain(state|)Active()` will be dealt with as we prune the call graph upward.\r\n\r\n### Current status\r\n\r\nRight now, I have a working branch https://github.com/bitcoin/bitcoin/compare/master...dongcarl:2020-09-libbitcoinruntime-v5, which resolves of all the `g_chainman`/`::Chain(state|)Active()` global calls in `validation.{cpp,h}`. I noticed that for resolving these calls in validation, there are 3 somewhat distinct bundles that have a natural ordering:\r\n\r\n1. A bundle of functions that are related to `::LookupBlockIndex` in the call graph (see: #20050)\r\n2. A bundle of functions that are mempool-related\r\n\t- This has a dependency on bundle (1) as `MemPoolAccept::PreChecks` calls `::GetSpendHeight`, which is in bundle (1) as it calls `LookupBlockIndex`\r\n3. A bundle of functions which are not related to either\r\n\t-  This has a dependency on bundle (2) as `CChainState::{ActivateBestChainStep,InvalidateBlock}` both call `::UpdateMempoolForReorg` which is in bundle (2)\r\n\r\nI believe this bundling naturally splits up the validation cleanup into 3 pull requests, each touching around 12 functions.\r\n\r\nI'm still organizing the rest the non-validation commits and will be pushing that up when it's ready.\r\n\r\n**Note to reviewers**: At this stage I would very much like to get a sanity check on my approach to make sure that there isn't a better way to organize my commits that I've missed.",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      },
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 1392286103,
        "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
        "name": "Needs Conceptual Review",
        "description": "",
        "color": "fef2c0",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 6,
    "closed_at": "2020-10-15T18:29:32Z",
    "created_at": "2020-09-30T19:37:56Z",
    "updated_at": "2022-02-15T11:04:39Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 3826143330,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM4MjYxNDMzMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3826143330",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T19:37:56Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "labeled",
      "id": 3827551025,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM4Mjc1NTEwMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3827551025",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T05:23:16Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "labeled",
      "id": 3827551027,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM4Mjc1NTEwMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3827551027",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T05:23:16Z",
      "label": {
        "name": "Needs Conceptual Review",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 701937823,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTkzNzgyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701937823",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T07:12:44Z",
      "updated_at": "2020-10-01T07:12:44Z",
      "author_association": "MEMBER",
      "body": "> Furthermore, all of these \"new\" apparent references to g_chainman/::Chain(state|)Active() will be dealt with as we prune the call graph upward\r\n\r\nI can understand that mechanically using the global might reduce review burden and is \"trivially correct\", but if there is a class that simply depends on the chainstate or block tree (like `BaseIndex` or `PeerManager` or ...) it might be best to pass it a reference to the chainstatemanager as early as possible. Otherwise your diffs will look like `implicit global -> g_chainman -> m_chainman` instead of just a direct replacement `implicit global -> m_chainman`.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/20049#issuecomment-701937823",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049"
    },
    {
      "event": "commented",
      "id": 702323178,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjMyMzE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702323178",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T18:37:16Z",
      "updated_at": "2020-10-01T18:37:16Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke I found it much easier for reasoning and for rebases to have each commit focus on one function and do mechanical changes for its callers because:\r\n\r\n1. Say that the function in focus references `BlockManager`, we may think that the function's caller only needs `BlockManager` right now, but it may turn out that the caller calls another function which references `::ChainstateActive()` that we haven't pruned yet and we won't know what the caller actually needs until we've pruned _everything_ under the caller.\r\n1. Doing mechanical changes allows us to express more of the changeset as scripted-diffs. Which, for a large, mostly move-only project like this one, will make review and rebases a lot easier.\r\n    - A scripted-diff example of `implicit global -> g_chainman`: [`0e101a0` (#20050)](https://github.com/bitcoin/bitcoin/pull/20050/commits/0e101a01832f8f799326faba27ffc97d73f8b434)\r\n\t- A scripted-diff example of `g_chainman -> m_chainman`: This is unpublished but I do something similar to the below for `rest.cpp`, `rpc/`, `tests/`, `interfaces/node.cpp`, `interfaces/chain.cpp`, etc.\r\n\t```\r\n\t-BEGIN VERIFY SCRIPT-\r\n    sed -i -e 's/g_chainman/EnsureChainman(context)/g' -- src/rest.cpp\r\n    sed -i -e 's/::Chain\\(state\\|\\)Active()/EnsureChainman(context).ActiveChain\\1()/g' -- src/rest.cpp\r\n    -END VERIFY SCRIPT-\r\n\t```\r\n\tNote that each \"module\" (`rest`/`rpc`/`tests`/etc) in our codebase may reference `ChainstateManager`/`CChainState`/etc slightly differently. So even though doing the caller changes mechanically may look ugly in intermediary commits, they:\r\n\t1. Are easier to reason about w/re correctness\r\n\t2. Delay having to think about the \"module-specific\" way to reference objects until we've pruned up to said module, whereby they will 100% be cleaned up and in a lot of cases we can apply a \"module-specific\" `scripted-diff` like above.\r\n\r\nHaving said all that, the above is just my personal take on how to bring some sanity to this unruly call graph (~40 commits just to clean up `validation`). I do understand that at the end of the day, what matters is what is clearer for reviewers, so if the benefits I described above do not sound worthwhile, I'd be happy to go with whatever reviewers think is best! :relaxed: ",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/20049#issuecomment-702323178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049"
    },
    {
      "event": "mentioned",
      "id": 3830920260,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgzMDkyMDI2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3830920260",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T18:37:17Z"
    },
    {
      "event": "subscribed",
      "id": 3830920262,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MzA5MjAyNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3830920262",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T18:37:17Z"
    },
    {
      "event": "commented",
      "id": 702581052,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjU4MTA1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702581052",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-02T07:47:30Z",
      "updated_at": "2020-10-02T07:47:30Z",
      "author_association": "MEMBER",
      "body": "> we may think that the function's caller only needs BlockManager \r\n\r\nIf this is a concern, the functions that implicitly rely on chainman (not just blockman) could be de-globalized first, and the blockmanager ones later. Though, if there already is a chainman reference in scope (like https://github.com/bitcoin/bitcoin/pull/20050#discussion_r498019133) it should be safe to assume that the chainman is actually required, no?  \r\n\r\n> allows us to express more of the changeset as scripted-diffs\r\n\r\nReplacing (an implicit) g_chainman in rpc code with `EnsureChainman(context)` is correct, but seems overly verbose code and maybe also confusing. I'd find an RPC easier to read if the requirements were listed in the first lines of the method. Similar how we get the wallet reference early on in wallet rpc, we should get a chainman reference early in chain rpcs. The remainder of the changes can still be done with a scripted diff.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/20049#issuecomment-702581052",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049"
    },
    {
      "event": "commented",
      "id": 702980298,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjk4MDI5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702980298",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-02T22:13:31Z",
      "updated_at": "2020-10-02T22:13:31Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke\r\n\r\n> if there already is a chainman reference in scope (like https://github.com/bitcoin/bitcoin/pull/20050#discussion_r498019133) it should be safe to assume that the chainman is actually required, no?\r\n\r\nAgreed!\r\n\r\n> Replacing (an implicit) g_chainman in rpc code with `EnsureChainman(context)` is correct, but seems overly verbose code and maybe also confusing. I'd find an RPC easier to read if the requirements were listed in the first lines of the method. Similar how we get the wallet reference early on in wallet rpc, we should get a chainman reference early in chain rpcs. The remainder of the changes can still be done with a scripted diff.\r\n\r\nAgreed w/re the RPCs, will fix that up on my local branch!\r\n\r\n-----\r\n\r\nI apologize in advance as I feel like I've not yet fully understood why you want the diffs to be organized the way you described. To me, ease-of-review and correctness is the most important thing, even if intermediary commits look a bit ugly, and especially when that ugliness will go away in followups. At the same time, it is super important to me that I'm not doing anything that makes review harder, so I very much value your honest feedback!\r\n\r\nIn order for me to better understand your thinking, perhaps we can go through a concrete example: the commits where I \"prune a leaf\" by moving `LookupBlockIndex` to `BlockManager` in #20050. Namely: ace764fdb0e749d47d8e6bb500f3bb96f45a9d28 and 0e101a01832f8f799326faba27ffc97d73f8b434. What I think you're proposing is that instead of leaving the \"use the right local reference\" work until we prune up to the caller, we should either add on to the first commit ace764fdb0e749d47d8e6bb500f3bb96f45a9d28 or have an additional commit which uses local references to `ChainstateManager` as soon as possible like so:\r\n\r\n1. For `src/rpc` calls to `LookupBlockIndex`\r\n\t1. Insert a `ChainstateManager chainman = EnsureChainman(request.context)` at the beginning of each lambda I touch if not already there\r\n\t1. Use the inserted chainman for `LookupBlockIndex` like: `chainman.m_blockman.LookupBlockIndex(...)`\r\n1. For `src/interfaces` calls to `LookupBlockIndex`\r\n\t1. Use `m_node.chainman->m_blockman` for `LookupBlockIndex` like: `m_node.chainman->m_blockman.LookupBlockIndex(...)`\r\n1. For `src/net_processing.cpp` `PeerManager` methods that call `LookupBlockIndex`\r\n\t1. Use `m_chainman` for for `LookupBlockIndex` like: `m_chainman.m_blockman.LookupBlockIndex(...)`\r\n1. For `src/test` calls to `LookupBlockIndex`\r\n\t1. Use `m_node.chainman->m_blockman` for `LookupBlockIndex` like: `m_node.chainman->m_blockman.LookupBlockIndex(...)`\r\n\r\nI also want to know what you mean by:\r\n\r\n> if there is a class that simply depends on the chainstate or block tree (like `BaseIndex` or `PeerManager` or ...) it might be best to pass it a reference to the chainstatemanager as early as possible\r\n\r\nRight now, I add an `m_chainstate` member to `BaseIndex` once I've pruned everything underneath it. It seems that you would like for that member to be added as early as possible, and I'm guessing it's so we can use it while pruning `LookupBlockIndex` like so:\r\n\r\n1. For `src/index` calls to `LookupBlockIndex`\r\n\t1. Use `m_chainstate.m_blockman` for `LookupBlockIndex` like: `m_chainstate.m_blockman.LookupBlockIndex(...)`\r\n\r\nPlease let me know if I'm understanding you correctly, and thank you for your patience with me :sweat_smile: ",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/20049#issuecomment-702980298",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049"
    },
    {
      "event": "mentioned",
      "id": 3835808069,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgzNTgwODA2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3835808069",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-02T22:13:31Z"
    },
    {
      "event": "subscribed",
      "id": 3835808071,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MzU4MDgwNzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3835808071",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-02T22:13:32Z"
    },
    {
      "event": "commented",
      "id": 703056732,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzA1NjczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703056732",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-03T06:44:48Z",
      "updated_at": "2020-10-03T06:44:48Z",
      "author_association": "MEMBER",
      "body": "Yes, conceptually that is what I wanted to say. Though, as the end result is the same, I am happy to review either path that goes there.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/20049#issuecomment-703056732",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049"
    },
    {
      "event": "commented",
      "id": 709512138,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTUxMjEzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709512138",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T18:29:32Z",
      "updated_at": "2020-10-15T18:29:32Z",
      "author_association": "MEMBER",
      "body": "Draft overall changeset published in #20158, closing this in favor of discussing in #20158.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/20049#issuecomment-709512138",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20049"
    },
    {
      "event": "closed",
      "id": 3883013322,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mzg4MzAxMzMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3883013322",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T18:29:33Z"
    },
    {
      "event": "locked",
      "id": 6074017253,
      "node_id": "LOE_lADOABII584qc7MzzwAAAAFqCiXl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074017253",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:04:39Z",
      "lock_reason": "resolved"
    }
  ]
}