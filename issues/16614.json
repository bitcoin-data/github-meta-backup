{
  "type": "issue",
  "issue": {
    "id": 480795215,
    "node_id": "MDU6SXNzdWU0ODA3OTUyMTU=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16614",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16614/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16614/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16614/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/16614",
    "number": 16614,
    "state": "closed",
    "state_reason": "completed",
    "title": "feature_pruning intermittent failure",
    "body": "Node 3 fails to shut down after creating the big chain. Note that the nodes are successfully synced.\r\n\r\ncommit b499d8576f30d13dfe9000852afe47ee1c28cfbe (current master)\r\n\r\nCPU: Cortex-A53\r\nStorage: USB thumb drive (ext4)\r\n\r\nExcerpt:\r\n\r\n```\r\nnode0 2019-08-14T06:29:37.079325Z [httpworker.0] ThreadRPCServer method=getbestblockhash user=__cookie__ \r\n node1 2019-08-14T06:29:37.083038Z [http] Received a POST request for / from 127.0.0.1:33462 \r\n node1 2019-08-14T06:29:37.083290Z [httpworker.2] ThreadRPCServer method=getbestblockhash user=__cookie__ \r\n node2 2019-08-14T06:29:37.086935Z [http] Received a POST request for / from 127.0.0.1:53415 \r\n node2 2019-08-14T06:29:37.087197Z [httpworker.2] ThreadRPCServer method=getbestblockhash user=__cookie__ \r\n node3 2019-08-14T06:29:37.090709Z [http] Received a POST request for / from 127.0.0.1:53069 \r\n node3 2019-08-14T06:29:37.090965Z [httpworker.0] ThreadRPCServer method=getbestblockhash user=__cookie__ \r\n node4 2019-08-14T06:29:37.094709Z [http] Received a POST request for / from 127.0.0.1:38946 \r\n node4 2019-08-14T06:29:37.094986Z [httpworker.3] ThreadRPCServer method=getbestblockhash user=__cookie__ \r\n test  2019-08-14T06:29:37.096000Z TestFramework.node3 (DEBUG): Stopping node \r\n node3 2019-08-14T06:29:37.098496Z [http] Received a POST request for / from 127.0.0.1:53069 \r\n node3 2019-08-14T06:29:37.098716Z [httpworker.1] ThreadRPCServer method=stop user=__cookie__ \r\n node3 2019-08-14T06:29:37.253095Z [init] Interrupting HTTP server \r\n node3 2019-08-14T06:29:37.253290Z [init] Interrupting HTTP RPC server \r\n node3 2019-08-14T06:29:37.253334Z [init] Interrupting RPC \r\n node3 2019-08-14T06:29:37.253394Z [init] Shutdown: In progress... \r\n node3 2019-08-14T06:29:37.253453Z [addcon] addcon thread exit \r\n node3 2019-08-14T06:29:37.253553Z [shutoff] Stopping HTTP RPC server \r\n node3 2019-08-14T06:29:37.253600Z [shutoff] Unregistering HTTP handler for / (exactmatch 1) \r\n node3 2019-08-14T06:29:37.253639Z [shutoff] Unregistering HTTP handler for /wallet/ (exactmatch 0) \r\n node3 2019-08-14T06:29:37.253675Z [shutoff] Stopping RPC \r\n node3 2019-08-14T06:29:37.254002Z [shutoff] RPC stopped. \r\n node3 2019-08-14T06:29:37.254039Z [shutoff] Stopping HTTP server \r\n node3 2019-08-14T06:29:37.254071Z [shutoff] Waiting for HTTP worker threads to exit \r\n node3 2019-08-14T06:29:37.254254Z [shutoff] Waiting for HTTP event thread to exit \r\n node3 2019-08-14T06:29:37.254307Z [http] Exited http event loop \r\n node3 2019-08-14T06:29:37.254421Z [opencon] opencon thread exit \r\n node3 2019-08-14T06:29:37.254505Z [shutoff] Stopped HTTP server \r\n node3 2019-08-14T06:29:37.254556Z [shutoff] BerkeleyEnvironment::Flush: [/media/root/d33157a4-698b-4041-9228-773d8c578807/test_runner_root_001/test_runner_‚Çø_üèÉ_20190814_061943/feature_pruning_126/node3/regtest/wallets] Flush(false) \r\n node3 2019-08-14T06:29:37.254593Z [shutoff] BerkeleyEnvironment::Flush: Flush(false) took               0ms \r\n node3 2019-08-14T06:29:37.277901Z [msghand] msghand thread exit \r\n node3 2019-08-14T06:29:37.296390Z [net] net thread exit \r\n node0 2019-08-14T06:29:47.791668Z [msghand] sending ping (8 bytes) peer=0 \r\n node1 2019-08-14T06:29:48.296300Z [msghand] received: ping (8 bytes) peer=0 \r\n node1 2019-08-14T06:29:48.296416Z [msghand] sending pong (8 bytes) peer=0 \r\n node0 2019-08-14T06:29:48.296818Z [msghand] sending ping (8 bytes) peer=1 \r\n node2 2019-08-14T06:29:48.297144Z [msghand] received: ping (8 bytes) peer=1 \r\n node0 2019-08-14T06:29:48.297146Z [msghand] sending ping (8 bytes) peer=2 \r\n node2 2019-08-14T06:29:48.297283Z [msghand] sending pong (8 bytes) peer=1 \r\n node0 2019-08-14T06:29:48.297308Z [msghand] sending ping (8 bytes) peer=3 \r\n node0 2019-08-14T06:29:48.297675Z [msghand] received: pong (8 bytes) peer=0 \r\n node0 2019-08-14T06:29:48.297778Z [msghand] received: pong (8 bytes) peer=1 \r\n node4 2019-08-14T06:29:48.297926Z [msghand] received: ping (8 bytes) peer=0 \r\n node4 2019-08-14T06:29:48.298011Z [msghand] sending pong (8 bytes) peer=0 \r\n node0 2019-08-14T06:29:48.298324Z [msghand] received: pong (8 bytes) peer=3 \r\n node3 2019-08-14T06:29:48.331208Z [shutoff] Flushed 0 addresses to peers.dat  11035ms \r\n node3 2019-08-14T06:29:48.331290Z [shutoff] disconnecting peer=0 \r\n node3 2019-08-14T06:29:48.331453Z [shutoff] Cleared nodestate for peer=0 \r\n node0 2019-08-14T06:29:48.331708Z [net] socket recv error Connection reset by peer (104) \r\n node0 2019-08-14T06:29:48.331764Z [net] disconnecting peer=2 \r\n node3 2019-08-14T06:29:48.331825Z [scheduler] scheduler thread interrupt \r\n node0 2019-08-14T06:29:48.331846Z [net] Cleared nodestate for peer=2 \r\n test  2019-08-14T06:30:37.184000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: '''' \r\n                                       def is_node_stopped(self):\r\n                                           \"\"\"Checks whether the node has stopped.\r\n                                           Returns True if the node has stopped. False otherwise.\r\n                                           This method is responsible for freeing resources (self.process).\"\"\"\r\n                                           if not self.running:\r\n                                               return True\r\n                                           return_code = self.process.poll()\r\n                                           if return_code is None:\r\n                                               return False\r\n                                           # process has stopped. Assert that it didn't return an error code.\r\n                                           assert return_code == 0, self._node_msg(\r\n                                               \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n                                           self.running = False\r\n                                           self.process = None\r\n                                           self.rpc_connected = False\r\n                                           self.rpc = None\r\n                                           self.log.debug(\"Node stopped\")\r\n                                           return True\r\n                                   '''\r\n test  2019-08-14T06:30:37.185000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/root/workspace/bitcoin-core/test/functional/test_framework/test_framework.py\", line 194, in main\r\n                                       self.run_test()\r\n                                     File \"/root/workspace/bitcoin-core/test/functional/feature_pruning.py\", line 365, in run_test\r\n                                       self.stop_node(3)\r\n                                     File \"/root/workspace/bitcoin-core/test/functional/test_framework/test_framework.py\", line 393, in stop_node\r\n                                       self.nodes[i].wait_until_stopped()\r\n                                     File \"/root/workspace/bitcoin-core/test/functional/test_framework/test_node.py\", line 306, in wait_until_stopped\r\n                                       wait_until(self.is_node_stopped, timeout=timeout)\r\n                                     File \"/root/workspace/bitcoin-core/test/functional/test_framework/util.py\", line 225, in wait_until\r\n                                       raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\n                                   AssertionError: Predicate ''''\r\n                                       def is_node_stopped(self):\r\n                                           \"\"\"Checks whether the node has stopped.\r\n                                           Returns True if the node has stopped. False otherwise.\r\n                                           This method is responsible for freeing resources (self.process).\"\"\"\r\n                                           if not self.running:\r\n                                               return True\r\n                                           return_code = self.process.poll()\r\n                                           if return_code is None:\r\n                                               return False\r\n                                           # process has stopped. Assert that it didn't return an error code.\r\n                                           assert return_code == 0, self._node_msg(\r\n                                               \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n                                           self.running = False\r\n                                           self.process = None\r\n                                           self.rpc_connected = False\r\n                                           self.rpc = None\r\n                                           self.log.debug(\"Node stopped\")\r\n                                           return True\r\n                                   ''' not true after 60 seconds\r\n",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 1,
    "closed_at": "2021-03-08T13:04:59Z",
    "created_at": "2019-08-14T17:18:54Z",
    "updated_at": "2022-08-18T19:52:56Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 2557337834,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NTczMzc4MzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2557337834",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-14T17:23:20Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 521341965,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTM0MTk2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521341965",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-14T17:29:49Z",
      "updated_at": "2019-08-14T17:29:49Z",
      "author_association": "MEMBER",
      "body": "It might just be busy flushing the utxo set on shutdown?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/16614#issuecomment-521341965",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16614"
    },
    {
      "event": "closed",
      "id": 4421167935,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDQyMTE2NzkzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4421167935",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T13:04:59Z"
    },
    {
      "event": "locked",
      "id": 7217165356,
      "node_id": "LOE_lADOABII584cqFpPzwAAAAGuLTQs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7217165356",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T19:52:56Z",
      "lock_reason": "resolved"
    }
  ]
}