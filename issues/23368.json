{
  "type": "issue",
  "issue": {
    "id": 1037103014,
    "node_id": "I_kwDOABII58490O-m",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/23368",
    "number": 23368,
    "state": "closed",
    "state_reason": "completed",
    "title": "qa: Intermittent failures in the psbt_wallet_tests/psbt_updater_test unit test",
    "body": "Recently, on the master branch some failures were observed in the `wallet/test/psbt_wallet_tests.cpp`:\r\n\r\n- https://github.com/bitcoin/bitcoin/commit/49e40f5704db5e59fef834cac5d6b5395c75b091, [log](https://cirrus-ci.com/task/5381337495371776):\r\n```\r\n\u001b[0;39;49m\u001b[1;34;49mwallet/test/psbt_wallet_tests.cpp(27): Entering test case \"psbt_updater_test\"\r\n\u001b[0;39;49m2021-10-25T14:37:00.306414Z [test] [test/util/setup_common.cpp:65] [Seed] Seed: Setting random seed for current tests to RANDOM_CTX_SEED=9ae440b04274b0a20a4eee7d0c0467ce8001fdcecc2785a4e288d14ed935c106\r\n2021-10-25T14:37:00.306585Z [test] [init/common.cpp:165] [LogPackageVersion] Bitcoin Core version v22.99.0-49e40f5704db (debug build)\r\n2021-10-25T14:37:00.306966Z [test] [init.cpp:904] [AppInitParameterInteraction] Assuming ancestors of block 00000000000000000008a89e854d57e5667df88f1cdef6fde2fbca1de5b639ad have valid signatures.\r\n2021-10-25T14:37:00.307006Z [test] [init.cpp:917] [AppInitParameterInteraction] Setting nMinimumChainWork=00000000000000000000000000000000000000001fa4663bbbe19f82de910280\r\n2021-10-25T14:37:00.310970Z [test] [script/sigcache.cpp:102] [InitSignatureCache] Using 16 MiB out of 32/2 requested for signature cache, able to store 524288 elements\r\n2021-10-25T14:37:00.313940Z [test] [validation.cpp:1275] [InitScriptExecutionCache] Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements\r\n2021-10-25T14:37:00.315039Z [test] [policy/fees.cpp:530] [CBlockPolicyEstimator] Failed to read fee estimates from /tmp/test_common_Bitcoin Core/8ee4dffed8f25e8b471e093ed7f53cb707111e2a24db9794e27a7890266e8c2b/fee_estimates.dat. Continue anyway.\r\n2021-10-25T14:37:00.315377Z [test] [dbwrapper.cpp:141] [CDBWrapper] Opened LevelDB successfully\r\n2021-10-25T14:37:00.315463Z [test] [dbwrapper.cpp:166] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/8ee4dffed8f25e8b471e093ed7f53cb707111e2a24db9794e27a7890266e8c2b/blocks/index: 0000000000000000\r\n2021-10-25T14:37:00.315728Z [test] [validation.cpp:4659] [InitializeChainstate] Switching active chainstate to Chainstate [ibd] @ height -1 (null)\r\n2021-10-25T14:37:00.316030Z [test] [dbwrapper.cpp:141] [CDBWrapper] Opened LevelDB successfully\r\n2021-10-25T14:37:00.316155Z [test] [dbwrapper.cpp:163] [CDBWrapper] Wrote new obfuscate key for /tmp/test_common_Bitcoin Core/8ee4dffed8f25e8b471e093ed7f53cb707111e2a24db9794e27a7890266e8c2b/chainstate: e871977b736770ef\r\n2021-10-25T14:37:00.316192Z [test] [dbwrapper.cpp:166] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/8ee4dffed8f25e8b471e093ed7f53cb707111e2a24db9794e27a7890266e8c2b/chainstate: e871977b736770ef\r\n2021-10-25T14:37:00.316407Z [test] [flatfile.cpp:69] [Allocate] Pre-allocating up to position 0x1000000 in blk00000.dat\r\n2021-10-25T14:37:00.316887Z [test] [validation.cpp:2294] [ConnectTip]   - Load block from disk: 0.17ms [0.00s]\r\n2021-10-25T14:37:00.317033Z [test] [validationinterface.cpp:249] [BlockChecked] BlockChecked: block hash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f state=Valid\r\n2021-10-25T14:37:00.317093Z [test] [validation.cpp:2306] [ConnectTip]   - Connect total: 0.22ms [0.00s (0.22ms/blk)]\r\n2021-10-25T14:37:00.317126Z [test] [validation.cpp:2311] [ConnectTip]   - Flush: 0.04ms [0.00s (0.04ms/blk)]\r\n2021-10-25T14:37:00.317196Z [test] [validation.cpp:2317] [ConnectTip]   - Writing chainstate: 0.07ms [0.00s (0.07ms/blk)]\r\n2021-10-25T14:37:00.317308Z [test] [validation.cpp:2111] [UpdateTipLog] UpdateTip: new best=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f height=0 version=0x00000001 log2_work=32.000022 tx=1 date='2009-01-03T18:15:05Z' progress=0.000000 cache=0.0MiB(0txo)\r\n2021-10-25T14:37:00.317340Z [test] [validation.cpp:2328] [ConnectTip]   - Connect postprocess: 0.15ms [0.00s (0.15ms/blk)]\r\n2021-10-25T14:37:00.317366Z [test] [validation.cpp:2329] [ConnectTip] - Connect block: 0.64ms [0.00s (0.64ms/blk)]\r\n2021-10-25T14:37:00.317402Z [test] [txmempool.cpp:691] [check] Checking mempool with 0 transactions and 0 inputs\r\n2021-10-25T14:37:00.317476Z [test] [validationinterface.cpp:226] [BlockConnected] Enqueuing BlockConnected: block hash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f block height=0\r\n2021-10-25T14:37:00.317549Z [test] [validationinterface.cpp:199] [UpdatedBlockTip] Enqueuing UpdatedBlockTip: new block hash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f fork block hash=nulmake[3]: *** [Makefile:18454: wallet/test/psbt_wallet_tests.cpp.test] Error 1\r\n```\r\n\r\n- https://github.com/bitcoin/bitcoin/commit/beb45b8b141f8b3ebaa4ea8cb2f35f9ba03efbaf, [log](https://cirrus-ci.com/task/4853362869927936):\r\n```\r\n\u001b[0;39;49m\u001b[1;34;49mwallet/test/psbt_wallet_tests.cpp(27): Entering test case \"psbt_updater_test\"\r\n\u001b[0;39;49m2021-10-25T14:09:48.595432Z [test] [test/util/setup_common.cpp:65] [Seed] Seed: Setting random seed for current tests to RANDOM_CTX_SEED=b22fbd18efa7c241ad6768e3811a8761f90f3ef69cd147d39e3380959b65a13e\r\n2021-10-25T14:09:48.595477Z [test] [init/common.cpp:165] [LogPackageVersion] Bitcoin Core version v22.99.0-beb45b8b141f (release build)\r\n2021-10-25T14:09:48.595608Z [test] [init.cpp:904] [AppInitParameterInteraction] Assuming ancestors of block 00000000000000000008a89e854d57e5667df88f1cdef6fde2fbca1de5b639ad have valid signatures.\r\n2021-10-25T14:09:48.595620Z [test] [init.cpp:917] [AppInitParameterInteraction] Setting nMinimumChainWork=00000000000000000000000000000000000000001fa4663bbbe19f82de910280\r\n2021-10-25T14:09:48.597202Z [test] [script/sigcache.cpp:102] [InitSignatureCache] Using 16 MiB out of 32/2 requested for signature cache, able to store 524288 elements\r\n2021-10-25T14:09:48.598513Z [test] [validation.cpp:1269] [InitScriptExecutionCache] Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements\r\n2021-10-25T14:09:48.598678Z [scheduler] [util/thread.cpp:17] [TraceThread] scheduler thread start\r\n2021-10-25T14:09:48.599215Z [test] [policy/fees.cpp:530] [CBlockPolicyEstimator] Failed to read fee estimates from /tmp/test_common_Bitcoin Core/eabf744d4fabc12acc33a62b5991339fc39702ee5d19a3f1d76e220b6d7aff94/fee_estimates.dat. Continue anyway.\r\n2021-10-25T14:09:48.599370Z [test] [dbwrapper.cpp:141] [CDBWrapper] Opened LevelDB successfully\r\n2021-10-25T14:09:48.599399Z [test] [dbwrapper.cpp:166] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/eabf744d4fabc12acc33a62b5991339fc39702ee5d19a3f1d76e220b6d7aff94/blocks/index: 0000000000000000\r\n2021-10-25T14:09:48.599585Z [test] [validation.cpp:4653] [InitializeChainstate] Switching active chainstate to Chainstate [ibd] @ height -1 (null)\r\n2021-10-25T14:09:48.603729Z [test] [dbwrapper.cpp:141] [CDBWrapper] Opened LevelDB successfully\r\n2021-10-25T14:09:48.603818Z [test] [dbwrapper.cpp:163] [CDBWrapper] Wrote new obfuscate key for /tmp/test_common_Bitcoin Core/eabf744d4fabc12acc33a62b5991339fc39702ee5d19a3f1d76e220b6d7aff94/chainstate: 1cfa6d2d89aeac10\r\n2021-10-25T14:09:48.603836Z [test] [dbwrapper.cpp:166] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/eabf744d4fabc12acc33a62b5991339fc39702ee5d19a3f1d76e220b6d7aff94/chainstate: 1cfa6d2d89aeac10\r\n2021-10-25T14:09:48.603962Z [test] [flatfile.cpp:69] [Allocate] Pre-allocating up to position 0x1000000 in blk00000.dat\r\n2021-10-25T14:09:48.604157Z [test] [validation.cpp:2288] [ConnectTip]   - Load block from disk: 0.05ms [0.00s]\r\n2021-10-25T14:09:48.604212Z [test] [validationinterface.cpp:249] [BlockChecked] BlockChecked: block hash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f state=Valid\r\n2021-10-25T14:09:48.604231Z [test] [validation.cpp:2300] [ConnectTip]   - Connect total: 0.09ms [0.00s (0.09ms/blk)]\r\n2021-10-25T14:09:48.604245Z [test] [validation.cpp:2305] [ConnectTip]   - Flush: 0.02ms [0.00s (0.02ms/blk)]\r\n2021-10-25T14:09:48.604263Z [test] [validation.cpp:2311] [ConnectTip]   - Writing chainstate: 0.02ms [0.00s (0.02ms/blk)]\r\n2021-10-25T14:09:48.604297Z [test] [validation.cpp:2105] [UpdateTipLog] UpdateTip: new best=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f height=0 version=0x00000001 log2_work=32.000022 tx=1 date='2009-01-03T18:15:05Z' progress=0.000000 cache=0.0MiB(0txo)\r\n2021-10-25T14:09:48.604313Z [test] [validation.cpp:2322] [ConnectTip]   - Connect postprocess: 0.05ms [0.00s (0.06ms/blk)]\r\n2021-10-25T14:09:48.604326Z [test] [validation.cpp:2323] [ConnectTip] - Connect block: 0.22ms [0.00s (0.23ms/blk)]\r\n2021-10-25T14:09:48.604341Z [test] [txmempool.cpp:683] [check] Checking mempool with 0 transactions and 0 inputs\r\n2021-10-25T14:09:48.604368Z [test] [validationinterface.cpp:226] [BlockConnected] Enqueuing BlockConnected: block hash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f block height=0\r\n2021-10-25T14:09:48.604401Z [test] [validationinterface.cpp:199] [UpdatedBlockTip] Enqueuing UpdatedBlockTip:Segmentation fault (core dumped)\r\nmake[3]: *** [Makefile:18453: wallet/test/psbt_wallet_tests.cpp.test] Error 1\r\n```",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "comments": 11,
    "closed_at": "2021-11-01T13:25:36Z",
    "created_at": "2021-10-27T08:05:23Z",
    "updated_at": "2022-11-02T17:07:52Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 5525578814,
      "node_id": "LE_lADOABII58490O-mzwAAAAFJWaQ-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5525578814",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-27T08:05:23Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "labeled",
      "id": 5525578817,
      "node_id": "LE_lADOABII58490O-mzwAAAAFJWaRB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5525578817",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-27T08:05:23Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 5525578818,
      "node_id": "LE_lADOABII58490O-mzwAAAAFJWaRC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5525578818",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-27T08:05:23Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 952808824,
      "node_id": "IC_kwDOABII5844yrV4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952808824",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-27T11:09:42Z",
      "updated_at": "2021-10-27T11:09:42Z",
      "author_association": "MEMBER",
      "body": "Looks like a race where the wallet is deleted before the scheduler thread exits and flushes all events?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-952808824",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "mentioned",
      "id": 5531260541,
      "node_id": "MEE_lADOABII58490O-mzwAAAAFJsFZ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5531260541",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T03:32:54Z"
    },
    {
      "event": "subscribed",
      "id": 5531260546,
      "node_id": "SE_lADOABII58490O-mzwAAAAFJsFaC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5531260546",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T03:32:54Z"
    },
    {
      "event": "comment_deleted",
      "id": 5531272317,
      "node_id": "CDE_lADOABII58490O-mzwAAAAFJsIR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5531272317",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T03:37:46Z"
    },
    {
      "event": "comment_deleted",
      "id": 5531272415,
      "node_id": "CDE_lADOABII58490O-mzwAAAAFJsITf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5531272415",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T03:37:48Z"
    },
    {
      "event": "commented",
      "id": 953551644,
      "node_id": "IC_kwDOABII58441gsc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/953551644",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T06:50:08Z",
      "updated_at": "2021-10-31T12:01:13Z",
      "author_association": "MEMBER",
      "body": "~I've bisected it down to #23336.~\r\n\r\nUPDATE. See #23403.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953551644",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 953761870,
      "node_id": "IC_kwDOABII58442UBO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/953761870",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T11:37:32Z",
      "updated_at": "2021-10-28T11:37:32Z",
      "author_association": "MEMBER",
      "body": "> I've bisected it down to #23336.\r\n\r\nIf this is intermittent, how did you bisect? If there are steps to reproduce, then it would be good to run in valgrind to debug the segmentation fault.\r\n\r\nI couldn't reproduce this locally yet.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953761870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 953780849,
      "node_id": "IC_kwDOABII58442Ypx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/953780849",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T12:05:46Z",
      "updated_at": "2021-10-28T12:05:46Z",
      "author_association": "MEMBER",
      "body": "> If this is intermittent, how did you bisect?\r\n\r\nBy looping `make check` :tiger2: ",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953780849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 953792472,
      "node_id": "IC_kwDOABII58442bfY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/953792472",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T12:21:44Z",
      "updated_at": "2021-10-28T12:21:44Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke \r\n\r\nCould this [log](https://api.cirrus-ci.com/v1/task/4535156796030976/logs/ci.log) be relevant?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953792472",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "mentioned",
      "id": 5533731744,
      "node_id": "MEE_lADOABII58490O-mzwAAAAFJ1gug",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5533731744",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T12:21:44Z"
    },
    {
      "event": "subscribed",
      "id": 5533731750,
      "node_id": "SE_lADOABII58490O-mzwAAAAFJ1gum",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5533731750",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T12:21:44Z"
    },
    {
      "event": "commented",
      "id": 953796339,
      "node_id": "IC_kwDOABII58442cbz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/953796339",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T12:27:06Z",
      "updated_at": "2021-10-28T12:27:06Z",
      "author_association": "MEMBER",
      "body": "Yes, as I said before this looks like a race where the wallet is deleted before stopping the scheduler: https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-952808824\r\n\r\nIIRC, the order should be:\r\n\r\n* stop scheduler\r\n* delete wallet\r\n* delete scheduler",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953796339",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 953803873,
      "node_id": "IC_kwDOABII58442eRh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/953803873",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-28T12:37:50Z",
      "updated_at": "2021-10-28T12:37:50Z",
      "author_association": "MEMBER",
      "body": "<details><summary>Reproduced locally in valgrind</summary>\r\n\r\n```diff\r\ndiff --git a/src/scheduler.cpp b/src/scheduler.cpp\r\nindex 162cced6c7..fa1864822f 100644\r\n--- a/src/scheduler.cpp\r\n+++ b/src/scheduler.cpp\r\n@@ -57,6 +57,7 @@ void CScheduler::serviceQueue()\r\n             Function f = taskQueue.begin()->second;\r\n             taskQueue.erase(taskQueue.begin());\r\n \r\n+    UninterruptibleSleep(10ms);\r\n             {\r\n                 // Unlock before calling f, so it can reschedule itself or another task\r\n                 // without deadlocking:\r\ndiff --git a/src/wallet/test/wallet_test_fixture.cpp b/src/wallet/test/wallet_test_fixture.cpp\r\nindex fc744ebe5b..c9cecdb15c 100644\r\n--- a/src/wallet/test/wallet_test_fixture.cpp\r\n+++ b/src/wallet/test/wallet_test_fixture.cpp\r\n@@ -8,7 +8,11 @@ WalletTestingSetup::WalletTestingSetup(const std::string& chainName)\r\n     : TestingSetup(chainName),\r\n       m_wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase())\r\n {\r\n+    UninterruptibleSleep(10ms);\r\n     m_wallet.LoadWallet();\r\n+    UninterruptibleSleep(10ms);\r\n     m_chain_notifications_handler = m_node.chain->handleNotifications({ &m_wallet, [](CWallet*) {} });\r\n+    UninterruptibleSleep(10ms);\r\n     m_wallet_client->registerRpcs();\r\n+    UninterruptibleSleep(10ms);\r\n }\r\n```\r\n\r\nCMD:\r\n\r\n```\r\nwhile ( make &&  valgrind ./src/test/test_bitcoin -t psbt_wallet_tests --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT ) ; do true ; done\r\n```\r\n\r\n\r\n```\r\n2021-10-28T12:31:41.480133Z [scheduler] [validationinterface.cpp:226] [operator()] BlockConnected: block hash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f block height=0\r\n2021-10-28T12:31:43.918896Z [scheduler] [logging/timer.h:51] [Log] Enter: lock contention cs_wallet, wallet/wallet.cpp:1263 started\r\n2021-10-28T12:31:51.669069Z [test] [wallet/scriptpubkeyman.h:233] [WalletLogPrintf] [default wallet] keypool added 1000 keys (0 internal), size=1000 (0 internal)\r\n2021-10-28T12:31:51.675717Z [test] [wallet/scriptpubkeyman.h:233] [WalletLogPrintf] [default wallet] LegacyScriptPubKeyMan::NewKeyPool rewrote keypool\r\n2021-10-28T12:31:52.210553Z [scheduler] [logging/timer.h:51] [Log] Enter: lock contention cs_wallet, wallet/wallet.cpp:1263 completed (7131451μs)\r\n==516904== Thread 2 b-scheduler:\r\n==516904== Invalid read of size 8\r\n==516904==    at 0x484995B: bcmp (vg_replace_strmem.c:1203)\r\n==516904==    by 0xCA6B80: Compare (uint256.h:44)\r\n==516904==    by 0xCA6B80: operator< (uint256.h:48)\r\n==516904==    by 0xCA6B80: operator() (stl_function.h:386)\r\n==516904==    by 0xCA6B80: _M_lower_bound (stl_tree.h:1919)\r\n==516904==    by 0xCA6B80: find (stl_tree.h:2534)\r\n==516904==    by 0xCA6B80: count (stl_map.h:1216)\r\n==516904==    by 0xCA6B80: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1054)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==  Address 0x1e9659a0 is 32 bytes inside a block of size 536 free'd\r\n==516904==    at 0x4843669: operator delete(void*) (vg_replace_malloc.c:923)\r\n==516904==    by 0x1A42A0: deallocate (new_allocator.h:145)\r\n==516904==    by 0x1A42A0: deallocate (alloc_traits.h:492)\r\n==516904==    by 0x1A42A0: _M_put_node (stl_tree.h:565)\r\n==516904==    by 0x1A42A0: _M_drop_node (stl_tree.h:632)\r\n==516904==    by 0x1A42A0: std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >*) (stl_tree.h:1889)\r\n==516904==    by 0x1A4AAF: ~_Rb_tree (stl_tree.h:984)\r\n==516904==    by 0x1A4AAF: ~map (stl_map.h:302)\r\n==516904==    by 0x1A4AAF: CWallet::~CWallet() (wallet.h:375)\r\n==516904==    by 0x6C39D9: psbt_wallet_tests::psbt_updater_test_invoker() (wallet_test_fixture.h:20)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904==    by 0x48F13F6: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:740)\r\n==516904==  Block was alloc'd at\r\n==516904==    at 0x4840FF5: operator new(unsigned long) (vg_replace_malloc.c:422)\r\n==516904==    by 0x6CB2DA: allocate (new_allocator.h:127)\r\n==516904==    by 0x6CB2DA: allocate (alloc_traits.h:460)\r\n==516904==    by 0x6CB2DA: _M_get_node (stl_tree.h:561)\r\n==516904==    by 0x6CB2DA: std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >* std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:611)\r\n==516904==    by 0x6CB1A7: std::pair<std::_Rb_tree_iterator<std::pair<uint256 const, CWalletTx> >, bool> std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:2382)\r\n==516904==    by 0x6C3C9D: emplace<const std::piecewise_construct_t &, std::tuple<const uint256 &>, std::tuple<std::shared_ptr<const CTransaction> &> > (stl_map.h:577)\r\n==516904==    by 0x6C3C9D: psbt_wallet_tests::psbt_updater_test::test_method() (psbt_wallet_tests.cpp:25)\r\n==516904==    by 0x6C3706: psbt_wallet_tests::psbt_updater_test_invoker() (psbt_wallet_tests.cpp:16)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904== \r\n==516904== Invalid read of size 1\r\n==516904==    at 0x4849929: bcmp (vg_replace_strmem.c:1203)\r\n==516904==    by 0xCA6B80: Compare (uint256.h:44)\r\n==516904==    by 0xCA6B80: operator< (uint256.h:48)\r\n==516904==    by 0xCA6B80: operator() (stl_function.h:386)\r\n==516904==    by 0xCA6B80: _M_lower_bound (stl_tree.h:1919)\r\n==516904==    by 0xCA6B80: find (stl_tree.h:2534)\r\n==516904==    by 0xCA6B80: count (stl_map.h:1216)\r\n==516904==    by 0xCA6B80: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1054)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==  Address 0x1e9659a0 is 32 bytes inside a block of size 536 free'd\r\n==516904==    at 0x4843669: operator delete(void*) (vg_replace_malloc.c:923)\r\n==516904==    by 0x1A42A0: deallocate (new_allocator.h:145)\r\n==516904==    by 0x1A42A0: deallocate (alloc_traits.h:492)\r\n==516904==    by 0x1A42A0: _M_put_node (stl_tree.h:565)\r\n==516904==    by 0x1A42A0: _M_drop_node (stl_tree.h:632)\r\n==516904==    by 0x1A42A0: std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >*) (stl_tree.h:1889)\r\n==516904==    by 0x1A4AAF: ~_Rb_tree (stl_tree.h:984)\r\n==516904==    by 0x1A4AAF: ~map (stl_map.h:302)\r\n==516904==    by 0x1A4AAF: CWallet::~CWallet() (wallet.h:375)\r\n==516904==    by 0x6C39D9: psbt_wallet_tests::psbt_updater_test_invoker() (wallet_test_fixture.h:20)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904==    by 0x48F13F6: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:740)\r\n==516904==  Block was alloc'd at\r\n==516904==    at 0x4840FF5: operator new(unsigned long) (vg_replace_malloc.c:422)\r\n==516904==    by 0x6CB2DA: allocate (new_allocator.h:127)\r\n==516904==    by 0x6CB2DA: allocate (alloc_traits.h:460)\r\n==516904==    by 0x6CB2DA: _M_get_node (stl_tree.h:561)\r\n==516904==    by 0x6CB2DA: std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >* std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:611)\r\n==516904==    by 0x6CB1A7: std::pair<std::_Rb_tree_iterator<std::pair<uint256 const, CWalletTx> >, bool> std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:2382)\r\n==516904==    by 0x6C3C9D: emplace<const std::piecewise_construct_t &, std::tuple<const uint256 &>, std::tuple<std::shared_ptr<const CTransaction> &> > (stl_map.h:577)\r\n==516904==    by 0x6C3C9D: psbt_wallet_tests::psbt_updater_test::test_method() (psbt_wallet_tests.cpp:25)\r\n==516904==    by 0x6C3706: psbt_wallet_tests::psbt_updater_test_invoker() (psbt_wallet_tests.cpp:16)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904== \r\n==516904== Invalid read of size 8\r\n==516904==    at 0xCA6B93: _M_lower_bound (stl_tree.h:0)\r\n==516904==    by 0xCA6B93: find (stl_tree.h:2534)\r\n==516904==    by 0xCA6B93: count (stl_map.h:1216)\r\n==516904==    by 0xCA6B93: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1054)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==    by 0x4DD5C83: execute_native_thread_routine (thread.cc:82)\r\n==516904==  Address 0x1e965990 is 16 bytes inside a block of size 536 free'd\r\n==516904==    at 0x4843669: operator delete(void*) (vg_replace_malloc.c:923)\r\n==516904==    by 0x1A42A0: deallocate (new_allocator.h:145)\r\n==516904==    by 0x1A42A0: deallocate (alloc_traits.h:492)\r\n==516904==    by 0x1A42A0: _M_put_node (stl_tree.h:565)\r\n==516904==    by 0x1A42A0: _M_drop_node (stl_tree.h:632)\r\n==516904==    by 0x1A42A0: std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >*) (stl_tree.h:1889)\r\n==516904==    by 0x1A4AAF: ~_Rb_tree (stl_tree.h:984)\r\n==516904==    by 0x1A4AAF: ~map (stl_map.h:302)\r\n==516904==    by 0x1A4AAF: CWallet::~CWallet() (wallet.h:375)\r\n==516904==    by 0x6C39D9: psbt_wallet_tests::psbt_updater_test_invoker() (wallet_test_fixture.h:20)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904==    by 0x48F13F6: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:740)\r\n==516904==  Block was alloc'd at\r\n==516904==    at 0x4840FF5: operator new(unsigned long) (vg_replace_malloc.c:422)\r\n==516904==    by 0x6CB2DA: allocate (new_allocator.h:127)\r\n==516904==    by 0x6CB2DA: allocate (alloc_traits.h:460)\r\n==516904==    by 0x6CB2DA: _M_get_node (stl_tree.h:561)\r\n==516904==    by 0x6CB2DA: std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >* std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:611)\r\n==516904==    by 0x6CB1A7: std::pair<std::_Rb_tree_iterator<std::pair<uint256 const, CWalletTx> >, bool> std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:2382)\r\n==516904==    by 0x6C3C9D: emplace<const std::piecewise_construct_t &, std::tuple<const uint256 &>, std::tuple<std::shared_ptr<const CTransaction> &> > (stl_map.h:577)\r\n==516904==    by 0x6C3C9D: psbt_wallet_tests::psbt_updater_test::test_method() (psbt_wallet_tests.cpp:25)\r\n==516904==    by 0x6C3706: psbt_wallet_tests::psbt_updater_test_invoker() (psbt_wallet_tests.cpp:16)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904== \r\n==516904== Invalid read of size 8\r\n==516904==    at 0x4849958: bcmp (vg_replace_strmem.c:1203)\r\n==516904==    by 0xCA6BB0: Compare (uint256.h:44)\r\n==516904==    by 0xCA6BB0: operator< (uint256.h:48)\r\n==516904==    by 0xCA6BB0: operator() (stl_function.h:386)\r\n==516904==    by 0xCA6BB0: find (stl_tree.h:2536)\r\n==516904==    by 0xCA6BB0: count (stl_map.h:1216)\r\n==516904==    by 0xCA6BB0: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1054)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==  Address 0x1e966410 is 32 bytes inside a block of size 536 free'd\r\n==516904==    at 0x4843669: operator delete(void*) (vg_replace_malloc.c:923)\r\n==516904==    by 0x1A42A0: deallocate (new_allocator.h:145)\r\n==516904==    by 0x1A42A0: deallocate (alloc_traits.h:492)\r\n==516904==    by 0x1A42A0: _M_put_node (stl_tree.h:565)\r\n==516904==    by 0x1A42A0: _M_drop_node (stl_tree.h:632)\r\n==516904==    by 0x1A42A0: std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >*) (stl_tree.h:1889)\r\n==516904==    by 0x1A4AAF: ~_Rb_tree (stl_tree.h:984)\r\n==516904==    by 0x1A4AAF: ~map (stl_map.h:302)\r\n==516904==    by 0x1A4AAF: CWallet::~CWallet() (wallet.h:375)\r\n==516904==    by 0x6C39D9: psbt_wallet_tests::psbt_updater_test_invoker() (wallet_test_fixture.h:20)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904==    by 0x48F13F6: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:740)\r\n==516904==  Block was alloc'd at\r\n==516904==    at 0x4840FF5: operator new(unsigned long) (vg_replace_malloc.c:422)\r\n==516904==    by 0x6CB2DA: allocate (new_allocator.h:127)\r\n==516904==    by 0x6CB2DA: allocate (alloc_traits.h:460)\r\n==516904==    by 0x6CB2DA: _M_get_node (stl_tree.h:561)\r\n==516904==    by 0x6CB2DA: std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >* std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:611)\r\n==516904==    by 0x6CB1A7: std::pair<std::_Rb_tree_iterator<std::pair<uint256 const, CWalletTx> >, bool> std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:2382)\r\n==516904==    by 0x6C3DC6: emplace<const std::piecewise_construct_t &, std::tuple<const uint256 &>, std::tuple<std::shared_ptr<const CTransaction> &> > (stl_map.h:577)\r\n==516904==    by 0x6C3DC6: psbt_wallet_tests::psbt_updater_test::test_method() (psbt_wallet_tests.cpp:30)\r\n==516904==    by 0x6C3706: psbt_wallet_tests::psbt_updater_test_invoker() (psbt_wallet_tests.cpp:16)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904== \r\n==516904== Invalid read of size 1\r\n==516904==    at 0x484992D: bcmp (vg_replace_strmem.c:1203)\r\n==516904==    by 0xCA6BB0: Compare (uint256.h:44)\r\n==516904==    by 0xCA6BB0: operator< (uint256.h:48)\r\n==516904==    by 0xCA6BB0: operator() (stl_function.h:386)\r\n==516904==    by 0xCA6BB0: find (stl_tree.h:2536)\r\n==516904==    by 0xCA6BB0: count (stl_map.h:1216)\r\n==516904==    by 0xCA6BB0: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1054)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==  Address 0x1e966410 is 32 bytes inside a block of size 536 free'd\r\n==516904==    at 0x4843669: operator delete(void*) (vg_replace_malloc.c:923)\r\n==516904==    by 0x1A42A0: deallocate (new_allocator.h:145)\r\n==516904==    by 0x1A42A0: deallocate (alloc_traits.h:492)\r\n==516904==    by 0x1A42A0: _M_put_node (stl_tree.h:565)\r\n==516904==    by 0x1A42A0: _M_drop_node (stl_tree.h:632)\r\n==516904==    by 0x1A42A0: std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >*) (stl_tree.h:1889)\r\n==516904==    by 0x1A4AAF: ~_Rb_tree (stl_tree.h:984)\r\n==516904==    by 0x1A4AAF: ~map (stl_map.h:302)\r\n==516904==    by 0x1A4AAF: CWallet::~CWallet() (wallet.h:375)\r\n==516904==    by 0x6C39D9: psbt_wallet_tests::psbt_updater_test_invoker() (wallet_test_fixture.h:20)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904==    by 0x48F13F6: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:740)\r\n==516904==  Block was alloc'd at\r\n==516904==    at 0x4840FF5: operator new(unsigned long) (vg_replace_malloc.c:422)\r\n==516904==    by 0x6CB2DA: allocate (new_allocator.h:127)\r\n==516904==    by 0x6CB2DA: allocate (alloc_traits.h:460)\r\n==516904==    by 0x6CB2DA: _M_get_node (stl_tree.h:561)\r\n==516904==    by 0x6CB2DA: std::_Rb_tree_node<std::pair<uint256 const, CWalletTx> >* std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:611)\r\n==516904==    by 0x6CB1A7: std::pair<std::_Rb_tree_iterator<std::pair<uint256 const, CWalletTx> >, bool> std::_Rb_tree<uint256, std::pair<uint256 const, CWalletTx>, std::_Select1st<std::pair<uint256 const, CWalletTx> >, std::less<uint256>, std::allocator<std::pair<uint256 const, CWalletTx> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<uint256 const&>, std::tuple<std::shared_ptr<CTransaction const>&> >(std::piecewise_construct_t const&, std::tuple<uint256 const&>&&, std::tuple<std::shared_ptr<CTransaction const>&>&&) (stl_tree.h:2382)\r\n==516904==    by 0x6C3DC6: emplace<const std::piecewise_construct_t &, std::tuple<const uint256 &>, std::tuple<std::shared_ptr<const CTransaction> &> > (stl_map.h:577)\r\n==516904==    by 0x6C3DC6: psbt_wallet_tests::psbt_updater_test::test_method() (psbt_wallet_tests.cpp:30)\r\n==516904==    by 0x6C3706: psbt_wallet_tests::psbt_updater_test_invoker() (psbt_wallet_tests.cpp:16)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904== \r\n==516904== Invalid read of size 8\r\n==516904==    at 0xCA6C20: _M_ptr (unique_ptr.h:173)\r\n==516904==    by 0xCA6C20: get (unique_ptr.h:422)\r\n==516904==    by 0xCA6C20: operator-> (unique_ptr.h:416)\r\n==516904==    by 0xCA6C20: IsMine (wallet.cpp:1339)\r\n==516904==    by 0xCA6C20: IsMine (wallet.cpp:1325)\r\n==516904==    by 0xCA6C20: IsMine (wallet.cpp:1348)\r\n==516904==    by 0xCA6C20: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1056)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==    by 0x4DD5C83: execute_native_thread_routine (thread.cc:82)\r\n==516904==  Address 0x1e965000 is 64 bytes inside a block of size 72 free'd\r\n==516904==    at 0x4843669: operator delete(void*) (vg_replace_malloc.c:923)\r\n==516904==    by 0x1A455F: deallocate (new_allocator.h:145)\r\n==516904==    by 0x1A455F: deallocate (alloc_traits.h:492)\r\n==516904==    by 0x1A455F: _M_put_node (stl_tree.h:565)\r\n==516904==    by 0x1A455F: _M_drop_node (stl_tree.h:632)\r\n==516904==    by 0x1A455F: std::_Rb_tree<uint256, std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > >, std::_Select1st<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > >, std::less<uint256>, std::allocator<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > >*) (stl_tree.h:1889)\r\n==516904==    by 0x1A4AD5: ~_Rb_tree (stl_tree.h:984)\r\n==516904==    by 0x1A4AD5: ~map (stl_map.h:302)\r\n==516904==    by 0x1A4AD5: CWallet::~CWallet() (wallet.h:375)\r\n==516904==    by 0x6C39D9: psbt_wallet_tests::psbt_updater_test_invoker() (wallet_test_fixture.h:20)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904==    by 0x48F112A: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:815)\r\n==516904==    by 0x48F13F6: boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) [clone .constprop.0] (framework.ipp:740)\r\n==516904==  Block was alloc'd at\r\n==516904==    at 0x4840FF5: operator new(unsigned long) (vg_replace_malloc.c:422)\r\n==516904==    by 0xCC5731: allocate (new_allocator.h:127)\r\n==516904==    by 0xCC5731: allocate (alloc_traits.h:460)\r\n==516904==    by 0xCC5731: _M_get_node (stl_tree.h:561)\r\n==516904==    by 0xCC5731: _M_create_node<const std::piecewise_construct_t &, std::tuple<uint256 &&>, std::tuple<> > (stl_tree.h:611)\r\n==516904==    by 0xCC5731: std::_Rb_tree_iterator<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > > std::_Rb_tree<uint256, std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > >, std::_Select1st<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > >, std::less<uint256>, std::allocator<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<uint256&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<uint256 const, std::unique_ptr<ScriptPubKeyMan, std::default_delete<ScriptPubKeyMan> > > >, std::piecewise_construct_t const&, std::tuple<uint256&&>&&, std::tuple<>&&) (stl_tree.h:2429)\r\n==516904==    by 0xCB269C: operator[] (stl_map.h:520)\r\n==516904==    by 0xCB269C: CWallet::SetupLegacyScriptPubKeyMan() (wallet.cpp:3118)\r\n==516904==    by 0xCB42EE: CWallet::GetOrCreateLegacyScriptPubKeyMan() (wallet.cpp:3103)\r\n==516904==    by 0x6C3AF7: psbt_wallet_tests::psbt_updater_test::test_method() (psbt_wallet_tests.cpp:18)\r\n==516904==    by 0x6C3706: psbt_wallet_tests::psbt_updater_test_invoker() (psbt_wallet_tests.cpp:16)\r\n==516904==    by 0x1CF036: boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:117)\r\n==516904==    by 0x48AF1D1: boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (function_template.hpp:763)\r\n==516904==    by 0x48B59E0: boost::execution_monitor::catch_signals(boost::function<int ()> const&) (function_template.hpp:763)\r\n==516904==    by 0x48B5F20: boost::execution_monitor::execute(boost::function<int ()> const&) (execution_monitor.ipp:1301)\r\n==516904==    by 0x48B5FD9: boost::execution_monitor::vexecute(boost::function<void ()> const&) (execution_monitor.ipp:1397)\r\n==516904==    by 0x48D59B1: boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) (unit_test_monitor.ipp:49)\r\n==516904== \r\n==516904== Invalid read of size 8\r\n==516904==    at 0xCA6C24: IsMine (wallet.cpp:1339)\r\n==516904==    by 0xCA6C24: IsMine (wallet.cpp:1325)\r\n==516904==    by 0xCA6C24: IsMine (wallet.cpp:1348)\r\n==516904==    by 0xCA6C24: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1056)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==    by 0x4DD5C83: execute_native_thread_routine (thread.cc:82)\r\n==516904==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\r\n==516904== \r\n==516904== \r\n==516904== Process terminating with default action of signal 11 (SIGSEGV): dumping core\r\n==516904==  Access not within mapped region at address 0x0\r\n==516904==    at 0xCA6C24: IsMine (wallet.cpp:1339)\r\n==516904==    by 0xCA6C24: IsMine (wallet.cpp:1325)\r\n==516904==    by 0xCA6C24: IsMine (wallet.cpp:1348)\r\n==516904==    by 0xCA6C24: CWallet::AddToWalletIfInvolvingMe(std::shared_ptr<CTransaction const> const&, CWalletTx::Confirmation, bool, bool) (wallet.cpp:1056)\r\n==516904==    by 0xCA8460: SyncTransaction (wallet.cpp:1204)\r\n==516904==    by 0xCA8460: CWallet::blockConnected(CBlock const&, int) (wallet.cpp:1268)\r\n==516904==    by 0xCA864D: non-virtual thunk to CWallet::blockConnected(CBlock const&, int) (gthr-default.h:0)\r\n==516904==    by 0x84DEF4: node::(anonymous namespace)::NotificationsProxy::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*) (interfaces.cpp:357)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: Iterate<(lambda at validationinterface.cpp:222:30)> (validationinterface.cpp:83)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:222)\r\n==516904==    by 0xA3AE33: operator() (validationinterface.cpp:224)\r\n==516904==    by 0xA3AE33: __invoke_impl<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:61)\r\n==516904==    by 0xA3AE33: __invoke_r<void, (lambda at validationinterface.cpp:224:5) &> (invoke.h:111)\r\n==516904==    by 0xA3AE33: std::_Function_handler<void (), CMainSignals::BlockConnected(std::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB857D: operator() (std_function.h:560)\r\n==516904==    by 0xAB857D: SingleThreadedSchedulerClient::ProcessQueue() (scheduler.cpp:177)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:74)\r\n==516904==    by 0xAB99A0: __invoke<void (SingleThreadedSchedulerClient::*&)(), SingleThreadedSchedulerClient *&> (invoke.h:96)\r\n==516904==    by 0xAB99A0: __call<void, 0UL> (functional:420)\r\n==516904==    by 0xAB99A0: operator()<, void> (functional:503)\r\n==516904==    by 0xAB99A0: __invoke_impl<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:61)\r\n==516904==    by 0xAB99A0: __invoke_r<void, std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient *))()> &> (invoke.h:111)\r\n==516904==    by 0xAB99A0: std::_Function_handler<void (), std::_Bind<void (SingleThreadedSchedulerClient::*(SingleThreadedSchedulerClient*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xAB7870: operator() (std_function.h:560)\r\n==516904==    by 0xAB7870: CScheduler::serviceQueue() (scheduler.cpp:64)\r\n==516904==    by 0x734480: operator() (setup_common.cpp:140)\r\n==516904==    by 0x734480: __invoke_impl<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:61)\r\n==516904==    by 0x734480: __invoke_r<void, (lambda at test/util/setup_common.cpp:140:86) &> (invoke.h:111)\r\n==516904==    by 0x734480: std::_Function_handler<void (), ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0>::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==516904==    by 0xB2164F: util::TraceThread(char const*, std::function<void ()>) (std_function.h:560)\r\n==516904==    by 0x7343E6: __invoke_impl<void, void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:61)\r\n==516904==    by 0x7343E6: __invoke<void (*)(const char *, std::function<void ()>), const char *, (lambda at test/util/setup_common.cpp:140:86)> (invoke.h:96)\r\n==516904==    by 0x7343E6: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:253)\r\n==516904==    by 0x7343E6: operator() (std_thread.h:260)\r\n==516904==    by 0x7343E6: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&)::$_0> > >::_M_run() (std_thread.h:211)\r\n==516904==    by 0x4DD5C83: execute_native_thread_routine (thread.cc:82)\r\n==516904==  If you believe this happened as a result of a stack\r\n==516904==  overflow in your program's main thread (unlikely but\r\n==516904==  possible), you can try to increase the size of the\r\n==516904==  main thread stack using the --main-stacksize= flag.\r\n==516904==  The main thread stack size used in this run was 8388608.\r\n==516904== \r\n==516904== HEAP SUMMARY:\r\n==516904==     in use at exit: 41,357,628 bytes in 7,056 blocks\r\n==516904==   total heap usage: 181,382 allocs, 174,326 frees, 261,014,118 bytes allocated\r\n==516904== \r\n==516904== LEAK SUMMARY:\r\n==516904==    definitely lost: 216 bytes in 1 blocks\r\n==516904==    indirectly lost: 61 bytes in 3 blocks\r\n==516904==      possibly lost: 65,444 bytes in 699 blocks\r\n==516904==    still reachable: 41,291,907 bytes in 6,353 blocks\r\n==516904==         suppressed: 0 bytes in 0 blocks\r\n==516904== Rerun with --leak-check=full to see details of leaked memory\r\n==516904== \r\n==516904== Use --track-origins=yes to see where uninitialised values come from\r\n==516904== For lists of detected and suppressed errors, rerun with: -s\r\n==516904== ERROR SUMMARY: 95 errors from 10 contexts (suppressed: 0 from 0)\r\n\r\n```\r\n\r\n</details>",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953803873",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 954934965,
      "node_id": "IC_kwDOABII58446ya1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954934965",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-29T17:52:23Z",
      "updated_at": "2021-10-29T17:52:23Z",
      "author_association": "MEMBER",
      "body": "Another case of this here https://cirrus-ci.com/task/6184680090238976\r\n\r\nre: https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953551644\r\n\r\n> I've bisected it down to #23336.\r\n\r\nJust to clarify, I think based on recent comments we do not actually think this issue relates to #23336. Bisect result was just from failure happening unreliably.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-954934965",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 955655491,
      "node_id": "IC_kwDOABII58449iVD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/955655491",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-31T08:06:20Z",
      "updated_at": "2021-10-31T08:06:20Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke \r\n> CMD:\r\n> \r\n> ```\r\n> while ( make &&  valgrind ./src/test/test_bitcoin -t psbt_wallet_tests --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT ) ; do true ; done\r\n> ```\r\n\r\nWhat are your `configure` options? \r\n\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-955655491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "mentioned",
      "id": 5544886898,
      "node_id": "MEE_lADOABII58490O-mzwAAAAFKgEJy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5544886898",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-31T08:06:20Z"
    },
    {
      "event": "subscribed",
      "id": 5544886900,
      "node_id": "SE_lADOABII58490O-mzwAAAAFKgEJ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5544886900",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-31T08:06:20Z"
    },
    {
      "event": "commented",
      "id": 955686487,
      "node_id": "IC_kwDOABII58449p5X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/955686487",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-31T12:00:47Z",
      "updated_at": "2021-10-31T12:00:47Z",
      "author_association": "MEMBER",
      "body": "> Another case of this here https://cirrus-ci.com/task/6184680090238976\r\n> \r\n> re: [#23368 (comment)](https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-953551644)\r\n> \r\n> > I've bisected it down to #23336.\r\n> \r\n> Just to clarify, I think based on recent comments we do not actually think this issue relates to #23336. Bisect result was just from failure happening unreliably.\r\n\r\nCorrect. See #23403.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-955686487",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "commented",
      "id": 955771368,
      "node_id": "IC_kwDOABII58449-no",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/955771368",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-31T18:37:53Z",
      "updated_at": "2021-10-31T18:37:53Z",
      "author_association": "MEMBER",
      "body": "One more CI [failure](https://api.cirrus-ci.com/v1/task/6245565043310592/logs/ci.log).",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/23368#issuecomment-955771368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23368"
    },
    {
      "event": "closed",
      "id": 5548910717,
      "node_id": "CE_lADOABII58490O-mzwAAAAFKvah9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5548910717",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5adc5c02800f00d1e6e8812a2b0559b1800e82e9",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/5adc5c02800f00d1e6e8812a2b0559b1800e82e9",
      "created_at": "2021-11-01T13:25:36Z"
    },
    {
      "event": "referenced",
      "id": 5549417781,
      "node_id": "REFE_lADOABII58490O-mzwAAAAFKxWU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5549417781",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0e193a7268df479e11d6110dfa0d9cfd000281ae",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0e193a7268df479e11d6110dfa0d9cfd000281ae",
      "created_at": "2021-11-01T14:45:48Z"
    },
    {
      "event": "locked",
      "id": 7725530553,
      "node_id": "LOE_lADOABII58490O-mzwAAAAHMej25",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7725530553",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-02T17:07:52Z"
    }
  ]
}