{
  "type": "issue",
  "issue": {
    "id": 523869764,
    "node_id": "MDU6SXNzdWU1MjM4Njk3NjQ=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/17495",
    "number": 17495,
    "state": "closed",
    "state_reason": "completed",
    "title": "gui: hang after calling any waitfor* cmds from RPC console",
    "body": "After calling any of the `waitfor*` commands in the GUI RPC console, trying to shutdown / `bitcoin-cli stop` will hang `bitcoin-qt`.",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 135946,
        "node_id": "MDU6TGFiZWwxMzU5NDY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 3,
    "closed_at": "2020-05-29T13:50:04Z",
    "created_at": "2019-11-16T17:07:42Z",
    "updated_at": "2022-02-15T10:45:21Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 2804885538,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4MDQ4ODU1Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2804885538",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-16T17:07:42Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 554784989,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDc4NDk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554784989",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-17T20:45:57Z",
      "updated_at": "2019-11-17T20:45:57Z",
      "author_association": "MEMBER",
      "body": "Reproduced, here is the stack backtrace of all threads:\r\n```\r\n* thread #1, name = 'bitcoin-main', queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\r\n  * frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x0000000101d7fcab QtCore`___lldb_unnamed_symbol319$$QtCore + 75\r\n    frame #3: 0x0000000101d7fc01 QtCore`QWaitCondition::wait(QMutex*, unsigned long) + 97\r\n    frame #4: 0x0000000101d7f3de QtCore`QThread::wait(unsigned long) + 110\r\n    frame #5: 0x0000000100068dc1 bitcoin-qt`RPCConsole::setClientModel(this=<unavailable>, model=<unavailable>) at rpcconsole.cpp:692 [opt]\r\n    frame #6: 0x000000010001d0f1 bitcoin-qt`BitcoinGUI::setClientModel(this=0x00000001030693d0, _clientModel=0x0000000000000000) at bitcoingui.cpp:610 [opt]\r\n    frame #7: 0x000000010000c33b bitcoin-qt`BitcoinApplication::requestShutdown(this=0x00007ffeefbff730) at bitcoin.cpp:314 [opt]\r\n    frame #8: 0x000000010000db9f bitcoin-qt`GuiMain(argc=<unavailable>, argv=<unavailable>) at bitcoin.cpp:592 [opt]\r\n    frame #9: 0x00007fff5889bed9 libdyld.dylib`start + 1\r\n    frame #10: 0x00007fff5889bed9 libdyld.dylib`start + 1\r\n  thread #5, name = 'com.apple.CFSocket.private'\r\n    frame #0: 0x00007fff589dc5aa libsystem_kernel.dylib`__select + 10\r\n    frame #1: 0x00007fff2b688cf3 CoreFoundation`__CFSocketManager + 639\r\n    frame #2: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #3: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #4: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #6, name = 'QDBusConnectionManager'\r\n    frame #0: 0x00007fff589dd2ee libsystem_kernel.dylib`poll + 10\r\n    frame #1: 0x0000000101f8a3a0 QtCore`qt_safe_poll(pollfd*, unsigned int, timespec const*) + 576\r\n    frame #2: 0x0000000101f8bc29 QtCore`QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 873\r\n    frame #3: 0x0000000101f313de QtCore`QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 430\r\n    frame #4: 0x0000000101d7516c QtCore`QThread::exec() + 140\r\n    frame #5: 0x00000001022fc483 QtDBus`___lldb_unnamed_symbol17$$QtDBus + 19\r\n    frame #6: 0x0000000101d7e65e QtCore`___lldb_unnamed_symbol310$$QtCore + 350\r\n    frame #7: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #8: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #9: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #7, name = 'bitcoin-qt-init'\r\n    frame #0: 0x00007fff589dd2ee libsystem_kernel.dylib`poll + 10\r\n    frame #1: 0x0000000101f8a3a0 QtCore`qt_safe_poll(pollfd*, unsigned int, timespec const*) + 576\r\n    frame #2: 0x0000000101f8bc29 QtCore`QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 873\r\n    frame #3: 0x0000000101f313de QtCore`QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 430\r\n    frame #4: 0x0000000101d7516c QtCore`QThread::exec() + 140\r\n    frame #5: 0x0000000101d7e65e QtCore`___lldb_unnamed_symbol310$$QtCore + 350\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #9, name = 'bitcoin-scriptch.0'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00000001001650ef bitcoin-qt`boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 79\r\n    frame #3: 0x00000001003286c5 bitcoin-qt`CCheckQueue<CScriptCheck>::Loop(bool) + 661\r\n    frame #4: 0x00000001002efe66 bitcoin-qt`ThreadScriptCheck(int) + 86\r\n    frame #5: 0x00000001010fd2ac libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 156\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #10, name = 'bitcoin-scriptch.1'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00000001001650ef bitcoin-qt`boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 79\r\n    frame #3: 0x00000001003286c5 bitcoin-qt`CCheckQueue<CScriptCheck>::Loop(bool) + 661\r\n    frame #4: 0x00000001002efe66 bitcoin-qt`ThreadScriptCheck(int) + 86\r\n    frame #5: 0x00000001010fd2ac libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 156\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #11, name = 'bitcoin-scriptch.2'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00000001001650ef bitcoin-qt`boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 79\r\n    frame #3: 0x00000001003286c5 bitcoin-qt`CCheckQueue<CScriptCheck>::Loop(bool) + 661\r\n    frame #4: 0x00000001002efe66 bitcoin-qt`ThreadScriptCheck(int) + 86\r\n    frame #5: 0x00000001010fd2ac libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 156\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #12, name = 'bitcoin-scheduler'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x000000010050cb78 bitcoin-qt`boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) + 88\r\n    frame #3: 0x000000010050b31b bitcoin-qt`CScheduler::serviceQueue() + 363\r\n    frame #4: 0x0000000100160423 bitcoin-qt`void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) + 211\r\n    frame #5: 0x000000010016c744 bitcoin-qt`boost::detail::thread_data<std::__1::__bind<void (*)(char const*, std::__1::function<void ()>), char const (&) [10], std::__1::function<void ()>&> >::run() + 116\r\n    frame #6: 0x00000001010fd2ac libboost_thread-mt.dylib`boost::(anonymous namespace)::thread_proxy(void*) + 156\r\n    frame #7: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #8: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #9: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #13, name = 'bitcoin-http'\r\n    frame #0: 0x00007fff589db716 libsystem_kernel.dylib`kevent + 10\r\n    frame #1: 0x00000001024edbf2 libevent-2.1.6.dylib`kq_dispatch + 487\r\n    frame #2: 0x00000001024e4b3c libevent-2.1.6.dylib`event_base_loop + 699\r\n    frame #3: 0x00000001001272aa bitcoin-qt`ThreadHTTP(event_base*) + 122\r\n    frame #4: 0x000000010012b73a bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, bool (*)(event_base*), event_base*> >(void*) + 58\r\n    frame #5: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #6: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #7: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #14, name = 'bitcoin-httpworker.0'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71bda libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x000000010012b457 bitcoin-qt`WorkQueue<HTTPClosure>::Run() + 151\r\n    frame #4: 0x0000000100127365 bitcoin-qt`HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) + 85\r\n    frame #5: 0x000000010012bbce bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) + 62\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #15, name = 'bitcoin-httpworker.1'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71bda libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x000000010012b457 bitcoin-qt`WorkQueue<HTTPClosure>::Run() + 151\r\n    frame #4: 0x0000000100127365 bitcoin-qt`HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) + 85\r\n    frame #5: 0x000000010012bbce bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) + 62\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #16, name = 'bitcoin-httpworker.2'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71bda libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x000000010012b457 bitcoin-qt`WorkQueue<HTTPClosure>::Run() + 151\r\n    frame #4: 0x0000000100127365 bitcoin-qt`HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) + 85\r\n    frame #5: 0x000000010012bbce bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) + 62\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #17, name = 'bitcoin-httpworker.3'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71bda libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x000000010012b457 bitcoin-qt`WorkQueue<HTTPClosure>::Run() + 151\r\n    frame #4: 0x0000000100127365 bitcoin-qt`HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) + 85\r\n    frame #5: 0x000000010012bbce bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) + 62\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #18, name = 'com.apple.NSEventThread'\r\n    frame #0: 0x00007fff589d517a libsystem_kernel.dylib`mach_msg_trap + 10\r\n    frame #1: 0x00007fff589d56d0 libsystem_kernel.dylib`mach_msg + 60\r\n    frame #2: 0x00007fff2b65b0c2 CoreFoundation`__CFRunLoopServiceMachPort + 337\r\n    frame #3: 0x00007fff2b65a611 CoreFoundation`__CFRunLoopRun + 1654\r\n    frame #4: 0x00007fff2b659d48 CoreFoundation`CFRunLoopRunSpecific + 463\r\n    frame #5: 0x00007fff28bb3f89 AppKit`_NSEventThread + 160\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #19\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x000000010059e337 bitcoin-qt`leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper(void*) at env_posix.cc:649 [opt]\r\n    frame #3: 0x000000010059e301 bitcoin-qt`leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper(arg=0x000000010bf7f3d0) at env_posix.cc:564 [opt]\r\n    frame #4: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #5: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #6: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #20, name = 'bitcoin-torcontrol'\r\n    frame #0: 0x00007fff589db716 libsystem_kernel.dylib`kevent + 10\r\n    frame #1: 0x00000001024edbf2 libevent-2.1.6.dylib`kq_dispatch + 487\r\n    frame #2: 0x00000001024e4b3c libevent-2.1.6.dylib`event_base_loop + 699\r\n    frame #3: 0x00000001002969e2 bitcoin-qt`TorControlThread() + 210\r\n    frame #4: 0x0000000100182217 bitcoin-qt`void TraceThread<void (*)()>(char const*, void (*)()) + 199\r\n    frame #5: 0x000000010029e10e bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, std::__1::__bind<void (*)(char const*, void (*)()), char const (&) [11], void (*)()> > >(void*) + 62\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #21, name = 'bitcoin-net'\r\n    frame #0: 0x00007fff589dc5aa libsystem_kernel.dylib`__select + 10\r\n    frame #1: 0x0000000100180f1d bitcoin-qt`CConnman::SocketEvents(std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >&, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >&, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >&) + 813\r\n    frame #2: 0x000000010018139b bitcoin-qt`CConnman::SocketHandler() + 171\r\n    frame #3: 0x0000000100181fd8 bitcoin-qt`CConnman::ThreadSocketHandler() + 72\r\n    frame #4: 0x0000000100160423 bitcoin-qt`void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) + 211\r\n    frame #5: 0x000000010019758a bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> > >(void*) + 138\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #22, name = 'bitcoin-addcon'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71d01 libc++.1.dylib`std::__1::condition_variable::__do_timed_wait(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >) + 93\r\n    frame #3: 0x0000000100196968 bitcoin-qt`std::__1::cv_status std::__1::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000000l> >(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > const&) + 136\r\n    frame #4: 0x0000000100370f56 bitcoin-qt`CThreadInterrupt::sleep_for(std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) + 166\r\n    frame #5: 0x00000001001865a1 bitcoin-qt`CConnman::ThreadOpenAddedConnections() + 529\r\n    frame #6: 0x0000000100160423 bitcoin-qt`void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) + 211\r\n    frame #7: 0x000000010019758a bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> > >(void*) + 138\r\n    frame #8: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #9: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #10: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #23, name = 'bitcoin-opencon'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71d01 libc++.1.dylib`std::__1::condition_variable::__do_timed_wait(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >) + 93\r\n    frame #3: 0x0000000100196968 bitcoin-qt`std::__1::cv_status std::__1::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000000l> >(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > const&) + 136\r\n    frame #4: 0x0000000100370f56 bitcoin-qt`CThreadInterrupt::sleep_for(std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) + 166\r\n    frame #5: 0x0000000100184b5d bitcoin-qt`CConnman::ThreadOpenConnections(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >) + 573\r\n    frame #6: 0x0000000100197ead bitcoin-qt`void std::__1::__invoke_void_return_wrapper<void>::__call<std::__1::__bind<void (CConnman::*)(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >), CConnman*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>&>(std::__1::__bind<void (CConnman::*)(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >), CConnman*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>&&&) + 77\r\n    frame #7: 0x0000000100160423 bitcoin-qt`void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) + 211\r\n    frame #8: 0x000000010019758a bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> > >(void*) + 138\r\n    frame #9: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #10: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #11: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #24, name = 'bitcoin-msghand'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71d01 libc++.1.dylib`std::__1::condition_variable::__do_timed_wait(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >) + 93\r\n    frame #3: 0x0000000100196968 bitcoin-qt`std::__1::cv_status std::__1::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000000l> >(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > const&) + 136\r\n    frame #4: 0x0000000100186b2c bitcoin-qt`CConnman::ThreadMessageHandler() + 1020\r\n    frame #5: 0x0000000100160423 bitcoin-qt`void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) + 211\r\n    frame #6: 0x000000010019758a bitcoin-qt`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> > >(void*) + 138\r\n    frame #7: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #8: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #9: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #25, name = 'QThread'\r\n    frame #0: 0x00007fff589d87de libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff58a92593 libsystem_pthread.dylib`_pthread_cond_wait + 724\r\n    frame #2: 0x00007fff55f71bda libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x000000010021d4f4 bitcoin-qt`waitforblock(JSONRPCRequest const&) + 2996\r\n    frame #4: 0x0000000100285a58 bitcoin-qt`std::__1::__invoke_void_return_wrapper<bool>::__call<CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(bool, CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&&&, JSONRPCRequest const&&&, UniValue&&&, bool&&) + 40\r\n    frame #5: 0x0000000100283815 bitcoin-qt`CRPCTable::execute(JSONRPCRequest const&) const + 1093\r\n    frame #6: 0x000000010014022d bitcoin-qt`interfaces::(anonymous namespace)::NodeImpl::executeRpc(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, UniValue const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 317\r\n    frame #7: 0x000000010005c88a bitcoin-qt`RPCConsole::RPCParseCommandLine(node=0x00000001027ddf70, strResult=\"\", strCommand=\"waitforblock 000000000000000000017ef0d8ff676c77299abb0d8b41dbc5a3c8d552d759ae\\n\", fExecute=<unavailable>, pstrFilteredOut=\"\", wallet_model=0x0000000000000000) at rpcconsole.cpp:312 [opt]\r\n    frame #8: 0x000000010005ad5c bitcoin-qt`RPCExecutor::request(QString const&, WalletModel const*) [inlined] RPCConsole::RPCExecuteCommandLine(node=<unavailable>, strResult=\"\", strCommand=\"\", pstrFilteredOut=<unavailable>, wallet_model=<unavailable>) at rpcconsole.h:46 [opt]\r\n    frame #9: 0x000000010005ad4c bitcoin-qt`RPCExecutor::request(this=0x000000010271d0c0, command=<unavailable>, wallet_model=0x0000000000000000) at rpcconsole.cpp:417 [opt]\r\n    frame #10: 0x0000000101f5f9f1 QtCore`QObject::event(QEvent*) + 769\r\n    frame #11: 0x000000010128b46d QtWidgets`QApplicationPrivate::notify_helper(QObject*, QEvent*) + 269\r\n    frame #12: 0x000000010128c897 QtWidgets`QApplication::notify(QObject*, QEvent*) + 583\r\n    frame #13: 0x0000000101f35f64 QtCore`QCoreApplication::notifyInternal2(QObject*, QEvent*) + 164\r\n    frame #14: 0x0000000101f370d7 QtCore`QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) + 791\r\n    frame #15: 0x0000000101f8b908 QtCore`QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 72\r\n    frame #16: 0x0000000101f313de QtCore`QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 430\r\n    frame #17: 0x0000000101d7516c QtCore`QThread::exec() + 140\r\n    frame #18: 0x0000000101d7e65e QtCore`___lldb_unnamed_symbol310$$QtCore + 350\r\n    frame #19: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #20: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #21: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #26, name = 'QThread'\r\n    frame #0: 0x00007fff589dd2ee libsystem_kernel.dylib`poll + 10\r\n    frame #1: 0x0000000101f8a3a0 QtCore`qt_safe_poll(pollfd*, unsigned int, timespec const*) + 576\r\n    frame #2: 0x0000000101f8bc29 QtCore`QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 873\r\n    frame #3: 0x0000000101f313de QtCore`QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 430\r\n    frame #4: 0x0000000101d7516c QtCore`QThread::exec() + 140\r\n    frame #5: 0x0000000101d7e65e QtCore`___lldb_unnamed_symbol310$$QtCore + 350\r\n    frame #6: 0x00007fff58a8f305 libsystem_pthread.dylib`_pthread_body + 126\r\n    frame #7: 0x00007fff58a9226f libsystem_pthread.dylib`_pthread_start + 70\r\n    frame #8: 0x00007fff58a8e415 libsystem_pthread.dylib`thread_start + 13\r\n  thread #27\r\n    frame #0: 0x00007fff58a8e3f8 libsystem_pthread.dylib`start_wqthread\r\n  thread #28\r\n    frame #0: 0x00007fff58a8e3f8 libsystem_pthread.dylib`start_wqthread\r\n```",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17495#issuecomment-554784989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495"
    },
    {
      "event": "commented",
      "id": 554785057,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDc4NTA1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554785057",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-17T20:46:29Z",
      "updated_at": "2019-11-17T20:46:29Z",
      "author_association": "MEMBER",
      "body": "FWIW the deadlock doesn't happen with bitcoind.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17495#issuecomment-554785057",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495"
    },
    {
      "event": "commented",
      "id": 605210254,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTIxMDI1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605210254",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T18:50:17Z",
      "updated_at": "2020-03-27T18:50:17Z",
      "author_association": "MEMBER",
      "body": "@fanquake @promag Mind testing #18452?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17495#issuecomment-605210254",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17495"
    },
    {
      "event": "mentioned",
      "id": 3173639214,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE3MzYzOTIxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3173639214",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T18:50:17Z"
    },
    {
      "event": "subscribed",
      "id": 3173639217,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNzM2MzkyMTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3173639217",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T18:50:17Z"
    },
    {
      "event": "mentioned",
      "id": 3173639222,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE3MzYzOTIyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3173639222",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T18:50:17Z"
    },
    {
      "event": "subscribed",
      "id": 3173639226,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNzM2MzkyMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3173639226",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T18:50:17Z"
    },
    {
      "event": "closed",
      "id": 3387270639,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzM4NzI3MDYzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3387270639",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e4bfd51acc111c27f8a808756f88738b02388c38",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4bfd51acc111c27f8a808756f88738b02388c38",
      "created_at": "2020-05-29T13:50:04Z"
    },
    {
      "event": "referenced",
      "id": 3390170922,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzOTAxNzA5MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390170922",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ff0692d4f3d95c3ce25c2ec5518b5136aa79d1b1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/ff0692d4f3d95c3ce25c2ec5518b5136aa79d1b1",
      "created_at": "2020-05-31T00:21:06Z"
    },
    {
      "event": "locked",
      "id": 6073886295,
      "node_id": "LOE_lADOABII584fOZ5EzwAAAAFqCCZX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073886295",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:45:21Z",
      "lock_reason": "resolved"
    }
  ]
}