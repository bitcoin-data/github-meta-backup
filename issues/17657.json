{
  "type": "issue",
  "issue": {
    "id": 532173987,
    "node_id": "MDU6SXNzdWU1MzIxNzM5ODc=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/17657",
    "number": 17657,
    "state": "closed",
    "state_reason": "completed",
    "title": "fuzzing: Write a fuzzer for structured data (e.g. libprotobuf-mutator)",
    "body": "Messages in Bitcoin are structured, so a fuzzer that was written on structured data might be practically more efficient than our current \"blind\" fuzzers. https://github.com/google/libprotobuf-mutator looks like a good place to start. The goal of this issue is to write one (or more) fuzzers that are based on structured input data. For example, a transaction or PSBT could be expressed in a structured way and fed into the existing tx or psbt fuzz paths.\r\n\r\n\r\nUseful skills: Background in fuzzing and structured data formats\r\n\r\nThe purpose of the `good first issue` label is to highlight which issues are suitable for a new contributor without a deep understanding of the codebase.\r\n\r\nWant to work on this issue?\r\n\r\nYou do not need to request permission to start working on this. You are encouraged to comment on the issue if you are planning to work on it. This will help other contributors monitor which issues are actively being addressed and is also an effective way to request assistance if and when you need it.\r\n\r\nFor guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request.\r\n",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 12,
    "closed_at": "2021-03-08T13:05:24Z",
    "created_at": "2019-12-03T18:20:02Z",
    "updated_at": "2022-08-18T19:52:56Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 2851123176,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4NTExMjMxNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2851123176",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-03T18:20:02Z",
      "label": {
        "name": "good first issue",
        "color": "c2e0c6"
      }
    },
    {
      "event": "labeled",
      "id": 2851123615,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4NTExMjM2MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2851123615",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-03T18:20:08Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 562869600,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjg2OTYwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562869600",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T17:17:54Z",
      "updated_at": "2019-12-07T17:22:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi,\r\n\r\nI've implemented a [very basic structure](https://github.com/brakmic/bitcoin/commit/93abc06a73196e3eef2f84fb5dd27e9efd5d0a27) for \"structured fuzzing\".\r\n\r\nAfter I've unsuccessfully tried to integrate this variant with the already existing from **src/test/fuzz**, I moved the code into the sub-dir **src/test/fuzz/structured**. \r\n\r\nHowever, the new code is still based on the existing logic, for example the *transaction* source. The difference here is, that it also includes additional libFuzzer API's *LLVMFuzzerMutate* and *LLVMFuzzerCustomMutator* which execute logic that comes from new mutator classes.\r\n\r\nCurrently, there's only a very **basic mutator** class available, which I have modelled after the original one from [libprotobuf-mutator](https://github.com/google/libprotobuf-mutator/blob/master/src/mutator.h#L45). Although very sophisticated, the code in libprotobuf-mutator is also very complex (at least for me), so that I avoided mindless copy/pasting. \r\n\r\nAt this stage, I think, it's better to start really small and introduce only as much stuff as I can understand (*have never worked with fuzzing before...in fact, I know it for less than 24 hours*).\r\n\r\nIf I am not totally mistaken, a **specialized mutator** class should be able to modify Bitcoin's messages by changing their properties and not only raw \"byte vectors\". For example, a mutator should be able to take a transaction and modify it in some way to check if anything problematic will happen.\r\n\r\n### Example\r\n\r\nThis is how the output looks like (of course, it doesn't go far enough as the current fuzzing capabilities aren't specialized enough)\r\n\r\n```shell\r\n./src/test/fuzz/structured/transaction test/fuzz/qa-assets/fuzz_seed_corpus/transaction/\r\nINFO: Seed: 2167175973\r\nINFO: Loaded 1 modules   (1206386 inline 8-bit counters): 1206386 [0x10f6f1648, 0x10f817eba), \r\nINFO: Loaded 1 PC tables (1206386 PCs): 1206386 [0x10f817ec0,0x110a805e0), \r\nINFO:      295 files found in test/fuzz/qa-assets/fuzz_seed_corpus/transaction/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 52575 bytes\r\nINFO: seed corpus: files: 295 min: 1b max: 52575b total: 491499b rss: 76Mb\r\n#128    pulse  cov: 4823 ft: 12238 corp: 107/3309b exec/s: 64 rss: 156Mb\r\n#256    pulse  cov: 5691 ft: 23700 corp: 211/46Kb exec/s: 85 rss: 161Mb\r\n#296    INITED cov: 5695 ft: 25566 corp: 243/391Kb exec/s: 74 rss: 173Mb\r\n#512    pulse  cov: 5695 ft: 25566 corp: 243/391Kb lim: 52575 exec/s: 128 rss: 173Mb\r\n#1024   pulse  cov: 5695 ft: 25566 corp: 243/391Kb lim: 52575 exec/s: 256 rss: 174Mb\r\n#2048   pulse  cov: 5695 ft: 25566 corp: 243/391Kb lim: 52575 exec/s: 409 rss: 176Mb\r\n#4096   pulse  cov: 5695 ft: 25566 corp: 243/391Kb lim: 52575 exec/s: 682 rss: 179Mb\r\n#8192   pulse  cov: 5695 ft: 25566 corp: 243/391Kb lim: 52575 exec/s: 1024 rss: 186Mb\r\n#16384  pulse  cov: 5695 ft: 25566 corp: 243/391Kb lim: 52575 exec/s: 1365 rss: 199Mb\r\n```\r\n\r\n### Learning Resources\r\n\r\nIf there's someone else also interested in working with structured fuzzing I'd recommend these videos and texts:\r\n\r\n* [Video: Structure-aware fuzzing for Clang and LLVM with libprotobuf-mutator](https://youtu.be/U60hC16HEDY)\r\n* [Video: Fuzz or lose: why and how to make fuzzing a standard practice for C++](https://youtu.be/k-Cv8Q3zWNQ)\r\n* [Awesome Fuzzing](https://github.com/cpuu/awesome-fuzzing/blob/master/README.md)\r\n* [Fuzz-Testing Bitcoin Core](https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md)\r\n* [libprotobuf-mutator project](https://github.com/google/libprotobuf-mutator)\r\n\r\nOr, if there's someone else with more experience, please, grab my code, adapt it and share your changes. \r\n\r\nAny help is very much appreciated! 👍 \r\n\r\n------\r\n### A few words for people out there struggling with macOS. 😱 \r\n\r\nI'm working on **macOS Catalina**, so maybe I should also put a few words on compiling the fuzzing capability with it:\r\n\r\n* Take care of having an LLVM/Clang environment that contains fuzzing libraries. The default one from Apple is not enough, so that you will have to install it with **brew**, if not already done. \r\n\r\n* When executing **./configure** you should put **--disable-asm** to avoid errors with certain assembly code from Bitcoin Core's code. [There's an entry about it here](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#sanitizers) and it seems to have something to do with sanitizers you have to compile for fuzzing.\r\n\r\n* Take care of giving the correct path for **clang** and **clang++**, like **CC=/path/to/clang** **CXX=/path/to/clang++**\r\n\r\n* If you run into problems with \"boost sleep\" or some of boost's libraries can't be found, like boost.thread or boost.filesystem, add this to your *configure*: \r\n\r\n```shell\r\nCXXFLAGS=\"-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk\"\r\n``` \r\n**Notice**: I am using Catalina 10.15.1, so your SDK might be different and you should adapt the path accordingly. \r\n\r\nHere's my complete **configure**, just in case.\r\n\r\n```shell\r\n./configure --disable-ccache --enable-fuzz --with-sanitizers=fuzzer,address,undefined --with-boost CPPFLAGS=\"-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include\" CXXFLAGS=\"-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk\" CC=/usr/local/opt/llvm/bin/clang CXX=/usr/local/opt/llvm/bin/clang++ LDFLAGS=\"-L/usr/local/lib/darwin/\" --disable-asm\r\n```\r\n\r\nRegards,",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-562869600",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "commented",
      "id": 562888023,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjg4ODAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562888023",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T21:24:00Z",
      "updated_at": "2019-12-07T21:24:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "@brakmic \r\n\r\nI'm very glad to see that you are interested in adding more fuzzing harnesses to the project. Welcome!\r\n\r\nIf you want to work on improving fuzzing coverage in Bitcoin Core there is **a lot** of long-hanging fruit in the form of currently non-fuzz-covered code that could be covered simply by adding small, simple and dumb fuzzing harnesses (without any dependency on `libprotobuf-mutator` or similar). See the simple fuzzers linked below for inspiration.\r\n\r\nCoverage-guided fuzzers like `libFuzzer` are surprisingly good these days, so I think you'll be surprised how deep also simple fuzzing harnesses can reach :)\r\n\r\nAfter adding a few fuzzers to the project you'll get a feel for the limits of simple fuzzing harnesses and you might notice cases where measurements indicate that a fuzzer gets stuck because of the lack of more sophisticated structure awareness. Then it might make sense to look at bringing in `libprotobuf-mutator` or similar, but my suggestion though is to start with the simplest possible fuzzing techniques first and then add complexity only when required.\r\n\r\n**Fuzzing harnesses should be as simple as possible, but not simpler :)**\r\n\r\nIf you are interested in fuzzing Bitcoin Core, please consider reviewing any of the fuzzing PR:s awaiting review:\r\n* https://github.com/bitcoin/bitcoin/pull/17050 – \"tests: Add fuzzing harnesses for functions parsing scripts, numbers, JSON and HD keypaths (bip32)\"\r\n* https://github.com/bitcoin/bitcoin/pull/17071 – \"tests: Add fuzzing harness for CheckBlock(...) and other CBlock related functions\"\r\n* https://github.com/bitcoin/bitcoin/pull/17093 – \"tests: Add fuzzing harness for various CTx{In,Out} related functions\"\r\n* https://github.com/bitcoin/bitcoin/pull/17109 – \"tests: Add fuzzing harness for various functions consuming only integrals\"\r\n* https://github.com/bitcoin/bitcoin/pull/17225 – \"tests: Test serialisation as part of deserialisation fuzzing. Test round-trip equality where possible.\"\r\n* https://github.com/bitcoin/bitcoin/pull/17229 – \"tests: Add fuzzing harnesses for various Base{32,58,64} and hex related functions\"\r\n\r\nI would be glad to help if you run in to any problems during your fuzzing journey :)  Also, don't hesitate to ping me if you want any fuzzing PR reviewed :)\r\n\r\nAgain: welcome! We need more fuzzing in Bitcoin Core! :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-562888023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2863789415,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg2Mzc4OTQxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2863789415",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T21:24:00Z"
    },
    {
      "event": "subscribed",
      "id": 2863789416,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4NjM3ODk0MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2863789416",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T21:24:00Z"
    },
    {
      "event": "commented",
      "id": 562889205,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjg4OTIwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562889205",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T21:41:58Z",
      "updated_at": "2019-12-07T21:41:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift \r\n\r\nMany thanks for your support and the list of fuzzing PR's! \r\nNow I can work on something that's concrete. :) \r\n\r\nThis also will produce proper feedback, so I can adapt the code accordingly.\r\n\r\nRegards,",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-562889205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2863798350,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg2Mzc5ODM1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2863798350",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T21:41:58Z"
    },
    {
      "event": "subscribed",
      "id": 2863798352,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4NjM3OTgzNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2863798352",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-07T21:41:58Z"
    },
    {
      "event": "commented",
      "id": 565185089,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTE4NTA4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565185089",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T21:01:27Z",
      "updated_at": "2019-12-12T21:01:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift \r\n\r\nMeanwhile, I've created [a small structure](https://github.com/brakmic/bitcoin/commit/ef8a951cbefc6374767f2ebcf7fba5b9f2377950) that should help build various structured fuzzers. It's nothing complex, just a single interface that all fuzzing classes must implement. \r\n\r\n```cpp\r\nclass IMutator {\r\npublic:\r\n  // Initialize random nuber generator\r\n  virtual void Seed(unsigned int value) = 0;\r\n  // Default mutate function.\r\n  // All Bitcoin messages are vectors of bytes that can be converted into\r\n  // structures like Transactions, PSBT's, Scripts etc.\r\n  virtual void Mutate(std::vector<uint8_t>& data) = 0;\r\n    // Register callback for postprocessing of mutated messages.\r\n  virtual void RegisterPostProcessor(const IDescriptor* descriptor, PostProcessFunction callback) = 0;\r\n};\r\n```\r\n\r\nI have then taken the original Script- and Transaction-Fuzzers and extended them with custom fuzzing APIs from **libFuzzer**. However, the transaction fuzzer is still very primitive, so that only Script Fuzzer should be considered for now.\r\n\r\nIn the current implementation I'm letting this fuzzer create tons of (im)possible Bitcoin Scripts. These would look like this (every line is a separate script that will be fired against various functions):\r\n\r\n```shell\r\n2 OP_PICK OP_BOOLOR OP_PUSHDATA2 12 OP_ADD 1 OP_SIZE OP_NOTIF OP_MAX OP_VERIF OP_TOALTSTACK OP_CHECKSEQUENCEVERIFY OP_NIP \r\nOP_PICK OP_BOOLOR OP_PUSHDATA2 12 \r\nOP_PICK OP_BOOLOR OP_PUSHDATA2 12 OP_ADD 1 OP_SIZE OP_NOTIF OP_MAX OP_VERIF OP_TOALTSTACK OP_CHECKSEQUENCEVERIFY OP_NIP OP_SWAP \r\nOP_BOOLOR OP_PUSHDATA2 12 \r\n12 1 OP_SIZE OP_NOTIF OP_MAX \r\n12 OP_ADD 1 OP_SIZE OP_NOTIF OP_MAX OP_VERIF \r\n12 OP_ADD 1 OP_SIZE \r\nOP_ADD 1 \r\n1 OP_SIZE OP_NOTIF OP_MAX OP_VERIF OP_TOALTSTACK OP_CHECKSEQUENCEVERIFY OP_NIP OP_SWAP \r\nOP_SIZE OP_NOTIF OP_MAX OP_VERIF OP_TOALTSTACK OP_CHECKSEQUENCEVERIFY \r\nOP_NOP OP_MAX OP_VERIF OP_TOALTSTACK OP_CHECKSEQUENCEVERIFY \r\nOP_NOP OP_VERIF OP_TOALTSTACK OP_CHECKSEQUENCEVERIFY OP_NIP \r\n13 5 -1 OP_CHECKSIG OP_2DUP OP_WITHIN OP_IF OP_2DIV OP_ELSE 12 \r\n13 5 -1 OP_CHECKSIG OP_2DUP OP_WITHIN OP_IF OP_2DIV OP_ELSE 12 \r\n-1 OP_CHECKSIG OP_2DUP OP_WITHIN OP_IF OP_2DIV OP_ELSE 12 OP_ADD OP_NOP6 OP_XOR OP_TUCK OP_2DUP OP_VER OP_VERIF OP_FROMALTSTACK \r\n-1 OP_CHECKSIG OP_2DUP OP_WITHIN OP_IF OP_2DIV OP_ELSE 12 OP_ADD OP_NOP6 OP_XOR OP_TUCK OP_2DUP OP_VER OP_VERIF OP_FROMALTSTACK \r\nOP_CHECKSIG OP_2DUP OP_WITHIN OP_IF OP_2DIV OP_ELSE 12 OP_ADD OP_NOP6 OP_XOR OP_TUCK \r\nOP_2DIV OP_ELSE 12 \r\n12 OP_ADD OP_NOP6 OP_XOR OP_TUCK\r\n```\r\n\r\nI am not sure if this is useful at all, so maybe I should not try to introduce any additional complexities before letting others double check it. Maybe the whole interface-implementation stuff is already too much for this task, so any help in this case is very much appreciated.\r\n\r\nOne more thing, however...\r\n\r\nDuring my experiments I encountered these UB-sanitizer warnings when starting the script fuzzer:\r\n\r\n```bash\r\nINFO: Seed: 1708339462\r\nINFO: Loaded 1 modules   (1093525 inline 8-bit counters): 1093525 [0x1106584c8, 0x11076345d), \r\nINFO: Loaded 1 PC tables (1093525 PCs): 1093525 [0x110763460,0x111812db0), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nprevector.h:453:19: runtime error: reference binding to misaligned address 0x7ffee318f162 for type 'prevector<28, unsigned char, unsigned int, int>::size_type' (aka 'unsigned int'), which requires 4 byte alignment\r\n0x7ffee318f162: note: pointer points here\r\n 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00\r\n              ^ \r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prevector.h:453:19 in \r\n/usr/local/opt/llvm/bin/../include/c++/v1/type_traits:3699:25: runtime error: reference binding to misaligned address 0x7ffee318f162 for type 'unsigned int', which requires 4 byte alignment\r\n0x7ffee318f162: note: pointer points here\r\n 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00\r\n              ^ \r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/local/opt/llvm/bin/../include/c++/v1/type_traits:3699:25 in \r\n/usr/local/opt/llvm/bin/../include/c++/v1/type_traits:2281:12: runtime error: reference binding to misaligned address 0x7ffee318f162 for type '_Up' (aka 'unsigned int'), which requires 4 byte alignment\r\n0x7ffee318f162: note: pointer points here\r\n 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00\r\n              ^ \r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/local/opt/llvm/bin/../include/c++/v1/type_traits:2281:12 in \r\n/usr/local/opt/llvm/bin/../include/c++/v1/type_traits:3699:13: runtime error: load of misaligned address 0x7ffee318f162 for type 'typename remove_reference<unsigned int &>::type' (aka 'unsigned int'), which requires 4 byte alignment\r\n0x7ffee318f162: note: pointer points here\r\n 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00\r\n```\r\n\r\nFirst, I thought that it must have been because of my sloppy coding, but no matter what I did, the warnings remained. \r\n\r\nThen I started (de)activating functions from [LLVMFuzzerTestOneInput](https://github.com/brakmic/bitcoin/blob/fuzzing-experiments/src/test/fuzz/structured/script.cpp#L52) in **test/fuzz/structured/script.cpp** one by one. \r\n\r\nAnd it seems that this call is the culprit, but I still can't explain why:\r\n\r\n```cpp\r\n(void)IsSolvable(signing_provider, script);\r\n````\r\n\r\nThis function was taken like all others [from the original test/fuzz/script.cpp](https://github.com/bitcoin/bitcoin/blob/master/src/test/fuzz/script.cpp#L48)\r\n\r\nHowever, I am still convinced that it has something to do with my code.\r\n\r\nRegards,\r\n",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565185089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2879366992,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg3OTM2Njk5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2879366992",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T21:01:28Z"
    },
    {
      "event": "subscribed",
      "id": 2879366994,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4NzkzNjY5OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2879366994",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T21:01:28Z"
    },
    {
      "event": "commented",
      "id": 565186187,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTE4NjE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565186187",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T21:04:32Z",
      "updated_at": "2019-12-12T21:04:32Z",
      "author_association": "MEMBER",
      "body": "> During my experiments I encountered these UB-sanitizer warnings when starting the script fuzzer:\r\n\r\nI recommend to activate all known suppressions:\r\n\r\n```\r\nexport LSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/lsan\"\r\nexport TSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan\"\r\nexport UBSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565186187",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "commented",
      "id": 565223276,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTIyMzI3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565223276",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T22:54:16Z",
      "updated_at": "2019-12-12T22:55:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@brakmic \r\n\r\nThe prevector alignment issue is known and fixed by PR #17708. Please consider reviewing that PR - it would be nice to have it solved :)\r\n\r\nRegarding the `fuzzing-experiments` branch: try to measure what results you get from the fuzzing harness in that +564 LOC branch in terms of coverage and then compare that to what you achieve using the simplest possible ~20 LOC fuzzer you can think of for the same target function. What were the results? Did the extra abstractions pay off?",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565223276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2879653518,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg3OTY1MzUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2879653518",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T22:54:16Z"
    },
    {
      "event": "subscribed",
      "id": 2879653519,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4Nzk2NTM1MTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2879653519",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-12T22:54:16Z"
    },
    {
      "event": "commented",
      "id": 565397527,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM5NzUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565397527",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T10:55:21Z",
      "updated_at": "2019-12-13T10:57:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift \r\n\r\nMany thanks for the hint regarding alignment issues. Now I don't have to make my code even more ugly ;)\r\n\r\nHere's the output of script fuzzers. The first one is with custom fuzzing function activated, the second one is exactly the same fuzzer but without the custom function. I just put \r\n\r\n```cpp\r\n#ifdef CUSTOM_FUZZER \r\n... \r\n#endif\r\n```\r\n around it.\r\n\r\n```shell\r\nINFO: Seed: 1052026202\r\nINFO: Loaded 1 modules   (1093525 inline 8-bit counters): 1093525 [0x10ada24c8, 0x10aead45d), \r\nINFO: Loaded 1 PC tables (1093525 PCs): 1093525 [0x10aead460,0x10bf5cdb0), \r\nINFO:      440 files found in test/fuzz/qa-assets/fuzz_seed_corpus/script/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: seed corpus: files: 440 min: 1b max: 3948b total: 136723b rss: 72Mb\r\n#442    INITED cov: 6325 ft: 12399 corp: 320/91Kb exec/s: 221 rss: 89Mb\r\n#512    pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 256 rss: 89Mb\r\n#1024   pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 512 rss: 90Mb\r\n#2048   pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 682 rss: 91Mb\r\n#4096   pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1024 rss: 93Mb\r\n#8192   pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1170 rss: 97Mb\r\n#16384  pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1260 rss: 105Mb\r\n#32768  pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1260 rss: 123Mb\r\n#65536  pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1213 rss: 156Mb\r\n#131072 pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1310 rss: 223Mb\r\n#262144 pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1337 rss: 359Mb\r\n#524288 pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1383 rss: 543Mb\r\n#1048576        pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1286 rss: 544Mb\r\n#2097152        pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1304 rss: 544Mb\r\n#4194304        pulse  cov: 6325 ft: 12399 corp: 320/91Kb lim: 4096 exec/s: 1326 rss: 544Mb\r\n```\r\n\r\nIt ran for some 30+ minutes before I stopped it and this is the maximum coverage it was able to achieve. I am pretty sure, that a more \"intelligent\" script-randomizing technique might have achieved a bit more, but for this I would need to find a way how to construct more \"realistic\" scripts. That is, scripts which are \"almost\" correct. Right now, it's more or less creating batches of randomly selected Op-Codes.\r\n\r\nAnd here the \"normal\" fuzzer output.\r\n\r\n```shell\r\nINFO: Seed: 1849818327INFO: Loaded 1 modules   (1092492 inline 8-bit counters): 1092492 [0x10ccef048, 0x10cdf9bd4),\r\nINFO: Loaded 1 PC tables (1092492 PCs): 1092492 [0x10cdf9bd8,0x10dea5498), \r\nINFO:      276 files found in test/fuzz/qa-assets/fuzz_seed_corpus/script/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: seed corpus: files: 276 min: 1b max: 3948b total: 56003b rss: 71Mb\r\n...[snip]...\r\n#79124  REDUCE cov: 3502 ft: 8202 corp: 307/117Kb lim: 4096 exec/s: 277 rss: 542Mb L: 2244/3940 MS: 2 ChangeASCIIInt-EraseBytes-\r\n#80005  REDUCE cov: 3502 ft: 8202 corp: 307/117Kb lim: 4096 exec/s: 277 rss: 542Mb L: 918/3940 MS: 1 EraseBytes-\r\n#80168  REDUCE cov: 3502 ft: 8202 corp: 307/117Kb lim: 4096 exec/s: 278 rss: 542Mb L: 195/3940 MS: 3 InsertRepeatedBytes-InsertByte-EraseBytes-\r\n#80409  REDUCE cov: 3502 ft: 8202 corp: 307/117Kb lim: 4096 exec/s: 278 rss: 542Mb L: 2239/3940 MS: 1 EraseBytes-\r\n#81560  REDUCE cov: 3502 ft: 8202 corp: 307/116Kb lim: 4096 exec/s: 278 rss: 542Mb L: 2047/3940 MS: 1 EraseBytes-\r\n#81994  REDUCE cov: 3502 ft: 8202 corp: 307/116Kb lim: 4096 exec/s: 278 rss: 542Mb L: 1731/3940 MS: 4 ChangeBinInt-ChangeASCIIInt-ChangeBit-EraseBytes-\r\n#82232  REDUCE cov: 3502 ft: 8202 corp: 307/116Kb lim: 4096 exec/s: 278 rss: 542Mb L: 989/3940 MS: 3 InsertRepeatedBytes-CMP-EraseBytes- DE: \"\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x10\"-\r\n#83897  REDUCE cov: 3502 ft: 8202 corp: 307/115Kb lim: 4096 exec/s: 280 rss: 542Mb L: 930/3940 MS: 5 ChangeBit-ChangeByte-ShuffleBytes-ChangeBit-EraseBytes-\r\n#84769  REDUCE cov: 3502 ft: 8202 corp: 307/115Kb lim: 4096 exec/s: 280 rss: 542Mb L: 992/3940 MS: 2 EraseBytes-CMP- DE: \"\\xb7\\x01\"-\r\n#87330  REDUCE cov: 3502 ft: 8202 corp: 307/115Kb lim: 4096 exec/s: 282 rss: 542Mb L: 240/3940 MS: 1 EraseBytes-\r\n#87545  REDUCE cov: 3502 ft: 8202 corp: 307/115Kb lim: 4096 exec/s: 282 rss: 542Mb L: 890/3940 MS: 5 ChangeByte-ShuffleBytes-ChangeBit-InsertByte-EraseBytes-\r\n#89626  REDUCE cov: 3502 ft: 8202 corp: 307/114Kb lim: 4096 exec/s: 283 rss: 542Mb L: 135/3940 MS: 1 EraseBytes-\r\n#90207  REDUCE cov: 3502 ft: 8202 corp: 307/114Kb lim: 4096 exec/s: 283 rss: 542Mb L: 778/3940 MS: 1 EraseBytes-\r\n#91059  REDUCE cov: 3502 ft: 8202 corp: 307/114Kb lim: 4096 exec/s: 283 rss: 542Mb L: 3382/3923 MS: 2 ChangeASCIIInt-EraseBytes-\r\n#91787  NEW    cov: 3502 ft: 8205 corp: 308/114Kb lim: 4096 exec/s: 284 rss: 542Mb L: 25/3923 MS: 3 ChangeBit-PersAutoDict-EraseBytes- DE: \"\\x17\\x04\\x00\\x00\"-\r\n#94658  REDUCE cov: 3502 ft: 8205 corp: 308/114Kb lim: 4096 exec/s: 285 rss: 542Mb L: 942/3923 MS: 1 EraseBytes-\r\n#99369  REDUCE cov: 3502 ft: 8205 corp: 308/114Kb lim: 4096 exec/s: 286 rss: 542Mb L: 1655/3923 MS: 1 EraseBytes-\r\n#100062 REDUCE cov: 3502 ft: 8205 corp: 308/113Kb lim: 4096 exec/s: 286 rss: 542Mb L: 3586/3923 MS: 3 InsertByte-ChangeByte-EraseBytes-\r\n#100503 REDUCE cov: 3502 ft: 8205 corp: 308/113Kb lim: 4096 exec/s: 286 rss: 542Mb L: 60/3923 MS: 1 EraseBytes-\r\n#100894 REDUCE cov: 3502 ft: 8205 corp: 308/113Kb lim: 4096 exec/s: 286 rss: 542Mb L: 134/3923 MS: 1 EraseBytes-\r\n#101858 REDUCE cov: 3502 ft: 8205 corp: 308/113Kb lim: 4096 exec/s: 284 rss: 542Mb L: 450/3923 MS: 4 ChangeBit-ShuffleBytes-InsertByte-EraseBytes-\r\n...[snip]...\r\n``` \r\n\r\nHowever, being unexperienced in fuzzing I am not going to experiment \"too much\", because it's really easy to get lost in complexities when you're dealing with new things. \r\n\r\nMaybe you or others have better ideas how to build a proper structured fuzzer?\r\n\r\nRegards,",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565397527",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2880971049,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg4MDk3MTA0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2880971049",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T10:55:21Z"
    },
    {
      "event": "subscribed",
      "id": 2880971052,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4ODA5NzEwNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2880971052",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T10:55:21Z"
    },
    {
      "event": "commented",
      "id": 565452833,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTQ1MjgzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565452833",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T14:06:19Z",
      "updated_at": "2019-12-13T14:07:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@brakmic \r\n\r\nTo make it a proper shoot-out you'll need to make sure the two fuzzing sessions with exactly the same seed input corpus and that the fuzzing binaries are given the same run-time.\r\n\r\nIn what you posted above the initial corpus sizes differs:\r\n\r\n```\r\nINFO: seed corpus: files: 440 min: 1b max: 3948b total: 136723b rss: 72Mb\r\nvs.\r\nINFO: seed corpus: files: 276 min: 1b max: 3948b total: 56003b rss: 71Mb\r\n```\r\n\r\nTry doing the shoot-out by giving each fuzzing harness a fresh copy of `qa-assets/fuzz_seed_corpus/script/`. It should be a fresh copy without any saved findings. Avoid the mistake of sharing the same directory between the fuzzers: they should have a separate directory each since `libFuzzer` will write to these directories.\r\n\r\nAlso make sure they are given same runtime using `-max_total_time`.\r\n\r\nCan you repeat your experiment with these adjustments and post the full results to a GitHub gist? :) Make sure to include all initial `INFO:` lines and also the ending `DONE` line in the output.\r\n\r\n> […] it's really easy to get lost in complexities when you're dealing with new things.\r\n\r\nA good point. A way to avoid that is to go super simple to start with and only gradually introduce abstractions/complexities only when evidence suggests it is needed.\r\n\r\nIn this specific case: my suggestion is that you start with writing a few basic non-structured fuzzers and wait with introducing structured fuzzing until you have experimental results suggesting that such a move would allow you to reach code paths unreachable by simpler methods (or finding such code paths much quicker).",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565452833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2881471363,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg4MTQ3MTM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2881471363",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T14:06:19Z"
    },
    {
      "event": "subscribed",
      "id": 2881471365,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4ODE0NzEzNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2881471365",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T14:06:19Z"
    },
    {
      "event": "commented",
      "id": 565474969,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTQ3NDk2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565474969",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T15:07:26Z",
      "updated_at": "2019-12-13T15:07:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift \r\n\r\nMany thanks! Now I understand a few things better. I've executed the two tests. For both of them I cloned Bitcoin's qa-assets anew: `git clone https://github.com/bitcoin-core/qa-assets `\r\n\r\nI also compiled **src/test/fuzz/structured/script.cpp** with and without the **custom function**. \r\n\r\nI executed them with same arguments:\r\n\r\n```shell\r\n./src/test/fuzz/structured/script -max_total_time=240 test/fuzz/qa-assets/fuzz_seed_corpus/script/\r\n```\r\nThe output of the non-custom script.cpp is:\r\n\r\n```shell\r\nINFO: Seed: 3994611508\r\nINFO: Loaded 1 modules   (1092492 inline 8-bit counters): 1092492 [0x10b467048, 0x10b571bd4), \r\nINFO: Loaded 1 PC tables (1092492 PCs): 1092492 [0x10b571bd8,0x10c61d498), \r\nINFO:      284 files found in test/fuzz/qa-assets/fuzz_seed_corpus/script/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: seed corpus: files: 284 min: 1b max: 3948b total: 56352b rss: 71Mb\r\n#286    INITED cov: 6325 ft: 12060 corp: 240/38Kb exec/s: 286 rss: 82Mb\r\n#299    NEW    cov: 6325 ft: 12062 corp: 241/39Kb lim: 3913 exec/s: 299 rss: 82Mb L: 107/3913 MS: 3 InsertRepeatedBytes-ChangeBit-ChangeByte-\r\n#300    NEW    cov: 6325 ft: 12064 corp: 242/39Kb lim: 3913 exec/s: 300 rss: 82Mb L: 227/3913 MS: 1 ChangeByte-\r\n#301    NEW    cov: 6325 ft: 12065 corp: 243/39Kb lim: 3913 exec/s: 301 rss: 82Mb L: 23/3913 MS: 1 ChangeBit-\r\n#305    NEW    cov: 6325 ft: 12068 corp: 244/43Kb lim: 3913 exec/s: 305 rss: 83Mb L: 3913/3913 MS: 4 EraseBytes-CopyPart-ChangeBinInt-CrossOver-\r\n#315    NEW    cov: 6325 ft: 12083 corp: 245/43Kb lim: 3913 exec/s: 315 rss: 83Mb L: 154/3913 MS: 5 EraseBytes-InsertByte-ChangeByte-InsertByte-EraseBytes-\r\n#352    NEW    cov: 6325 ft: 12095 corp: 246/43Kb lim: 3913 exec/s: 352 rss: 83Mb L: 463/3913 MS: 2 InsertRepeatedBytes-InsertRepeatedBytes-\r\n#364    NEW    cov: 6325 ft: 12097 corp: 247/43Kb lim: 3913 exec/s: 364 rss: 83Mb L: 76/3913 MS: 2 ShuffleBytes-InsertRepeatedBytes-\r\n#367    NEW    cov: 6325 ft: 12100 corp: 248/43Kb lim: 3913 exec/s: 367 rss: 83Mb L: 20/3913 MS: 3 EraseBytes-CMP-CMP- DE: \"\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"-\"R\\xe4\\x00\\x00 `\\x00\\x00\"-\r\n[..snip..]\r\n#89194  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 405 rss: 515Mb L: 317/3913 MS: 2 InsertByte-EraseBytes-\r\n#91850  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 406 rss: 516Mb L: 460/3913 MS: 1 EraseBytes-\r\n#92497  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 405 rss: 516Mb L: 1146/3913 MS: 2 ChangeBinInt-EraseBytes-\r\n#93653  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 407 rss: 516Mb L: 223/3913 MS: 1 EraseBytes-\r\n#96209  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 409 rss: 516Mb L: 103/3913 MS: 1 EraseBytes-\r\n#97245  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 408 rss: 516Mb L: 201/3913 MS: 1 EraseBytes-\r\n#97902  REDUCE cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 409 rss: 516Mb L: 209/3913 MS: 2 CMP-EraseBytes- DE: \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"-\r\n#98507  DONE   cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 408 rss: 516Mb\r\n###### Recommended dictionary. ######\r\n\"\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" # Uses: 571\r\n\"R\\xe4\\x00\\x00 `\\x00\\x00\" # Uses: 671\r\n\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00R\" # Uses: 621\r\n\"\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" # Uses: 630\r\n\"\\x83\\xe0\\x04\\x00\\xa0a\\x00\\x00\" # Uses: 593\r\n\"\\xff\\xff~\\xfe\\xe86\\xec\\xc0\" # Uses: 647\r\n\"\\x13\\x00\\x00\\x00\" # Uses: 596\r\n\"\\x01\\x00\\x00\\x00\\x00\\x00\\x02\\x08\" # Uses: 577\r\n\"\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" # Uses: 629\r\n\"\\xb6\\x02\\x00\\x00\" # Uses: 574\r\n\"\\x01\\x00\\x0a\\xfa\" # Uses: 567\r\n\"\\xbb\\x01\\x00\\x00\" # Uses: 502\r\n\"\\xff\\x96\" # Uses: 463\r\n\"\\x1c\\x00\" # Uses: 387\r\n\"\\xff\\x00\\x00\\x00\" # Uses: 269\r\n\"\\x01\\x00\\x00\\xaf\" # Uses: 200\r\n\"\\x00\\xad\" # Uses: 94\r\n\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" # Uses: 2\r\n###### End of recommended dictionary. ######\r\nDone 98507 runs in 241 second(s)\r\n```\r\n\r\nAnd the output of customized script.cpp is:\r\n\r\n```shell\r\nINFO: Seed: 160415445\r\nINFO: Loaded 1 modules   (1093525 inline 8-bit counters): 1093525 [0x104e224c8, 0x104f2d45d), \r\nINFO: Loaded 1 PC tables (1093525 PCs): 1093525 [0x104f2d460,0x105fdcdb0), \r\nINFO:      284 files found in test/fuzz/qa-assets/fuzz_seed_corpus/script/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: seed corpus: files: 284 min: 1b max: 3948b total: 56352b rss: 71Mb\r\n#286    INITED cov: 6325 ft: 12059 corp: 241/38Kb exec/s: 286 rss: 82Mb\r\n#361    NEW    cov: 6325 ft: 12060 corp: 242/38Kb lim: 4096 exec/s: 361 rss: 82Mb L: 13/3913 MS: 5 Custom-Custom-Custom-Custom-Custom-\r\n#437    NEW    cov: 6325 ft: 12061 corp: 243/38Kb lim: 4096 exec/s: 437 rss: 83Mb L: 10/3913 MS: 1 Custom-\r\n#1024   pulse  cov: 6325 ft: 12061 corp: 243/38Kb lim: 4096 exec/s: 512 rss: 83Mb\r\n#1084   REDUCE cov: 6325 ft: 12061 corp: 243/38Kb lim: 4096 exec/s: 542 rss: 83Mb L: 4/3913 MS: 2 Custom-Custom-\r\n#2048   pulse  cov: 6325 ft: 12061 corp: 243/38Kb lim: 4096 exec/s: 682 rss: 89Mb\r\n#2436   NEW    cov: 6325 ft: 12064 corp: 244/38Kb lim: 4096 exec/s: 812 rss: 89Mb L: 11/3913 MS: 3 Custom-Custom-Custom-\r\n#3514   NEW    cov: 6325 ft: 12067 corp: 245/38Kb lim: 4096 exec/s: 878 rss: 90Mb L: 13/3913 MS: 3 Custom-Custom-Custom-\r\n#4096   pulse  cov: 6325 ft: 12067 corp: 245/38Kb lim: 4096 exec/s: 819 rss: 90Mb\r\n#5590   NEW    cov: 6325 ft: 12071 corp: 246/38Kb lim: 4096 exec/s: 931 rss: 92Mb L: 17/3913 MS: 1 Custom-\r\n#8192   pulse  cov: 6325 ft: 12071 corp: 246/38Kb lim: 4096 exec/s: 910 rss: 94Mb\r\n#16384  pulse  cov: 6325 ft: 12071 corp: 246/38Kb lim: 4096 exec/s: 1024 rss: 101Mb\r\n#17775  NEW    cov: 6325 ft: 12075 corp: 247/38Kb lim: 4096 exec/s: 1045 rss: 102Mb L: 16/3913 MS: 5 Custom-Custom-Custom-Custom-Custom-\r\n#30092  NEW    cov: 6325 ft: 12079 corp: 248/38Kb lim: 4096 exec/s: 1037 rss: 112Mb L: 17/3913 MS: 2 Custom-Custom-\r\n#32768  pulse  cov: 6325 ft: 12079 corp: 248/38Kb lim: 4096 exec/s: 1024 rss: 114Mb\r\n#65536  pulse  cov: 6325 ft: 12079 corp: 248/38Kb lim: 4096 exec/s: 1110 rss: 140Mb\r\n#103081 NEW    cov: 6325 ft: 12081 corp: 249/38Kb lim: 4096 exec/s: 1108 rss: 170Mb L: 18/3913 MS: 4 Custom-Custom-Custom-Custom-\r\n#103610 NEW    cov: 6325 ft: 12083 corp: 250/38Kb lim: 4096 exec/s: 1114 rss: 170Mb L: 14/3913 MS: 4 Custom-Custom-Custom-Custom-\r\n#131072 pulse  cov: 6325 ft: 12083 corp: 250/38Kb lim: 4096 exec/s: 1139 rss: 192Mb\r\n#262144 pulse  cov: 6325 ft: 12083 corp: 250/38Kb lim: 4096 exec/s: 1202 rss: 294Mb\r\n#291145 DONE   cov: 6325 ft: 12083 corp: 250/38Kb lim: 4096 exec/s: 1208 rss: 317Mb\r\nDone 291145 runs in 241 second(s)\r\n```\r\n\r\nThe results are the same, so I need to figure out how to manipulate the Op-Codes to increase the coverage. Or maybe there is no way to increase it with the current logic? Maybe playing around with Op-Codes is a dead end?",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565474969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2881665606,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg4MTY2NTYwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2881665606",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T15:07:26Z"
    },
    {
      "event": "subscribed",
      "id": 2881665610,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4ODE2NjU2MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2881665610",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T15:07:26Z"
    },
    {
      "event": "commented",
      "id": 565503123,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTUwMzEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565503123",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T16:15:56Z",
      "updated_at": "2019-12-13T16:22:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "@brakmic \r\n\r\nThanks for sharing your results.\r\n\r\n```\r\n#98507  DONE   cov: 6325 ft: 12389 corp: 309/92Kb lim: 4096 exec/s: 408 rss: 516Mb\r\nvs\r\n#291145 DONE   cov: 6325 ft: 12083 corp: 250/38Kb lim: 4096 exec/s: 1208 rss: 317Mb\r\n```\r\n\r\nThe results are not the literally the same actually: judging only from the numbers the simple original version is slightly better compared to the more complex custom version. While they reach the same number of basic blocks or edges (the `cov` number) the original version has a higher \"feature\" count (the `ft` number). `libFuzzer` uses different signals to evaluate the code coverage: edge coverage, edge counters, value profiles, indirect caller/callee pairs, etc. These signals combined are called features. I don't think the difference between the two `ft` numbers is of any major significance in this case though: just making a point of not forgetting to look at the `ft` number too :)\r\n\r\n> The results are the same, so I need to figure out how to manipulate the Op-Codes to increase the coverage.\r\n\r\nYou're making the assumption that better coverage can be reached by changing the fuzzing harness and/or the fuzzing technique. That is not _necessarily_ the case :)\r\n\r\nHave you looked at what lines of code in the file you are actually hitting when fuzzing with the simple existing fuzzer versus what you would like to hit? If not, that would be good place to start -- that will tell you if there is anything to \"fix\" :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565503123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 2881894987,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg4MTg5NDk4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2881894987",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T16:15:56Z"
    },
    {
      "event": "subscribed",
      "id": 2881894989,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4ODE4OTQ5ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2881894989",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-13T16:15:56Z"
    },
    {
      "event": "commented",
      "id": 565700171,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTcwMDE3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565700171",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-14T09:20:11Z",
      "updated_at": "2019-12-14T09:20:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Have you looked at what lines of code in the file you are actually hitting when fuzzing with the simple existing fuzzer versus what you would like to hit? If not, that would be good place to start -- that will tell you if there is anything to \"fix\" :)\r\n\r\nNo, I didn't. Many thanks for the hint. Maybe the custom script fuzzer would make more sense in other environments, for example *wallet*. The wallet code deals with scripts too and I could take the [wallet test environment](https://github.com/bitcoin/bitcoin/blob/master/src/wallet/test/wallet_test_fixture.cpp#L7) from unit tests to create a similar one for the fuzzer. \r\n\r\nHowever, there's also a risk that my custom script fuzzing simply becomes a *solution in search of a problem* that is only time consuming without bringing any significant improvement.  \r\n\r\n",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-565700171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "unlabeled",
      "id": 2884121572,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjg4NDEyMTU3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2884121572",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-15T17:53:26Z",
      "label": {
        "name": "good first issue",
        "color": "c2e0c6"
      }
    },
    {
      "event": "referenced",
      "id": 2989557103,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5ODk1NTcxMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2989557103",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3b5b27673414f622c6211c345781e41ce736f99f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b5b27673414f622c6211c345781e41ce736f99f",
      "created_at": "2020-01-29T13:47:36Z"
    },
    {
      "event": "commented",
      "id": 725387186,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTM4NzE4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/725387186",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T12:08:08Z",
      "updated_at": "2020-11-11T12:09:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the guidance on MacOS troubleshooting and collecting together fuzzing resources @brakmic. Very helpful.  https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-562869600\r\n\r\nAdded to this StackExchange [post](https://bitcoin.stackexchange.com/questions/99951/should-i-try-to-get-fuzz-testing-working-on-macos-or-should-i-stick-to-linux) on fuzzing. ",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-725387186",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17657"
    },
    {
      "event": "mentioned",
      "id": 3983544366,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk4MzU0NDM2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3983544366",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T12:08:08Z"
    },
    {
      "event": "subscribed",
      "id": 3983544373,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5ODM1NDQzNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3983544373",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T12:08:08Z"
    },
    {
      "event": "closed",
      "id": 4421169888,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDQyMTE2OTg4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4421169888",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T13:05:24Z"
    },
    {
      "event": "locked",
      "id": 7217165435,
      "node_id": "LOE_lADOABII584fuFSjzwAAAAGuLTR7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7217165435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T19:52:56Z",
      "lock_reason": "resolved"
    }
  ]
}