{
  "type": "issue",
  "issue": {
    "id": 1191828738,
    "node_id": "I_kwDOABII585HCd0C",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/24760",
    "number": 24760,
    "state": "open",
    "state_reason": null,
    "title": "The BlockIndex/BlockMap should not live in memory *all the time*",
    "body": "Hello everyone. I have a proposal to improve the memory usage in Bitcoin Core. I hope I can win your attention and interest for this :-)\r\n\r\n**Introduction**\r\n\r\nWhen the bitcoin blockchain was small, it made sense to load the block index to memory. It acts as an optimization where the block index is basically a handy tool to know whether blocks exist, and learn certain characteristics about them, such as their error state, number of transactions, header, etc.\r\n\r\nHowever, the problem with the block index is that it's unbounded AND grows in memory; strictly. Loading bitcoin core already occupies tons of memory and takes lots of time on small machines. We're over 2 GB of memory at times, and that's growing. Running bitcoin core on smaller machines is even impossible (such as Raspberry Pi Zero) because of that (without using swap memory and similar workarounds, which have their problems); and there's no reason for that other than memory restrictions. Bitcoin transaction and block processing is simple and isn't really that demanding.\r\n\r\nFrom a probabilistic point of view, the higher the number of blocks, the less likely we need all the block index entries all the time after a block is synced.\r\n\r\nThe criticality of this issue depends on how one looks at it; maybe \"This is fine\" (pun intended). To me, unbounded growing data in memory is not the right way to go, and sooner or later this will become a real problem, especially that bitcoin is aimed to decentralization by allowing everyone to run a node. The logic is very simple: The more memory bitcoin core uses, the less people will want to run a node (all the time).\r\n\r\nI would like to propose a solution (and work on it) that makes the memory usage bounded.\r\n\r\nI would appreciate your opinions on the matter primarily to learn what you think and secondarily to avoid expending efforts that aren't appreciated in the bitcoin dev community. Especially that I'm not really innovating here (e.g., upgrading consensus), but I'm attempting to solve a technical issue that I solved before elsewhere.\r\n\r\n**The solution**\r\n\r\nTLDR: LRU cache for the block index.\r\n\r\nLong answer: There is already an LRU cache in leveldb controlled using the command line argument `-dbcache`, which distributes memory over different parts on initialization. However, this isn't used for the block index and its dependents. Depending on performance metrics, we can either simply read the block index directly from leveldb through a proper interface (and use its LRU cache), or we can write our own LRU cache that lives between leveldb and txdb or even between txdb and that block index interface directly (I have written a concurrent transactional LRU cache before, but that's another discussion). If the one from leveldb performs well enough, maybe that's good enough, and the task becomes much simpler. This can be done in multiple steps over time and not all at once.\r\n\r\n**Effects**\r\n\r\nThe block manager (singleton) is the responsible owner of the block index. Bitcoin Core uses this map to directly locate the block index by simply doing a `find`, since it's just an unordered map/hash map.\r\n\r\n```\r\ntypedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\r\n```\r\nLet's discuss the effects of this proposal\r\n\r\n**First effect: CBlockIndex by value, not by reference**\r\n\r\nThe correct way I see to do this is to have some interface instead of accessing the BlockMap directly, which will act indirectly a value-based map (as opposed to pointers). In its simplest form, it's implemented to just use the same map. The side effect of this will be that modifying the block index of a block in any way has to be done through a proper read-modify-write operation. While this seems too elaborate compared to the pointer stuff done now, we have to acknowledge this is what we do anyway since `cs_main` lock is held during any modification/addition of a block index entry. The only difference is that because of the isolation resulting from this solution, there might be a little performance drawback because of copying back and forth. However, compilers may be able to optimize this if the block index entry lives only in memory. It's a long shot, though.\r\n\r\n**Second effect: No more linking blocks by pointer**\r\n\r\nCurrently, blocks are linked together using pointers. Every block index has a pointer that links to the previous block in memory. By simply using the `CBlockIndex::pprev` member, we get the previous block's block index. This has to change to a function that pulls `prev` from the database/cache. The linking should not be done by block index but by block hashes. This should not have significant effect on performance assuming we don't consistently loop over the `pprev` to reach a block in the history. In fact, the only reason to do such a thing is a (long) reorg. Usually the best way to loop to history over the mainchain is using block height arithmetic. The original bitcoin core used to do pprev looping a lot (for example even to create a `CBlockLocator` starting from the tip), but right now this isn't the case anymore since block heights of the main chain are registered in `CChain`.\r\n\r\n**More side effects: Many things have to go to the DB**\r\n\r\nThe problem is bigger than just `BlockMap`. Other things will be affected as well, such as `CChain`. The fact that there are many dependents on `BlockMap` pointers is part of the reason why the memory consumption is so high. All this has to go and be replaced by proper indexing in the key/value database at hand; i.e., leveldb.\r\n\r\n**Steps to complete this task**\r\n\r\n1. Create the interfaces that will replace everything that uses `CBlockIndex` pointers, still with a global BlockMap through an interface, not through `std::unordered_map` directly.\r\n2. Test the new design and ensure that the isolation is successful.\r\n3. Get rid of BlockMap and use the database (and whatever caching layer above it) to store the block index\r\n4. Profit! Enjoy a much lower memory footprint, and more decentralization by having smaller hardware run full-nodes with less work.\r\n\r\nLet me know what you think, and hopefully I didn't oversee a anything in my analysis.",
    "user": {
      "login": "TheQuantumPhysicist",
      "id": 8694366,
      "node_id": "MDQ6VXNlcjg2OTQzNjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheQuantumPhysicist",
      "html_url": "https://github.com/TheQuantumPhysicist",
      "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
      "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
      "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
      "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
      "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 326918230,
        "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
        "name": "Resource usage",
        "color": "981023",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 12,
    "created_at": "2022-04-04T13:53:50Z",
    "updated_at": "2022-05-29T20:46:54Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 6363303264,
      "node_id": "LE_lADOABII585HCd0CzwAAAAF7SE1g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6363303264",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T13:55:08Z",
      "label": {
        "name": "Resource usage",
        "color": "981023"
      }
    },
    {
      "event": "commented",
      "id": 1087616704,
      "node_id": "IC_kwDOABII585A07bA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087616704",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T14:17:20Z",
      "updated_at": "2022-04-04T14:17:20Z",
      "author_association": "MEMBER",
      "body": "> typedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\r\n\r\nThis is no longer true in current master.\r\n\r\n> We're over 2 GB of memory at times\r\n\r\nThis implies that the issue is not the block index. If a memory limit is only surpassed temporarily, it is more likely the wallet, an index thread or the mempool.\r\n\r\nLocally for me, the block index consumes way less than 1 GB or even 500 MB on x86. It shouldn't be that much different on aarch64?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087616704",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087626857,
      "node_id": "IC_kwDOABII585A095p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087626857",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T14:25:35Z",
      "updated_at": "2022-04-04T14:35:08Z",
      "author_association": "MEMBER",
      "body": "I believe our current BlockMap structure on 64-bit systems uses 216 bytes per entry (incl. malloc overhead), plus another 8 bytes per entry in CChain. Together that should be around 156 MiB of memory usage on the main chain.\r\n\r\nThat's not a trivial amount, but combined with some amount of peer connection buffer, utxo cache, mempool, ... to provide a basic operation, it's also not by far the only contributing factor. Furthermore, it's an extremely predictably-growing one which for all but the most memory-starved systems probably grows slower than what normal system evolution allows (so this should be becoming less and less of a problem over time).\r\n\r\nI'm not opposed to improvements to reducing the memory usage of the block map, but I'm not sure that the complexity of switching to a LRU model is worth it for saving maybe 100 MiB.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087626857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087660569,
      "node_id": "IC_kwDOABII585A1GIZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087660569",
      "actor": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T14:54:51Z",
      "updated_at": "2022-04-04T14:54:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This is no longer true in current master.\r\n\r\nVery nice. I'm glad to see clear ownership there. Thank you for that.\r\n\r\n> This implies that the issue is not the block index. If a memory limit is only surpassed temporarily, it is more likely the wallet, an index thread or the mempool.\r\n\r\nIt's probably the indexer, I agree there. I'm running on an empty wallet. Now after the sync is over, it's around 800 MB of memory on my workstation (assuming we have zero forks and synced newly), which is still not negligible. \r\n\r\n> I believe our current BlockMap structure on 64-bit systems uses 216 bytes per entry, plus another 8 bytes per entry in CChain. Together that should be around 156 MiB of memory usage on the main chain.\r\n\r\nIt looks small maybe if we ignore alignment and maps/sets overheads. The problem also is that there are other things I constantly see linked with block index and they all relate to the block map in some way and live in memory, storing extra information times 800k blocks, taking memory. The CChain was an example. Take also a look at `setBlockIndexCandidates`. Another 800k pointers thrown in the bucket of barely used memory (ignoring std::set's overhead). \r\n\r\nAnd to prove that this is specifically the block index. Just launch a new node from genesis. And you'll see the memory usage just growing linearly starting from around 150 MB. So it's either the block index or something else that grows linearly with the current height. I don't think there's anything else, because everything else is managed properly with bounded memory.\r\n\r\nAnd finally, to concede and agree with you guys, yes, it may not be the worst thing depending on the angle. But it's something that has to be fixed sooner or later. If you guys think it's worth shooting through it, I'll happily do it.",
      "user": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087660569",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087663552,
      "node_id": "IC_kwDOABII585A1G3A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087663552",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T14:57:28Z",
      "updated_at": "2022-04-04T14:57:28Z",
      "author_association": "MEMBER",
      "body": "My calculation takes maps/sets/allocation overhead into account.\r\n\r\nThe default utxo cache size is 450 MiB in size, plus it \"steals\" any unused portion of the mempool (default limited to 300 MiB). If you want to reduce memory usage today during sync, the best move is reducing `-dbcache` and `-maxmempool`.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087663552",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087669974,
      "node_id": "IC_kwDOABII585A1IbW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087669974",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T15:02:49Z",
      "updated_at": "2022-04-04T15:02:49Z",
      "author_association": "MEMBER",
      "body": "> So it's either the block index or something else that grows linearly with the current height.\r\n\r\nIt might be best to benchmark/measure this, otherwise it will be hard to guess. I'd be really surprised if this was the block index, as the block index is constructed and fully filled before IBD starts. Also, I can confirm the ~150MiB figure above on x86.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087669974",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087670697,
      "node_id": "IC_kwDOABII585A1Imp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087670697",
      "actor": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T15:03:25Z",
      "updated_at": "2022-04-04T15:03:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "> My calculation takes maps/sets/allocation overhead into account.\r\n\r\nSounds good. I would appreciate telling me how you got these numbers, because I'm failing to understand what all that memory is taken for.\r\n\r\n> The default utxo cache size is 450 MiB in size, plus it \"steals\" any unused portion of the mempool (default limited to 300 MiB). If you want to reduce memory usage today during sync, the best move is reducing -dbcache and -maxmempool.\r\n\r\nIf I run `./src/qt/bitcoin-qt --dbcache=25 --maxmempool=10`, it's still over 700 MB of usage. Taking the linear calculation from before into account, if we subtract 150 MB, it's 550 MB that can be attributed to the block index, which is around 65% of the total consumption of memory (and growing).",
      "user": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087670697",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087672551,
      "node_id": "IC_kwDOABII585A1JDn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087672551",
      "actor": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T15:05:09Z",
      "updated_at": "2022-04-04T15:05:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It might be best to benchmark/measure this, otherwise it will be hard to guess. I'd be really surprised if this was the block index, as the block index is constructed and fully filled before IBD starts. Also, I can confirm the ~150MiB figure above on x86.\r\n\r\nI might be wrong with my figures. But I learned over the years that estimating memory consumption is really a difficult thing. So, please excuse me if I'm overextending my imagination on this.",
      "user": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087672551",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087697735,
      "node_id": "IC_kwDOABII585A1PNH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087697735",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T15:24:02Z",
      "updated_at": "2022-04-04T15:24:02Z",
      "author_association": "MEMBER",
      "body": "It might be that the GUI is using another 200 MB of memory?\r\n\r\nAgain, there is nothing we can do without benchmarking. Locally (for me), I get:\r\n\r\n* 250 MiB heap, see https://github.com/bitcoin/bitcoin/pull/24050#issuecomment-1016701173\r\n* 600 MiB rss:\r\n\r\n![Screenshot from 2022-04-04 17-15-37](https://user-images.githubusercontent.com/6399679/161577258-b3a0145a-7aeb-4d27-b842-fca28695e743.png)\r\n\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087697735",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087702537,
      "node_id": "IC_kwDOABII585A1QYJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087702537",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T15:28:27Z",
      "updated_at": "2022-04-04T15:28:27Z",
      "author_association": "MEMBER",
      "body": "> Sounds good. I would appreciate telling me how you got these numbers, because I'm failing to understand what all that memory is taken for.\r\n\r\nmemusage.h contains algorithms for computing memory usage of various structures, including `std::unordered_map`. That only works with actual maps, but if you look at the code you'll find it consists of:\r\n* Individually-allocated blobs of type (similar to) `struct : std::pair<const Key, Value> { void* ptr; }` (every unordered_map node consists of a key, a value, and a pointer to potentially another blob in the same bucket). These blobs (incl. allocation overhead) use 208 bytes.\r\n* The table itself, with size one pointer per bucket. The number of buckets is approximately equal to the number of elements in the map. So 8 bytes per element.\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087702537",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1087775961,
      "node_id": "IC_kwDOABII585A1iTZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087775961",
      "actor": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T16:38:46Z",
      "updated_at": "2022-04-04T16:38:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It might be that the GUI is using another 200 MB of memory?\r\n\r\nCorrect. In my Linux (Debian Bullseye), when I start a node from genesis, before choosing the data dir, it consumes 125 MB. Then after choosing it bumps up to 175 MB. \r\n\r\nPerhaps there was a misunderstanding on what I meant with my calculation. If the node starts at around 150 MB, then after sync it's 800 MB (or 700 after removing the mempool and the cache), that can only mean that things have grown linearly in between, assuming everything else is cleaned up.\r\n\r\nI'll see what I can do with benchmarks. I'm no so familiar with how that works though. If there's somewhere where I can start/target to get these results, I'd appreciate pointing me there. ",
      "user": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1087775961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1090158360,
      "node_id": "IC_kwDOABII585A-n8Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090158360",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T11:27:31Z",
      "updated_at": "2022-04-06T11:27:31Z",
      "author_association": "MEMBER",
      "body": "I used massif to check the *allocated* memory. Not sure if this can also help find the memory issue you are facing, but it might be worth a try.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1090158360",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    },
    {
      "event": "commented",
      "id": 1090174979,
      "node_id": "IC_kwDOABII585A-sAD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090174979",
      "actor": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T11:45:42Z",
      "updated_at": "2022-04-06T11:45:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "I will play with massif. I'll see the benchmarks. I will also attempt to remove the block index and see what happens. I'll be playing with this for a while on multiple angles. \r\n\r\nIssue #24700 shows an interesting symptom of the problem on devices with low memory. Honestly, I was able to reduce the usage of the whole node to 25-50 MB of memory in an old bitcoin fork (with millions of blocks in the block index) by completely eliminating the block index, which was very aggressive with no LRU cache. It's difficult to know how modern bitcoin will act without trying, and I'm even convinced that after we try, we can recursively fix more related memory waste; but I believe the main culprit here is the block index. There are too many things to be checked. I'll keep you updated with any results I arrive at.",
      "user": {
        "login": "TheQuantumPhysicist",
        "id": 8694366,
        "node_id": "MDQ6VXNlcjg2OTQzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8694366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheQuantumPhysicist",
        "html_url": "https://github.com/TheQuantumPhysicist",
        "followers_url": "https://api.github.com/users/TheQuantumPhysicist/followers",
        "following_url": "https://api.github.com/users/TheQuantumPhysicist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheQuantumPhysicist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheQuantumPhysicist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
        "organizations_url": "https://api.github.com/users/TheQuantumPhysicist/orgs",
        "repos_url": "https://api.github.com/users/TheQuantumPhysicist/repos",
        "events_url": "https://api.github.com/users/TheQuantumPhysicist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheQuantumPhysicist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/24760#issuecomment-1090174979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24760"
    }
  ]
}