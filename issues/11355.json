{
  "type": "issue",
  "issue": {
    "id": 258254951,
    "node_id": "MDU6SXNzdWUyNTgyNTQ5NTE=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/11355",
    "number": 11355,
    "state": "closed",
    "state_reason": "completed",
    "title": "LevelDB read failure: Corruption: block checksum mismatch",
    "body": "Build against commit f197a4c515757262eda0accbe762e311335be11b, a small change from master branch 09627b1dd41d1151a709d5ead82a924bf59e3d38 - bitcoin-qt had been running for 12 hours or so without a problem, was fully synced, then suddenly I saw an error frame pop up with no content. Here's a screenshot:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/573356/30515480-47028746-9add-11e7-8970-2b9602dfd291.png)\r\n\r\nThe debug.log shows block 485584 was received, then 36 seconds later db corruption was found:\r\n\r\n    2017-09-16 15:21:03 UpdateTip: new best=000000000000000000f9dec71fb25bda22ba734ad133c24c8553fb66fee2f98e height=485584 version=0x20000000 log2_work=87.116783 tx=254942322 date='2017-09-16 15:20:14' progress=0.999999 cache=65.6MiB(504658txo) warning='5 of last 100 blocks have unexpected version'\r\n    2017-09-16 15:21:39 LevelDB read failure: Corruption: block checksum mismatch\r\n    2017-09-16 15:21:39 Corruption: block checksum mismatch\r\n    2017-09-16 15:22:02 connect() to [2001:0:9d38:90d7:1097:91ba:f1ff:5782]:8333 failed: Network is unreachable (101)\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:40 socket sending timeout: 1201s\r\n\r\nNothing has been written to the log since then, and neither the main Bitcoin window nor the error popup has been painted since.\r\n\r\nA few weeks ago I saw a similar error, but at that point I was attempting to track down a race condition on startup and so wasn't surprised when I saw some database corruption. But I fixed it by doing a `-reindex-chainstate` and hadn't had a problem since, until now.\r\n\r\nI attached gdb to the frozen bitcoin-qt process to get the stack traces:\r\n\r\n    12:51:18 chris@chris:~/Programs/bitcoin.git/src$ ps -ef | grep bitcoin\r\n    chris    17648 31052  0 Sep15 pts/5    00:03:57 /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt -datadir=/home/chris/.bitcoin\r\n    chris    23785 31653  0 08:22 pts/7    00:00:00 tail -f /home/chris/.bitcoin/debug.log\r\n    chris    28346 14411  0 12:51 pts/0    00:00:00 grep bitcoin\r\n    12:51:53 chris@chris:~/Programs/bitcoin.git/src$ gdb /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt 17648\r\n    GNU gdb (Debian 7.12-6) 7.12.0.20161007-git\r\n    Copyright (C) 2016 Free Software Foundation, Inc.\r\n    License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\n    This is free software: you are free to change and redistribute it.\r\n    There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\n    and \"show warranty\" for details.\r\n    This GDB was configured as \"x86_64-linux-gnu\".\r\n    Type \"show configuration\" for configuration details.\r\n    For bug reporting instructions, please see:\r\n    <http://www.gnu.org/software/gdb/bugs/>.\r\n    Find the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n    For help, type \"help\".\r\n    Type \"apropos word\" to search for commands related to \"word\"...\r\n    Reading symbols from /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt...done.\r\n    Attaching to program: /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt, process 17648\r\n    [New LWP 17649]\r\n    [New LWP 17650]\r\n    [New LWP 17651]\r\n    [New LWP 17652]\r\n    [New LWP 17653]\r\n    [New LWP 17654]\r\n    [New LWP 17655]\r\n    [New LWP 17656]\r\n    [New LWP 17657]\r\n    [New LWP 17658]\r\n    [New LWP 17659]\r\n    [New LWP 17660]\r\n    [New LWP 17664]\r\n    [New LWP 17671]\r\n    [New LWP 17673]\r\n    [New LWP 17674]\r\n    [New LWP 17675]\r\n    [New LWP 17676]\r\n    [New LWP 17677]\r\n    [Thread debugging using libthread_db enabled]\r\n    Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n    __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    135\t../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\r\n    (gdb) thread apply all where\r\n\r\n    Thread 20 (Thread 0x7ff63debb700 (LWP 17677)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6240008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff63debacc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128c7f02a0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff63debb700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 19 (Thread 0x7ff63d245700 (LWP 17676)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6200008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff63d244cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128b923d40) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff63d245700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 18 (Thread 0x7ff63e70c700 (LWP 17675)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6950fcc6b in QWaitConditionPrivate::wait (time=18446744073709551615, this=0x7ff633dd4480) at thread/qwaitcondition_unix.cpp:143\r\n    #2  QWaitCondition::wait (this=this@entry=0x7ff6154c9468, mutex=mutex@entry=0x7ff6154c9460, time=time@entry=18446744073709551615)\r\n        at thread/qwaitcondition_unix.cpp:215\r\n    #3  0x00007ff6950f5b33 in QSemaphore::acquire (this=this@entry=0x7ff63e702890, n=n@entry=1) at thread/qsemaphore.cpp:143\r\n    #4  0x00007ff6952d68cd in QMetaMethod::invoke (this=this@entry=0x7ff63e702af8, object=object@entry=0x56128b9167c0, connectionType=Qt::BlockingQueuedConnection, \r\n        connectionType@entry=1047538560, returnValue=..., val0=..., val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at kernel/qmetaobject.cpp:2279\r\n    #5  0x00007ff6952dc58a in QMetaObject::invokeMethod (obj=0x56128b9167c0, member=0x56128a8e58de \"message\", type=1047538560, ret=..., val0=..., val1=..., val2=..., \r\n        val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...) at kernel/qmetaobject.cpp:1489\r\n    #6  0x000056128a01880c in QMetaObject::invokeMethod (member=0x80 <error: Cannot access memory at address 0x80>, type=Qt::BlockingQueuedConnection, val0=..., \r\n        obj=<optimized out>, val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs.h:460\r\n    #7  ThreadSafeMessageBox (gui=0x56128b9167c0, message=\"Error reading from database, shutting down.\", caption=..., style=<optimized out>) at qt/bitcoingui.cpp:1167\r\n    #8  0x000056128a01ccb7 in boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> >::operator()<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::rrlist3<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int> > (f=<error reading variable>, this=<optimized out>, a=...)\r\n        at /usr/include/boost/bind/bind.hpp:453\r\n    #9  boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >::operator()<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&&) (a1=<error reading variable: Cannot access memory at address 0x88>, \r\n        a2=<error reading variable: Cannot access memory at address 0x9>, this=<optimized out>, a3=<optimized out>) at /usr/include/boost/bind/bind.hpp:1330\r\n    #10 boost::detail::function::function_obj_invoker3<boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::invoke (function_obj_ptr=..., \r\n        a0=<error reading variable: Cannot access memory at address 0x88>, a1=<error reading variable: Cannot access memory at address 0x9>, a2=2491150687)\r\n        at /usr/include/boost/function/function_template.hpp:138\r\n    #11 0x000056128a17b81e in boost::function3<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator() (a0=<error reading variable: Cannot access memory at address 0x88>, \r\n        a1=<error reading variable: Cannot access memory at address 0x9>, a2=2491150687, this=<optimized out>) at /usr/include/boost/function/function_template.hpp:770\r\n    #12 boost::signals2::detail::call_with_tuple_args<bool>::m_invoke<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, 0u, 1u, 2u, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, boost::signals2::detail::unsigned_meta_array<0u, 1u, 2u>, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, boost::disable_if<boost::is_void<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>::result_type>, void>::type*) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:98\r\n    #13 boost::signals2::detail::call_with_tuple_args<bool>::operator()<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&, 3ul>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, mpl_::size_t<3ul>) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:90\r\n    #14 boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) const (\r\n        this=<optimized out>, connectionBody=...) at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:133\r\n    #15 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >::dereference() const (this=0x7ff63e703010) at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:110\r\n    #16 0x000056128a17ac98 in boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) (f=...) at /usr/include/boost/iterator/iterator_facade.hpp:549\r\n    #17 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, bool, boost::iterators::single_pass_traversal_tag, bool&, long, false, false>::operator*() const (\r\n        this=<optimized out>) at /usr/include/boost/iterator/iterator_facade.hpp:655\r\n    #18 boost::signals2::last_value<bool>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/last_value.hpp:48\r\n    #19 0x000056128a17a930 in boost::signals2::detail::combiner_invoker<bool>::operator()<boost::signals2::last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::last_value<bool>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (combiner=..., this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\r\n    #20 boost::signals2::detail::signal_impl<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (\r\n        this=0x56128b705d20, args=<optimized out>, args=<optimized out>, args=<optimized out>) at /usr/include/boost/signals2/detail/signal_template.hpp:242\r\n    #21 0x000056128a17a13d in boost::signals2::signal<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (args=..., args=..., this=<optimized out>, args=...) at /usr/include/boost/signals2/detail/signal_template.hpp:723\r\n    #22 CCoinsViewErrorCatcher::GetCoin (this=<optimized out>, outpoint=..., coin=...) at init.cpp:143\r\n    #23 0x000056128a46e462 in CCoinsViewCache::FetchCoin (this=0x7ff648ab9ee0, outpoint=...) at coins.cpp:48\r\n    #24 0x000056128a46e549 in CCoinsViewCache::GetCoin (this=0x7ff633dd44ac, outpoint=..., coin=...) at coins.cpp:61\r\n    #25 0x000056128a2c8414 in CCoinsViewMemPool::GetCoin (this=0x7ff63e7038a8, outpoint=..., coin=...) at txmempool.cpp:902\r\n    #26 0x000056128a46e462 in CCoinsViewCache::FetchCoin (this=0x7ff63e704530, outpoint=...) at coins.cpp:48\r\n    #27 0x000056128a46eb03 in CCoinsViewCache::HaveCoin (this=0x7ff633dd44ac, outpoint=...) at coins.cpp:129\r\n    #28 0x000056128a30c5cc in AcceptToMemoryPoolWorker (chainparams=..., pool=..., state=..., ptx=..., fLimitFree=<optimized out>, pfMissingInputs=<optimized out>, \r\n        nAcceptTime=140697029833055, plTxnReplaced=0x56128acc70f0 <pcoinsTip>, fOverrideMempoolLimit=false, nAbsurdFee=@0x7ff63e7044d0: -2962908112588391035, \r\n        coins_to_uncache=...) at validation.cpp:547\r\n    #29 0x000056128a2de858 in AcceptToMemoryPoolWithTime (chainparams=..., pool=..., state=..., \r\n        tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, fLimitFree=<optimized out>, pfMissingInputs=0x0, nAcceptTime=1505575299, \r\n        plTxnReplaced=0x7ff63e7083a8, fOverrideMempoolLimit=<optimized out>, nAbsurdFee=0) at validation.cpp:886\r\n    #30 0x000056128a2de122 in AcceptToMemoryPool (pool=..., state=..., tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, fLimitFree=true, \r\n        pfMissingInputs=0x0, plTxnReplaced=0x7ff63e7083a8, fOverrideMempoolLimit=<optimized out>, nAbsurdFee=<optimized out>) at validation.cpp:902\r\n    #31 0x000056128a1d7266 in ProcessMessage (pfrom=<optimized out>, strCommand=..., vRecv=..., nTimeReceived=<optimized out>, chainparams=..., \r\n        connman=<optimized out>, interruptMsgProc=...) at net_processing.cpp:1791\r\n    #32 0x000056128a1cbf12 in PeerLogicValidation::ProcessMessages (this=0x7ff664046440, pfrom=0x7ff62822f0f0, interruptMsgProc=...) at net_processing.cpp:2718\r\n    #33 0x000056128a1f8037 in non-virtual thunk to PeerLogicValidation::ProcessMessages(CNode*, std::atomic<bool>&) () at net_processing.cpp:2643\r\n    #34 0x000056128a1a767b in CConnman::ThreadMessageHandler (this=<optimized out>) at net.cpp:1995\r\n    #35 0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #36 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #37 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #38 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #39 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #40 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #41 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63e70bd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #42 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #43 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #44 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #45 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #46 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #47 0x00007ff6947b9494 in start_thread (arg=0x7ff63e70c700) at pthread_create.c:333\r\n    #48 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 17 (Thread 0x7ff63ef5d700 (LWP 17674)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007ff6947bbc06 in __GI___pthread_mutex_lock (mutex=0x56128acc6b88 <cs_main>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056128a0259d5 in boost::recursive_mutex::lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n    #3  AnnotatedMixin<boost::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #4  boost::unique_lock<CCriticalSection>::lock (this=0x7ff63ef5c250) at /usr/include/boost/thread/lock_types.hpp:346\r\n    #5  0x000056128a1c406a in CMutexLock<CCriticalSection>::Enter (this=0x56128acc6b88 <cs_main>, nLine=504, pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:123\r\n    #6  CMutexLock<CCriticalSection>::CMutexLock (this=0x56128acc6b88 <cs_main>, nLine=504, fTry=false, mutexIn=..., pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:144\r\n    #7  PeerLogicValidation::InitializeNode (this=0x7ff664046440, pnode=0x7ff6282bb0d0) at net_processing.cpp:504\r\n    #8  0x000056128a1c5657 in non-virtual thunk to PeerLogicValidation::InitializeNode(CNode*) () at net_processing.cpp:499\r\n    #9  0x000056128a1a4602 in CConnman::OpenNetworkConnection (this=0x7ff66456ad30, addrConnect=..., fCountFailure=<optimized out>, grantOutbound=<optimized out>, \r\n        pszDest=0x0, fOneShot=<optimized out>, fFeeler=<optimized out>, fAddnode=92) at net.cpp:1965\r\n    #10 0x000056128a1a5508 in CConnman::ThreadOpenConnections (this=<optimized out>, connect=...) at net.cpp:1840\r\n    #11 0x000056128a1c2887 in std::__invoke_impl<void, void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (\r\n        __f=<optimized out>, __t=<optimized out>, __args=<error reading variable: Cannot access memory at address 0x8>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #12 0x000056128a1c270e in std::__invoke<void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__fn=\r\n        @0x56128acc6b88: (void (CConnman::*)(CConnman * const, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >)) 0x100000002, this adjustment 4294984971, __args=..., __args=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #13 std::_Mem_fn_base<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), true>::operator()<CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__args=..., __args=..., \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #14 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=0x56128acc6b88 <cs_main>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #15 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::operator()<, void>() (\r\n        this=0x56128acc6b88 <cs_main>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #16 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #17 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63ef5cd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #18 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #19 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #20 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #21 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #22 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #23 0x00007ff6947b9494 in start_thread (arg=0x7ff63ef5d700) at pthread_create.c:333\r\n    #24 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 16 (Thread 0x7ff63f7ae700 (LWP 17673)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056128a49b56e in __gthread_cond_timedwait (__cond=<optimized out>, __mutex=<optimized out>, __abs_timeout=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:871\r\n    #2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:166\r\n    #3  std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:106\r\n    #4  std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, \r\n        __lock=..., __atime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:129\r\n    #5  std::condition_variable::wait_for<long, std::ratio<1l, 1000l>, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::duration<long, std::ratio<1l, 1000l> > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, __lock=..., __rtime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:145\r\n    #6  CThreadInterrupt::sleep_for (this=<optimized out>, rel_time=...) at threadinterrupt.cpp:30\r\n    #7  0x000056128a49b5fa in CThreadInterrupt::sleep_for (this=0x7ff6645bb1a4, rel_time=...) at threadinterrupt.cpp:35\r\n    #8  0x000056128a1a7316 in CConnman::ThreadOpenAddedConnections (this=<optimized out>) at net.cpp:1927\r\n    #9  0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #10 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #11 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #12 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #13 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #14 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #15 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63f7add00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #16 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #17 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #18 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #19 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #20 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #21 0x00007ff6947b9494 in start_thread (arg=0x7ff63f7ae700) at pthread_create.c:333\r\n    #22 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 15 (Thread 0x7ff645ec7700 (LWP 17671)):\r\n    #0  0x00007ff692d5a3f3 in select () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x000056128a19da64 in CConnman::ThreadSocketHandler (this=<optimized out>) at net.cpp:1251\r\n    #2  0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #3  std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #4  std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #5  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #6  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #7  std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #8  0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff645ec6d00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #9  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #10 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #11 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #12 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #13 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #14 0x00007ff6947b9494 in start_thread (arg=0x7ff645ec7700) at pthread_create.c:333\r\n    #15 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 14 (Thread 0x7ff658cf7700 (LWP 17664)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056128a4f38ab in leveldb::(anonymous namespace)::PosixEnv::BGThread (this=<optimized out>) at leveldb/util/env_posix.cc:641\r\n    #2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=<optimized out>) at leveldb/util/env_posix.cc:556\r\n    #3  0x00007ff6947b9494 in start_thread (arg=0x7ff658cf7700) at pthread_create.c:333\r\n    #4  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 13 (Thread 0x7ff668e19700 (LWP 17660)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff668e19700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 12 (Thread 0x7ff66966a700 (LWP 17659)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff66966a700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 11 (Thread 0x7ff669ebb700 (LWP 17658)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff669ebb700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 10 (Thread 0x7ff66a70c700 (LWP 17657)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff66a70c700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 9 (Thread 0x7ff66af5d700 (LWP 17656)):\r\n    #0  0x00007ff692d620f3 in epoll_wait () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff6938d9d98 in ?? () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #2  0x00007ff6938c407a in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #3  0x000056128a37b03f in ThreadHTTP (base=0x7ff6640443d0, http=<optimized out>) at httpserver.cpp:303\r\n    #4  0x000056128a382c4d in std::__invoke_impl<bool, bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(std::__invoke_other, bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:210\r\n    #5  std::__invoke<bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__fn=<optimized out>, \r\n        __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #6  std::reference_wrapper<bool (*)(event_base*, evhttp*)>::operator()<event_base*, evhttp*>(event_base*&&, evhttp*&&) const (__args=<optimized out>, \r\n        this=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:465\r\n    #7  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=0x7ff692d620f3 <epoll_wait+51>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #8  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=0x7ff692d620f3 <epoll_wait+51>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #9  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool>::operator()() const (this=0x7ff66af5ccd0)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1325\r\n    #10 0x000056128a382b8f in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1716\r\n    #11 0x000056128a382aba in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (\r\n        this=0x7ff664044660) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #12 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x7ff664044e80, __f=0x7ff664044660, __did_set=0x7ff66af5cc8f) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:533\r\n    #13 0x000056128a382b56 in std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #14 std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__fn=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #15 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:602\r\n    #16 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #17 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::__invoke() () at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #18 0x00007ff6947c0739 in __pthread_once_slow (once_control=0x7ff664044e98, init_routine=0x7ff6935ec120 <__once_proxy>) at pthread_once.c:116\r\n    #19 0x000056128a382a39 in __gthread_once (__func=0x7ff664044660, __once=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:699\r\n    #20 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __once=..., __f=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:614\r\n    #21 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (this=0x7ff664044e80, __res=..., __ignore_failure=false) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:392\r\n    #22 0x000056128a382491 in std::__future_base::_Task_state<bool (*)(event_base*, evhttp*), std::allocator<int>, bool (event_base*, evhttp*)>::_M_run(event_base*&&, evhttp*&&) (this=0x17, __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1409\r\n    #23 0x000056128a38348b in std::packaged_task<bool (event_base*, evhttp*)>::operator()(event_base*, evhttp*) (\r\n        __args=<error reading variable: Cannot access memory at address 0x20>, __args=<error reading variable: Cannot access memory at address 0x20>, \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1553\r\n    #24 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #25 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #26 std::thread::_State_impl<std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)> >::_M_run() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #27 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #28 0x00007ff6947b9494 in start_thread (arg=0x7ff66af5d700) at pthread_create.c:333\r\n    #29 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 8 (Thread 0x7ff66b7ae700 (LWP 17655)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056128a257c82 in boost::condition_variable::do_wait_until (this=0x56128bfebea0, m=..., timeout=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable.hpp:109\r\n    #2  0x000056128a489379 in boost::condition_variable::wait_until (this=<optimized out>, lk=..., tp=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:252\r\n    #3  boost::condition_variable::wait_until<boost::chrono::duration<long, boost::ratio<1l, 1000000000l> > > (this=<optimized out>, lock=..., t=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:209\r\n    #4  CScheduler::serviceQueue (this=<optimized out>) at scheduler.cpp:67\r\n    #5  0x000056128a18553a in boost::_mfi::mf0<void, CScheduler>::operator() (p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n    #6  boost::_bi::list1<boost::_bi::value<CScheduler*> >::operator()<boost::_mfi::mf0<void, CScheduler>, boost::_bi::list0> (this=<optimized out>, f=..., a=...)\r\n        at /usr/include/boost/bind/bind.hpp:259\r\n    #7  boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > >::operator() (this=<optimized out>)\r\n        at /usr/include/boost/bind/bind.hpp:1294\r\n    #8  std::_Function_handler<void (), boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #9  0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff66b7adcb8)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #10 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #11 0x000056128a185ab6 in boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > >::operator()<void (*)(char const*, std::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, std::function<void ()>), boost::_bi::list0&, int) (this=0x7ff664043100, \r\n        f=<optimized out>, a=...) at /usr/include/boost/bind/bind.hpp:319\r\n    #12 0x000056128a185a3f in boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > >::operator()() (this=<optimized out>) at /usr/include/boost/bind/bind.hpp:1294\r\n    #13 boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > > >::run() (this=<optimized out>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #14 0x00007ff69635d116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #15 0x00007ff6947b9494 in start_thread (arg=0x7ff66b7ae700) at pthread_create.c:333\r\n    #16 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 7 (Thread 0x7ff66bfff700 (LWP 17654)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056128a0017eb in boost::condition_variable::wait (this=<optimized out>, m=...) at /usr/include/boost/thread/pthread/condition_variable.hpp:77\r\n    #2  0x000056128a3212f2 in CCheckQueue<CScriptCheck>::Loop (this=<optimized out>, fMaster=<optimized out>) at ./checkqueue.h:102\r\n    #3  0x000056128a2e12c8 in CCheckQueue<CScriptCheck>::Thread (this=0x56128acc71ec <scriptcheckqueue+84>) at ./checkqueue.h:139\r\n    #4  ThreadScriptCheck () at validation.cpp:1540\r\n    #5  0x000056128a185114 in boost::detail::thread_data<void (*)()>::run (this=0x56128acc71ec <scriptcheckqueue+84>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #6  0x00007ff69635d116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff66bfff700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 6 (Thread 0x7ff677398700 (LWP 17653)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6640008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff677397cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128bfe7de0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff677398700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 5 (Thread 0x7ff677be9700 (LWP 17652)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff66c0008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff677be8c90, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=this@entry=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread.cpp:507\r\n    #6  0x00007ff6955316d5 in QDBusConnectionManager::run (this=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at qdbusconnection.cpp:178\r\n    #7  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread_unix.cpp:368\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff677be9700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 4 (Thread 0x7ff67df9e700 (LWP 17651)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fd82 in g_main_loop_run () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff68473e656 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\r\n    #4  0x00007ff6906b73d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff67df9e700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 3 (Thread 0x7ff67e7ef700 (LWP 17650)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69068fb51 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #4  0x00007ff6906b73d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff67e7ef700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 2 (Thread 0x7ff688439700 (LWP 17649)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff68e55c150 in ?? () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #2  0x00007ff68e55dee9 in xcb_wait_for_event () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #3  0x00007ff68ab9ab69 in QXcbEventReader::run (this=0x56128b83c900) at qxcbconnection.cpp:1343\r\n    #4  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128b83c900) at thread/qthread_unix.cpp:368\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff688439700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 1 (Thread 0x7ff696f01900 (LWP 17648)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007ff6947bbc06 in __GI___pthread_mutex_lock (mutex=0x56128acc6df0 <mempool+56>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056128a0259d5 in boost::recursive_mutex::lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n    #3  AnnotatedMixin<boost::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #4  boost::unique_lock<CCriticalSection>::lock (this=0x7fff8192c5e8) at /usr/include/boost/thread/lock_types.hpp:346\r\n    #5  0x000056128a02541e in CMutexLock<CCriticalSection>::Enter (this=0x56128acc6df0 <mempool+56>, nLine=602, pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:123\r\n    #6  CMutexLock<CCriticalSection>::CMutexLock (this=0x56128acc6df0 <mempool+56>, mutexIn=..., nLine=602, fTry=false, pszName=<optimized out>, \r\n        pszFile=<optimized out>) at ./sync.h:144\r\n    #7  CTxMemPool::size (this=0x56128acc6db8 <mempool>) at ./txmempool.h:602\r\n    #8  0x000056128a0240b9 in ClientModel::getMempoolSize (this=<optimized out>) at qt/clientmodel.cpp:130\r\n    #9  ClientModel::updateTimer (this=0x56128b70d6e0) at qt/clientmodel.cpp:153\r\n    #10 0x000056128a0ba739 in ClientModel::qt_static_metacall (_o=0x56128acc6df0 <mempool+56>, _c=128, _id=<optimized out>, _a=0x7ff6947c1f5c <__lll_lock_wait+28>)\r\n        at qt/moc_clientmodel.cpp:140\r\n    #11 0x00007ff6952f75e9 in QMetaObject::activate (sender=sender@entry=0x56128b71a310, signalOffset=<optimized out>, local_signal_index=local_signal_index@entry=0, \r\n        argv=argv@entry=0x0) at kernel/qobject.cpp:3740\r\n    #12 0x00007ff6952f7f07 in QMetaObject::activate (sender=sender@entry=0x56128b71a310, m=m@entry=0x7ff695515760 <QTimer::staticMetaObject>, \r\n        local_signal_index=local_signal_index@entry=0, argv=argv@entry=0x0) at kernel/qobject.cpp:3602\r\n    #13 0x00007ff695371780 in QTimer::timeout (this=this@entry=0x56128b71a310) at .moc/moc_qtimer.cpp:198\r\n    #14 0x00007ff695303f78 in QTimer::timerEvent (this=0x56128b71a310, e=<optimized out>) at kernel/qtimer.cpp:254\r\n    #15 0x00007ff6952f8453 in QObject::event (this=0x56128b71a310, e=<optimized out>) at kernel/qobject.cpp:1285\r\n    #16 0x00007ff695c3ab8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56128b71a310, e=0x7fff8192ca80) at kernel/qapplication.cpp:3799\r\n    #17 0x00007ff695c42341 in QApplication::notify (this=0x7fff8192d6b0, receiver=0x56128b71a310, e=0x7fff8192ca80) at kernel/qapplication.cpp:3556\r\n    #18 0x00007ff6952cb9e0 in QCoreApplication::notifyInternal2 (receiver=0x56128b71a310, event=event@entry=0x7fff8192ca80) at kernel/qcoreapplication.cpp:988\r\n    #19 0x00007ff69531efee in QCoreApplication::sendEvent (event=0x7fff8192ca80, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #20 QTimerInfoList::activateTimers (this=0x56128b8c6940) at kernel/qtimerinfo_unix.cpp:644\r\n    #21 0x00007ff69531f511 in timerSourceDispatch (source=<optimized out>) at kernel/qeventdispatcher_glib.cpp:182\r\n    #22 0x00007ff69068f7f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #23 0x00007ff69068fa60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #24 0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #25 0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x56128b8c6720, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #26 0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7fff8192ccd0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #27 0x00007ff695e290e7 in QDialog::exec (this=0x7fff8192cd58) at dialogs/qdialog.cpp:552\r\n    #28 0x000056128a016d55 in BitcoinGUI::message (this=0x56128b9167c0, title=..., message=..., style=<optimized out>, ret=0x7ff63e702e8b) at qt/bitcoingui.cpp:925\r\n    #29 0x000056128a0b9403 in BitcoinGUI::qt_static_metacall (_o=0x56128b9167c0, _c=<optimized out>, _id=<optimized out>, _a=0x7ff63e702920)\r\n        at qt/moc_bitcoingui.cpp:216\r\n    #30 0x00007ff6952f8499 in QObject::event (this=this@entry=0x56128b9167c0, e=e@entry=0x7ff614534610) at kernel/qobject.cpp:1263\r\n    #31 0x00007ff695c8246b in QWidget::event (this=this@entry=0x56128b9167c0, event=event@entry=0x7ff614534610) at kernel/qwidget.cpp:9225\r\n    #32 0x00007ff695d8192b in QMainWindow::event (this=0x56128b9167c0, event=0x7ff614534610) at widgets/qmainwindow.cpp:1543\r\n    #33 0x00007ff695c3ab8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56128b9167c0, e=0x7ff614534610) at kernel/qapplication.cpp:3799\r\n    #34 0x00007ff695c42341 in QApplication::notify (this=0x7fff8192d6b0, receiver=0x56128b9167c0, e=0x7ff614534610) at kernel/qapplication.cpp:3556\r\n    #35 0x00007ff6952cb9e0 in QCoreApplication::notifyInternal2 (receiver=0x56128b9167c0, event=event@entry=0x7ff614534610) at kernel/qcoreapplication.cpp:988\r\n    #36 0x00007ff6952ce16d in QCoreApplication::sendEvent (event=0x7ff614534610, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #37 QCoreApplicationPrivate::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0, data=0x56128b821ce0) at kernel/qcoreapplication.cpp:1649\r\n    #38 0x00007ff6952ce5d8 in QCoreApplication::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0) at kernel/qcoreapplication.cpp:1503\r\n    #39 0x00007ff69531fc43 in postEventSourceDispatch (s=0x56128b8c67f0) at kernel/qeventdispatcher_glib.cpp:276\r\n    #40 0x00007ff69068f7f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #41 0x00007ff69068fa60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #42 0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #43 0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x56128b8c6720, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #44 0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7fff8192d4a0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #45 0x00007ff6952d213c in QCoreApplication::exec () at kernel/qcoreapplication.cpp:1261\r\n    #46 0x0000561289ffbb19 in main (argc=<optimized out>, argv=<optimized out>) at qt/bitcoin.cpp:714\r\n    (gdb) \r\n\r\nI suppose it's possible that this is corruption in something other than the chainstate db, that I only fixed the chainstate db by reindexing and still have old corruption in another db.\r\n\r\nEither way, bitcoin-qt shouldn't hang like this. It's not responding to requests to \"bitcoin-cli stop\" or any other RPC.",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 323697996,
        "node_id": "MDU6TGFiZWwzMjM2OTc5OTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption",
        "name": "Data corruption",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 72,
    "closed_at": "2018-03-28T21:05:29Z",
    "created_at": "2017-09-16T19:59:33Z",
    "updated_at": "2021-12-16T14:55:27Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 329992182,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk5MjE4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329992182",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-16T20:13:34Z",
      "updated_at": "2017-09-16T20:13:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "I killed the hung process, started it again, let it get to within 4 blocks of the point it crashes, shut it down cleanly, then restarted it again. It crashed again, but got a few blocks further this time, getting to `height=485586` as opposed to 485584 last time. Also this time the error dialog showed the error message, and I was able to click it to exit bitcoin-qt cleanly.\r\n\r\n![screenshot_2017-09-16_13-08-09](https://user-images.githubusercontent.com/573356/30515629-bdf7397a-9ae0-11e7-9998-c2f7161f9b3c.png)\r\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-329992182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 329992636,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk5MjYzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329992636",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-16T20:22:37Z",
      "updated_at": "2017-09-16T20:22:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "I set a breakpoint:\r\n\r\n    (gdb) br leveldb::Status::Corruption\r\n    Breakpoint 3 at 0x555555acd1a2: leveldb::Status::Corruption. (9 locations)\r\n\r\nIt was hit:\r\n\r\n    Thread 20 \"bitcoin-msghand\" hit Breakpoint 4, leveldb::ReadBlock (file=<optimized out>, options=..., handle=..., result=0x7fffa6702378)\r\n        at leveldb/table/format.cc:95\r\n    95\t      s = Status::Corruption(\"block checksum mismatch\");\r\n    (gdb) where\r\n    #0  leveldb::ReadBlock (file=<optimized out>, options=..., handle=..., result=0x7fffa6702378) at leveldb/table/format.cc:95\r\n    #1  0x0000555555acd9f9 in leveldb::Table::BlockReader (arg=0x7fff8c176830, options=..., index_value=...) at leveldb/table/table.cc:189\r\n    #2  0x0000555555acde21 in leveldb::Table::InternalGet (this=0x7fff8c176830, options=..., k=..., arg=<optimized out>, saver=<optimized out>)\r\n        at leveldb/table/table.cc:241\r\n    #3  0x0000555555abf37c in leveldb::TableCache::Get (this=0x7fffb7560680, options=..., file_number=<optimized out>, file_size=<optimized out>, k=..., arg=0x140, \r\n        saver=0x7) at leveldb/db/table_cache.cc:115\r\n    #4  0x0000555555ac237a in leveldb::Version::Get (this=<optimized out>, options=..., k=..., value=<optimized out>, stats=<optimized out>)\r\n        at leveldb/db/version_set.cc:408\r\n    #5  0x0000555555ab6bf3 in leveldb::DBImpl::Get (this=0x7fffb7560940, options=..., key=..., value=0x7fffa67029e0) at leveldb/db/db_impl.cc:1141\r\n    #6  0x000055555588f609 in CDBWrapper::Read<(anonymous namespace)::CoinEntry, Coin> (this=<optimized out>, key=..., value=...) at ./dbwrapper.h:233\r\n    #7  CCoinsViewDB::GetCoin (this=0x7fffb755f2e0, outpoint=..., coin=...) at txdb.cpp:62\r\n    #8  0x0000555555a50107 in CCoinsViewBacked::GetCoin (this=<optimized out>, outpoint=..., coin=...) at coins.cpp:26\r\n    #9  0x000055555575c077 in CCoinsViewErrorCatcher::GetCoin (this=0x7fff8c000000, outpoint=..., coin=...) at init.cpp:141\r\n    #10 0x0000555555a50462 in CCoinsViewCache::FetchCoin (this=0x7fffb75641b0, outpoint=...) at coins.cpp:48\r\n    #11 0x0000555555a50549 in CCoinsViewCache::GetCoin (this=0x7fff8c000000, outpoint=..., coin=...) at coins.cpp:61\r\n    #12 0x0000555555a50462 in CCoinsViewCache::FetchCoin (this=0x7fffa6704440, outpoint=...) at coins.cpp:48\r\n    #13 0x0000555555a50b03 in CCoinsViewCache::HaveCoin (this=0x7fff8c000000, outpoint=...) at coins.cpp:129\r\n    #14 0x0000555555a51254 in CCoinsViewCache::HaveInputs (this=<optimized out>, tx=...) at coins.cpp:240\r\n    #15 0x00005555558d3210 in ConnectBlock (block=..., state=..., pindex=<optimized out>, view=..., chainparams=..., fJustCheck=<optimized out>) at validation.cpp:1763\r\n    #16 0x00005555558c676e in ConnectTip (state=..., chainparams=..., pindexNew=<optimized out>, connectTrace=..., disconnectpool=..., pblock=...)\r\n        at validation.cpp:2209\r\n    #17 ActivateBestChainStep (state=..., chainparams=..., pindexMostWork=<optimized out>, pblock=..., fInvalidFound=<optimized out>, connectTrace=...)\r\n        at validation.cpp:2354\r\n    #18 0x00005555558c5ad4 in ActivateBestChain (state=..., chainparams=..., pblock=...) at validation.cpp:2454\r\n    #19 0x00005555558cff58 in ProcessNewBlock (chainparams=..., pblock=warning: RTTI symbol not found for class 'std::_Sp_counted_ptr_inplace<CBlock, std::allocator<CBlock>, (__gnu_cxx::_Lock_policy)2>'\r\n    warning: RTTI symbol not found for class 'std::_Sp_counted_ptr_inplace<CBlock, std::allocator<CBlock>, (__gnu_cxx::_Lock_policy)2>'\r\n    std::shared_ptr (count 6, weak 0) 0x7fff8cd638e0, fForceProcessing=<optimized out>, \r\n        fNewBlock=0x7fffa6704aaf) at validation.cpp:3199\r\n    #20 0x00005555557beabf in ProcessMessage (pfrom=<optimized out>, strCommand=..., vRecv=..., nTimeReceived=<optimized out>, chainparams=..., \r\n        connman=<optimized out>, interruptMsgProc=...) at net_processing.cpp:2391\r\n    #21 0x00005555557adf12 in PeerLogicValidation::ProcessMessages (this=0x7fffc8410440, pfrom=0x7fff980008c0, interruptMsgProc=...) at net_processing.cpp:2718\r\n    #22 0x00005555557da037 in non-virtual thunk to PeerLogicValidation::ProcessMessages(CNode*, std::atomic<bool>&) () at net_processing.cpp:2643\r\n    #23 0x000055555578967b in CConnman::ThreadMessageHandler (this=<optimized out>) at net.cpp:1995\r\n    #24 0x00005555557a44ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #25 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #26 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #27 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #28 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #29 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #30 0x0000555555758e3d in std::function<void ()>::operator()() const (this=0x7fffa670bd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #31 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #32 0x00005555557a467d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #33 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #34 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #35 0x00007ffff452ce6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #36 0x00007ffff56f9494 in start_thread (arg=0x7fffa670c700) at pthread_create.c:333\r\n    #37 0x00007ffff3ca1aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n    (gdb) \r\n\r\nSo it does look like my chainstate db is corrupted again doesn't it? I wonder if there's something wrong with the code that's causing this corruption. Should the db be able to get corrupted from random crashes?",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-329992636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 329993047,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk5MzA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329993047",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-16T20:31:07Z",
      "updated_at": "2017-09-16T22:19:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have two separate Bitcoin data directories. One is a full node (and that's the one which is failing) and the other is pruned (`prune=600`).\r\n\r\nIs it safe to copy the `chainstate` folder from the pruned datadir into the full node's datadir to fix this corruption issue? Or do I need to run the >24h chainstate reindex thing again?\r\n\r\nEdit: it appears to have worked. I did this:\r\n\r\n* made a bootstrap.dat file that I used to sync the pruned node to the point where it returns the same for 'getblockcount' as the corrupted full node gives\r\n* stopped both nodes\r\n* deleted the corrupted chainstate folder\r\n* copied the pruned node's chainstate folder into the full node\r\n\r\nThen when I started the full node, it was able to continue syncing past the point it was previously failing.\r\n\r\nSo that seems like a good cheap way of recovering from chainstate db corruption, if you don't mind wasting the extra ~4GB of space for an extra pruned node. It can sync from the full node, so needn't add to your bandwidth requirements.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-329993047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 330280417,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI4MDQxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330280417",
      "actor": {
        "login": "jlegoupil",
        "id": 9769277,
        "node_id": "MDQ6VXNlcjk3NjkyNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9769277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlegoupil",
        "html_url": "https://github.com/jlegoupil",
        "followers_url": "https://api.github.com/users/jlegoupil/followers",
        "following_url": "https://api.github.com/users/jlegoupil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jlegoupil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jlegoupil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jlegoupil/subscriptions",
        "organizations_url": "https://api.github.com/users/jlegoupil/orgs",
        "repos_url": "https://api.github.com/users/jlegoupil/repos",
        "events_url": "https://api.github.com/users/jlegoupil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jlegoupil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-18T16:37:15Z",
      "updated_at": "2017-09-18T16:37:15Z",
      "author_association": "NONE",
      "body": "I experienced the same issue with my pruned node on a low end OSX computer on block #470915.\r\n\r\nI shut down Bitcoin QT and started it again >>> problem remained.\r\nI shut down my computer, restarted it, started Bitcoin QT again >>> problem has resolved itself.\r\n\r\nMy debug log:\r\n2017-09-18 04:46:34 UpdateTip: new best=000000000000000000051d8e3a33e4da2fdf008d35cf161382a5639e66b57c4a height=470914 version=0x20000000 log2_work=86.584992 tx=231183711 date='2017-06-12 06:50:28' progress=0.903516 cache=69.4MiB(516833txo)\r\n2017-09-18 04:46:34 UpdateTip: new best=00000000000000000004fcac1e558d2d6031d73b14db5cf67916f712081912e7 height=470915 version=0x20000002 log2_work=86.585028 tx=231184966 date='2017-06-12 06:50:36' progress=0.903521 cache=69.9MiB(521248txo)\r\n2017-09-18 04:46:35 LevelDB read failure: Corruption: block checksum mismatch\r\n2017-09-18 04:46:35 Corruption: block checksum mismatch\r\n2017-09-18 04:47:18 version handshake timeout from 5\r\n2017-09-18 04:47:19 version handshake timeout from 6",
      "user": {
        "login": "jlegoupil",
        "id": 9769277,
        "node_id": "MDQ6VXNlcjk3NjkyNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9769277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlegoupil",
        "html_url": "https://github.com/jlegoupil",
        "followers_url": "https://api.github.com/users/jlegoupil/followers",
        "following_url": "https://api.github.com/users/jlegoupil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jlegoupil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jlegoupil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jlegoupil/subscriptions",
        "organizations_url": "https://api.github.com/users/jlegoupil/orgs",
        "repos_url": "https://api.github.com/users/jlegoupil/repos",
        "events_url": "https://api.github.com/users/jlegoupil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jlegoupil/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-330280417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 330284336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI4NDMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330284336",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-18T16:51:31Z",
      "updated_at": "2017-09-18T16:51:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jlegoupil what version of Bitcoin Core were you using?\r\n\r\nI don't see why restarting your OS would help. That's strange.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-330284336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1253849325,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI1Mzg0OTMyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1253849325",
      "actor": {
        "login": "jlegoupil",
        "id": 9769277,
        "node_id": "MDQ6VXNlcjk3NjkyNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9769277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlegoupil",
        "html_url": "https://github.com/jlegoupil",
        "followers_url": "https://api.github.com/users/jlegoupil/followers",
        "following_url": "https://api.github.com/users/jlegoupil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jlegoupil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jlegoupil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jlegoupil/subscriptions",
        "organizations_url": "https://api.github.com/users/jlegoupil/orgs",
        "repos_url": "https://api.github.com/users/jlegoupil/repos",
        "events_url": "https://api.github.com/users/jlegoupil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jlegoupil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-18T16:51:31Z"
    },
    {
      "event": "subscribed",
      "id": 1253849326,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNTM4NDkzMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1253849326",
      "actor": {
        "login": "jlegoupil",
        "id": 9769277,
        "node_id": "MDQ6VXNlcjk3NjkyNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9769277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlegoupil",
        "html_url": "https://github.com/jlegoupil",
        "followers_url": "https://api.github.com/users/jlegoupil/followers",
        "following_url": "https://api.github.com/users/jlegoupil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jlegoupil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jlegoupil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jlegoupil/subscriptions",
        "organizations_url": "https://api.github.com/users/jlegoupil/orgs",
        "repos_url": "https://api.github.com/users/jlegoupil/repos",
        "events_url": "https://api.github.com/users/jlegoupil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jlegoupil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-18T16:51:31Z"
    },
    {
      "event": "commented",
      "id": 330287557,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI4NzU1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330287557",
      "actor": {
        "login": "jlegoupil",
        "id": 9769277,
        "node_id": "MDQ6VXNlcjk3NjkyNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9769277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlegoupil",
        "html_url": "https://github.com/jlegoupil",
        "followers_url": "https://api.github.com/users/jlegoupil/followers",
        "following_url": "https://api.github.com/users/jlegoupil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jlegoupil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jlegoupil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jlegoupil/subscriptions",
        "organizations_url": "https://api.github.com/users/jlegoupil/orgs",
        "repos_url": "https://api.github.com/users/jlegoupil/repos",
        "events_url": "https://api.github.com/users/jlegoupil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jlegoupil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-18T17:02:40Z",
      "updated_at": "2017-09-18T17:02:58Z",
      "author_association": "NONE",
      "body": "I'm using Bitcoin Core 0.15.0.0",
      "user": {
        "login": "jlegoupil",
        "id": 9769277,
        "node_id": "MDQ6VXNlcjk3NjkyNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9769277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlegoupil",
        "html_url": "https://github.com/jlegoupil",
        "followers_url": "https://api.github.com/users/jlegoupil/followers",
        "following_url": "https://api.github.com/users/jlegoupil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jlegoupil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jlegoupil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jlegoupil/subscriptions",
        "organizations_url": "https://api.github.com/users/jlegoupil/orgs",
        "repos_url": "https://api.github.com/users/jlegoupil/repos",
        "events_url": "https://api.github.com/users/jlegoupil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jlegoupil/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-330287557",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 331669466,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTY2OTQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331669466",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-23T20:57:57Z",
      "updated_at": "2017-09-23T20:57:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "It happened again to me, this time on shutdown:\r\n\r\n    2017-09-23 20:54:21 connect() to 59.127.26.8:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:21 connect() to 220.253.70.199:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:22 connect() to 77.181.226.122:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:22 connect() to 35.185.131.115:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:23 connect() to [2001:0:9d38:6ab8:3c62:f87e:95d8:bcd2]:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:23 connect() to 139.59.149.67:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:24 connect() to 188.195.24.170:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:24 connect() to 24.90.192.28:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:25 connect() to [2001:0:9d38:78cf:20d3:3c09:a9d2:703a]:8333 failed: Network is unreachable (101)\r\n    2017-09-23 20:54:25 addcon thread exit\r\n    2017-09-23 20:54:25 scheduler thread interrupt\r\n    2017-09-23 20:54:25 opencon thread exit\r\n    2017-09-23 20:54:25 Shutdown: In progress...\r\n    2017-09-23 20:54:25 net thread exit\r\n    2017-09-23 20:54:25 msghand thread exit\r\n    2017-09-23 20:54:25 Dumped mempool: 0.005588s to copy, 0.126193s to dump\r\n    2017-09-23 20:54:25 Corruption: block checksum mismatch\r\n    2017-09-23 20:54:25 *** System error while flushing: Database corrupted\r\n    2017-09-23 20:54:33 Corruption: block checksum mismatch\r\n    2017-09-23 20:54:33 *** System error while flushing: Database corrupted\r\n    2017-09-23 20:54:34 GUI: QXcbConnection: XCB error: 3 (BadWindow), sequence: 7465, resource id: 11515671, major code: 40 (TranslateCoords), minor code: 0\r\n    2017-09-23 20:54:34 Shutdown: done\r\n\r\nI was offline at the time, which explains all the \"Network is unreachable\" errors. Since the last time I fixed the chainstate db I never had Bitcoin crash, but I did have the laptop fail to resume from a suspend state once and had to do a cold reset. I guess that could have corrupted the db, but this really seems to be so much more common in 0.15 than it was before. This is the 3rd chainstate db corruption I've had with 0.15 compared to 6 years of corruption-free operation before 0.15.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-331669466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 338496500,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ5NjUwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338496500",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-22T17:59:17Z",
      "updated_at": "2017-10-22T17:59:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm still getting this chainstate database corruption fairly regularly.\r\n\r\nSince my last comment here it has happened three more times, on Oct 11th, 12th, and 22nd.\r\n\r\nThis seems like a serious issue to me, because once the chainstate database is corrupted it requires a full blockchain rescan to repair it. For a pruned node that means starting the IBD from scratch, and will likely lead to lots of full nodes going offline due to inertia.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-338496500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 338497609,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ5NzYwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338497609",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-22T18:15:19Z",
      "updated_at": "2017-10-22T18:15:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "One thing occurs to me. If I leave my laptop unattended, the screen locks after 5 minutes. It used to be that when I unlocked the screen any browser tabs I had open would have been updating behind the scenes. But for the last couple of months I've noticed that having the screen locked seems to freeze things. I unlock the screen, and the price charts haven't updated since I left and such like.\r\n\r\nI don't know what would cause that, but I'm wondering if it could also be causing the chainstate corruption I'm seeing if I leave bitcoin-qt running while the screen is locked.\r\n\r\nJust a thought.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-338497609",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339708547,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTcwODU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339708547",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T15:41:48Z",
      "updated_at": "2017-10-26T15:41:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "My chainstate database was corrupted again last night when I tried to close bitcoin-qt. From the debug.log:\r\n\r\n    2017-10-25 23:38:25 opencon thread exit\r\n    2017-10-25 23:38:25 addcon thread exit\r\n    2017-10-25 23:38:25 net thread exit\r\n    2017-10-25 23:38:25 msghand thread exit\r\n    2017-10-25 23:38:25 scheduler thread interrupt\r\n    2017-10-25 23:38:25 Shutdown: In progress...\r\n    2017-10-25 23:38:26 Dumped mempool: 0.001688s to copy, 0.191935s to dump\r\n    2017-10-25 23:38:27 Corruption: block checksum mismatch\r\n    2017-10-25 23:38:27 *** System error while flushing: Database corrupted\r\n    2017-10-25 23:38:31 Corruption: block checksum mismatch\r\n    2017-10-25 23:38:31 *** System error while flushing: Database corrupted\r\n    2017-10-25 23:38:32 Shutdown: done\r\n\r\nEach time it has happened recently, I have synced up my pruned node to the same block that the corrupted node is at, renamed the corrupted node's chainstate directory, then copied the pruned node's chainstate directory into the corrupted node's .bitcoin directory. That has left me with a bunch of corrupted chainstate directories:\r\n\r\n    ~/.bitcoin$ du -m chain*\r\n    2812\tchainstate\r\n    2757\tchainstate.bad\r\n    2779\tchainstate.bad2\r\n    2800\tchainstate.bad3\r\n    2837\tchainstate.bad4\r\n    2842\tchainstate.bad5\r\n    ~/.bitcoin$ ls -ld chainstate*\r\n    drwx------ 2 chris chris 61440 Oct 26 08:34 chainstate\r\n    drwx------ 2 chris chris 69632 Sep 16 14:50 chainstate.bad\r\n    drwx------ 2 chris chris 61440 Oct 11 07:29 chainstate.bad2\r\n    drwx------ 2 chris chris 65536 Oct 12 22:10 chainstate.bad3\r\n    drwx------ 2 chris chris 61440 Oct 22 09:39 chainstate.bad4\r\n    drwx------ 2 chris chris 65536 Oct 26 00:19 chainstate.bad5\r\n\r\nI can make these available if that would be helpful (and if it is safe to do so).",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339708547",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339722095,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTcyMjA5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339722095",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T16:26:31Z",
      "updated_at": "2017-10-26T17:29:53Z",
      "author_association": "MEMBER",
      "body": "We should change the order of the log print & blocking message box calls so the corruption errors are printed in the log if the message box handler hangs:\r\n\r\n```diff\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -140,8 +140,8 @@ public:\r\n         try {\r\n             return CCoinsViewBacked::GetCoin(outpoint, coin);\r\n         } catch(const std::runtime_error& e) {\r\n-            uiInterface.ThreadSafeMessageBox(_(\"Error reading from database, shutting down.\"), \"\", CClientUIInterface::MSG_ERROR);\r\n             LogPrintf(\"Error reading from database: %s\\n\", e.what());\r\n+            uiInterface.ThreadSafeMessageBox(_(\"Error reading from database, shutting down.\"), \"\", CClientUIInterface::MSG_ERROR);\r\n             // Starting the shutdown sequence and returning false to the caller would be\r\n             // interpreted as 'entry not found' (as opposed to unable to read data), and\r\n             // could lead to invalid interpretation. Just exit immediately, as we can't\r\n```\r\n\r\nEDIT: Actually, it doesn't matter very much, since the full leveldb error is logged right before the exception is thrown: https://github.com/bitcoin/bitcoin/blob/50fae68d416b4b8ec4ca192923dfd5ae9ea42773/src/dbwrapper.cpp#L203",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339722095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339722984,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTcyMjk4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339722984",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T16:29:26Z",
      "updated_at": "2017-10-26T16:29:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "I only saw the message box hang once. It happened the first time the database was corrupted, and never since.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339722984",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339725394,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTcyNTM5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339725394",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T16:37:57Z",
      "updated_at": "2017-10-26T21:00:51Z",
      "author_association": "CONTRIBUTOR",
      "body": ">  seems to be so much more common in 0.15 than it was before\r\n\r\nSo this was also happening before?\r\n\r\nA checksum error is a really really cut and dry condition: The system reads a record off the disk and the CRC32 didn't match.  We have never, so far, had a bug in the software which turned out to cause these errors: the cause has always been disk corruption due to a failing disk, faulty ram, or an overheating cpu. The latter of which is especially implicated in laptops (and other small systems) since most brands really just cannot handle being run at full intensity.  If prior versions did it as well and 0.15 is more frequent about it, it could just be because 0.15 hits the machine more intensely.\r\n\r\nBut it would be good to eliminate what other causes we can.. What exact cpu model and compiler version are you using?  Have you run Memtest86 on this system?",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339725394",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339730194,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTczMDE5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339730194",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T16:54:32Z",
      "updated_at": "2017-10-26T16:54:32Z",
      "author_association": "MEMBER",
      "body": "Might be worth trying to store your chainstate on a zfs or btrfs partition to see if any corruption errors can be detected at the filesystem level. COW snapshots could also help you recover more quickly if there is corruption above the filesystem level.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339730194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339738256,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTczODI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339738256",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T17:23:25Z",
      "updated_at": "2017-10-26T17:23:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "> So this was also happening before?\r\n\r\nI have had to run a full reindex maybe twice before 0.15, but both times were after I had had to do a cold reboot of my laptop while Core was running. I wasn't surprised that doing a cold reboot would cause problems.\r\n\r\nSince running 0.15 the chainstate database has become corrupted 7 times in 6 weeks. Most if not all of these happened without any cold restart happening.\r\n\r\n> the cause has always been disk corruption due to a failing disk, faulty ram, or an overheating cpu. The latter of which is especially implicated in laptops (and other small systems) since most brands really just cannot handle being run at full intensity. If prior versions did it as well and 0.15 is more frequent about it, it could just be because 0.15 hits the machine more intensely.\r\n\r\nAll 7 times it has been the chainstate db, not the block index db that was corrupted. I am running a laptop, but it isn't running at full intensity. The CPU isn't often running flat out.\r\n\r\n> But it would be good to eliminate what other causes we can.. What exact cpu model and compiler version are you using?\r\n\r\nAccording to /proc/cpuinfo, it's a 4 core i7-5500U:\r\n\r\n    $ grep 'model name' /proc/cpuinfo | uniq -c\r\n          4 model name\t: Intel(R) Core(TM) i7-5500U CPU @ 2.40GHz\r\n\r\nThe compiler version might be interesting. I switched from using gcc to clang a few months back when I was trying to debug [a crash I get on startup](https://github.com/bitcoin/bitcoin/issues/9683) about 1% of the time. I still see crashes when starting bitcoin-qt very occasionally. I saw one today in fact but I've given up trying to debug it.\r\n\r\n    $ clang++ -v\r\n    clang version 3.8.1-24 (tags/RELEASE_381/final)\r\n    Target: x86_64-pc-linux-gnu\r\n    Thread model: posix\r\n    InstalledDir: /usr/bin\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/i586-linux-gnu/4.9\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/i586-linux-gnu/4.9.2\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/i686-linux-gnu/6.3.0\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/4.8\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/4.8.4\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9.2\r\n    Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0\r\n    Found candidate GCC installation: /usr/lib/gcc/i586-linux-gnu/4.9\r\n    Found candidate GCC installation: /usr/lib/gcc/i586-linux-gnu/4.9.2\r\n    Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/6.3.0\r\n    Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8\r\n    Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8.4\r\n    Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9\r\n    Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9.2\r\n    Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/6.3.0\r\n    Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0\r\n    Candidate multilib: .;@m64\r\n    Selected multilib: .;@m64\r\n\r\n> Have you run Memtest86 on this system?\r\n\r\nI have, maybe 6 months ago. I let it run for a few hours and it didn't find any problems. I could try letting it run to completion. I have replaced the RAM since then actually so I should run it again anyway. Will report back.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339738256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339738622,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTczODYyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339738622",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T17:24:46Z",
      "updated_at": "2017-10-26T17:24:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Might be worth trying to store your chainstate on a zfs or btrfs partition to see if any corruption errors can be detected at the filesystem level. COW snapshots could also help you recover more quickly if there is corruption above the filesystem level.\r\n\r\nI have no experience of zfs or btrfs. Is one better than the other for this purpose? Do I need to set any particular configuration to detect filesystem corruption? I'm willing to experiment.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339738622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339741490,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc0MTQ5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339741490",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T17:35:15Z",
      "updated_at": "2017-10-26T17:35:15Z",
      "author_association": "MEMBER",
      "body": "Either should work fine, though btrfs is slightly better-supported in Linux-land, even if its newer/a bit less stable in strange edge-cases.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339741490",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339742636,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc0MjYzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339742636",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T17:39:09Z",
      "updated_at": "2017-10-26T17:39:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Is it safe to assume that if bitcoin starts up successfully with the `-forcecompactdb` flag then the chainstate database currently doesn't have any checksum errors?",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339742636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339752813,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc1MjgxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339752813",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T18:14:29Z",
      "updated_at": "2017-10-26T18:14:29Z",
      "author_association": "MEMBER",
      "body": "> I have no experience of zfs or btrfs. Is one better than the other for this purpose? Do I need to set any particular configuration to detect filesystem corruption? I'm willing to experiment\r\n\r\nPersonally I've only used btrfs, not zfs. But neither require configuration to detect corruption, you just need to create a partition, store data on it, and any errors should show up in your system log (and be returned to applications). In btrfs, if you want to create a COW snapshot of a file or directory, you can run `cp -a --reflink SRC DEST`.\r\n\r\n> Is it safe to assume that if bitcoin starts up successfully with the -forcecompactdb flag then the chainstate database currently doesn't have any checksum errors?\r\n\r\nI would guess not. From https://github.com/google/leveldb/blob/master/doc/impl.md, it doesn't seem like a compaction will necessarily rewrite the whole database (for example if it is already compacted). \r\n\r\nMaybe one way to manually verify there are no checksum errors in the database would be to add error reporting to leveldb dump code in src/leveldb/db/dumpfile.cc, which can be run with:\r\n\r\n```sh\r\nmake -C src/leveldb out-static/leveldbutil\r\nsrc/leveldb/out-static/leveldbutil dump ~/.bitcoin/chainstate/*\r\n```",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339752813",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339754447,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc1NDQ0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339754447",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T18:20:27Z",
      "updated_at": "2017-10-26T18:20:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't have any unpartitioned disk space, so I made a file within an existing partition, and made a btrfs filesystem in there. Hopefully that's good enough:\r\n\r\n    chris@chris:~/.bitcoin$ dd if=/dev/zero of=chainstate.btrfs bs=1M count=4096\r\n    4096+0 records in\r\n    4096+0 records out\r\n    4294967296 bytes (4.3 GB, 4.0 GiB) copied, 40.403 s, 106 MB/s\r\n    chris@chris:~/.bitcoin$ mkfs.btrfs chainstate.btrfs\r\n    btrfs-progs v4.7.3\r\n    See http://btrfs.wiki.kernel.org for more information.\r\n\r\n    Label:              (null)\r\n    UUID:               \r\n    Node size:          16384\r\n    Sector size:        4096\r\n    Filesystem size:    4.00GiB\r\n    Block group profiles:\r\n      Data:             single            8.00MiB\r\n      Metadata:         DUP             204.75MiB\r\n      System:           DUP               8.00MiB\r\n    SSD detected:       no\r\n    Incompat features:  extref, skinny-metadata\r\n    Number of devices:  1\r\n    Devices:\r\n       ID        SIZE  PATH\r\n        1     4.00GiB  chainstate.btrfs\r\n\r\n    chris@chris:~/.bitcoin$ bc stop\r\n    Bitcoin server stopping\r\n    chris@chris:~/.bitcoin$ mv chainstate chainstate.good6\r\n    chris@chris:~/.bitcoin$ mkdir chainstate\r\n    chris@chris:~/.bitcoin$ sudo mount chainstate.btrfs chainstate\r\n    chris@chris:~/.bitcoin$ sudo chown chris:chris chainstate\r\n    chris@chris:~/.bitcoin$ df chainstate\r\n    Filesystem      Size  Used Avail Use% Mounted on\r\n    /dev/loop0      4.0G   17M  3.6G   1% /home/chris/.bitcoin/chainstate\r\n    chris@chris:~/.bitcoin$ (cd ~/.bitcoin/chainstate.good6/ && tar cf - .) | (cd ~/.bitcoin/chainstate/ && tar xf -)\r\n    chris@chris:~/.bitcoin$ df chainstate\r\n    Filesystem      Size  Used Avail Use% Mounted on\r\n    /dev/loop0      4.0G  2.5G  1.3G  67% /home/chris/.bitcoin/chainstate\r\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339754447",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 339834802,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTgzNDgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339834802",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T00:04:49Z",
      "updated_at": "2017-10-27T00:04:49Z",
      "author_association": "CONTRIBUTOR",
      "body": ">> Have you run Memtest86 on this system?\r\n\r\n> I have, maybe 6 months ago. I let it run for a few hours and it didn't find any problems. I could try letting it run to completion. I have replaced the RAM since then actually so I should run it again anyway. Will report back.\r\n\r\nI ran it for 2 hours this morning. It got through about 1.5 test cycles without finding any error.\r\n\r\nI tried running it on all 4 cores at once (pressing F2 when memtest86 starts up, I think) and it locked up the computer after about 5 minutes. It remember it used to do that before I upgraded the RAM too. I don't know if that's cause for concern or not.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-339834802",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340282506,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDI4MjUwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340282506",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-29T18:17:00Z",
      "updated_at": "2017-10-29T19:02:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky > Might be worth trying to store your chainstate on a zfs or btrfs partition to see if any corruption errors can be detected at the filesystem level.\r\n\r\nI just had the same crash again. This is the first crash since I moved `chainstate` onto a btrfs filesystem.\r\n\r\ndebug.log:\r\n\r\n    2017-10-29 13:19:16 Pre-allocating up to position 0x5000000 in blk01008.dat\r\n    2017-10-29 13:19:16 Pre-allocating up to position 0xa00000 in rev01008.dat\r\n    2017-10-29 13:19:16 UpdateTip: new best=00000000000000000092bb686c21f129852b3f24aff05113d02b708c9d6c11f6 height=492209 version=0x20000000 log2_work=87.373165 tx=266570069 date='2017-10-29 13:19:00' progress=1.000000 cache=92.8MiB(691920txo) warning='2 of last 100 blocks have unexpected version'\r\n    2017-10-29 13:23:24 UpdateTip: new best=000000000000000000500829275e29849bb2a64a38d2f112d81c8fba43e620b0 height=492210 version=0x20000000 log2_work=87.37321 tx=266572022 date='2017-10-29 13:22:51' progress=1.000000 cache=93.4MiB(697320txo) warning='2 of last 100 blocks have unexpected version'\r\n    2017-10-29 13:23:58 UpdateTip: new best=0000000000000000001d8f1d13239fb8544698ca2bb9bc1cdd2883fc2580556c height=492211 version=0x20000000 log2_work=87.373255 tx=266574358 date='2017-10-29 13:23:23' progress=1.000000 cache=93.9MiB(701053txo) warning='2 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14654s\r\n    2017-10-29 17:31:09 socket sending timeout: 14656s\r\n    2017-10-29 17:31:09 connect() to 178.49.137.89:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:10 connect() to 156.11.1.152:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:11 connect() to 18.111.110.151:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:11 connect() to [2002:d941:d96c:8000:0:5efe:a00:7d6]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:12 connect() to 52.14.94.187:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:12 connect() to 46.59.78.181:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:13 connect() to 92.177.51.206:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:13 connect() to 5.189.165.102:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:14 connect() to [2a04:2180:0:2::77]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:14 connect() to 71.178.245.103:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:15 connect() to 59.125.8.143:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:15 connect() to 176.159.164.10:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:16 connect() to 130.194.84.251:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:16 connect() to 190.95.220.138:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:17 connect() to 138.201.33.232:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:18 connect() to [2a01:4f8:10a:1d8f::2]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:18 connect() to 97.87.213.112:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:19 connect() to 52.59.146.184:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:19 connect() to 83.135.85.203:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:20 connect() to 69.162.111.228:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:23 connect() to 212.164.233.103:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:31:30 connect() to [2001:0:9d38:6abd:245a:a009:fac1:d805]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:42 receive version message: /Satoshi:0.14.2/: version 70015, blocks=492233, us=<me>:8284, peer=55\r\n    2017-10-29 17:31:50 receive version message: /Satoshi:0.15.99/: version 70015, blocks=492233, us=<me>:13696, peer=56\r\n    2017-10-29 17:31:50 receive version message: /Satoshi:0.13.2/: version 70015, blocks=492233, us=<me>:27749, peer=57\r\n    2017-10-29 17:31:50 receive version message: /Satoshi:0.14.2/: version 70015, blocks=492233, us=<me>:16359, peer=58\r\n    2017-10-29 17:31:50 connect() to [2001:0:9d38:6abd:1076:1102:aead:172]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:31:51 receive version message: /Satoshi:0.14.2/: version 70015, blocks=492233, us=<me>:22722, peer=60\r\n    2017-10-29 17:31:55 socket recv error Connection reset by peer (104)\r\n    2017-10-29 17:32:11 connect() to [2602:306:39de:ea90:c555:2374:2256:6c3d]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:32:36 UpdateTip: new best=00000000000000000065aedcb67e1ca2230c9c06a667f11f0a1528839f3c068b height=492212 version=0x20000000 log2_work=87.3733 tx=266576702 date='2017-10-29 13:42:56' progress=0.999840 cache=94.7MiB(707504txo) warning='2 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:32:36 receive version message: /Satoshi:0.15.0.1/: version 70015, blocks=492233, us=<me>:26163, peer=61\r\n    2017-10-29 17:33:19 UpdateTip: new best=0000000000000000000bd68df3f9398932b1535aea34649358e24b5e2b41a9f6 height=492213 version=0x20000000 log2_work=87.373345 tx=266579252 date='2017-10-29 13:43:39' progress=0.999840 cache=95.1MiB(710427txo) warning='2 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:33:19 version handshake timeout from 61\r\n    2017-10-29 17:33:19 version handshake timeout from 62\r\n    2017-10-29 17:33:23 connect() to 51.174.51.66:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:33:47 UpdateTip: new best=0000000000000000002565c85bb351e222fd34eb68f0712261689ec7c5f05d33 height=492214 version=0x20000000 log2_work=87.37339 tx=266581963 date='2017-10-29 14:12:23' progress=0.999859 cache=95.6MiB(714560txo) warning='2 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:33:47 version handshake timeout from 63\r\n    2017-10-29 17:34:12 UpdateTip: new best=0000000000000000001f0ffad4402279360668ba5b071ee3206971199bd732f7 height=492215 version=0x20000000 log2_work=87.373435 tx=266585112 date='2017-10-29 14:43:25' progress=0.999881 cache=96.2MiB(719487txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:34:12 receive version message: /Satoshi:0.15.0/: version 70015, blocks=492234, us=<me>:26749, peer=64\r\n    2017-10-29 17:34:25 version handshake timeout from 64\r\n    2017-10-29 17:34:37 UpdateTip: new best=0000000000000000006d7c1822119613361d0fdb4594ec68990a37d1c42472da height=492216 version=0x20000000 log2_work=87.37348 tx=266587484 date='2017-10-29 14:51:19' progress=0.999886 cache=96.6MiB(723194txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:34:37 receive version message: /Satoshi:0.13.1/: version 70014, blocks=492234, us=<me>:6057, peer=65\r\n    2017-10-29 17:35:00 Pre-allocating up to position 0xb00000 in rev01008.dat\r\n    2017-10-29 17:35:00 UpdateTip: new best=00000000000000000046d5cabb24f80c5f60e614cb9450b14f5f86548dbac7af height=492217 version=0x20000000 log2_work=87.373525 tx=266589807 date='2017-10-29 14:51:45' progress=0.999886 cache=97.2MiB(728063txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:35:00 version handshake timeout from 65\r\n    2017-10-29 17:35:00 receive version message: /Satoshi:0.14.2/: version 70015, blocks=492234, us=<me>:6139, peer=66\r\n    2017-10-29 17:35:01 connect() to 85.187.183.13:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:35:07 connect() to 157.193.121.83:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:35:08 connect() to [2003:f1:5bc3:500:7d68:661:1815:5090]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:35:28 UpdateTip: new best=0000000000000000001a5530ee669c4438fa706d53f8e5135f8256488df66ce2 height=492218 version=0x20000000 log2_work=87.373569 tx=266591778 date='2017-10-29 14:55:21' progress=0.999888 cache=97.8MiB(732858txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:35:28 version handshake timeout from 66\r\n    2017-10-29 17:35:29 receive version message: /Satoshi:0.14.2/: version 70015, blocks=492234, us=<me>:20734, peer=68\r\n    2017-10-29 17:35:29 Pre-allocating up to position 0x6000000 in blk01008.dat\r\n    2017-10-29 17:35:36 UpdateTip: new best=000000000000000000882bdeda9d256d4c172bb4a8b369f1772af19fcb31451d height=492219 version=0x20000000 log2_work=87.373614 tx=266594510 date='2017-10-29 15:20:12' progress=0.999906 cache=98.2MiB(735883txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:35:40 connect() to 31.28.161.19:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:35:43 UpdateTip: new best=0000000000000000004e85fe4b36a585da072f329619001fb50cdcee7d58437c height=492220 version=0x20000000 log2_work=87.373659 tx=266597133 date='2017-10-29 15:36:37' progress=0.999917 cache=98.7MiB(740448txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:35:49 UpdateTip: new best=000000000000000000a7a14031d4eaac94e2794e0395a7cdef3be6a96c4c8ac1 height=492221 version=0x20000000 log2_work=87.373704 tx=266598920 date='2017-10-29 15:50:43' progress=0.999927 cache=98.7MiB(740177txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:35:49 receive version message: /Satoshi:0.14.2/: version 70015, blocks=492234, us=<me>:12875, peer=69\r\n    2017-10-29 17:35:50 connect() to 192.42.116.16:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:35:50 connect() to 217.16.185.175:8333 failed after select(): Connection refused (111)\r\n    2017-10-29 17:36:00 UpdateTip: new best=00000000000000000039cbb36466e124d82478a80a85d65ca36f0fd40064a993 height=492222 version=0x20000000 log2_work=87.373749 tx=266601379 date='2017-10-29 16:03:24' progress=0.999935 cache=99.2MiB(744167txo) warning='1 of last 100 blocks have unexpected version'\r\n    2017-10-29 17:36:11 UpdateTip: new best=00000000000000000032f3507d2598dda323087d1a3ea128f0b8b4912851b096 height=492223 version=0x20000000 log2_work=87.373794 tx=266603427 date='2017-10-29 16:04:26' progress=0.999936 cache=100.1MiB(751940txo)\r\n    2017-10-29 17:36:11 receive version message: /Satoshi:0.15.0.1/: version 70015, blocks=492234, us=<me>:27617, peer=70\r\n    2017-10-29 17:36:31 Pre-allocating up to position 0xc00000 in rev01008.dat\r\n    2017-10-29 17:36:31 UpdateTip: new best=0000000000000000003277b639e56dffe2b4e60d18aeedb1fe8b7e4256b2a526 height=492224 version=0x20000000 log2_work=87.373839 tx=266605826 date='2017-10-29 16:07:26' progress=0.999938 cache=100.6MiB(756143txo)\r\n    2017-10-29 17:36:43 connect() to [2001:0:9d38:6ab8:1810:10a5:a051:8a63]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:36:45 UpdateTip: new best=00000000000000000083ebf6203ebab0082124b89e4be4eeaf1d05882758ce5e height=492225 version=0x20000000 log2_work=87.373884 tx=266607828 date='2017-10-29 16:10:00' progress=0.999939 cache=101.3MiB(761279txo)\r\n    2017-10-29 17:36:50 UpdateTip: new best=000000000000000000bcc54ba6076238c9530fcc28c238d37ff8de13809c96fc height=492226 version=0x20000000 log2_work=87.373929 tx=266610888 date='2017-10-29 16:36:27' progress=0.999958 cache=101.7MiB(765107txo)\r\n    2017-10-29 17:36:57 UpdateTip: new best=0000000000000000006f70ce5e670cb2eb81273a0084967ab3908dfa1f9d3b4b height=492227 version=0x20000000 log2_work=87.373974 tx=266613180 date='2017-10-29 16:44:11' progress=0.999963 cache=102.3MiB(769473txo)\r\n    2017-10-29 17:37:05 UpdateTip: new best=000000000000000000654c6a0ac1fd849176bfe255fc6798f1b31647b0058e15 height=492228 version=0x20000000 log2_work=87.374018 tx=266615764 date='2017-10-29 16:48:42' progress=0.999966 cache=103.1MiB(776461txo)\r\n    2017-10-29 17:37:11 UpdateTip: new best=000000000000000000212978b06e687f8b3a18d952bf049bbad4e08f31f6067f height=492229 version=0x20000000 log2_work=87.374063 tx=266618250 date='2017-10-29 16:51:42' progress=0.999968 cache=103.7MiB(781118txo)\r\n    2017-10-29 17:37:18 UpdateTip: new best=000000000000000000394c6ed382de4b1ca6f1925c5c3aa1454356aec8f9bf99 height=492230 version=0x20000000 log2_work=87.374108 tx=266620126 date='2017-10-29 16:56:29' progress=0.999972 cache=104.1MiB(784164txo)\r\n    2017-10-29 17:37:19 Pre-allocating up to position 0xd00000 in rev01008.dat\r\n    2017-10-29 17:37:19 UpdateTip: new best=000000000000000000610ae3e70726f9dd2026f414a1327cb20f66b8b8ead02c height=492231 version=0x20000000 log2_work=87.374153 tx=266622135 date='2017-10-29 17:04:46' progress=0.999977 cache=104.3MiB(785998txo)\r\n    2017-10-29 17:37:24 UpdateTip: new best=0000000000000000002d7e28f24480fbcecdad62d7f69e2822fcc162ca48e27f height=492232 version=0x20000000 log2_work=87.374198 tx=266624967 date='2017-10-29 17:06:27' progress=0.999978 cache=104.8MiB(789835txo)\r\n    2017-10-29 17:37:25 UpdateTip: new best=000000000000000000a4c6aa4eac92080ce9e8ea94c41c116218477e0fece617 height=492233 version=0x20000000 log2_work=87.374243 tx=266629170 date='2017-10-29 17:07:45' progress=0.999979 cache=104.9MiB(790754txo)\r\n    2017-10-29 17:37:27 UpdateTip: new best=0000000000000000004823ba5cd79517717ab8f9c190c03cb702e9e3432fd81d height=492234 version=0x20000000 log2_work=87.374288 tx=266632276 date='2017-10-29 17:31:59' progress=0.999996 cache=105.4MiB(795421txo)\r\n    2017-10-29 17:37:51 UpdateTip: new best=0000000000000000005e6dd53b92fecd07db6f5668996b95f4d6e41598700ce4 height=492235 version=0x20000000 log2_work=87.374333 tx=266634727 date='2017-10-29 17:36:47' progress=0.999999 cache=106.0MiB(799924txo)\r\n    2017-10-29 17:41:18 connect() to [2001:41d0:1:8135::1]:8333 failed: Network is unreachable (101)\r\n    2017-10-29 17:42:54 Corruption: block checksum mismatch\r\n    2017-10-29 17:42:54 *** System error while flushing: Database corrupted\r\n    2017-10-29 17:43:24 connect() to [2001:0:9d38:6ab8:3018:8f0:26e4:7c97]:8333 failed: Network is unreachable (101)\r\n\r\n    2017-10-29 17:45:26 GUI: QXcbConnection: XCB error: 3 (BadWindow), sequence: 17984, resource id: 11739945, major code: 40 (TranslateCoords), minor code: 0\r\n    2017-10-29 17:45:26 scheduler thread interrupt\r\n    2017-10-29 17:45:26 msghand thread exit\r\n    2017-10-29 17:45:26 opencon thread exit\r\n    2017-10-29 17:45:26 addcon thread exit\r\n    2017-10-29 17:45:26 Shutdown: In progress...\r\n    2017-10-29 17:45:26 net thread exit\r\n    2017-10-29 17:45:30 Dumped mempool: 0.008012s to copy, 0.690163s to dump\r\n    2017-10-29 17:45:30 Corruption: block checksum mismatch\r\n    2017-10-29 17:45:30 *** System error while flushing: Database corrupted\r\n    2017-10-29 17:46:21 Corruption: block checksum mismatch\r\n    2017-10-29 17:46:21 *** System error while flushing: Database corrupted\r\n    2017-10-29 17:46:27 GUI: QXcbConnection: XCB error: 3 (BadWindow), sequence: 18529, resource id: 11745836, major code: 40 (TranslateCoords), minor code: 0\r\n    2017-10-29 17:46:27 Shutdown: done\r\n\r\nfsck on the btrfs system:\r\n\r\n    10:48:29 chris@chris:~/.bitcoin$ mount | grep chainst\r\n    /home/chris/.bitcoin/chainstate.btrfs on /home/chris/.bitcoin/chainstate type btrfs (rw,relatime,space_cache,subvolid=5,subvol=/)\r\n    10:48:49 chris@chris:~/.bitcoin$ sudo umount ~/.bitcoin/chainstate\r\n    [sudo] password for chris: \r\n    10:52:53 chris@chris:~/.bitcoin$ btrfsck --readonly chainstate.btrfs\r\n    Checking filesystem on chainstate.btrfs\r\n    UUID: 24eb317a-d18d-4df4-8cac-a6e0b1e1105c\r\n    checking extents\r\n    checking free space cache\r\n    checking fs roots\r\n    checking csums\r\n    checking root refs\r\n    found 2982662144 bytes used err is 0\r\n    total csum bytes: 2906980\r\n    total tree bytes: 5324800\r\n    total fs tree bytes: 999424\r\n    total extent tree bytes: 196608\r\n    btree space waste bytes: 1492325\r\n    file data blocks allocated: 2977337344\r\n     referenced 2977247232\r\n    10:52:59 chris@chris:~/.bitcoin$ btrfsck --readonly --check-data-csum chainstate.btrfs\r\n    Checking filesystem on chainstate.btrfs\r\n    UUID: 24eb317a-d18d-4df4-8cac-a6e0b1e1105c\r\n    checking extents\r\n    checking free space cache\r\n    checking fs roots\r\n    checking csums\r\n    checking root refs\r\n    found 2982662144 bytes used err is 0\r\n    total csum bytes: 2906980\r\n    total tree bytes: 5324800\r\n    total fs tree bytes: 999424\r\n    total extent tree bytes: 196608\r\n    btree space waste bytes: 1492325\r\n    file data blocks allocated: 2977337344\r\n     referenced 2977247232\r\n    10:54:48 chris@chris:~/.bitcoin$ sudo mount ~/.bitcoin/chainstate.btrfs ~/.bitcoin/chainstate\r\n    [sudo] password for chris: \r\n    11:05:10 chris@chris:~/.bitcoin$ df chainstate\r\n    Filesystem      Size  Used Avail Use% Mounted on\r\n    /dev/loop0      4.0G  2.8G  831M  78% /home/chris/.bitcoin/chainstate\r\n    11:05:15 chris@chris:~/.bitcoin$ \r\n\r\nWhich file(s) should I look in for any filesystem errors that may have been logged?\r\n\r\nDoes this clean fsck rule out the possibility of the corruption being caused by hard drive or filesystem errors?\r\n\r\nEdit: I see that the laptop suspended which I was sleeping, probably when a kitten jumped on the laptop lid at 6:26am, and resumed around the time of the crash:\r\n\r\n    ==> auth.log <==\r\n    Oct 29 06:26:50 chris systemd-logind[649]: Lid closed.\r\n    Oct 29 06:26:50 chris systemd-logind[649]: Suspending...\r\n    Oct 29 10:31:09 chris systemd-logind[649]: Lid opened.\r\n\r\nI'm currently 7 hours behind UTC, so 10:31 in the `auth.log` is 17:31 in Bitcoin's `debug.log`.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340282506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1315644280,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxNTY0NDI4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1315644280",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-29T18:17:00Z"
    },
    {
      "event": "subscribed",
      "id": 1315644281,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTU2NDQyODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1315644281",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-29T18:17:00Z"
    },
    {
      "event": "commented",
      "id": 340321491,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDMyMTQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340321491",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T01:33:57Z",
      "updated_at": "2017-10-30T01:33:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I restarted bitcoin-qt after the crash in my immediately previous comment and was able to sync the blockchain without error. I didn't see any more \"Corruption: block checksum mismatch\" messages, and everything seemed to go fine. That's without doing any kind of repair on the database which was earlier reported to be corrupted.\r\n\r\nSomething strange is going on.\r\n\r\nI tried running with `-forcecompactdb` - it took 26 minutes to compact the block index, and another 7 minutes to compact the chainstate, but again managed to compact both without any warnings or errors being reported:\r\n\r\n    2017-10-29 19:55:20 Starting database compaction of /home/chris/.bitcoin/blocks/index\r\n    2017-10-29 20:21:00 Finished database compaction of /home/chris/.bitcoin/blocks/index\r\n    2017-10-29 20:21:00 Using obfuscation key for /home/chris/.bitcoin/blocks/index: 0000000000000000\r\n    2017-10-29 20:21:04 LoadBlockIndexDB: last block file = 1008\r\n    2017-10-29 20:21:04 LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=103, size=104965446, heights=492143...492245, time=2017-10-29...2017-10-29)\r\n    2017-10-29 20:21:04 Checking all blk files are present...\r\n    2017-10-29 20:21:04 LoadBlockIndexDB: transaction index enabled\r\n    2017-10-29 20:21:04 Opening LevelDB in /home/chris/.bitcoin/chainstate\r\n    2017-10-29 20:21:05 Opened LevelDB successfully\r\n    2017-10-29 20:21:05 Starting database compaction of /home/chris/.bitcoin/chainstate\r\n    2017-10-29 20:28:35 Finished database compaction of /home/chris/.bitcoin/chainstate\r\n    2017-10-29 20:28:35 Using obfuscation key for /home/chris/.bitcoin/chainstate: 5d6a8c01975f3412\r\n\r\nI don't understand why I'm seeing this particular error over and over again but almost nobody else is seeing it.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340321491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340340542,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM0MDU0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340340542",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:23:59Z",
      "updated_at": "2017-10-30T04:23:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "I just got this `block checksum mismatch` error during the late stages of an initial sync on a raspi 3 running raspian stretch configured for pruning. As far as I can tell it happened out of the blue while it was left to sync - I'd only been checking on the sync progress a couple of times a day. I have a nearly identical setup that's working fine, but I used 0.14 for the initial sync on there (since upgraded to 0.15). Here's the relevant portion from debug.log.\r\n\r\n```\r\n2017-10-29 23:42:39 UpdateTip: new best=000000000000000002df85b73562d01bff8e13389ae99532093a6e0b019eb348 height=422372 version=0x20000000 log2_work=85.04258 tx=144960767 date='2016-07-26 18:11:29' progress=0.542795 cache=43.9MiB(255554txo)\r\n2017-10-29 23:42:39 socket send error Connection reset by peer (104)\r\n2017-10-29 23:42:40 receive version message: /Satoshi:0.12.1/: version 70012, blocks=492271, us=69.143.4.96:47562, peer=1217\r\n2017-10-29 23:42:40 Leaving block file 582: CBlockFileInfo(blocks=160, size=133623360, heights=422316...422733, time=2016-07-26...2016-07-29)\r\n2017-10-29 23:42:42 Pre-allocating up to position 0x1000000 in blk00583.dat\r\n2017-10-29 23:42:42 receive version message: /Satoshi:0.15.0.1/: version 70015, blocks=492271, us=[2601:141:201:79a0:2f44:dfe0:5692:275c]:38382, peer=1218\r\n2017-10-29 23:42:44 Pre-allocating up to position 0x2000000 in blk00583.dat\r\n2017-10-29 23:42:47 Prune: UnlinkPrunedFiles deleted blk/rev (00553)\r\n2017-10-29 23:42:48 Corruption: block checksum mismatch\r\n2017-10-29 23:42:48 *** System error while flushing: Database corrupted\r\n2017-10-29 23:42:48 Error: Error: A fatal internal error occurred, see debug.log for details\r\n2017-10-29 23:42:48 tor: Thread interrupt\r\n2017-10-29 23:42:48 torcontrol thread exit\r\n2017-10-29 23:42:48 addcon thread exit\r\n2017-10-29 23:42:48 opencon thread exit\r\n2017-10-29 23:42:48 net thread exit\r\n2017-10-29 23:42:48 msghand thread exit\r\n2017-10-29 23:42:48 scheduler thread interrupt\r\n2017-10-29 23:42:48 Shutdown: In progress...\r\n2017-10-29 23:42:50 UPNP_DeletePortMapping() returned: 0\r\n2017-10-29 23:42:50 upnp thread interrupt\r\n2017-10-29 23:42:52 Dumped mempool: 0.003313s to copy, 0.041511s to dump\r\n2017-10-29 23:42:52 Corruption: block checksum mismatch\r\n2017-10-29 23:42:52 *** System error while flushing: Database corrupted\r\n2017-10-29 23:42:52 Error: Error: A fatal internal error occurred, see debug.log for details\r\n2017-10-29 23:42:52 Corruption: block checksum mismatch\r\n2017-10-29 23:42:52 *** System error while flushing: Database corrupted\r\n2017-10-29 23:42:52 Error: Error: A fatal internal error occurred, see debug.log for details\r\n2017-10-29 23:42:53 Shutdown: done\r\n```",
      "user": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340340542",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340341527,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM0MTUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340341527",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:33:33Z",
      "updated_at": "2017-10-30T04:33:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the report @sangaman. It's reassuring to hear of others experiencing the same issue.\r\n\r\nWas the system which crashed running version 0.15 for the whole sync?\r\n\r\nI run a pruned 0.15 node and have never had it crash. I don't leave it running though, I run it every few days until it has synced and then shut it down again.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340341527",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1315959695,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxNTk1OTY5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1315959695",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:33:33Z"
    },
    {
      "event": "subscribed",
      "id": 1315959696,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTU5NTk2OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1315959696",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:33:33Z"
    },
    {
      "event": "commented",
      "id": 340342139,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM0MjEzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340342139",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:39:30Z",
      "updated_at": "2017-10-30T04:39:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "The system that crashed has been running 0.15 the entire time. The other system completed the initial sync on 0.14, has been running 0.15 for the past few weeks ~24/7, and has never crashed. Both systems were created from the same image and I followed the same steps for setting them up, so the only real difference there is 0.14 vs 0.15.",
      "user": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340342139",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340342509,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM0MjUwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340342509",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:42:58Z",
      "updated_at": "2017-10-30T04:42:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Does your Pi ever suspend itself?\r\n\r\nDo you see a 'gap' in the debug.log timestamps shortly before the crash? See for example in [this comment](https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340282506) where there's a 4 hour gap in the timestamps between the 5th and 6th lines of the debug.log I posted.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340342509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340343114,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM0MzExNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340343114",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T04:49:02Z",
      "updated_at": "2017-10-30T04:49:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hm I don't believe it suspends itself, it has been syncing continuously pretty much since I set it up. I scrolled through the past ~48 hours of debug.log and didn't see any gaps in the timestamps. My other pi is also running continuously as far as I can tell.",
      "user": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340343114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340591860,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDU5MTg2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340591860",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T21:34:55Z",
      "updated_at": "2017-10-30T21:34:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just an update - I have copied over the `.bitcoin` folder from my working raspi to the one that crashed yesterday (to avoid having to start the initial sync all over again). Everything running fine for the time being, but I'll update this thread if I encounter the issue again. I also have preserved the old `.bitcoin` folder in the broken state in case it may be useful for debugging the issue.",
      "user": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340591860",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 340611913,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDYxMTkxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340611913",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T23:09:25Z",
      "updated_at": "2017-10-30T23:09:56Z",
      "author_association": "MEMBER",
      "body": "@dooglus your memtest86 issues scare me. Have you tried to run linpack recently? I'd be curious to see how your CPU does under such conditions and see if it generates any errors.\r\n\r\n@sangaman Does your RPi have a heatsink? Does it overheat during sync?",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340611913",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1317758015,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxNzc1ODAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1317758015",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T23:09:25Z"
    },
    {
      "event": "subscribed",
      "id": 1317758016,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTc3NTgwMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1317758016",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T23:09:25Z"
    },
    {
      "event": "mentioned",
      "id": 1317758592,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxNzc1ODU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1317758592",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T23:09:56Z"
    },
    {
      "event": "subscribed",
      "id": 1317758593,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTc3NTg1OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1317758593",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T23:09:56Z"
    },
    {
      "event": "commented",
      "id": 340661440,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDY2MTQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340661440",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T05:07:17Z",
      "updated_at": "2017-10-31T05:07:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt I've never even heard of linpack.\r\n\r\nYou're talking about [this](https://en.wikipedia.org/wiki/LINPACK_benchmarks)?\r\n\r\n> The LINPACK Benchmarks are a measure of a system's floating point computing power. Introduced by Jack Dongarra, they measure how fast a computer solves a dense n by n system of linear equations Ax = b, which is a common task in engineering.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340661440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1318049919,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxODA0OTkxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1318049919",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T05:07:17Z"
    },
    {
      "event": "subscribed",
      "id": 1318049920,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTgwNDk5MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1318049920",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T05:07:17Z"
    },
    {
      "event": "commented",
      "id": 340742369,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDc0MjM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340742369",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T12:05:05Z",
      "updated_at": "2017-10-31T12:05:05Z",
      "author_association": "MEMBER",
      "body": "Yes, linpack is one of the more aggressive benchmarking tools. I'm curious to see if your CPU instantly overheats if you run it.\n\nOn October 31, 2017 1:07:30 AM EDT, Chris Moore <notifications@github.com> wrote:\n>@TheBlueMatt I've never even heard of linpack.\n>\n>You're talking about\n>[this](https://en.wikipedia.org/wiki/LINPACK_benchmarks)?\n>\n>> The LINPACK Benchmarks are a measure of a system's floating point\n>computing power. Introduced by Jack Dongarra, they measure how fast a\n>computer solves a dense n by n system of linear equations Ax = b, which\n>is a common task in engineering.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340661440\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340742369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1318598722,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxODU5ODcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1318598722",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T12:05:05Z"
    },
    {
      "event": "subscribed",
      "id": 1318598723,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTg1OTg3MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1318598723",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T12:05:05Z"
    },
    {
      "event": "commented",
      "id": 340765635,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDc2NTYzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340765635",
      "actor": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T13:42:10Z",
      "updated_at": "2017-10-31T13:42:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt I do have heatsinks on them, although I didn't ever check the temperatures on them during initial sync. They aren't overclocked or modded in any way.",
      "user": {
        "login": "sangaman",
        "id": 3440835,
        "node_id": "MDQ6VXNlcjM0NDA4MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3440835?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sangaman",
        "html_url": "https://github.com/sangaman",
        "followers_url": "https://api.github.com/users/sangaman/followers",
        "following_url": "https://api.github.com/users/sangaman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sangaman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sangaman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sangaman/subscriptions",
        "organizations_url": "https://api.github.com/users/sangaman/orgs",
        "repos_url": "https://api.github.com/users/sangaman/repos",
        "events_url": "https://api.github.com/users/sangaman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sangaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340765635",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1318762286,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxODc2MjI4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1318762286",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T13:42:10Z"
    },
    {
      "event": "subscribed",
      "id": 1318762287,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTg3NjIyODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1318762287",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T13:42:10Z"
    },
    {
      "event": "commented",
      "id": 344039980,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDAzOTk4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344039980",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-13T20:01:09Z",
      "updated_at": "2017-11-13T20:01:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Here's a possibly interesting data point:\r\n\r\nMy Bitcoin Cash node corrupted its chainstate yesterday.\r\n\r\nAs I understand it, Bitcoin Cash is based on a pre 0.15 release of Bitcoin Core (they call it 0.14.6).\r\n\r\nI built it from commit a46e63c2bb3d189beb846a8d34a0d33fd563fa7b.\r\n\r\nThis leads me to believe that the corruption I keep seeing in Core's chainstate db isn't new in 0.15 as I previously suspected.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344039980",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 344505509,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDUwNTUwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344505509",
      "actor": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-15T07:11:24Z",
      "updated_at": "2017-11-15T07:11:24Z",
      "author_association": "NONE",
      "body": "I had a checksum corruption error these days. The difference to this case was, that it happened after the syncing process was finished. See: https://github.com/bitcoin/bitcoin/issues/11627\r\nThe experts opinion was that it must have been a disk falior. That might be, but I have no other evidence that the disk used is wearing out. I do observe bugs in bitcoin core after having imported a private key from another wallet and after changing the wallet.dat file (causing a rescan). The data corruption problem begun after several rescans and ther is a chance that there is really a bug in bitcoin core which leads to data corruption. But so far no real proof. ",
      "user": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344505509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 344750911,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc1MDkxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344750911",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-15T22:31:00Z",
      "updated_at": "2017-11-15T22:31:00Z",
      "author_association": "MEMBER",
      "body": "@kollokollo I dont think the \"expert opinion\" is that it is disk failure, much, much more likely CPU is corrupting data in-flight (due to thermal issues/overclock/other instability) or the memory is corrupting data (also likely for similar reasons).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344750911",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1344019877,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM0NDAxOTg3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1344019877",
      "actor": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-15T22:31:00Z"
    },
    {
      "event": "subscribed",
      "id": 1344019878,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNDQwMTk4Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1344019878",
      "actor": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-15T22:31:00Z"
    },
    {
      "event": "commented",
      "id": 344841039,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg0MTAzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344841039",
      "actor": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T07:42:04Z",
      "updated_at": "2017-11-16T07:42:04Z",
      "author_association": "NONE",
      "body": "I am suprized to hear that a normal Laptop would miscalculate \"on the fly\". But I am not the expert here. \r\nI just want to help debugging the application.",
      "user": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344841039",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "labeled",
      "id": 1345024052,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEzNDUwMjQwNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1345024052",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T12:47:02Z",
      "label": {
        "name": "Data corruption",
        "color": "f7c6c7"
      }
    },
    {
      "event": "commented",
      "id": 344913168,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkxMzE2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344913168",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T12:49:41Z",
      "updated_at": "2017-11-16T12:53:03Z",
      "author_association": "MEMBER",
      "body": "> I am suprized to hear that a normal Laptop would miscalculate \"on the fly\"\r\n\r\nEspecially those! Laptops are much more likely to have bad thermal management than desktops or servers (less room than desktops, not designed for heavy loads like servers, generally no ECC on memory). Also the fans tend to get cluttered with dust much quicker.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344913168",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 344913822,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkxMzgyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344913822",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T12:52:24Z",
      "updated_at": "2017-11-16T12:52:24Z",
      "author_association": "MEMBER",
      "body": "BTW if anyone suffering leveldb corruption issues wants to help me inventarize the kind of corruptions that happen, please try #11674 to improve leveldb's error logging and send me the specific file that it labels as corrupted.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344913822",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 344918064,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkxODA2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344918064",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T13:10:44Z",
      "updated_at": "2017-11-16T13:10:44Z",
      "author_association": "MEMBER",
      "body": ">> I am suprized to hear that a normal Laptop would miscalculate \"on the fly\"\r\n>\r\n> Especially those! Laptops are much more likely to have bad thermal management\r\n\r\nMaybe I am thinking about this wrong, but the thing I don't understand is if the problem is cpu/memory hardware failures, how come we seem to be seeing more leveldb checksum errors than bitcoin validation errors (mismatched hashes, bad signatures)? Presumably leveldb checksums aren't particularly expensive to compute and the hardware is spending much more time checking bitcoin signatures and hashes and computing leveldb checksums, so shouldn't we expect more bitcoin errors and fewer leveldb errors?\r\n\r\nIs the answer that bitcoin signatures and hashes tend to be checked once and trusted forever, while leveldb checksums are read and checked more continuously? I would think overheating laptops and raspberry pis should never be able to get through an initial sync if they can't even compute leveldb checksums reliably.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344918064",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 344969027,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk2OTAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344969027",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T16:01:43Z",
      "updated_at": "2017-11-16T16:04:13Z",
      "author_association": "MEMBER",
      "body": "> Maybe I am thinking about this wrong, but the thing I don't understand is if the problem is cpu/memory hardware failures, how come we seem to be seeing more leveldb checksum errors than bitcoin validation errors (mismatched hashes, bad signatures)?\r\n\r\nWe do see validation errors and nodes getting stuck after failing to verify a valid block once in a while - but they don't terminate the process with an immediate error, so might be less likely to get reported!\r\n\r\n> Is the answer that bitcoin signatures and hashes tend to be checked once and trusted forever, while leveldb checksums are read and checked more continuously\r\n\r\nThat's a good point too. The database is continuously being read and written, so the chance of an error in the i/o there might be higher (I have certainly seen cases of corruption not caused by CPU overheating, but by faulty USB sticks and SD cards).\r\n\r\nBut all in all we just don't know for sure. The *kind* of glitches (e.g. bit toggling, zeroed blocks, duplicated sequences, file truncation) might reveal more about the underlying cause. Which is why I'm trying to collect corrupted leveldb files.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-344969027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 345012359,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTAxMjM1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345012359",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T18:21:13Z",
      "updated_at": "2017-11-16T18:21:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm running your patch and will attach corrupted db files when I next get a corruption.\r\n\r\nI have a bunch of old corrupt chainstate/ directories here. Is there a safe way of finding out which file in each is corrupted without corrupting my block index? I don't want to have to rescan everything again.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-345012359",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 345052036,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTA1MjAzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345052036",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-16T20:26:27Z",
      "updated_at": "2017-11-16T20:26:27Z",
      "author_association": "MEMBER",
      "body": "> I have a bunch of old corrupt chainstate/ directories here. Is there a safe way of finding out which file in each is corrupted without corrupting my block index? I don't want to have to rescan everything again.\r\n\r\nNot easily. The only way I see to do this safely would be to use https://github.com/laanwj/blockdb-troubleshoot, which I've updated with the patch\r\n```bash\r\ngit clone https://github.com/laanwj/blockdb-troubleshoot.git\r\ncd blockdb-troubleshoot\r\n./compile_leveldb.sh\r\n...\r\n./simplecheck.py /path/to/corrupted/datadir/\r\n...\r\nleveldb.LevelDBError: Corruption: block checksum mismatch: /.../blocks/index/000042.ldb\r\n```\r\nThis will do a linear scan as well as some probing over the databases (chainstate and block index), and probably trigger it, though I've seen issues that are only triggered by specific random access to records!\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-345052036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 345128588,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTEyODU4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345128588",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-17T02:39:19Z",
      "updated_at": "2017-11-17T02:39:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj Thanks, but that didn't show any errors. I commented out the check of `/blocks/index`, and switched in each of the old corrupt chainstate databases in turn:\r\n\r\n    $ ./simplecheck.py ~/.bitcoin # .bad\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 51256562 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad2\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 51932124 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad3\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 52049450 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad4\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 52591784 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad5\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 52497622 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-345128588",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1346396236,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM0NjM5NjIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1346396236",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-17T02:39:19Z"
    },
    {
      "event": "subscribed",
      "id": 1346396237,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNDYzOTYyMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1346396237",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-17T02:39:19Z"
    },
    {
      "event": "commented",
      "id": 345230058,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTIzMDA1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345230058",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-17T12:21:55Z",
      "updated_at": "2017-11-17T12:21:55Z",
      "author_association": "MEMBER",
      "body": "I pushed an update to make it more sensitive (need to re-invoke `./compile_leveldb.sh`), apparently python-leveldb was ignoring errors during iteration.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-345230058",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 345296015,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI5NjAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345296015",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-17T16:42:03Z",
      "updated_at": "2017-11-17T17:21:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "The update doesn't appear to have changed anything:\r\n\r\n    $ ./simplecheck.py ~/.bitcoin # .bad\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 51256562 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad2\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 51932124 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad3\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 52049450 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad4\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 52591784 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ ./simplecheck.py ~/.bitcoin # .bad5\r\n    * Checking chain state\r\n     * opening /home/chris/.bitcoin/chainstate\r\n     * 52497622 records checked\r\n     * probe 10000 times (trigger bloom filters)\r\n    $ \r\n\r\nHere's how things usually go down when my chainstate db gets corrupted:\r\n\r\n* the client crashes; I see in the log that it crashed at block N\r\n* I restart the client. It starts \"processing blocks on disk\" from block N-200 or so; it seems like it is re-importing all the blocks since the last time the chainstate db was flushed to disk or something\r\n* if I wait long enough, it gets back to block N and crashes again\r\n* if I stop the client before it gets back to block N, it exits successfully, and when I restart the client it continues processing from wherever it was when I stopped it; but eventually it gets back to block N and crashes.\r\n* sometimes it gets back to block N and is fine\r\n\r\nCould it be that my saved corrupted chainstate dbs don't exhibit their checksum errors until they get synced to their respective 'block N's?",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-345296015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 345440500,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ0MDUwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345440500",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-18T12:54:23Z",
      "updated_at": "2017-11-18T12:54:57Z",
      "author_association": "MEMBER",
      "body": "Hmm in that case it's really hard to trigger. Maybe like it is corrupted so that only a specific query, triggered by an input part of block N, will trigger the error, but that iteration jumps over the corrupted record. An external tool is not going to help then. If you really want to go down that rabbit hole you could log the last operation or last N leveldb operations in case of a crash.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-345440500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 366180881,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjE4MDg4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366180881",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-16T09:10:48Z",
      "updated_at": "2018-02-16T09:10:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's been a few months since I last saw this crash, but I just had it again. This time it happened on commit f0295becbf3ef1fb78095306408789253fe0c114 which is a few commits after `v0.16.0rc1`.\r\n\r\n    2018-02-16 07:26:36 UpdateTip: new best=00000000000000000018c333f109f9a0197817cb656bc9e27cd204d4dfb4fd5c height=509422 version=0x20000000 log2_work=88.136891 tx=299747962 date='2018-02-16 07:26:19' progress=1.000000 cache=48.3MiB(363411txo)\r\n    2018-02-16 07:31:41 connect() to [2607:fa18:3a01::50]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 07:35:51 connect() to [2001:0:4137:9e76:4a7:10c:b9b5:34c5]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 07:37:47 connect() to [2601:644:101:314b:2ccd:c6db:5fc7:4c4e]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 07:38:52 UpdateTip: new best=0000000000000000005ee50bf03d1cb2e1a61e1ffd4100a44161ff4738721cea height=509423 version=0x20000000 log2_work=88.136943 tx=299749241 date='2018-02-16 07:38:24' progress=1.000000 cache=48.9MiB(367635txo)\r\n    2018-02-16 07:45:35 connect() to 77.20.12.245:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 07:53:20 connect() to 104.223.98.17:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 07:55:50 connect() to 185.108.128.7:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 07:57:13 connect() to [2001:0:5ef5:79fd:3c38:bad8:a2dc:6e65]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 07:58:22 connect() to 85.187.245.15:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 08:04:49 connect() to 95.88.10.246:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 08:06:07 connect() to 73.156.44.208:8333 failed after select(): No route to host (113)\r\n    2018-02-16 08:18:33 Potential stale tip detected, will try using extra outbound peer (last tip update: 2381 seconds ago)\r\n    2018-02-16 08:18:34 connect() to [2001:0:9d38:6abd:2427:1651:4d79:9ece]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 08:18:40 New outbound peer connected: version: 70015, blocks=509423, peer=21\r\n    2018-02-16 08:19:19 connect() to [2001:0:5ef5:79fb:34e1:638:bf04:6a9e]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 08:20:19 UpdateTip: new best=00000000000000000022d76fe26eac6ec29c7073f03a69235b7e3f11c9558560 height=509424 version=0x20000000 log2_work=88.136995 tx=299751509 date='2018-02-16 08:20:09' progress=1.000000 cache=50.9MiB(384222txo)\r\n    2018-02-16 08:32:00 connect() to 185.213.152.164:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 08:32:22 connect() to 82.78.215.208:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 08:33:34 connect() to [2a02:1205:505e:4850:6c64:6198:993d:9a78]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 08:35:21 LevelDB read failure: Corruption: block checksum mismatch\r\n    2018-02-16 08:35:21 Corruption: block checksum mismatch\r\n    2018-02-16 08:36:45 connect() to [2001:0:4137:9e76:248b:55b:e0ca:efa]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 08:38:13 connect() to 178.251.111.106:8333 failed after select(): Connection refused (111)\r\n    2018-02-16 08:38:31 connect() to [2001:0:9d38:90d7:c38:fbff:aab4:fbbf]:8333 failed: Network is unreachable (101)\r\n    2018-02-16 08:55:15 socket sending timeout: 1201s\r\n    2018-02-16 08:55:18 socket sending timeout: 1201s\r\n    2018-02-16 08:55:18 socket sending timeout: 1201s\r\n    2018-02-16 08:55:18 socket sending timeout: 1201s\r\n    2018-02-16 08:55:19 socket sending timeout: 1201s\r\n    2018-02-16 08:55:20 socket sending timeout: 1201s\r\n    2018-02-16 08:55:21 socket sending timeout: 1201s\r\n    2018-02-16 08:55:21 socket sending timeout: 1201s\r\n\r\n    (gdb) thread apply all where\r\n\r\n    Thread 21 (Thread 0x7f73d3deb700 (LWP 15251)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f74456359f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007f744a2c604f in QEventDispatcherGlib::processEvents (this=0x7f73c80008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007f744a26f9ca in QEventLoop::exec (this=this@entry=0x7f73d3deacc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007f744a09d0f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007f744a0a1da8 in QThreadPrivate::start (arg=0x56427d04cc80) at thread/qthread_unix.cpp:368\r\n    #7  0x00007f744975f494 in start_thread (arg=0x7f73d3deb700) at pthread_create.c:333\r\n    #8  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 20 (Thread 0x7f73f0c42700 (LWP 15248)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f74456359f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007f744a2c604f in QEventDispatcherGlib::processEvents (this=0x7f73cc0008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007f744a26f9ca in QEventLoop::exec (this=this@entry=0x7f73f0c41cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007f744a09d0f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007f744a0a1da8 in QThreadPrivate::start (arg=0x56427c44bdc0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007f744975f494 in start_thread (arg=0x7f73f0c42700) at pthread_create.c:333\r\n    #8  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 19 (Thread 0x7f73f1493700 (LWP 15247)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007f744a0a2c6b in QWaitConditionPrivate::wait (time=18446744073709551615, this=0x7f73e3a09910) at thread/qwaitcondition_unix.cpp:143\r\n    #2  QWaitCondition::wait (this=this@entry=0x7f73e3a09a98, mutex=mutex@entry=0x7f73e3a09a90, time=time@entry=18446744073709551615)\r\n        at thread/qwaitcondition_unix.cpp:215\r\n    #3  0x00007f744a09bb33 in QSemaphore::acquire (this=this@entry=0x7f73f148a3b0, n=n@entry=1) at thread/qsemaphore.cpp:143\r\n    #4  0x00007f744a27c8cd in QMetaMethod::invoke (this=this@entry=0x7f73f148a618, object=object@entry=0x56427c348250, connectionType=Qt::BlockingQueuedConnection, \r\n        connectionType@entry=4048070304, returnValue=..., val0=..., val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at kernel/qmetaobject.cpp:2279\r\n    #5  0x00007f744a28258a in QMetaObject::invokeMethod (obj=0x56427c348250, member=0x56427b1eee20 \"message\", type=4048070304, ret=..., val0=..., val1=..., val2=..., \r\n        val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...) at kernel/qmetaobject.cpp:1489\r\n    #6  0x000056427a8ac33c in QMetaObject::invokeMethod (member=0x80 <error: Cannot access memory at address 0x80>, type=Qt::BlockingQueuedConnection, val0=..., \r\n        obj=<optimized out>, val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs.h:460\r\n    #7  ThreadSafeMessageBox (gui=0x56427c348250, message=\"Error reading from database, shutting down.\", caption=..., style=<optimized out>) at qt/bitcoingui.cpp:1168\r\n    #8  0x000056427a8b07e7 in boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> >::operator()<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::rrlist3<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int> > (f=<error reading variable>, this=<optimized out>, a=...)\r\n        at /usr/include/boost/bind/bind.hpp:453\r\n    #9  boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >::operator()<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&&) (a1=<error reading variable: Cannot access memory at address 0x88>, \r\n        a2=<error reading variable: Cannot access memory at address 0x9>, this=<optimized out>, a3=<optimized out>) at /usr/include/boost/bind/bind.hpp:1330\r\n    #10 boost::detail::function::function_obj_invoker3<boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::invoke (function_obj_ptr=..., \r\n        a0=<error reading variable: Cannot access memory at address 0x88>, a1=<error reading variable: Cannot access memory at address 0x9>, a2=1232490847)\r\n        at /usr/include/boost/function/function_template.hpp:138\r\n    #11 0x000056427aa1388e in boost::function3<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator() (a0=<error reading variable: Cannot access memory at address 0x88>, \r\n        a1=<error reading variable: Cannot access memory at address 0x9>, a2=1232490847, this=<optimized out>) at /usr/include/boost/function/function_template.hpp:770\r\n    #12 boost::signals2::detail::call_with_tuple_args<bool>::m_invoke<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, 0u, 1u, 2u, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, boost::signals2::detail::unsigned_meta_array<0u, 1u, 2u>, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, boost::disable_if<boost::is_void<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>::result_type>, void>::type*) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:98\r\n    #13 boost::signals2::detail::call_with_tuple_args<bool>::operator()<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&, 3ul>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, mpl_::size_t<3ul>) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:90\r\n    #14 boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) const (\r\n        this=<optimized out>, connectionBody=...) at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:133\r\n    #15 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >::dereference() const (this=0x7f73f148ab30) at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:110\r\n    #16 0x000056427aa12d08 in boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) (f=...) at /usr/include/boost/iterator/iterator_facade.hpp:549\r\n    #17 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, bool, boost::iterators::single_pass_traversal_tag, bool&, long, false, false>::operator*() const (\r\n        this=<optimized out>) at /usr/include/boost/iterator/iterator_facade.hpp:655\r\n    #18 boost::signals2::last_value<bool>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/last_value.hpp:48\r\n    #19 0x000056427aa129a0 in boost::signals2::detail::combiner_invoker<bool>::operator()<boost::signals2::last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::last_value<bool>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (combiner=..., this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\r\n    #20 boost::signals2::detail::signal_impl<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (\r\n        this=0x56427c062c50, args=<optimized out>, args=<optimized out>, args=<optimized out>) at /usr/include/boost/signals2/detail/signal_template.hpp:242\r\n    #21 0x000056427aa121ad in boost::signals2::signal<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (args=..., args=..., this=<optimized out>, args=...) at /usr/include/boost/signals2/detail/signal_template.hpp:723\r\n    #22 CCoinsViewErrorCatcher::GetCoin (this=<optimized out>, outpoint=..., coin=...) at init.cpp:143\r\n    #23 0x000056427ad14a92 in CCoinsViewCache::FetchCoin (this=0x7f73fd0cfaf0, outpoint=...) at coins.cpp:45\r\n    #24 0x000056427ad14b79 in CCoinsViewCache::GetCoin (this=0x7f73e3a0993c, outpoint=..., coin=...) at coins.cpp:58\r\n    #25 0x000056427ab681b4 in CCoinsViewMemPool::GetCoin (this=0x7f73f148b3d0, outpoint=..., coin=...) at txmempool.cpp:904\r\n    #26 0x000056427ad14a92 in CCoinsViewCache::FetchCoin (this=0x7f73f148c060, outpoint=...) at coins.cpp:45\r\n    #27 0x000056427ad15133 in CCoinsViewCache::HaveCoin (this=0x7f73e3a0993c, outpoint=...) at coins.cpp:126\r\n    #28 0x000056427abaf7c6 in AcceptToMemoryPoolWorker (chainparams=..., pool=..., state=..., ptx=..., pfMissingInputs=<optimized out>, nAcceptTime=<optimized out>, \r\n        plTxnReplaced=0x0, bypass_limits=95, nAbsurdFee=@0x56427b5c22e1: 257, coins_to_uncache=...) at validation.cpp:643\r\n    #29 0x000056427ab7dd07 in AcceptToMemoryPoolWithTime (chainparams=..., pool=..., state=..., \r\n        tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, pfMissingInputs=0x7f73e3a09900, nAcceptTime=0, plTxnReplaced=0x7f73f148f208, \r\n        bypass_limits=<optimized out>, nAbsurdFee=0) at validation.cpp:985\r\n    #30 0x000056427ab7d5eb in AcceptToMemoryPool (pool=..., state=..., tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, \r\n        pfMissingInputs=0x7f73e3a09900, plTxnReplaced=0x7f73f148f208, bypass_limits=false, nAbsurdFee=<optimized out>) at validation.cpp:1001\r\n    #31 0x000056427aa6cbc4 in ProcessMessage (pfrom=<optimized out>, strCommand=\"tx\", vRecv=..., nTimeReceived=<optimized out>, chainparams=..., \r\n        connman=<optimized out>, interruptMsgProc=...) at net_processing.cpp:2141\r\n    #32 0x000056427aa64044 in PeerLogicValidation::ProcessMessages (this=<optimized out>, pfrom=0x7f73dc1a3680, interruptMsgProc=...) at net_processing.cpp:2966\r\n    #33 0x000056427aa8a537 in non-virtual thunk to PeerLogicValidation::ProcessMessages(CNode*, std::atomic<bool>&) () at net_processing.cpp:2891\r\n    #34 0x000056427aa4031e in CConnman::ThreadMessageHandler (this=<optimized out>) at net.cpp:2018\r\n    #35 0x000056427aa59c6a in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #36 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #37 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #38 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #39 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #40 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #41 0x000056427aa0bced in std::function<void ()>::operator()() const (this=0x7f73f1492d00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #42 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:317\r\n    #43 0x000056427aa59e2d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #44 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #45 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #46 0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #47 0x00007f744975f494 in start_thread (arg=0x7f73f1493700) at pthread_create.c:333\r\n    #48 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 18 (Thread 0x7f73f1ce4700 (LWP 15246)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007f7449761c06 in __GI___pthread_mutex_lock (mutex=0x56427b5c22b8 <cs_main>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056427aa5b935 in __gthread_mutex_lock (__mutex=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:748\r\n    #3  __gthread_recursive_mutex_lock (__mutex=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:810\r\n    #4  std::recursive_mutex::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:105\r\n    #5  AnnotatedMixin<std::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #6  std::unique_lock<CCriticalSection>::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/bits/std_mutex.h:267\r\n    #7  CCriticalBlock::Enter (nLine=573, this=<optimized out>, pszName=<optimized out>, pszFile=<optimized out>) at ./sync.h:128\r\n    #8  CCriticalBlock::CCriticalBlock (nLine=573, fTry=false, this=<optimized out>, mutexIn=..., pszName=<optimized out>, pszFile=<optimized out>) at ./sync.h:149\r\n    #9  PeerLogicValidation::InitializeNode (this=0x7f741c47edb0, pnode=0x7f73dc346340) at net_processing.cpp:573\r\n    #10 0x000056427aa5cf57 in non-virtual thunk to PeerLogicValidation::InitializeNode(CNode*) () at net_processing.cpp:568\r\n    #11 0x000056427aa3ce96 in CConnman::OpenNetworkConnection (this=0x7f741c571a60, addrConnect=..., fCountFailure=<optimized out>, grantOutbound=<optimized out>, \r\n        pszDest=0x0, fOneShot=<optimized out>, fFeeler=<optimized out>, manual_connection=92) at net.cpp:1988\r\n    #12 0x000056427aa3e431 in CConnman::ThreadOpenConnections (this=<optimized out>, connect=...) at net.cpp:1871\r\n    #13 0x000056427aa5a037 in std::__invoke_impl<void, void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (\r\n        __f=<optimized out>, __t=<optimized out>, __args=<error reading variable: Cannot access memory at address 0x8>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #14 0x000056427aa59ebe in std::__invoke<void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__fn=\r\n        @0x56427b5c22b8: (void (CConnman::*)(CConnman * const, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >)) 0x100000002, this adjustment 4294982543, __args=..., __args=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #15 std::_Mem_fn_base<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), true>::operator()<CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__args=..., __args=..., \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #16 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=0x56427b5c22b8 <cs_main>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #17 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::operator()<, void>() (\r\n        this=0x56427b5c22b8 <cs_main>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #18 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #19 0x000056427aa0bced in std::function<void ()>::operator()() const (this=0x7f73f1ce3d00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #20 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:317\r\n    #21 0x000056427aa59e2d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #22 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #23 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #24 0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #25 0x00007f744975f494 in start_thread (arg=0x7f73f1ce4700) at pthread_create.c:333\r\n    #26 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 17 (Thread 0x7f73f2535700 (LWP 15245)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056427ad44b7e in __gthread_cond_timedwait (__cond=<optimized out>, __mutex=<optimized out>, __abs_timeout=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:871\r\n    #2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:166\r\n    #3  std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:106\r\n    #4  std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, \r\n        __lock=..., __atime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:129\r\n    #5  std::condition_variable::wait_for<long, std::ratio<1l, 1000l>, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::duration<long, std::ratio<1l, 1000l> > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, __lock=..., __rtime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:145\r\n    #6  CThreadInterrupt::sleep_for (this=<optimized out>, rel_time=...) at threadinterrupt.cpp:30\r\n    #7  0x000056427ad44c0a in CThreadInterrupt::sleep_for (this=0x7f741c5c1ecc, rel_time=...) at threadinterrupt.cpp:35\r\n    #8  0x000056427aa4006c in CConnman::ThreadOpenAddedConnections (this=<optimized out>) at net.cpp:1950\r\n    #9  0x000056427aa59c6a in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #10 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #11 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #12 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #13 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #14 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #15 0x000056427aa0bced in std::function<void ()>::operator()() const (this=0x7f73f2534d00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #16 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:317\r\n    #17 0x000056427aa59e2d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #18 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #19 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #20 0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #21 0x00007f744975f494 in start_thread (arg=0x7f73f2535700) at pthread_create.c:333\r\n    #22 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 16 (Thread 0x7f73f467e700 (LWP 15243)):\r\n    #0  0x00007f7447d003f3 in select () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x000056427aa36611 in CConnman::ThreadSocketHandler (this=<optimized out>) at net.cpp:1279\r\n    #2  0x000056427aa59c6a in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #3  std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #4  std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #5  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #6  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #7  std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #8  0x000056427aa0bced in std::function<void ()>::operator()() const (this=0x7f73f467dd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #9  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:317\r\n    #10 0x000056427aa59e2d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #11 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #12 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #13 0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #14 0x00007f744975f494 in start_thread (arg=0x7f73f467e700) at pthread_create.c:333\r\n    #15 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 15 (Thread 0x7f73f35d7700 (LWP 15239)):\r\n    #0  0x00007f7447d080f3 in epoll_wait () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f744887fd98 in ?? () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #2  0x00007f744886a07a in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #3  0x000056427ab44bd0 in TorControlThread () at torcontrol.cpp:740\r\n    #4  0x000056427ab45a7b in TraceThread<void (*)()> (name=<optimized out>, func=0x56427ab44b20 <TorControlThread()>) at ./util.h:317\r\n    #5  0x000056427ab4d0d5 in boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> >::operator()<void (*)(char const*, void (*)()), boost::_bi::list0> (this=<optimized out>, f=<optimized out>, a=...) at /usr/include/boost/bind/bind.hpp:319\r\n    #6  boost::_bi::bind_t<void, void (*)(char const*, void (*)()), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> > >::operator() (\r\n        this=<optimized out>) at /usr/include/boost/bind/bind.hpp:1294\r\n    #7  boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, void (*)()), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> > > >::run (this=0xfffffffffffffffc) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #8  0x00007f744b303116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #9  0x00007f744975f494 in start_thread (arg=0x7f73f35d7700) at pthread_create.c:333\r\n    #10 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 14 (Thread 0x7f740a169700 (LWP 15223)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056427ad9f98b in leveldb::(anonymous namespace)::PosixEnv::BGThread (this=<optimized out>) at leveldb/util/env_posix.cc:641\r\n    #2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=<optimized out>) at leveldb/util/env_posix.cc:556\r\n    #3  0x00007f744975f494 in start_thread (arg=0x7f740a169700) at pthread_create.c:333\r\n    #4  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 13 (Thread 0x7f7419ebb700 (LWP 15221)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007f744858d50c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056427ac2449a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:128\r\n    #3  0x000056427ac1e28a in HTTPWorkQueueRun (queue=0x7f741c047a3c) at httpserver.cpp:362\r\n    #4  0x000056427ac257b8 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007f744975f494 in start_thread (arg=0x7f7419ebb700) at pthread_create.c:333\r\n    #9  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 12 (Thread 0x7f741a70c700 (LWP 15220)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007f744858d50c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056427ac2449a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:128\r\n    #3  0x000056427ac1e28a in HTTPWorkQueueRun (queue=0x7f741c047a3c) at httpserver.cpp:362\r\n    #4  0x000056427ac257b8 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007f744975f494 in start_thread (arg=0x7f741a70c700) at pthread_create.c:333\r\n    #9  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 11 (Thread 0x7f741af5d700 (LWP 15219)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007f744858d50c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056427ac2449a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:128\r\n    #3  0x000056427ac1e28a in HTTPWorkQueueRun (queue=0x7f741c047a3c) at httpserver.cpp:362\r\n    #4  0x000056427ac257b8 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007f744975f494 in start_thread (arg=0x7f741af5d700) at pthread_create.c:333\r\n    #9  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 10 (Thread 0x7f741b7ae700 (LWP 15218)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007f744858d50c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056427ac2449a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:128\r\n    #3  0x000056427ac1e28a in HTTPWorkQueueRun (queue=0x7f741c047a3c) at httpserver.cpp:362\r\n    #4  0x000056427ac257b8 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007f744975f494 in start_thread (arg=0x7f741b7ae700) at pthread_create.c:333\r\n    #9  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 9 (Thread 0x7f741bfff700 (LWP 15217)):\r\n    #0  0x00007f7447d080f3 in epoll_wait () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f744887fd98 in ?? () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #2  0x00007f744886a07a in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #3  0x000056427ac1d7ff in ThreadHTTP (base=0x7f741c047190, http=<optimized out>) at httpserver.cpp:314\r\n    #4  0x000056427ac251cd in std::__invoke_impl<bool, bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(std::__invoke_other, bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:210\r\n    #5  std::__invoke<bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__fn=<optimized out>, \r\n        __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #6  std::reference_wrapper<bool (*)(event_base*, evhttp*)>::operator()<event_base*, evhttp*>(event_base*&&, evhttp*&&) const (__args=<optimized out>, \r\n        this=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:465\r\n    #7  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=0x7f7447d080f3 <epoll_wait+51>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #8  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=0x7f7447d080f3 <epoll_wait+51>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #9  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool>::operator()() const (this=0x7f741bffecd0)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1325\r\n    #10 0x000056427ac2510f in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1716\r\n    #11 0x000056427ab192ba in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (\r\n        this=0x7f741c047420) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #12 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x7f741c047c80, __f=0x7f741c047420, __did_set=0x7f741bffec8f) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:533\r\n    #13 0x000056427ab19356 in std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #14 std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__fn=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #15 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:602\r\n    #16 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #17 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::__invoke() () at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #18 0x00007f7449766739 in __pthread_once_slow (once_control=0x7f741c047c98, init_routine=0x7f7448592120 <__once_proxy>) at pthread_once.c:116\r\n    #19 0x000056427ab19239 in __gthread_once (__func=0x7f741c047420, __once=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:699\r\n    #20 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __once=..., __f=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:614\r\n    #21 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (this=0x7f741c047c80, __res=..., __ignore_failure=false) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:392\r\n    #22 0x000056427ac24cb1 in std::__future_base::_Task_state<bool (*)(event_base*, evhttp*), std::allocator<int>, bool (event_base*, evhttp*)>::_M_run(event_base*&&, evhttp*&&) (this=0x17, __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1409\r\n    #23 0x000056427ac2573b in std::packaged_task<bool (event_base*, evhttp*)>::operator()(event_base*, evhttp*) (\r\n        __args=<error reading variable: Cannot access memory at address 0x20>, __args=<error reading variable: Cannot access memory at address 0x20>, \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1553\r\n    #24 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #25 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #26 std::thread::_State_impl<std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)> >::_M_run() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #27 0x00007f7448592e6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #28 0x00007f744975f494 in start_thread (arg=0x7f741bfff700) at pthread_create.c:333\r\n    #29 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 8 (Thread 0x7f7420925700 (LWP 15216)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007f7449761c06 in __GI___pthread_mutex_lock (mutex=0x56427b5c22b8 <cs_main>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056427aa60e88 in __gthread_mutex_lock (__mutex=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:748\r\n    #3  __gthread_recursive_mutex_lock (__mutex=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:810\r\n    #4  std::recursive_mutex::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:105\r\n    #5  AnnotatedMixin<std::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #6  std::unique_lock<CCriticalSection>::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/bits/std_mutex.h:267\r\n    #7  CCriticalBlock::Enter (nLine=3128, this=<optimized out>, pszName=<optimized out>, pszFile=<optimized out>) at ./sync.h:128\r\n    #8  CCriticalBlock::CCriticalBlock (nLine=3128, fTry=false, this=<optimized out>, mutexIn=..., pszName=<optimized out>, pszFile=<optimized out>) at ./sync.h:149\r\n    #9  PeerLogicValidation::CheckForStaleTipAndEvictPeers (this=0x7f741c47edb0, consensusParams=...) at net_processing.cpp:3128\r\n    #10 0x000056427aab4fb1 in std::__invoke_impl<void, void (PeerLogicValidation::* const&)(Consensus::Params const&), PeerLogicValidation*&, Consensus::Params&> (\r\n        __args=..., __f=<optimized out>, __t=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #11 std::__invoke<void (PeerLogicValidation::* const&)(Consensus::Params const&), PeerLogicValidation*&, Consensus::Params&> (__args=<optimized out>, \r\n        __fn=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #12 std::_Mem_fn_base<void (PeerLogicValidation::*)(Consensus::Params const&), true>::operator()<PeerLogicValidation*&, Consensus::Params&> (\r\n        __args=<optimized out>, this=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #13 std::_Bind<std::_Mem_fn<void (PeerLogicValidation::*)(Consensus::Params const&)> (PeerLogicValidation*, Consensus::Params)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #14 std::_Bind<std::_Mem_fn<void (PeerLogicValidation::*)(Consensus::Params const&)> (PeerLogicValidation*, Consensus::Params)>::operator()<, void>() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #15 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (PeerLogicValidation::*)(Consensus::Params const&)> (PeerLogicValidation*, Consensus::Params)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #16 0x000056427ad31b17 in std::function<void ()>::operator()() const (this=0x7f7420924838)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #17 Repeat(CScheduler*, std::function<void ()>, long) (s=0x56427b5c9b30 <scheduler>, f=..., deltaMilliSeconds=45000) at scheduler.cpp:122\r\n    #18 0x000056427ad32d5a in boost::_bi::list3<boost::_bi::value<CScheduler*>, boost::_bi::value<std::function<void ()> >, boost::_bi::value<long> >::operator()<void (*)(CScheduler*, std::function<void ()>, long), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(CScheduler*, std::function<void ()>, long), boost::_bi::list0&, int) (this=0x7f7414001688, f=<optimized out>, a=...) at /usr/include/boost/bind/bind.hpp:398\r\n    #19 0x000056427ad32bb5 in boost::_bi::bind_t<void, void (*)(CScheduler*, std::function<void ()>, long), boost::_bi::list3<boost::_bi::value<CScheduler*>, boost::_bi::value<std::function<void ()> >, boost::_bi::value<long> > >::operator()() (this=0x80) at /usr/include/boost/bind/bind.hpp:1294\r\n    #20 std::_Function_handler<void (), boost::_bi::bind_t<void, void (*)(CScheduler*, std::function<void ()>, long), boost::_bi::list3<boost::_bi::value<CScheduler*>, boost::_bi::value<std::function<void ()> >, boost::_bi::value<long> > > >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #21 0x000056427ad311a8 in std::function<void ()>::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #22 CScheduler::serviceQueue (this=<optimized out>) at scheduler.cpp:83\r\n    #23 0x000056427aa1d3da in boost::_mfi::mf0<void, CScheduler>::operator() (p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n    #24 boost::_bi::list1<boost::_bi::value<CScheduler*> >::operator()<boost::_mfi::mf0<void, CScheduler>, boost::_bi::list0> (this=<optimized out>, f=..., a=...)\r\n        at /usr/include/boost/bind/bind.hpp:259\r\n    #25 boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > >::operator() (this=<optimized out>)\r\n        at /usr/include/boost/bind/bind.hpp:1294\r\n    #26 std::_Function_handler<void (), boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #27 0x000056427aa0bced in std::function<void ()>::operator()() const (this=0x7f7420924cb8)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #28 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:317\r\n    #29 0x000056427aa1d956 in boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > >::operator()<void (*)(char const*, std::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, std::function<void ()>), boost::_bi::list0&, int) (this=0x7f741c0430e0, \r\n        f=<optimized out>, a=...) at /usr/include/boost/bind/bind.hpp:319\r\n    #30 0x000056427aa1d8df in boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > >::operator()() (this=<optimized out>) at /usr/include/boost/bind/bind.hpp:1294\r\n    #31 boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > > >::run() (this=<optimized out>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #32 0x00007f744b303116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #33 0x00007f744975f494 in start_thread (arg=0x7f7420925700) at pthread_create.c:333\r\n    #34 0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 7 (Thread 0x7f7421176700 (LWP 15215)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056427aa0ffab in boost::condition_variable::wait (this=<optimized out>, m=...) at /usr/include/boost/thread/pthread/condition_variable.hpp:77\r\n    #2  0x000056427abc5b65 in CCheckQueue<CScriptCheck>::Loop (this=<optimized out>, fMaster=<optimized out>) at ./checkqueue.h:99\r\n    #3  0x000056427ab825c8 in CCheckQueue<CScriptCheck>::Thread (this=0x56427b5ccadc <scriptcheckqueue+84>) at ./checkqueue.h:136\r\n    #4  ThreadScriptCheck () at validation.cpp:1680\r\n    #5  0x000056427aa1cfb4 in boost::detail::thread_data<void (*)()>::run (this=0x56427b5ccadc <scriptcheckqueue+84>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #6  0x00007f744b303116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #7  0x00007f744975f494 in start_thread (arg=0x7f7421176700) at pthread_create.c:333\r\n    #8  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 6 (Thread 0x7f7423fff700 (LWP 15214)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f74456359f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007f744a2c604f in QEventDispatcherGlib::processEvents (this=0x7f741c0008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007f744a26f9ca in QEventLoop::exec (this=this@entry=0x7f7423ffecc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007f744a09d0f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007f744a0a1da8 in QThreadPrivate::start (arg=0x56427c486540) at thread/qthread_unix.cpp:368\r\n    #7  0x00007f744975f494 in start_thread (arg=0x7f7423fff700) at pthread_create.c:333\r\n    #8  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 5 (Thread 0x7f7430bec700 (LWP 15213)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f74456359f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007f744a2c604f in QEventDispatcherGlib::processEvents (this=0x7f74280008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007f744a26f9ca in QEventLoop::exec (this=this@entry=0x7f7430bebc90, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007f744a09d0f3 in QThread::exec (this=this@entry=0x7f744a54cd60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread.cpp:507\r\n    #6  0x00007f744a4d76d5 in QDBusConnectionManager::run (this=0x7f744a54cd60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at qdbusconnection.cpp:178\r\n    #7  0x00007f744a0a1da8 in QThreadPrivate::start (arg=0x7f744a54cd60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread_unix.cpp:368\r\n    #8  0x00007f744975f494 in start_thread (arg=0x7f7430bec700) at pthread_create.c:333\r\n    #9  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 4 (Thread 0x7f7432dc0700 (LWP 15212)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f74456359f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007f7445635d82 in g_main_loop_run () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007f74354fd656 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\r\n    #4  0x00007f744565d3d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007f744975f494 in start_thread (arg=0x7f7432dc0700) at pthread_create.c:333\r\n    #6  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 3 (Thread 0x7f7433611700 (LWP 15211)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f74456359f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007f7445635b51 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #4  0x00007f744565d3d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007f744975f494 in start_thread (arg=0x7f7433611700) at pthread_create.c:333\r\n    #6  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 2 (Thread 0x7f743d3de700 (LWP 15210)):\r\n    #0  0x00007f7447cfe6ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007f7443502150 in ?? () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #2  0x00007f7443503ee9 in xcb_wait_for_event () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #3  0x00007f743fb3fb69 in QXcbEventReader::run (this=0x56427c1a0220) at qxcbconnection.cpp:1343\r\n    #4  0x00007f744a0a1da8 in QThreadPrivate::start (arg=0x56427c1a0220) at thread/qthread_unix.cpp:368\r\n    #5  0x00007f744975f494 in start_thread (arg=0x7f743d3de700) at pthread_create.c:333\r\n    #6  0x00007f7447d07aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 1 (Thread 0x7f744bea6900 (LWP 15209)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007f7449761c06 in __GI___pthread_mutex_lock (mutex=0x56427b5cc7b8 <mempool+56>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056427a8b7bf4 in __gthread_mutex_lock (__mutex=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:748\r\n    #3  __gthread_recursive_mutex_lock (__mutex=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:810\r\n    #4  std::recursive_mutex::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:105\r\n    #5  AnnotatedMixin<std::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #6  std::unique_lock<CCriticalSection>::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/bits/std_mutex.h:267\r\n    #7  CCriticalBlock::Enter (nLine=623, this=<optimized out>, pszName=<optimized out>, pszFile=<optimized out>) at ./sync.h:128\r\n    #8  CCriticalBlock::CCriticalBlock (nLine=623, fTry=false, this=<optimized out>, mutexIn=..., pszName=<optimized out>, pszFile=<optimized out>) at ./sync.h:149\r\n    #9  CTxMemPool::size (this=<optimized out>) at ./txmempool.h:623\r\n    #10 ClientModel::getMempoolSize (this=<optimized out>) at qt/clientmodel.cpp:130\r\n    #11 ClientModel::updateTimer (this=0x56427c071aa0) at qt/clientmodel.cpp:153\r\n    #12 0x000056427a94e749 in ClientModel::qt_static_metacall (_o=0x56427b5cc7b8 <mempool+56>, _c=128, _id=<optimized out>, _a=0x7f7449767f5c <__lll_lock_wait+28>)\r\n        at qt/moc_clientmodel.cpp:140\r\n    #13 0x00007f744a29d5e9 in QMetaObject::activate (sender=sender@entry=0x56427c071de0, signalOffset=<optimized out>, local_signal_index=local_signal_index@entry=0, \r\n        argv=argv@entry=0x0) at kernel/qobject.cpp:3740\r\n    #14 0x00007f744a29df07 in QMetaObject::activate (sender=sender@entry=0x56427c071de0, m=m@entry=0x7f744a4bb760 <QTimer::staticMetaObject>, \r\n        local_signal_index=local_signal_index@entry=0, argv=argv@entry=0x0) at kernel/qobject.cpp:3602\r\n    #15 0x00007f744a317780 in QTimer::timeout (this=this@entry=0x56427c071de0) at .moc/moc_qtimer.cpp:198\r\n    #16 0x00007f744a2a9f78 in QTimer::timerEvent (this=0x56427c071de0, e=<optimized out>) at kernel/qtimer.cpp:254\r\n    #17 0x00007f744a29e453 in QObject::event (this=0x56427c071de0, e=<optimized out>) at kernel/qobject.cpp:1285\r\n    #18 0x00007f744abe0b8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56427c071de0, e=0x7ffca7221b20) at kernel/qapplication.cpp:3799\r\n    #19 0x00007f744abe8341 in QApplication::notify (this=0x7ffca7222750, receiver=0x56427c071de0, e=0x7ffca7221b20) at kernel/qapplication.cpp:3556\r\n    #20 0x00007f744a2719e0 in QCoreApplication::notifyInternal2 (receiver=0x56427c071de0, event=event@entry=0x7ffca7221b20) at kernel/qcoreapplication.cpp:988\r\n    #21 0x00007f744a2c4fee in QCoreApplication::sendEvent (event=0x7ffca7221b20, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #22 QTimerInfoList::activateTimers (this=0x56427c22a290) at kernel/qtimerinfo_unix.cpp:644\r\n    #23 0x00007f744a2c5511 in timerSourceDispatch (source=<optimized out>) at kernel/qeventdispatcher_glib.cpp:182\r\n    #24 0x00007f74456357f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #25 0x00007f7445635a60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #26 0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #27 0x00007f744a2c604f in QEventDispatcherGlib::processEvents (this=0x56427c22a070, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #28 0x00007f744a26f9ca in QEventLoop::exec (this=this@entry=0x7ffca7221d70, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #29 0x00007f744adcf0e7 in QDialog::exec (this=0x7ffca7221df8) at dialogs/qdialog.cpp:552\r\n    #30 0x000056427a8aa885 in BitcoinGUI::message (this=0x56427c348250, title=..., message=..., style=<optimized out>, ret=0x7f73f148a9ab) at qt/bitcoingui.cpp:926\r\n    #31 0x000056427a94d413 in BitcoinGUI::qt_static_metacall (_o=0x56427c348250, _c=<optimized out>, _id=<optimized out>, _a=0x7f73f148a440)\r\n        at qt/moc_bitcoingui.cpp:216\r\n    #32 0x00007f744a29e499 in QObject::event (this=this@entry=0x56427c348250, e=e@entry=0x7f73e3814a50) at kernel/qobject.cpp:1263\r\n    #33 0x00007f744ac2846b in QWidget::event (this=this@entry=0x56427c348250, event=event@entry=0x7f73e3814a50) at kernel/qwidget.cpp:9225\r\n    #34 0x00007f744ad2792b in QMainWindow::event (this=0x56427c348250, event=0x7f73e3814a50) at widgets/qmainwindow.cpp:1543\r\n    #35 0x00007f744abe0b8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56427c348250, e=0x7f73e3814a50) at kernel/qapplication.cpp:3799\r\n    #36 0x00007f744abe8341 in QApplication::notify (this=0x7ffca7222750, receiver=0x56427c348250, e=0x7f73e3814a50) at kernel/qapplication.cpp:3556\r\n    #37 0x00007f744a2719e0 in QCoreApplication::notifyInternal2 (receiver=0x56427c348250, event=event@entry=0x7f73e3814a50) at kernel/qcoreapplication.cpp:988\r\n    #38 0x00007f744a27416d in QCoreApplication::sendEvent (event=0x7f73e3814a50, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #39 QCoreApplicationPrivate::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0, data=0x56427c185580) at kernel/qcoreapplication.cpp:1649\r\n    #40 0x00007f744a2745d8 in QCoreApplication::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0) at kernel/qcoreapplication.cpp:1503\r\n    #41 0x00007f744a2c5c43 in postEventSourceDispatch (s=0x56427c22a140) at kernel/qeventdispatcher_glib.cpp:276\r\n    #42 0x00007f74456357f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #43 0x00007f7445635a60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #44 0x00007f7445635b0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #45 0x00007f744a2c604f in QEventDispatcherGlib::processEvents (this=0x56427c22a070, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #46 0x00007f744a26f9ca in QEventLoop::exec (this=this@entry=0x7ffca7222540, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #47 0x00007f744a27813c in QCoreApplication::exec () at kernel/qcoreapplication.cpp:1261\r\n    #48 0x000056427a893329 in main (argc=<optimized out>, argv=<optimized out>) at qt/bitcoin.cpp:710\r\n    (gdb)",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-366180881",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 366198113,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjE5ODExMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366198113",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-16T10:26:41Z",
      "updated_at": "2018-02-16T10:26:41Z",
      "author_association": "MEMBER",
      "body": "Note: relevant part of stack trace is near CCoinsViewErrorCatcher::GetCoin call. But the stack traces don't really shed much light on this problem, since the corruption bug/hardware failure is happening at an earlier point and the stack traces just show what bitcoin is doing at the time when it detects the corruption.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-366198113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 366200598,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIwMDU5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366200598",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-16T10:37:51Z",
      "updated_at": "2018-02-16T10:56:28Z",
      "author_association": "MEMBER",
      "body": "~~Are you sure this is 0.16.x? The leveldb errors don't have a ldb filename in them. I added that in  #11674 to allow for more specific analysis of corruptions.~~\r\n\r\nEdit: apparently that hasn't made it into the branches yet, sorry.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-366200598",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 366325049,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjMyNTA0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366325049",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-16T18:50:25Z",
      "updated_at": "2018-02-16T18:50:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "The debug.log shows:\r\n\r\n2018-02-16 09:18:16 Bitcoin Core version v0.16.99.0-67aa58299 (release build)\r\n\r\ncommit 67aa58299927f4ce58b23a297de8cad66b67fd76 is a local change I made to add the 'dumpbootstrap' RPC call. I use it to regularly make partial bootstrap.dat files so I can easily recover from the database corruption by 'replaying' the bootstrap files in order. That's the only change on top of commit f0295becbf3ef1fb78095306408789253fe0c114, which came after 0.16 rc1.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-366325049",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 366366509,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjM2NjUwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366366509",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-16T21:42:47Z",
      "updated_at": "2018-02-16T21:42:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "So now I'm more confused. Last night after bitcoin-qt hung on that block corruption, I had to \"kill -9\" to stop it. After that I tried running bitcoin-qt twice more, but both times it died immediately due to database corruption, here:\r\n\r\n    2018-02-16 09:17:40 Verifying last 1 blocks at level 3\r\n    2018-02-16 09:17:40 [0%]...LevelDB read failure: Corruption: block checksum mismatch\r\n    2018-02-16 09:17:40 Corruption: block checksum mismatch\r\n\r\nand here:\r\n\r\n    2018-02-16 09:18:20 Verifying last 1 blocks at level 3\r\n    2018-02-16 09:18:20 [0%]...LevelDB read failure: Corruption: block checksum mismatch\r\n    2018-02-16 09:18:20 Corruption: block checksum mismatch\r\n\r\nI gave up for the night, thinking I'd have to dig out the external hdd to restore an old pre-corruption backup.\r\n\r\nThis morning I rebuild bitcoin-qt, using the 0.16 rc4 version, and just on a whim tried running it, on my corrupted data. It ran just fine:\r\n\r\n    2018-02-16 21:11:56 Verifying last 1 blocks at level 3\r\n    2018-02-16 21:11:56 [0%]...[99%]...[DONE].\r\n    2018-02-16 21:12:46 No coin database inconsistencies in last 2 blocks (4228 transactions)\r\n    2018-02-16 21:12:46  block index           55654ms\r\n    2018-02-16 21:12:46 init message: Loading wallet...\r\n\r\nSo what could be happening there? How was the database corrupted the first 2 times we checked it, but fine the 3rd time?",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-366366509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 366377564,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjM3NzU2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366377564",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-16T22:31:02Z",
      "updated_at": "2018-02-16T22:31:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "I tried again, checking the last 1000 blocks, and it also passed fine (I reported a new issue #12465 about how the first two log lines are merged into one):\r\n\r\n    2018-02-16 21:45:24 Prune: pruned datadir may not have more than 288 blocks; only checking available blocksVerifying last 1000 blocks at level 3\r\n    2018-02-16 21:45:24 [0%]...[10%]...[20%]...[30%]...[40%]...[50%]...[60%]...[70%]...[80%]...[90%]...[DONE].\r\n    2018-02-16 21:58:34 No coin database inconsistencies in last 1001 blocks (1162920 transactions)\r\n    2018-02-16 21:58:35  block index          795664ms\r\n    2018-02-16 21:58:36 init message: Loading wallet...\r\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-366377564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 371971831,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTk3MTgzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371971831",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-09T23:11:48Z",
      "updated_at": "2018-03-09T23:11:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have been doing a lot of LevelDB work recently and am interested in helping you diagnose this. Can you tell me some more information:\r\n * What filesystem are you using?\r\n * What mount options do you have enabled?",
      "user": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-371971831",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 371999866,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTk5OTg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371999866",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-10T03:45:26Z",
      "updated_at": "2018-03-10T03:51:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "    19:46:14 chris@chris:~$ df ~/.bitcoin/\r\n    Filesystem                  Size  Used Avail Use% Mounted on\r\n    /dev/mapper/chris--vg-root  901G  757G   99G  89% /\r\n\r\n    19:46:16 chris@chris:~$ mount | grep chris--vg\r\n    /dev/mapper/chris--vg-root on / type ext4 (rw,relatime,errors=remount-ro,data=ordered)\r\n\r\nI run bitcoin-qt almost all the time, and very rarely see this issue any more. I do post to this thread almost every time it happens though.\r\n\r\nI don't think I've seen it since upgrading to the recent released version.\r\n\r\nI'm using an \"incompatible\" version of the Berkeley DB:\r\n\r\n    19:47:10 chris@chris:~$ dpkg -l | grep -i berkeley\r\n    ii  libdb5.3:amd64                      5.3.28-12+deb9u1       amd64                  Berkeley v5.3 Database Libraries [runtime]\r\n    ii  libdb5.3++:amd64                    5.3.28-12+deb9u1       amd64                  Berkeley v5.3 Database Libraries for C++ [runtime]\r\n    ii  libdb5.3++-dev                      5.3.28-12+deb9u1       amd64                  Berkeley v5.3 Database Libraries for C++ [development]\r\n    ii  libdb5.3-dev                        5.3.28-12+deb9u1       amd64                  Berkeley v5.3 Database Libraries [development]\r\n\r\nand configure like this:\r\n\r\n    $ ./configure CXX=clang++ --with-incompatible-bdb --with-miniupnpc=no\r\n\r\nIf I omit the --with-incompatible-bdb then ./configure gives this error:\r\n\r\n    checking for Berkeley DB C++ headers... default\r\n    configure: error: Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)\r\n\r\nIt seems that 5.3 is the only version available in the debian stable repos:\r\n\r\n    $ apt-cache search libdb dev | grep -i dev.*berkeley\r\n    libdb++-dev - Berkeley Database Libraries for C++ [development]\r\n    libdb-dev - Berkeley Database Libraries [development]\r\n    libdb-java-dev - Berkeley Database Libraries for Java [development]\r\n    libdb-sql-dev - Berkeley Database Libraries [SQL development]\r\n    libdb5.3++-dev - Berkeley v5.3 Database Libraries for C++ [development]\r\n    libdb5.3-dev - Berkeley v5.3 Database Libraries [development]\r\n    libdb5.3-java-dev - Berkeley v5.3 Database Libraries for Java [development]\r\n    libdb5.3-sql-dev - Berkeley v5.3 Database Libraries [SQL development]\r\n    libdb5.3-stl-dev - Berkeley v5.3 Database Libraries [STL development]",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-371999866",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 372008556,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAwODU1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372008556",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-10T06:58:52Z",
      "updated_at": "2018-03-10T06:58:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Next time this happens (or maybe always) you should run with `-debug=coindb -debug=leveldb` which will produce more verbose logging information about what's happening in the database and leveldb. Your filesystem options look fine. Maybe you have bad hardware like other people reported, it's impossible to tell from the error messages here.\r\n\r\nI would be interested in seeing what the corrupted table files look like (e.g. is it truncated, zeroed, something else). I've submitted a PR that changes the log messages a bit so the corrupted table name will be more obvious.",
      "user": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-372008556",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 372032446,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAzMjQ0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372032446",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-10T14:05:13Z",
      "updated_at": "2018-03-10T14:05:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've added those debug= lines to my bitcoin.conf.\r\n\r\nI'll try using a different laptop to rule out hardware issues.\r\n\r\nMost times when the client crashes complaining about data corruption I can simply restart it and everything's fine. I've only had to restore from backup 2 or 3 times I think.\r\n\r\nI'll try running with your PR #12659 from now on.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-372032446",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "referenced",
      "id": 1519012136,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MTkwMTIxMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1519012136",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3d16f581538b0974853e820508e8b3093269d2fd",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d16f581538b0974853e820508e8b3093269d2fd",
      "created_at": "2018-03-13T16:19:12Z"
    },
    {
      "event": "commented",
      "id": 377034884,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzAzNDg4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377034884",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-28T21:00:30Z",
      "updated_at": "2018-03-28T21:00:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Has there been any further occurrences of this? If it has stopped happening, maybe we should close this, can always be reopened if it does pop up again",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-377034884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "closed",
      "id": 1546588493,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTU0NjU4ODQ5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1546588493",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-28T21:05:29Z"
    },
    {
      "event": "commented",
      "id": 377057580,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA1NzU4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377057580",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-28T22:22:58Z",
      "updated_at": "2018-03-28T22:22:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "It doesn't happen very often, but it never did.\r\n\r\nClosing the issue won't help resolve the problem, but feel free I guess.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-377057580",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 377671248,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY3MTI0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377671248",
      "actor": {
        "login": "simonk83",
        "id": 518440,
        "node_id": "MDQ6VXNlcjUxODQ0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/518440?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/simonk83",
        "html_url": "https://github.com/simonk83",
        "followers_url": "https://api.github.com/users/simonk83/followers",
        "following_url": "https://api.github.com/users/simonk83/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/simonk83/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/simonk83/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/simonk83/subscriptions",
        "organizations_url": "https://api.github.com/users/simonk83/orgs",
        "repos_url": "https://api.github.com/users/simonk83/repos",
        "events_url": "https://api.github.com/users/simonk83/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/simonk83/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-31T06:48:38Z",
      "updated_at": "2018-03-31T06:48:38Z",
      "author_association": "NONE",
      "body": "I'm seeing it happen fairly regularly while trying to initial sync on a Pi.    Going to try and reduce the CPU usage a little (or buy heatsinks) to try and solve it that way.",
      "user": {
        "login": "simonk83",
        "id": 518440,
        "node_id": "MDQ6VXNlcjUxODQ0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/518440?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/simonk83",
        "html_url": "https://github.com/simonk83",
        "followers_url": "https://api.github.com/users/simonk83/followers",
        "following_url": "https://api.github.com/users/simonk83/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/simonk83/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/simonk83/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/simonk83/subscriptions",
        "organizations_url": "https://api.github.com/users/simonk83/orgs",
        "repos_url": "https://api.github.com/users/simonk83/repos",
        "events_url": "https://api.github.com/users/simonk83/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/simonk83/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-377671248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 381000056,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAwMDA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381000056",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-13T02:14:46Z",
      "updated_at": "2018-04-13T02:16:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "@eklitzke \r\n\r\n> Next time this happens (or maybe always) you should run with -debug=coindb -debug=leveldb which will produce more verbose logging information about what's happening in the database and leveldb.\r\n\r\nI have been running with `debug=coindb` and `debug=leveldb` in my `bitcoin.conf` since you suggested it, and have just seen the first crash since I did that.\r\n\r\n> I've submitted a PR that changes the log messages a bit so the corrupted table name will be more obvious.\r\n\r\nI also applied your patch, so I got the improved log messages.\r\n\r\nI turned off the wireless interface on my laptop and then went out for the evening. When I came back I turned the wireless interface back on and noticed that bitcoin-qt had crashed. I don't know which happened first.\r\n\r\nHere's the end of the `debug.log` file:\r\n\r\n    2018-04-12 21:26:47 UpdateTip: new best=0000000000000000001222a6e792d981ea1aaf23acf80c2575c56a2984afbc2e height=517916 version=0x20000000 log2_work=88.571705 tx=309842586 date='2018-04-12 21:26:06' progress=1.000000 cache=64.7MiB(496499txo)\r\n    2018-04-12 21:29:57 UpdateTip: new best=00000000000000000004fda8f3226b265c8c1e391c16001fe8a7fb4b838b0cf0 height=517917 version=0x20000000 log2_work=88.571752 tx=309843005 date='2018-04-12 21:30:00' progress=1.000000 cache=64.8MiB(497061txo)\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/207\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/207\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/207\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/207\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/207\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/206\"\r\n    2018-04-12 21:55:36 GUI: \"No such interface 'org.freedesktop.DBus.Properties' on object at path /org/freedesktop/NetworkManager/ActiveConnection/205\"\r\n    2018-04-12 21:55:42 connect() to 34.216.21.223:8333 failed: Network is unreachable (101)\r\n    2018-04-12 21:56:07 connect() to 108.173.208.45:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:29 Potential stale tip detected, will try using extra outbound peer (last tip update: 16712 seconds ago)\r\n    2018-04-13 02:08:29 socket receive timeout: 15175s\r\n    2018-04-13 02:08:29 socket receive timeout: 15188s\r\n    2018-04-13 02:08:29 socket receive timeout: 15175s\r\n    2018-04-13 02:08:29 socket receive timeout: 15188s\r\n    2018-04-13 02:08:29 socket receive timeout: 15181s\r\n    2018-04-13 02:08:29 socket receive timeout: 15180s\r\n    2018-04-13 02:08:29 socket receive timeout: 15188s\r\n    2018-04-13 02:08:29 socket sending timeout: 15175s\r\n    2018-04-13 02:08:29 connect() to 212.52.168.118:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:29 connect() to 73.184.173.230:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:30 connect() to 190.10.8.211:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:30 connect() to 52.11.12.45:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:31 connect() to 110.142.250.119:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:31 connect() to 8.24.98.68:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:32 connect() to 82.95.67.118:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:32 connect() to 123.112.64.214:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:33 connect() to 114.218.100.170:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:33 connect() to 212.92.124.221:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:34 connect() to 104.199.0.235:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:34 connect() to 209.250.6.190:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:35 connect() to 94.23.88.166:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:35 connect() to 78.40.244.243:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:36 connect() to [2a01:4f8:150:64e9::2]:8333 failed: Cannot assign requested address (99)\r\n    2018-04-13 02:08:36 connect() to 37.98.254.134:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:37 connect() to [2001:0:9d38:78cf:c83:16ed:3f57:4dc1]:8333 failed: Cannot assign requested address (99)\r\n    2018-04-13 02:08:37 connect() to 84.92.55.182:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:38 connect() to 89.232.71.101:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:38 connect() to 45.63.18.100:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:39 connect() to 52.198.143.134:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:39 connect() to 138.197.177.202:8333 failed: Network is unreachable (101)\r\n    2018-04-13 02:08:40 connect() to [2001:0:4137:9e76:14c5:3fa:5d3a:3542]:8333 failed: Cannot assign requested address (99)\r\n    2018-04-13 02:08:52 connect() to 23.19.87.136:8333 failed after select(): Connection refused (111)\r\n    2018-04-13 02:09:05 New outbound peer connected: version: 70015, blocks=517944, peer=82\r\n    2018-04-13 02:09:11 LevelDB read failure: Corruption: block checksum mismatch: /home/chris/.bitcoin-prune/chainstate/743886.ldb\r\n    2018-04-13 02:09:11 Fatal LevelDB error: Corruption: block checksum mismatch: /home/chris/.bitcoin-prune/chainstate/743886.ldb\r\n    2018-04-13 02:09:11 You can use -debug=leveldb to get more complete diagnostic messages\r\n\r\nHopefully that helps. I'll make a backup of the whole folder as it currently stands in case you want to see anything from it.\r\n\r\nEdit: earlier in the day I had been seeing a bunch of database compacting going on, for example:\r\n\r\n    2018-04-12 13:57:08 UpdateTip: new best=0000000000000000003d7729716df3a6ae287ce2c9144c6a52175a7c8828ec10 height=517864 version=0x20000000 log2_work=88.569243 tx=309751135 date='2018-04-12 13:57:20' progress=1.000000 cache=42.9MiB(318373txo)\r\n    2018-04-12 13:57:30 connect() to 179.26.82.15:8333 failed after select(): Connection refused (111)\r\n    2018-04-12 13:57:54 connect() to 60.2.78.18:8333 failed after select(): Connection refused (111)\r\n    2018-04-12 14:01:27 leveldb: Compacting 1@3 + 2@4 files\r\n    2018-04-12 14:01:27 leveldb: Generated table #744786@3: 36550 keys, 2172606 bytes\r\n    2018-04-12 14:01:27 leveldb: Generated table #744787@3: 36057 keys, 2168714 bytes\r\n    2018-04-12 14:01:27 leveldb: Compacted 1@3 + 2@4 files => 4341320 bytes\r\n    2018-04-12 14:01:27 leveldb: compacted to: files[ 0 0 0 0 1429 0 0 ]\r\n    2018-04-12 14:01:27 leveldb: Delete type=2 #743335\r\n    2018-04-12 14:01:27 leveldb: Delete type=2 #743679\r\n    2018-04-12 14:01:27 leveldb: Delete type=2 #742984\r\n    2018-04-12 14:04:16 connect() to 37.57.3.222:8333 failed after select(): Connection refused (111)\r\n    2018-04-12 14:06:14 socket recv error Connection reset by peer (104)\r\n    2018-04-12 14:06:43 New outbound peer connected: version: 70015, blocks=517864, peer=71\r\n\r\nso the leveldb debugging was definitely enabled.",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-381000056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "mentioned",
      "id": 1572320105,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU3MjMyMDEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1572320105",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-13T02:14:46Z"
    },
    {
      "event": "subscribed",
      "id": 1572320106,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NzIzMjAxMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1572320106",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-13T02:14:46Z"
    },
    {
      "event": "commented",
      "id": 453540843,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzU0MDg0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453540843",
      "actor": {
        "login": "quannv108",
        "id": 2249241,
        "node_id": "MDQ6VXNlcjIyNDkyNDE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2249241?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/quannv108",
        "html_url": "https://github.com/quannv108",
        "followers_url": "https://api.github.com/users/quannv108/followers",
        "following_url": "https://api.github.com/users/quannv108/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/quannv108/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/quannv108/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/quannv108/subscriptions",
        "organizations_url": "https://api.github.com/users/quannv108/orgs",
        "repos_url": "https://api.github.com/users/quannv108/repos",
        "events_url": "https://api.github.com/users/quannv108/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/quannv108/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-11T14:49:26Z",
      "updated_at": "2019-01-11T14:49:26Z",
      "author_association": "NONE",
      "body": "I running my full node on my raspi 3, and it continue top stop on random index\r\nFor examples:\r\n`Fatal LevelDB error: Corruption: truncated block read: /home/pi/.bitcoin/indexes/txindex/066234.ldb `\r\nTried to run reIndex so much time, some time it stop after 7% check, sometime 61% check,\r\ntake me too much time to stop and start bitcoin service.\r\nI don't know that the issues is already resolved or not, I can't not find any solution, just keep continue reindex is not a good choice.",
      "user": {
        "login": "quannv108",
        "id": 2249241,
        "node_id": "MDQ6VXNlcjIyNDkyNDE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2249241?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/quannv108",
        "html_url": "https://github.com/quannv108",
        "followers_url": "https://api.github.com/users/quannv108/followers",
        "following_url": "https://api.github.com/users/quannv108/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/quannv108/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/quannv108/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/quannv108/subscriptions",
        "organizations_url": "https://api.github.com/users/quannv108/orgs",
        "repos_url": "https://api.github.com/users/quannv108/repos",
        "events_url": "https://api.github.com/users/quannv108/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/quannv108/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-453540843",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "referenced",
      "id": 2510526068,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1MTA1MjYwNjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2510526068",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "19ba4062aa858692388c291d8ed195a942c530c4",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/19ba4062aa858692388c291d8ed195a942c530c4",
      "created_at": "2019-07-25T19:01:39Z"
    },
    {
      "event": "referenced",
      "id": 2615862356,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2MTU4NjIzNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2615862356",
      "actor": {
        "login": "jonspock",
        "id": 25382027,
        "node_id": "MDQ6VXNlcjI1MzgyMDI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/25382027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonspock",
        "html_url": "https://github.com/jonspock",
        "followers_url": "https://api.github.com/users/jonspock/followers",
        "following_url": "https://api.github.com/users/jonspock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonspock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonspock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonspock/subscriptions",
        "organizations_url": "https://api.github.com/users/jonspock/orgs",
        "repos_url": "https://api.github.com/users/jonspock/repos",
        "events_url": "https://api.github.com/users/jonspock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonspock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4587107c79d9c936203d6c368553831db49b5e59",
      "commit_url": "https://api.github.com/repos/jonspock/devault/commits/4587107c79d9c936203d6c368553831db49b5e59",
      "created_at": "2019-09-07T00:06:07Z"
    },
    {
      "event": "referenced",
      "id": 2616315532,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2MTYzMTU1MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2616315532",
      "actor": {
        "login": "jonspock",
        "id": 25382027,
        "node_id": "MDQ6VXNlcjI1MzgyMDI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/25382027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonspock",
        "html_url": "https://github.com/jonspock",
        "followers_url": "https://api.github.com/users/jonspock/followers",
        "following_url": "https://api.github.com/users/jonspock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonspock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonspock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonspock/subscriptions",
        "organizations_url": "https://api.github.com/users/jonspock/orgs",
        "repos_url": "https://api.github.com/users/jonspock/repos",
        "events_url": "https://api.github.com/users/jonspock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonspock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df00ef61f357e950f735a3ff07c54cef960e82fe",
      "commit_url": "https://api.github.com/repos/jonspock/devault/commits/df00ef61f357e950f735a3ff07c54cef960e82fe",
      "created_at": "2019-09-07T17:08:13Z"
    },
    {
      "event": "referenced",
      "id": 2617105730,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2MTcxMDU3MzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2617105730",
      "actor": {
        "login": "proteanx",
        "id": 29043582,
        "node_id": "MDQ6VXNlcjI5MDQzNTgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/29043582?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/proteanx",
        "html_url": "https://github.com/proteanx",
        "followers_url": "https://api.github.com/users/proteanx/followers",
        "following_url": "https://api.github.com/users/proteanx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/proteanx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/proteanx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/proteanx/subscriptions",
        "organizations_url": "https://api.github.com/users/proteanx/orgs",
        "repos_url": "https://api.github.com/users/proteanx/repos",
        "events_url": "https://api.github.com/users/proteanx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/proteanx/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7e2973fce7ce6bc9ec179b6dd7ea6191e85effcb",
      "commit_url": "https://api.github.com/repos/devaultcrypto/devault/commits/7e2973fce7ce6bc9ec179b6dd7ea6191e85effcb",
      "created_at": "2019-09-09T00:35:33Z"
    },
    {
      "event": "commented",
      "id": 537835141,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzgzNTE0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537835141",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-03T08:03:47Z",
      "updated_at": "2019-10-03T08:03:47Z",
      "author_association": "NONE",
      "body": "Bitcoin core is corrupt as whatever.\r\nWe can download 200G+ of a blockchain with no issue and within one month of data it finds corruption in the incoming data.\r\n",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-537835141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 537836178,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzgzNjE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537836178",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-03T08:06:54Z",
      "updated_at": "2019-10-03T08:06:54Z",
      "author_association": "NONE",
      "body": "And when we reindex it simply discards all.",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-537836178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 537847649,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzg0NzY0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537847649",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-03T08:38:26Z",
      "updated_at": "2019-10-03T08:38:26Z",
      "author_association": "NONE",
      "body": "So why can't it handle an error situation by repairing the problem?",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-537847649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 537928079,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzkyODA3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537928079",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-03T12:42:10Z",
      "updated_at": "2019-10-03T12:42:10Z",
      "author_association": "NONE",
      "body": "The whole idea is of a resilient decentralised system yet this does not reflect in the way the blockchain is handled...",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-537928079",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 537928602,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzkyODYwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537928602",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-03T12:43:47Z",
      "updated_at": "2019-10-03T12:43:47Z",
      "author_association": "NONE",
      "body": "Storage is on raid10, cpu is well within operating limits and nothing crashes except bitcoin core which does not handle anything.",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-537928602",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 537962644,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzk2MjY0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537962644",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-03T14:10:10Z",
      "updated_at": "2019-10-03T14:10:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "For what it's worth I was seeing this kind of error pretty regularly until I upgraded my hardware.\r\n\r\nI don't know if it was being triggered by faulty RAM, faulty hard drive, or a race condition in the software which shows up more regularly in a slow system than a fast one, but I've not seen the problem at all since upgrading the hardware (faster CPU and RAM, SSD instead of HDD).",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-537962644",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 538238775,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzODIzODc3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538238775",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-04T05:17:39Z",
      "updated_at": "2019-10-04T05:17:39Z",
      "author_association": "NONE",
      "body": "When things go wrong, the log looks like this:\r\n\r\n$ grep 003095.ldb debug.log \r\n2019-10-04T05:03:28Z leveldb: Compaction error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:12Z Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:12Z *** System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:12Z Failed to connect best block (System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb (code 0))\r\n2019-10-04T05:06:13Z Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z *** System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z FlushStateToDisk: failed to flush state (System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb (code 0))\r\n2019-10-04T05:06:13Z Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z *** System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z FlushStateToDisk: failed to flush state (System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb (code 0))\r\n\r\nSo it says nothing about when or while the file was written nor what is in there or what is wrong except for a checksum. Please note there is no media error.\r\n\r\n2019-10-04T05:03:28Z leveldb: Compaction error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n(....)\r\n\r\n2019-10-04T05:06:12Z UpdateTip: new best=0000000000000000116dfb22fc23ea79f61734777a0660a3942fa6ecc1cb1a15 height=342530 version=0x00000002 log2_work=82.187887 tx=58998819 date='2015-02-08T08:28:04Z' progress=0.129192 cache=723.8MiB(5399297txo)\r\n2019-10-04T05:06:12Z UpdateTip: new best=0000000000000000068f1d2a8f90fcc2383bbdd18183e38fd1a29998462a2002 height=342531 version=0x00000002 log2_work=82.187933 tx=59000545 date='2015-02-08T08:58:24Z' progress=0.129196 cache=723.9MiB(5400210txo)\r\n2019-10-04T05:06:12Z UpdateTip: new best=0000000000000000182fd54b2b3c2e1df1c81ea3141d5e2b0b0adffbf48c4740 height=342532 version=0x00000002 log2_work=82.18798 tx=59000678 date='2015-02-08T09:00:40Z' progress=0.129197 cache=723.9MiB(5400174txo)\r\n2019-10-04T05:06:12Z UpdateTip: new best=000000000000000008d3e4e81af806f0144275cf338bcbbf537259c4d9d47515 height=342533 version=0x00000002 log2_work=82.188026 tx=59001160 date='2015-02-08T09:09:52Z' progress=0.129198 cache=724.4MiB(5404082txo)\r\n2019-10-04T05:06:12Z leveldb: Level-0 table #13: started\r\n2019-10-04T05:06:12Z leveldb: Level-0 table #13: 2062883 bytes OK\r\n2019-10-04T05:06:12Z WriteBatch memory usage: db=index, before=2.3MiB, after=4.1MiB\r\n2019-10-04T05:06:12Z leveldb: Delete type=0 #10\r\n2019-10-04T05:06:12Z leveldb: Compacting 4@0 + 0@1 files\r\n2019-10-04T05:06:12Z Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:12Z You can use -debug=leveldb to get more complete diagnostic messages\r\n2019-10-04T05:06:12Z *** System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:12Z Error: Error: A fatal internal error occurred, see debug.log for details\r\n2019-10-04T05:06:12Z Failed to connect best block (System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb (code 0))\r\n2019-10-04T05:06:12Z tor: Thread interrupt\r\n2019-10-04T05:06:12Z addcon thread exit\r\n2019-10-04T05:06:12Z Shutdown: In progress...\r\n2019-10-04T05:06:12Z opencon thread exit\r\n2019-10-04T05:06:12Z torcontrol thread exit\r\n2019-10-04T05:06:12Z msghand thread exit\r\n2019-10-04T05:06:12Z net thread exit\r\n2019-10-04T05:06:12Z leveldb: Generated table #14@0: 14970 keys, 2141006 bytes\r\n2019-10-04T05:06:13Z leveldb: Generated table #15@0: 14970 keys, 2140790 bytes\r\n2019-10-04T05:06:13Z scheduler thread interrupt\r\n2019-10-04T05:06:13Z leveldb: Generated table #16@0: 14970 keys, 2141034 bytes\r\n2019-10-04T05:06:13Z leveldb: Level-0 table #19: started\r\n2019-10-04T05:06:13Z WriteBatch memory usage: db=index, before=1.9MiB, after=1.9MiB\r\n2019-10-04T05:06:13Z leveldb: Level-0 table #19: 1733707 bytes OK\r\n2019-10-04T05:06:13Z leveldb: Delete type=0 #12\r\n2019-10-04T05:06:13Z Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z You can use -debug=leveldb to get more complete diagnostic messages\r\n2019-10-04T05:06:13Z *** System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z Error: Error: A fatal internal error occurred, see debug.log for details\r\n2019-10-04T05:06:13Z FlushStateToDisk: failed to flush state (System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb (code 0))\r\n2019-10-04T05:06:13Z leveldb: Generated table #17@0: 14970 keys, 2141644 bytes\r\n2019-10-04T05:06:13Z WriteBatch memory usage: db=index, before=0.0MiB, after=0.0MiB\r\n2019-10-04T05:06:13Z leveldb: Generated table #20@0: 14970 keys, 2142025 bytes\r\n2019-10-04T05:06:13Z Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z You can use -debug=leveldb to get more complete diagnostic messages\r\n2019-10-04T05:06:13Z *** System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb\r\n2019-10-04T05:06:13Z Error: Error: A fatal internal error occurred, see debug.log for details\r\n2019-10-04T05:06:13Z FlushStateToDisk: failed to flush state (System error while flushing: Fatal LevelDB error: Corruption: block checksum mismatch: /home/udo/.bitcoin/chainstate/003095.ldb (code 0))\r\n2019-10-04T05:06:13Z leveldb: Generated table #21@0: 14970 keys, 2141588 bytes\r\n2019-10-04T05:06:13Z leveldb: Generated table #22@0: 7326 keys, 1033193 bytes\r\n2019-10-04T05:06:13Z leveldb: Compacted 4@0 + 0@1 files => 13881280 bytes\r\n2019-10-04T05:06:13Z leveldb: compacted to: files[ 1 7 1 0 0 0 0 ]\r\n2019-10-04T05:06:13Z leveldb: Delete type=2 #11\r\n2019-10-04T05:06:13Z leveldb: Delete type=2 #7\r\n2019-10-04T05:06:13Z leveldb: Delete type=2 #9\r\n2019-10-04T05:06:13Z leveldb: Delete type=2 #13\r\n2019-10-04T05:06:13Z leveldb: Compacting 1@1 + 1@2 files\r\n2019-10-04T05:06:14Z leveldb: Generated table #23@1: 15180 keys, 2136400 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #24@1: 15180 keys, 2136247 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #25@1: 15180 keys, 2136455 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #26@1: 15180 keys, 2136422 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #27@1: 15180 keys, 2136125 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #28@1: 15180 keys, 2135914 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #29@1: 15270 keys, 2139288 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #30@1: 15270 keys, 2139297 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #31@1: 15270 keys, 2138600 bytes\r\n2019-10-04T05:06:14Z leveldb: Generated table #32@1: 15270 keys, 2138684 bytes\r\n2019-10-04T05:06:15Z leveldb: Generated table #33@1: 15270 keys, 2139227 bytes\r\n2019-10-04T05:06:15Z leveldb: Generated table #34@1: 15270 keys, 2139012 bytes\r\n2019-10-04T05:06:15Z leveldb: Generated table #35@1: 15270 keys, 2138954 bytes\r\n2019-10-04T05:06:15Z leveldb: compacted to: files[ 1 7 1 0 0 0 0 ]\r\n2019-10-04T05:06:15Z [default wallet] Releasing wallet\r\n2019-10-04T05:06:15Z Shutdown: done\r\n\r\nWhat conclusions can we draw?",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-538238775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 557873578,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzg3MzU3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557873578",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-24T09:55:59Z",
      "updated_at": "2019-11-24T09:55:59Z",
      "author_association": "NONE",
      "body": "Just bought some BTC, saw the transaction arrive.\r\nclosed bitcoin core.\r\nRestarted it after a wile and Fatal LevelDB error: Corruption: block checksum mismatch\r\nThis is on fresh new hardwrae, on a raid10, no fs issues, etc.\r\nBitcoin core has an issue.\r\nHow to fix besides downloading the whole chain?",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-557873578",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 557876098,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzg3NjA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557876098",
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-24T10:35:10Z",
      "updated_at": "2019-11-24T10:35:10Z",
      "author_association": "NONE",
      "body": "The main issue here is that bitcoin core has no recovery mechanism at all for these kinds of (common?) failures. My storage is redundant, the CPU does not get too hot, same for the rest of the board. Yet still issues. please provide a decent fix instead of putting the blame elsewhere.",
      "user": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-557876098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "commented",
      "id": 563239848,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzIzOTg0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563239848",
      "actor": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-09T13:32:37Z",
      "updated_at": "2019-12-09T13:32:37Z",
      "author_association": "NONE",
      "body": "Yes, udovdh is right. The hardware can be really good and expensive, but we all know, that eventually every storage media will sooner or later fail! Electronics an be perfect, and eventually it will fail (because of Single event upsets caused by comic radiation or watsoever). That why there are RAID-Arrays and redundant processors (on satellites p.ex.). It is not the users faul.",
      "user": {
        "login": "kollokollo",
        "id": 15250834,
        "node_id": "MDQ6VXNlcjE1MjUwODM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/15250834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kollokollo",
        "html_url": "https://github.com/kollokollo",
        "followers_url": "https://api.github.com/users/kollokollo/followers",
        "following_url": "https://api.github.com/users/kollokollo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kollokollo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kollokollo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kollokollo/subscriptions",
        "organizations_url": "https://api.github.com/users/kollokollo/orgs",
        "repos_url": "https://api.github.com/users/kollokollo/repos",
        "events_url": "https://api.github.com/users/kollokollo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kollokollo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-563239848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355"
    },
    {
      "event": "referenced",
      "id": 3440420173,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDA0MjAxNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3440420173",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bbb3e74ce7b9fc0f48a089d397ab58804497e8ab",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/bbb3e74ce7b9fc0f48a089d397ab58804497e8ab",
      "created_at": "2020-06-13T03:49:32Z"
    },
    {
      "event": "referenced",
      "id": 3441086844,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDEwODY4NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3441086844",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "57a6035a90b38c4806a64640bb2edf900a08c9d0",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/57a6035a90b38c4806a64640bb2edf900a08c9d0",
      "created_at": "2020-06-13T19:44:19Z"
    },
    {
      "event": "referenced",
      "id": 3451533191,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NTE1MzMxOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3451533191",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "185f2d6cfab88d6a9dceda73149e413f85fd3a2f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/185f2d6cfab88d6a9dceda73149e413f85fd3a2f",
      "created_at": "2020-06-17T02:17:37Z"
    },
    {
      "event": "referenced",
      "id": 3459080998,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NTkwODA5OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3459080998",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f2afaa324faac96a65517aa866afdd3d430c1520",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f2afaa324faac96a65517aa866afdd3d430c1520",
      "created_at": "2020-06-18T16:42:27Z"
    },
    {
      "event": "referenced",
      "id": 4937162859,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5MzcxNjI4NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4937162859",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6a194112d9b416665c54ca5322419f2bba217549",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/6a194112d9b416665c54ca5322419f2bba217549",
      "created_at": "2021-06-24T22:46:11Z"
    },
    {
      "event": "locked",
      "id": 5778924018,
      "node_id": "LOE_lADOABII584PZKhnzwAAAAFYc2Hy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778924018",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:55:27Z",
      "lock_reason": "resolved"
    }
  ]
}