{
  "type": "issue",
  "issue": {
    "id": 609546231,
    "node_id": "MDU6SXNzdWU2MDk1NDYyMzE=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/18823",
    "number": 18823,
    "state": "closed",
    "state_reason": "completed",
    "title": "./src/test/test_bitcoin fails with TSan on x86_64",
    "body": "Building master (36c0abd8f61ba859d53b1e59014720282c97c143) on Linux Mint 19.3 (x86_64):\r\n```\r\n$ ./configure --with-sanitizers=thread --disable-asm CC=clang-8 CXX=clang++-8\r\n$ make clean && make\r\n$ ./src/test/test_bitcoin\r\n...\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\nThreadSanitizer: reported 3011 warnings\r\n```\r\n\r\nRelated to #17540.",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 6,
    "closed_at": "2020-05-22T06:53:27Z",
    "created_at": "2020-04-30T03:46:57Z",
    "updated_at": "2022-02-15T11:03:37Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 3287403554,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyODc0MDM1NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287403554",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:46:57Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "commented",
      "id": 621790199,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc5MDE5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621790199",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T12:03:49Z",
      "updated_at": "2020-04-30T12:03:49Z",
      "author_association": "MEMBER",
      "body": "What are the warnings and failures? Without them there is nothing we can fix or troubleshoot.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/18823#issuecomment-621790199",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823"
    },
    {
      "event": "commented",
      "id": 621901479,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTkwMTQ3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621901479",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:48:27Z",
      "updated_at": "2020-04-30T14:48:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@hebasto Thanks for reporting. We test with `--with-sanitizers=thread` in the Travis `ci/test/00_setup_env_native_tsan.sh` job, so if this turns out to be a general issue then it would be interesting to know why the ThreadSanitizer Travis job didn't fail :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/18823#issuecomment-621901479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823"
    },
    {
      "event": "mentioned",
      "id": 3289823220,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4OTgyMzIyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3289823220",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:48:27Z"
    },
    {
      "event": "subscribed",
      "id": 3289823224,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODk4MjMyMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3289823224",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:48:27Z"
    },
    {
      "event": "commented",
      "id": 622031396,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjAzMTM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622031396",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T18:41:52Z",
      "updated_at": "2020-04-30T18:41:52Z",
      "author_association": "MEMBER",
      "body": "> What are the warnings and failures? Without them there is nothing we can fix or troubleshoot.\r\n\r\nSorry. Initially, the GH failed to upload the whole log.\r\n\r\nHere is a typical excerpt from the log:\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=11525)\r\n  Cycle in lock order graph: M506513391043629040 (0x000000000000) => M1053137795832139960 (0x000000000000) => M1044975021507526992 (0x000000000000) => M1022457023370664312 (0x000000000000) => M1028930947835011848 (0x000000000000) => M506513391043629040\r\n\r\n  Mutex M1053137795832139960 acquired here while holding mutex M506513391043629040 in main thread:\r\n    #0 pthread_rwlock_wrlock <null> (test_bitcoin+0xc5d0e)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x3d2a5)\r\n    #2 bool WalletBatch::WriteIC<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey>, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey> const&, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> const&, bool) /home/hebasto/GitHub/bitcoin/src/./wallet/walletdb.h:187:22 (test_bitcoin+0xe4c78e)\r\n    #3 WalletBatch::WriteKey(CPubKey const&, std::vector<unsigned char, secure_allocator<unsigned char> > const&, CKeyMetadata const&) /home/hebasto/GitHub/bitcoin/src/wallet/walletdb.cpp:107 (test_bitcoin+0xe4c78e)\r\n    #4 LegacyScriptPubKeyMan::AddKeyPubKeyWithDB(WalletBatch&, CKey const&, CPubKey const&) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:657:22 (test_bitcoin+0xdd669d)\r\n    #5 LegacyScriptPubKeyMan::GenerateNewKey(WalletBatch&, bool) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:955:10 (test_bitcoin+0xdd9554)\r\n    #6 LegacyScriptPubKeyMan::TopUp(unsigned int) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:1170:28 (test_bitcoin+0xddcb11)\r\n    #7 CWallet::GetNewDestination(OutputType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /home/hebasto/GitHub/bitcoin/src/wallet/wallet.cpp:3236:18 (test_bitcoin+0xe24b70)\r\n    #8 coinselector_tests::add_coin(CWallet&, long const&, int, bool, int, bool) /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:69:9 (test_bitcoin+0x824687)\r\n    #9 coinselector_tests::bnb_search_test::test_method() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:296:9 (test_bitcoin+0x820de5)\r\n    #10 coinselector_tests::bnb_search_test_invoker() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:135:1 (test_bitcoin+0x81a9bb)\r\n    #11 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x1a51f9)\r\n    #12 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #13 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\n    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message\r\n\r\n  Mutex M1044975021507526992 acquired here while holding mutex M1053137795832139960 in main thread:\r\n    #0 pthread_rwlock_wrlock <null> (test_bitcoin+0xc5d0e)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x3d2a5)\r\n    #2 bool WalletBatch::WriteIC<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey>, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey> const&, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> const&, bool) /home/hebasto/GitHub/bitcoin/src/./wallet/walletdb.h:187:22 (test_bitcoin+0xe4c78e)\r\n    #3 WalletBatch::WriteKey(CPubKey const&, std::vector<unsigned char, secure_allocator<unsigned char> > const&, CKeyMetadata const&) /home/hebasto/GitHub/bitcoin/src/wallet/walletdb.cpp:107 (test_bitcoin+0xe4c78e)\r\n    #4 LegacyScriptPubKeyMan::AddKeyPubKeyWithDB(WalletBatch&, CKey const&, CPubKey const&) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:657:22 (test_bitcoin+0xdd669d)\r\n    #5 LegacyScriptPubKeyMan::GenerateNewKey(WalletBatch&, bool) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:955:10 (test_bitcoin+0xdd9554)\r\n    #6 LegacyScriptPubKeyMan::TopUp(unsigned int) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:1170:28 (test_bitcoin+0xddcb11)\r\n    #7 CWallet::GetNewDestination(OutputType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /home/hebasto/GitHub/bitcoin/src/wallet/wallet.cpp:3236:18 (test_bitcoin+0xe24b70)\r\n    #8 coinselector_tests::add_coin(CWallet&, long const&, int, bool, int, bool) /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:69:9 (test_bitcoin+0x824687)\r\n    #9 coinselector_tests::bnb_search_test::test_method() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:296:9 (test_bitcoin+0x820de5)\r\n    #10 coinselector_tests::bnb_search_test_invoker() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:135:1 (test_bitcoin+0x81a9bb)\r\n    #11 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x1a51f9)\r\n    #12 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #13 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\n  Mutex M1022457023370664312 acquired here while holding mutex M1044975021507526992 in main thread:\r\n    #0 pthread_rwlock_wrlock <null> (test_bitcoin+0xc5d0e)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x3d2a5)\r\n    #2 bool WalletBatch::WriteIC<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey>, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey> const&, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> const&, bool) /home/hebasto/GitHub/bitcoin/src/./wallet/walletdb.h:187:22 (test_bitcoin+0xe4c78e)\r\n    #3 WalletBatch::WriteKey(CPubKey const&, std::vector<unsigned char, secure_allocator<unsigned char> > const&, CKeyMetadata const&) /home/hebasto/GitHub/bitcoin/src/wallet/walletdb.cpp:107 (test_bitcoin+0xe4c78e)\r\n    #4 LegacyScriptPubKeyMan::AddKeyPubKeyWithDB(WalletBatch&, CKey const&, CPubKey const&) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:657:22 (test_bitcoin+0xdd669d)\r\n    #5 LegacyScriptPubKeyMan::GenerateNewKey(WalletBatch&, bool) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:955:10 (test_bitcoin+0xdd9554)\r\n    #6 LegacyScriptPubKeyMan::TopUp(unsigned int) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:1170:28 (test_bitcoin+0xddcb11)\r\n    #7 CWallet::GetNewDestination(OutputType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /home/hebasto/GitHub/bitcoin/src/wallet/wallet.cpp:3236:18 (test_bitcoin+0xe24b70)\r\n    #8 coinselector_tests::add_coin(CWallet&, long const&, int, bool, int, bool) /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:69:9 (test_bitcoin+0x824687)\r\n    #9 coinselector_tests::bnb_search_test::test_method() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:296:9 (test_bitcoin+0x820de5)\r\n    #10 coinselector_tests::bnb_search_test_invoker() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:135:1 (test_bitcoin+0x81a9bb)\r\n    #11 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x1a51f9)\r\n    #12 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #13 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\n  Mutex M1028930947835011848 acquired here while holding mutex M1022457023370664312 in main thread:\r\n    #0 pthread_rwlock_wrlock <null> (test_bitcoin+0xc5d0e)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x3d2a5)\r\n    #2 bool WalletBatch::WriteIC<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey>, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey> const&, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> const&, bool) /home/hebasto/GitHub/bitcoin/src/./wallet/walletdb.h:187:22 (test_bitcoin+0xe4c78e)\r\n    #3 WalletBatch::WriteKey(CPubKey const&, std::vector<unsigned char, secure_allocator<unsigned char> > const&, CKeyMetadata const&) /home/hebasto/GitHub/bitcoin/src/wallet/walletdb.cpp:107 (test_bitcoin+0xe4c78e)\r\n    #4 LegacyScriptPubKeyMan::AddKeyPubKeyWithDB(WalletBatch&, CKey const&, CPubKey const&) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:657:22 (test_bitcoin+0xdd669d)\r\n    #5 LegacyScriptPubKeyMan::GenerateNewKey(WalletBatch&, bool) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:955:10 (test_bitcoin+0xdd9554)\r\n    #6 LegacyScriptPubKeyMan::TopUp(unsigned int) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:1170:28 (test_bitcoin+0xddcb11)\r\n    #7 CWallet::GetNewDestination(OutputType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /home/hebasto/GitHub/bitcoin/src/wallet/wallet.cpp:3236:18 (test_bitcoin+0xe24b70)\r\n    #8 coinselector_tests::add_coin(CWallet&, long const&, int, bool, int, bool) /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:69:9 (test_bitcoin+0x824687)\r\n    #9 coinselector_tests::bnb_search_test::test_method() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:296:9 (test_bitcoin+0x820de5)\r\n    #10 coinselector_tests::bnb_search_test_invoker() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:135:1 (test_bitcoin+0x81a9bb)\r\n    #11 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x1a51f9)\r\n    #12 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #13 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\n  Mutex M506513391043629040 acquired here while holding mutex M1028930947835011848 in main thread:\r\n    #0 pthread_rwlock_rdlock <null> (test_bitcoin+0xc591e)\r\n    #1 __db_pthread_mutex_readlock <null> (libdb_cxx-4.8.so+0x3d505)\r\n    #2 bool WalletBatch::WriteIC<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey>, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CPubKey> const&, std::pair<std::vector<unsigned char, secure_allocator<unsigned char> >, uint256> const&, bool) /home/hebasto/GitHub/bitcoin/src/./wallet/walletdb.h:187:22 (test_bitcoin+0xe4c78e)\r\n    #3 WalletBatch::WriteKey(CPubKey const&, std::vector<unsigned char, secure_allocator<unsigned char> > const&, CKeyMetadata const&) /home/hebasto/GitHub/bitcoin/src/wallet/walletdb.cpp:107 (test_bitcoin+0xe4c78e)\r\n    #4 LegacyScriptPubKeyMan::AddKeyPubKeyWithDB(WalletBatch&, CKey const&, CPubKey const&) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:657:22 (test_bitcoin+0xdd669d)\r\n    #5 LegacyScriptPubKeyMan::GenerateNewKey(WalletBatch&, bool) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:955:10 (test_bitcoin+0xdd9554)\r\n    #6 LegacyScriptPubKeyMan::TopUp(unsigned int) /home/hebasto/GitHub/bitcoin/src/wallet/scriptpubkeyman.cpp:1170:28 (test_bitcoin+0xddcb11)\r\n    #7 CWallet::GetNewDestination(OutputType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /home/hebasto/GitHub/bitcoin/src/wallet/wallet.cpp:3236:18 (test_bitcoin+0xe24b70)\r\n    #8 coinselector_tests::add_coin(CWallet&, long const&, int, bool, int, bool) /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:69:9 (test_bitcoin+0x824687)\r\n    #9 coinselector_tests::bnb_search_test::test_method() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:296:9 (test_bitcoin+0x820de5)\r\n    #10 coinselector_tests::bnb_search_test_invoker() /home/hebasto/GitHub/bitcoin/src/wallet/test/coinselector_tests.cpp:135:1 (test_bitcoin+0x81a9bb)\r\n    #11 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x1a51f9)\r\n    #12 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #13 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\nSUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/home/hebasto/GitHub/bitcoin/src/test/test_bitcoin+0xc5d0e) in __interceptor_pthread_rwlock_wrlock\r\n==================\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/18823#issuecomment-622031396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823"
    },
    {
      "event": "commented",
      "id": 622042500,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjA0MjUwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622042500",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T19:01:46Z",
      "updated_at": "2020-04-30T19:01:46Z",
      "author_association": "MEMBER",
      "body": "> @hebasto Thanks for reporting. We test with `--with-sanitizers=thread` in the Travis `ci/test/00_setup_env_native_tsan.sh` job, so if this turns out to be a general issue then it would be interesting to know why the ThreadSanitizer Travis job didn't fail :)\r\n\r\nAfter adding `--disable-wallet` to the `configure` options all of the `libdb`-related warnings gone. Do we have documented it somewhere?\r\n\r\nThe remaining warnings are only from the `sync_tests`:\r\n```\r\n$ ./configure --disable-wallet --with-sanitizers=thread --disable-asm CC=clang-8 CXX=clang++-8\r\n$ make clean && make\r\n$ ./src/test/test_bitcoin --run_test=sync_tests\r\nRunning 1 test case...\r\n==================\r\nWARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=22149)\r\n  Cycle in lock order graph: M131473 (0x7ffedb5970e8) => M131474 (0x7ffedb5970c0) => M131473\r\n\r\n  Mutex M131474 acquired here while holding mutex M131473 in main thread:\r\n    #0 pthread_mutex_lock <null> (test_bitcoin+0xcdfde)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/x86_64-linux-gnu/c++/8/bits/gthr-default.h:748:12 (test_bitcoin+0x636c75)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/x86_64-linux-gnu/c++/8/bits/gthr-default.h:810 (test_bitcoin+0x636c75)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/mutex:107 (test_bitcoin+0x636c75)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_mutex.h:267 (test_bitcoin+0x636c75)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::Enter(char const*, char const*, int) /home/hebasto/GitHub/bitcoin/src/./sync.h:131 (test_bitcoin+0x636c75)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::UniqueLock(AnnotatedMixin<std::recursive_mutex>&, char const*, char const*, int, bool) /home/hebasto/GitHub/bitcoin/src/./sync.h:152 (test_bitcoin+0x636c75)\r\n    #7 void (anonymous namespace)::TestPotentialDeadLockDetected<AnnotatedMixin<std::recursive_mutex> >(AnnotatedMixin<std::recursive_mutex>&, AnnotatedMixin<std::recursive_mutex>&) /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:15 (test_bitcoin+0x636c75)\r\n    #8 sync_tests::potential_deadlock_detected::test_method() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:42 (test_bitcoin+0x636c75)\r\n    #9 sync_tests::potential_deadlock_detected_invoker() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:34:1 (test_bitcoin+0x636467)\r\n    #10 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x17ec99)\r\n    #11 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #12 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\n    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message\r\n\r\n  Mutex M131473 acquired here while holding mutex M131474 in main thread:\r\n    #0 pthread_mutex_lock <null> (test_bitcoin+0xcdfde)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/x86_64-linux-gnu/c++/8/bits/gthr-default.h:748:12 (test_bitcoin+0x636ccb)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/x86_64-linux-gnu/c++/8/bits/gthr-default.h:810 (test_bitcoin+0x636ccb)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/mutex:107 (test_bitcoin+0x636ccb)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_mutex.h:267 (test_bitcoin+0x636ccb)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::Enter(char const*, char const*, int) /home/hebasto/GitHub/bitcoin/src/./sync.h:131 (test_bitcoin+0x636ccb)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::UniqueLock(AnnotatedMixin<std::recursive_mutex>&, char const*, char const*, int, bool) /home/hebasto/GitHub/bitcoin/src/./sync.h:152 (test_bitcoin+0x636ccb)\r\n    #7 void (anonymous namespace)::TestPotentialDeadLockDetected<AnnotatedMixin<std::recursive_mutex> >(AnnotatedMixin<std::recursive_mutex>&, AnnotatedMixin<std::recursive_mutex>&) /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:19 (test_bitcoin+0x636ccb)\r\n    #8 sync_tests::potential_deadlock_detected::test_method() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:42 (test_bitcoin+0x636ccb)\r\n    #9 sync_tests::potential_deadlock_detected_invoker() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:34:1 (test_bitcoin+0x636467)\r\n    #10 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x17ec99)\r\n    #11 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #12 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\nSUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/home/hebasto/GitHub/bitcoin/src/test/test_bitcoin+0xcdfde) in __interceptor_pthread_mutex_lock\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=22149)\r\n  Cycle in lock order graph: M131476 (0x7ffedb597098) => M131477 (0x7ffedb597070) => M131476\r\n\r\n  Mutex M131477 acquired here while holding mutex M131476 in main thread:\r\n    #0 pthread_mutex_lock <null> (test_bitcoin+0xcdfde)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/x86_64-linux-gnu/c++/8/bits/gthr-default.h:748:12 (test_bitcoin+0x636f18)\r\n    #2 std::mutex::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_mutex.h:103 (test_bitcoin+0x636f18)\r\n    #3 std::unique_lock<std::mutex>::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_mutex.h:267 (test_bitcoin+0x636f18)\r\n    #4 UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::Enter(char const*, char const*, int) /home/hebasto/GitHub/bitcoin/src/./sync.h:131 (test_bitcoin+0x636f18)\r\n    #5 UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::UniqueLock(AnnotatedMixin<std::mutex>&, char const*, char const*, int, bool) /home/hebasto/GitHub/bitcoin/src/./sync.h:152 (test_bitcoin+0x636f18)\r\n    #6 void (anonymous namespace)::TestPotentialDeadLockDetected<AnnotatedMixin<std::mutex> >(AnnotatedMixin<std::mutex>&, AnnotatedMixin<std::mutex>&) /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:15 (test_bitcoin+0x636f18)\r\n    #7 sync_tests::potential_deadlock_detected::test_method() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:45 (test_bitcoin+0x636f18)\r\n    #8 sync_tests::potential_deadlock_detected_invoker() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:34:1 (test_bitcoin+0x636467)\r\n    #9 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x17ec99)\r\n    #10 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #11 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\n    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message\r\n\r\n  Mutex M131476 acquired here while holding mutex M131477 in main thread:\r\n    #0 pthread_mutex_lock <null> (test_bitcoin+0xcdfde)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/x86_64-linux-gnu/c++/8/bits/gthr-default.h:748:12 (test_bitcoin+0x636f65)\r\n    #2 std::mutex::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_mutex.h:103 (test_bitcoin+0x636f65)\r\n    #3 std::unique_lock<std::mutex>::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_mutex.h:267 (test_bitcoin+0x636f65)\r\n    #4 UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::Enter(char const*, char const*, int) /home/hebasto/GitHub/bitcoin/src/./sync.h:131 (test_bitcoin+0x636f65)\r\n    #5 UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::UniqueLock(AnnotatedMixin<std::mutex>&, char const*, char const*, int, bool) /home/hebasto/GitHub/bitcoin/src/./sync.h:152 (test_bitcoin+0x636f65)\r\n    #6 void (anonymous namespace)::TestPotentialDeadLockDetected<AnnotatedMixin<std::mutex> >(AnnotatedMixin<std::mutex>&, AnnotatedMixin<std::mutex>&) /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:19 (test_bitcoin+0x636f65)\r\n    #7 sync_tests::potential_deadlock_detected::test_method() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:45 (test_bitcoin+0x636f65)\r\n    #8 sync_tests::potential_deadlock_detected_invoker() /home/hebasto/GitHub/bitcoin/src/test/sync_tests.cpp:34:1 (test_bitcoin+0x636467)\r\n    #9 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11 (test_bitcoin+0x17ec99)\r\n    #10 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) <null> (libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n    #11 __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 (libc.so.6+0x21b96)\r\n\r\nSUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/home/hebasto/GitHub/bitcoin/src/test/test_bitcoin+0xcdfde) in __interceptor_pthread_mutex_lock\r\n==================\r\n\r\n*** No errors detected\r\nThreadSanitizer: reported 2 warnings\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/18823#issuecomment-622042500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823"
    },
    {
      "event": "mentioned",
      "id": 3290920266,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5MDkyMDI2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3290920266",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T19:01:46Z"
    },
    {
      "event": "subscribed",
      "id": 3290920269,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTA5MjAyNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3290920269",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T19:01:46Z"
    },
    {
      "event": "commented",
      "id": 626067525,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjA2NzUyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626067525",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T23:53:23Z",
      "updated_at": "2020-05-08T23:53:23Z",
      "author_association": "MEMBER",
      "body": "I don't think it is possible to run tsan on BDB.\r\n\r\nHave you seen the suppressions in `./test/sanitizer_suppressions/tsan`?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/18823#issuecomment-626067525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823"
    },
    {
      "event": "commented",
      "id": 632523228,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjUyMzIyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632523228",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T06:53:23Z",
      "updated_at": "2020-05-22T06:53:23Z",
      "author_association": "MEMBER",
      "body": "Closing in favor of #19047 which has cleaner problem description.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/18823#issuecomment-632523228",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18823"
    },
    {
      "event": "closed",
      "id": 3363491075,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzM2MzQ5MTA3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3363491075",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T06:53:27Z"
    },
    {
      "event": "locked",
      "id": 6074010379,
      "node_id": "LOE_lADOABII584kVO_3zwAAAAFqCgsL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074010379",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:03:37Z",
      "lock_reason": "resolved"
    }
  ]
}