{
  "type": "issue",
  "issue": {
    "id": 1293046244,
    "node_id": "I_kwDOABII585NElHk",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25539",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25539/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25539/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25539/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/25539",
    "number": 25539,
    "state": "open",
    "state_reason": null,
    "title": "possible corruption: missing undo file",
    "body": "An undo file is written to disk in `WriteUndoDataForBlock`. If the related block file has nFile = 2, then the undo file will also have nFile = 2. It can be flushed to disk in 4 ways:\r\n- `FlushStateToDisk` calls `FlushBlockFile()`. This flushes the last block and undo files on disk.\r\n- When the current block file is full and fKnown=false, `FindBlockPos` will flush the last block file. It will flush the corresponding undo file if the last height in the file is equal to the current tip height.\r\n- It seems that it is possible for the last block and undo files to be flushed if fKnown=true and nFile < last block file, but that's irrelevant here.\r\n- In `WriteUndoDataForBlock`, if the undo file is not the last file and the height whose undo data being written is the last height in the file.\r\n\r\nThe `UndoWriteToDisk` function opens a CAutoFile and writes the data. When it returns, the CAutoFile destructor is called which calls fclose, which flushes (via `fflush`) the buffered data to the OS (at this point it's in dirty pages).\r\n\r\nA simplified version of what can happen:\r\n\r\nTime 1:\r\n- tip=3\r\n- blockfile 2 has blocks: [5, 7, 8], so nHeightLast=8\r\n- blockfile 2 is unflushed\r\n- undo 2 does not exist since tip=3\r\n- the blocks being stored in this way is possible if the headers are received, then the blocks are OOO\r\n\r\nTime 2:\r\n- tip=3\r\n- block 4 arrives, but cannot fit in blockfile 2\r\n  - `FindBlockPos` is called, blockfile 2 is flushed. Note that nHeightLast=8 for this file and tip=3 since the tip is updated later. Therefore undo file 2 isn't flushed here (it also doesn't exist).\r\n- blockfile 3 has blocks: [4]\r\n- blockfile 3 is unflushed\r\n- `ActivateBestChain` will update to tip=4\r\n- `WriteUndoDataForBlock` is called for 4\r\n  - undo file 3 is created for block 4 (in dirty pages)\r\n  - the BLOCK_HAVE_UNDO status flag is set for the related CBlockIndex* for block 4\r\n- `ActivateBestChain` will update to tip=5\r\n- `WriteUndoDataForBlock` is called for 5\r\n  - undo file 2 is created for block 5 (in dirty pages)\r\n  - the BLOCK_HAVE_UNDO status flag is set for CBlockIndex* 5\r\n\r\nTime 3:\r\n- tip=5\r\n- undo file 2, 3 are still in dirty pages\r\n- `FlushStateToDisk` is called:\r\n  - `FlushBlockFile` is called which flushes the *last* block+undo file to disk (3)\r\n  - `WriteBlockIndexDB` is called and flushes the block index state to disk.\r\n\r\nNote: At this point, block 5 has persisted the BLOCK_HAVE_UNDO status flag. Undo file 2 may still be in dirty pages and a power loss would mean that block 5 doesn't actually have rev data. The log would look like this on restart:\r\n\r\n```\r\n2022-07-04T04:15:07.917838Z [init] [validation.cpp:3931] [VerifyDB] Verifying last 4 blocks at level 3\r\n2022-07-04T04:15:07.917847Z [init] [validation.cpp:3938] [VerifyDB] [0%]...ERROR: UndoReadFromDisk: Deserialize or I/O error - CAutoFile::read: end of file: unspecified iostream_category error\r\n2022-07-04T04:15:07.918012Z [init] [util/system.h:50] [error] ERROR: VerifyDB(): *** found bad undo data at 4, hash=221d40281e7719cd139503506649647ca50cc8bf9babaa1d1f91b9f80c4f48dd\r\n```\r\n\r\nTo aid in testing, I set the linux vm.dirty_writeback_centisecs tunable to a high value so that the kernel would wait a while before flushing dirty pages. This made sure that files with fsync called on them would get flushed way before the non-fsync'd dirty pages.\r\n\r\nIf I'm right, then it is corruption but a lot of things have to go wrong for it to happen.",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 219890555,
        "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
        "name": "Block storage",
        "color": "000000",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 2,
    "created_at": "2022-07-04T11:36:08Z",
    "updated_at": "2022-07-05T15:34:08Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 6927534248,
      "node_id": "LE_lADOABII585NElHkzwAAAAGc6cio",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6927534248",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-04T12:07:35Z",
      "label": {
        "name": "Block storage",
        "color": "000000"
      }
    },
    {
      "event": "commented",
      "id": 1175168621,
      "node_id": "IC_kwDOABII585GC6Zt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1175168621",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T15:04:40Z",
      "updated_at": "2022-07-05T15:04:40Z",
      "author_association": "MEMBER",
      "body": "This description is a little complicated to understand. Could you maybe summarize the issue and suggest possible ways it could be fixed?\r\n\r\nIIUC, it seems like the problem is that `FlushStateToDisk` only flushes the last undo file, even though earlier undo files may need to be flushed as well. Both block files and undo files are numbered based on the order blocks are downloaded, but block files are written in the order blocks are _downloaded_ while undo files are written in the order blocks are _validated_, and the order blocks are downloaded is not the same as the order blocks are validated. So it is sufficient for `FlushStateToDisk` to only flush the highest numbered block file, but not sufficient for it to only flush the most highest numbered undo file, since lower-numbered undo files may have been written to as blocks were validated.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25539#issuecomment-1175168621",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25539"
    },
    {
      "event": "commented",
      "id": 1175198338,
      "node_id": "IC_kwDOABII585GDBqC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1175198338",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T15:32:35Z",
      "updated_at": "2022-07-05T15:34:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "That's a good summary.\r\n\r\nIf a block is being connected and the undo file's number is not `m_last_blockfile`, `WriteUndoDataForBlock` may not flush the undo file if the block in question isn't the last height in the corresponding block file. `FlushStateToDisk` won't flush this undo file either, but will flush the `BLOCK_HAVE_UNDO` status flag.\r\n\r\nI think the fix would be for `FlushStateToDisk` to flush any undo files that were written to that resulted in the `BLOCK_HAVE_UNDO` status flag being set.\r\n\r\nNote that since this lower-numbered undo file is given to the OS, it should eventually be flushed to disk in the happy path. So the issue would arise when `FlushStateToDisk` completes followed by a power loss/disruptive event _while_ the lower-numbered undo file hasn't been flushed by the OS.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25539#issuecomment-1175198338",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25539"
    }
  ]
}