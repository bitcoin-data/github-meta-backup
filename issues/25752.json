{
  "type": "issue",
  "issue": {
    "id": 1323281380,
    "node_id": "I_kwDOABII585O36vk",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/25752",
    "number": 25752,
    "state": "closed",
    "state_reason": "not_planned",
    "title": "rest: Further API and code cleanup with query parameters",
    "body": "## Introduction\r\n\r\nIn RESTful APIs, path parameters (e.g. `/some/unique/resource/`) are [typically](https://rapidapi.com/blog/api-glossary/parameters/query/) used to represent resources, and query parameters (e.g. `?sort=asc`) are used to control how these resources are being loaded through e.g. sorting, pagination, filtering, ...\r\n\r\nThe design of the [current REST API endpoints](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md) is quite non-standard in a few ways, I've listed some examples below under \"Undesirable behaviour examples\". Generally, it relies on a number of path (or path-like) parameters that really should be query parameters. Besides being unintuitive for users, I also found the code can be much cleaner when using a generalized interface for query and path parameters. The first work towards this was already done in #24098, but there are still a number of issues outstanding, as e.g. discussed [here](https://github.com/bitcoin/bitcoin/pull/24098#discussion_r790336549) and [here](https://github.com/bitcoin/bitcoin/pull/24098#pullrequestreview-863331148).\r\n\r\n## Suggested changes\r\n\r\nI suggest (and have already prepared the code) to clean up the interface and the code. Besides perhaps the `-deprecatedrest` startup flag, no new user-facing functionality is introduced. Specifically, the relevant proposed changes are:\r\n- introduce a `-deprecatedrest` startup option to allow users to preserve REST endpoint functionality while they upgrade their dependencies, similar to `-deprecatedrpc`\r\n- expand the `HTTPRequest` interface to include easy-to-read functions to access path parameters, like #24098 introduced for query parameters: `HTTPRequest::GetPath()` and `HTTPRequest::GetPathParameter()`. This allows cleaning up the interface quite a bit, including removing the duplicated `strURIpart` that was passed as a third argument to each endpoint (but this is unintuitive and duplicated: the path data is already in the HTTPRequest object).\r\n- further streamline the endpoint URIs:\r\n  - in all endpoints: remove the path-like dot-separated format strings (e.g. `.json`) in favour of a query parameter (`?format=json`), which can default to `json` (especially useful in endpoints that only accept json)\r\n  - use `?from_blockhash=<blockhash>` query parameter instead of a path parameter in `/rest/headers` and `/rest/blockfilterheaders/`, since it is a collection endpoint (multiple resources are returned)\r\n  - deprecate `/rest/block/notxdetails` in favour of a `?txdetails=<true|false>` parameter in `/rest/block`\r\n\r\nThe suggested implementation keeps everything backwards compatible (with the `-deprecatedrest` functions enabled). Even though it means there is a bit more review overhead, I think the tradeoff is acceptable - I did my best to minimize code complexity due to this compatibility.\r\n\r\n\r\n## PRs\r\n\r\nThe suggested changes can largely be separated into 4 small-ish PRs (there are some dependencies, so they build sequentially - but shouldn't be too hard to rebase/reorder/leave things out). I have released the PRs as draft already, just to make it easier to look at the proposed changes.\r\n\r\n1. #25753\r\n1. #25754\r\n1. #25755\r\n1. #25756\r\n\r\n## Discussion questions/notes\r\n\r\nI've already written most of the code, but before fleshing out the PRs I'm first looking to get some feedback on the general concept and approach.\r\n\r\nA couple of notes/things to discuss:\r\n- the LoC change is quite significant, is this a wortwhile upgrade?\r\n- should we maintain backwards compatibility with `-deprecatedrest`, not have backwards compatibility at all, or hide the backwards compatibility from the user?\r\n- `-deprecatedrest` is documented to, like the RPC, operate on a per-endpoint basis. However, since the first PR (format string) affects all endpoints, I thought that would not be user-friendly and instead opted to group them by functional change. Going forward, since we now have a rather extensible interface with the query parameters, I expect we'll use `-deprecatedrest` on a per-endpoint basis indeed.\r\n\r\n\r\n## Undesirable behaviour examples\r\n\r\n- Require the user to explicitly define parameters where only 1 value is allowed anyway. For example, `rest/chaininfo/` only accepts `json` as a format but throws if we do not explicitly define `json` to be the format\r\n- [duplicate `deploymentinto` endpoints required](https://github.com/bitcoin/bitcoin/pull/25412#discussion_r927815259)\r\n- Unnecessary code coupling in [`ParseDataFormat()`](https://github.com/bitcoin/bitcoin/blob/c991132b0437b737502ae1f18480e00f84430b72/src/rest.cpp#L134-L157) where we need one function to get the entire query path and then magically remove the format string (e.g. `.json`) from it and return it separately.\r\n- Two different endpoints to support the [`notxdetails`](https://github.com/bitcoin/bitcoin/blob/master/src/rest.cpp#L944-L945) option in `/rest/block`, this could just be one endpoint with an optional default query parameter\r\n- APIs can now be upgraded in a backwards-compatible way more easily, since query parameters are named and thus do not rely on position and can be optional\r\n\r\n",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 8,
    "closed_at": "2023-03-13T11:27:43Z",
    "created_at": "2022-07-30T20:34:30Z",
    "updated_at": "2023-03-13T11:27:43Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 7095464130,
      "node_id": "LE_lADOABII585O36vkzwAAAAGm7DDC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7095464130",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T20:50:26Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "subscribed",
      "id": 7128928204,
      "node_id": "SE_lADOABII585O36vkzwAAAAGo6s_M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7128928204",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-04T15:20:55Z"
    },
    {
      "event": "commented",
      "id": 1207444515,
      "node_id": "IC_kwDOABII585H-CQj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207444515",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-07T16:45:47Z",
      "updated_at": "2022-08-07T16:45:47Z",
      "author_association": "MEMBER",
      "body": "My impression from looking at the REST interface the last time was also that it's not standard in several ways. But it also seemed unclear who is actually using the REST interface if I remember correctly. That made it hard to decide both if anyone is facing issues from the changes and even if it's actually worth making improvements at all.\r\n\r\nIs there a list of projects that are using the REST interface? I think that would be very helpful anyway, in order to collect targeted feedback from the actual users that these changes will affect.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1207444515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1208296520,
      "node_id": "IC_kwDOABII585IBSRI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208296520",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-08T15:45:50Z",
      "updated_at": "2022-08-08T15:45:50Z",
      "author_association": "MEMBER",
      "body": "> and even if it's actually worth making improvements at all.\r\n\r\nI think there's also a bit of a chicken-and-egg problem here: since the REST API is limited in functionality and not very easy-to-use, it will have little adoption, and because it has little adoption, it's not worked on much. \r\n\r\n> Is there a list of projects that are using the REST interface? I think that would be very helpful anyway, in order to collect targeted feedback from the actual users that these changes will affect.\r\n\r\nI agree, that would be useful to have. I have not seen such a list, and don't know about any big projects that currently use it. If I find anything, I'll keep track of it.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1208296520",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1209327967,
      "node_id": "IC_kwDOABII585IFOFf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1209327967",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T12:38:15Z",
      "updated_at": "2022-08-09T12:38:15Z",
      "author_association": "MEMBER",
      "body": "> Is there a list of projects that are using the REST interface? I think that would be very helpful anyway, in order to collect targeted feedback from the actual users that these changes will affect.\r\n\r\nI use the REST interface in two of my projects:\r\n- My mempool-observer queries `/rest/mempool/contents.json` as I've found it to be faster than the`getrawmempool` RPC, especially significant when my mempool is full. Also, using the REST interface instead of the RPC interface, I don't have to bake in any user/pass configuration. Also, no dependency on JSON RPC library. Using e.g. a Python/other RPC->REST proxy as discussed in #23259 would work, but also means an additional service that can break. \r\n- A WIP project of mine similar to https://forkmonitor.info uses the `getchaintips` RPC (I think this information could also be exposed via REST) and queries headers both via `getblockheader` and the old `/rest/headers/<COUNT>/<BLOCK-HASH>.bin` REST interface. I need to query many headers, so I prefer getting 2000 headers via REST than headers one-by-one via the `getblockheader` RPC (maybe getting a range of headers should be added to the RPC interface). I currently use the old, deprecated REST interface as I want to support older Bitcoin Core versions (similar to forkmonitor.info I want to query e.g. Bitcoin Core version v0.10 and v23 to compare their chain tips). Going forward, I think I will have to keep functionality for the deprecated interface and add the new interface.\r\n\r\nHappy to provide more usage feedback - feel free to ask.\r\n\r\nI think, if we keep the REST interface it's worth modernizing it. The proposed changes in your first three PRs seem reasonable.  Having a `-deprecatedrest` option for a while (one or two major releases) makes sense, but the old endpoints should be dropped eventually. \r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1209327967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1210045142,
      "node_id": "IC_kwDOABII585IH9LW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210045142",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:22Z",
      "updated_at": "2022-08-10T01:18:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "why not just /rest/1/ or something to denote request versions? and then we can eventually drop the \"implicit v0\" query version / only turn it on if -deprecatedrest=0 is set? (parsed as comma separated list of deprecated rest versions)?\r\n\r\nThis way a node can serve both upgraded and unupgraded applications (e.g., suppose you run @0xB10C's services that upgrade AND some lightning thing @TheBlueMatt uses rest for, then both can work)",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1210045142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "mentioned",
      "id": 7159754165,
      "node_id": "MEE_lADOABII585O36vkzwAAAAGqwS21",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754165",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "subscribed",
      "id": 7159754169,
      "node_id": "SE_lADOABII585O36vkzwAAAAGqwS25",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754169",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "mentioned",
      "id": 7159754172,
      "node_id": "MEE_lADOABII585O36vkzwAAAAGqwS28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754172",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "subscribed",
      "id": 7159754177,
      "node_id": "SE_lADOABII585O36vkzwAAAAGqwS3B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754177",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "commented",
      "id": 1211988396,
      "node_id": "IC_kwDOABII585IPXms",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211988396",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T13:26:55Z",
      "updated_at": "2022-08-17T08:32:22Z",
      "author_association": "MEMBER",
      "body": "Thanks for the feedback and use case 0xB10C, that's helpful to know. I think extending the RPC to support fetching multiple blockheaders would make sense if that otherwise prevents the REST API from being updated.\r\n\r\n> why not just /rest/1/ or something to denote request versions?\r\n\r\nI initially implemented it that way and it would be my preferred approach, but since it (admittedly not by a crazy amount) increased the amount of code to review for (what I assumed to be) no substantial benefit in this particular case so I scrapped it. If indeed we want one bitcoind to be able to serve both v0 and v1 endpoints then that would be the way to go. But, practically, I'm not sure there's real demand for that? E.g. in your example if just one of both (external) services supports both versions, then your REST server can just run that shared version. This seems to be the case in this example since @0xB10C plans to add support for both interfaces. It would generally be a better design though, so I'll look into it again - thanks for the feedback.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1211988396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "mentioned",
      "id": 7171655510,
      "node_id": "MEE_lADOABII585O36vkzwAAAAGrdsdW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7171655510",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T13:26:55Z"
    },
    {
      "event": "subscribed",
      "id": 7171655522,
      "node_id": "SE_lADOABII585O36vkzwAAAAGrdsdi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7171655522",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T13:26:55Z"
    },
    {
      "event": "commented",
      "id": 1217197363,
      "node_id": "IC_kwDOABII585IjPUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217197363",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T21:42:10Z",
      "updated_at": "2022-08-16T21:42:10Z",
      "author_association": "MEMBER",
      "body": "I use the REST Interface and I agree it should be improved.\r\n\r\n\r\n> in all endpoints: remove the path-like dot-separated format strings (e.g. .json) in favour of a query parameter (?format=json), which can default to json (especially useful in endpoints that only accept json)\r\n\r\nI agree 1000%, `format` is definitely something we can use with `query`. \r\n\r\n> deprecate /rest/block/notxdetails in favour of a ?txdetails=<true|false> parameter in /rest/block\r\n\r\nMaybe +0. I don't think it's a bad practice having `/notxdetails` in this case. But ok if we decide to change it.\r\n\r\n> the LoC change is quite significant, is this a wortwhile upgrade?\r\nSpecially about the path-like dot-separated format strings, I think so. I'd like to see the REST interface more friendly and robust, and more used.\r\n\r\nAnother improvement I've thought about REST Interface, maybe we could add authentication/authorization and could work with more sensitive endpoints. I couldn't find why we don't have auth yet (no one worked on that or is there any limitation?).",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1217197363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1219800660,
      "node_id": "IC_kwDOABII585ItK5U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219800660",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:24:59Z",
      "updated_at": "2022-08-18T18:24:59Z",
      "author_association": "MEMBER",
      "body": "Although https://github.com/bitcoin/bitcoin/pull/7759 was about streaming the entire UTXO set, chunking it was further discussed in https://github.com/bitcoin/bitcoin/issues/14584. \r\nIs pagination/chunking something that could become easier through the proposed changes? Maybe by supporting a `skip` query parameter?",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1219800660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1465971535,
      "node_id": "IC_kwDOABII585XYPNP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1465971535",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T11:27:42Z",
      "updated_at": "2023-03-13T11:27:42Z",
      "author_association": "MEMBER",
      "body": "Closing this (and draft PRs). I still think the suggested changes are an improvement, and that the state of our current interfaces is an impediment to (new) developers building on Bitcoin Core instead of using third-party services, but as evidenced by my lack of activity on this issue I don't feel anymore like this is currently a particularly worthwhile endeavour given current development resources and other active projects that require developer attention.\r\n\r\nMoreover, I think I'm now leaning more towards Bitcoin Core having a single fully functional, fully standard, performant interface (whether that's RPC or REST can be debated) to reduce maintenance burden. Optionally, light-weight wrapper services (e.g. https://github.com/bitcoin/bitcoin/issues/23259) can be provided to make it easier for developers to build on Core with technologies they're familiar with, but this need not necessarily be a Core project.\r\n\r\nThank you everyone for your input on this issue, my apologies for not making better use of your time here.\r\n\r\n---\r\n\r\n> Is pagination/chunking something that could become easier through the proposed changes?\r\n\r\nEach endpoint has to implement pagination because it's resource specific, but adding a `skip` parameter is trivial since https://github.com/bitcoin/bitcoin/pull/24098. Typically paginated REST responses include some headers such as `X-Page`, `X-Total-Pages`, ... for which additional helper utilities could be added to avoid code duplication - those are not included in any of the PRs in this issue.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1465971535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "closed",
      "id": 8730589714,
      "node_id": "CE_lADOABII585O36vkzwAAAAIIYjoS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8730589714",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T11:27:43Z"
    },
    {
      "event": "referenced",
      "id": 8761181833,
      "node_id": "REFE_lADOABII585O36vkzwAAAAIKNQaJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8761181833",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ebb15ea75ad1e9c270ecf52e4a0cb67dc0199366",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/ebb15ea75ad1e9c270ecf52e4a0cb67dc0199366",
      "created_at": "2023-03-15T23:39:39Z"
    },
    {
      "event": "referenced",
      "id": 8762739450,
      "node_id": "REFE_lADOABII585O36vkzwAAAAIKTMr6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8762739450",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0dea134c109bbf40e40fa09762ca2002b139abe1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0dea134c109bbf40e40fa09762ca2002b139abe1",
      "created_at": "2023-03-16T04:27:19Z"
    },
    {
      "event": "referenced",
      "id": 8762785456,
      "node_id": "REFE_lADOABII585O36vkzwAAAAIKTX6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8762785456",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "595099b00b65204a861399cdff9bded615cd3a1f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/595099b00b65204a861399cdff9bded615cd3a1f",
      "created_at": "2023-03-16T04:38:11Z"
    }
  ]
}