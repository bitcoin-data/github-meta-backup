{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115",
    "id": 373479509,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzczNDc5NTA5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18115",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18115.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18115.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
    "number": 18115,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wallet: Pass in transactions and messages for signing instead of exporting the private keys",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Following #17261, the way to sign transactions, PSBTs, and messages was to use `GetSigningProvider()` and get a `SigningProvider` containing the private keys. However this may not be feasible for future `ScriptPubKeyMan`s, such as for hardware wallets. Instead of exporting a `SigningProvider` containing private keys, we need to pass these things into the `ScriptPubKeyMan` (via `CWallet`) so that they can do whatever is needed internally to sign them. This is largely a refactor as the logic of processing transactions, PSBTs, and messages for is moved into `LegacyScriptPubKeyMan` and `CWallet` instead of being handled by the caller (e.g. `signrawtransaction`).\r\n\r\nTo help with this, I've refactored the 3(!) implementations of a `SignTransaction()` function into one generic one. This function will be called by `signrawtransactionwithkey` and `LegacyScriptPubKeyMan::SignTransaction()`. `CWallet::CreateTransaction()` is changed to call `CWallet::SignTransaction()` which in turn, calls `LegacyScriptPubKeyMan::SignTransaction()`. Other `ScriptPubKeyMan`s may implement `SignTransaction()` differently.\r\n\r\n`FillPSBT()` is moved to be a member function of `CWallet` and the `psbtwallet.cpp/h` files removed. It is further split so that `CWallet` handles filling the UTXOs while the `ScriptPubKeyMan` handles adding keys, derivation paths, scripts, and signatures. In the end `LegacyScriptPubKeyMan::FillPSBT` still calls `SignPSBTInput`, but the `SigningProvider` is internal to `LegacyScriptPubKeyMan`. Other `ScriptPubKeyMan`s may do something different.\r\n\r\nA new `SignMessage()` function is added to both `CWallet` and `ScriptPubKeyMan`. Instead of having the caller (i.e. `signmessage` or the sign message dialog) get the private key, hash the message, and sign, `ScriptPubKeyMan` will now handle that (`CWallet` passes through to the `ScriptPubKeyMan`s as it does for many functions). This signing code is thus consolidated into `LegacyScriptPubKeyMan::SignMessage()`, though other `ScriptPubKeyMan`s may implement it differently. Additionally, a `SigningError` enum is introduced for the different errors that we expect to see from `SignMessage()`.\r\n\r\nLastly, `GetSigningProvider()` is renamed to `GetPublicSigningProvider()`. It will now only provide pubkeys, key origins, and scripts. `LegacySigningProvider` has it's `GetKey` and `HaveKey` functions changed to only return false. Future implementations should return `HidingSigningProvider`s where private keys are hidden.\r\n\r\nOther things like `dumpprivkey` and `dumpwallet` are not changed because they directly need and access the `LegacyScriptPubKeyMan` so are not relevant to future changes.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-02-11T05:23:22Z",
    "updated_at": "2022-02-15T10:27:50Z",
    "closed_at": "2020-03-09T20:02:53Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-09T20:02:53Z",
    "merge_commit_sha": "dcf2ccbfde1f11c055900aff69fd527559512eab",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "achow101:sign-in-spkman",
      "ref": "sign-in-spkman",
      "sha": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 34,
        "watchers_count": 34,
        "size": 238743,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-02T17:43:24Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-05-16T00:18:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "31b2ce70fb279e886da636716e45ec75bca0a711",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 427,
    "deletions": 270,
    "changed_files": 19,
    "commits": 9,
    "review_comments": 67,
    "comments": 21
  },
  "events": [
    {
      "event": "labeled",
      "id": 3025263001,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwMjUyNjMwMDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3025263001",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T05:23:57Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 584486503,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQ4NjUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584486503",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T05:47:27Z",
      "updated_at": "2020-03-07T03:17:13Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17938 (Disallow automatic conversion between disparate hash types by Empact)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n* #16910 (wallet: reduce loading time by using unordered maps by achow101)\n* #16549 ([WIP] UI external signer support (e.g. hardware wallet) by Sjors)\n* #16546 ([WIP] External signer support - Wallet Box edition by Sjors)\n* #16528 (Native Descriptor Wallets using DescriptorScriptPubKeyMan by achow101)\n* #16440 (BIP-322: Generic signed message format by kallewoof)\n* #12911 (wallet: Show fee in results for signrawtransaction* for segwit inputs by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-584486503",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3028489011,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyODQ4OTAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3028489011",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T22:29:44Z"
    },
    {
      "event": "renamed",
      "id": 3028838887,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzAyODgzODg4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3028838887",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T00:38:26Z",
      "rename": {
        "from": "[wallet] Pass in transactions and messages for signing instead of exporting the private keys",
        "to": "wallet: Pass in transactions and messages for signing instead of exporting the private keys"
      }
    },
    {
      "event": "commented",
      "id": 585100204,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTEwMDIwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585100204",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T08:57:51Z",
      "updated_at": "2020-02-12T08:57:51Z",
      "author_association": "MEMBER",
      "body": "@kallewoof may find this interesting too in light of BIP-322 (Generic signed message format) #16440",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-585100204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "mentioned",
      "id": 3029892983,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAyOTg5Mjk4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3029892983",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T08:57:52Z"
    },
    {
      "event": "subscribed",
      "id": 3029892987,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMjk4OTI5ODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3029892987",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T08:57:52Z"
    },
    {
      "event": "reviewed",
      "id": 357303366,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MzAzMzY2",
      "url": null,
      "actor": null,
      "commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-357303366",
      "submitted_at": "2020-02-12T09:34:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "commented",
      "id": 585122576,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTEyMjU3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585122576",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T09:51:16Z",
      "updated_at": "2020-02-12T09:51:16Z",
      "author_association": "MEMBER",
      "body": "https://github.com/achow101/bitcoin/blob/e4714e0/src/rpc/misc.cpp#L340 still calls the old signing code `key.SignCompact();` directly. Maybe that needs to be updated to also use the newly added function `SignMessage()`?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-585122576",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "reviewed",
      "id": 357345688,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MzQ1Njg4",
      "url": null,
      "actor": null,
      "commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-357345688",
      "submitted_at": "2020-02-12T10:35:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "reviewed",
      "id": 357293657,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjkzNjU3",
      "url": null,
      "actor": null,
      "commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. I roughly reviewed code for e4714e05ca9f3000384f9ed8f44e91a485f88bee and left some comments.\r\n\r\n0eb285f7146ae9beec3a19829cc4420ad9f251ae `Refactor rawtransaction's SignTransaction into generic SignTransaction function` would be easier to review (`--color-moved=dimmed-zebra -w`) if you renamed the variables in separate commit.\r\n\r\nIt may be better to combine 4595326628bd4c91c753e923535178fca9ade2fd with be7991f63de2c0cce7d1e622a6ee12dd8f7204c9 so the signing code is moved, rather than just appear (though it's short enough to compare manually).\r\n\r\n> Lastly, `GetSigningProvider()` is renamed to `GetPublicSigningProvider()`. It will now only provide pubkeys, key origins, and scripts. `LegacySigningProvider` has it's `GetKey` and `HaveKey` functions changed to only return false. Future implementations should return `HidingSigningProvider`s where private keys are hidden.\r\n\r\nThis bit is fairly confusing.\r\n\r\nThis PR is fairly large, and only deduplicates a subset of @vasild's #17577 (only what's needed to move forward with the wallet refactor). I didn't study this other PR in detail, but if it's possible to build on top of that, it would split the review burden and remove more duplication.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-357293657",
      "submitted_at": "2020-02-12T10:51:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3031762014,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAzMTc2MjAxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3031762014",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T17:32:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3031827328,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAzMTgyNzMyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3031827328",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T17:52:26Z"
    },
    {
      "event": "commented",
      "id": 585333090,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTMzMzA5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585333090",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T17:53:26Z",
      "updated_at": "2020-02-12T19:37:02Z",
      "author_association": "MEMBER",
      "body": "> [0eb285f](https://github.com/bitcoin/bitcoin/commit/0eb285f7146ae9beec3a19829cc4420ad9f251ae) `Refactor rawtransaction's SignTransaction into generic SignTransaction function` would be easier to review (`--color-moved=dimmed-zebra -w`) if you renamed the variables in separate commit.\r\n\r\nI've undone the renames.\r\n\r\n> It may be better to combine [4595326](https://github.com/bitcoin/bitcoin/commit/4595326628bd4c91c753e923535178fca9ade2fd) with [be7991f](https://github.com/bitcoin/bitcoin/commit/be7991f63de2c0cce7d1e622a6ee12dd8f7204c9) so the signing code is moved, rather than just appear (though it's short enough to compare manually).\r\n\r\nSquashed them together.\r\n\r\n> > Lastly, `GetSigningProvider()` is renamed to `GetPublicSigningProvider()`. It will now only provide pubkeys, key origins, and scripts. `LegacySigningProvider` has it's `GetKey` and `HaveKey` functions changed to only return false. Future implementations should return `HidingSigningProvider`s where private keys are hidden.\r\n> \r\n> This bit is fairly confusing.\r\n\r\nHow so? I'm just saying that `GetPublicSigningProvider()` will just return a `SigningProvider` where `GetKey()` and `HaveKey()` will fail.\r\n\r\n> This PR is fairly large, and only deduplicates a subset of @vasild's #17577 (only what's needed to move forward with the wallet refactor). I didn't study this other PR in detail, but if it's possible to build on top of that, it would split the review burden and remove more duplication.\r\n\r\nI'll take a look at that.\r\n\r\n> https://github.com/achow101/bitcoin/blob/e4714e0/src/rpc/misc.cpp#L340 still calls the old signing code `key.SignCompact();` directly. Maybe that needs to be updated to also use the newly added function `SignMessage()`?\r\n\r\nDone\r\n",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-585333090",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "mentioned",
      "id": 3031830672,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAzMTgzMDY3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3031830672",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T17:53:26Z"
    },
    {
      "event": "subscribed",
      "id": 3031830676,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMzE4MzA2NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3031830676",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T17:53:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3032036121,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAzMjAzNjEyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3032036121",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T18:56:00Z"
    },
    {
      "event": "reviewed",
      "id": 358122717,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MTIyNzE3",
      "url": null,
      "actor": null,
      "commit_id": "01839f3797897bb7d6bc2200e804e52cd3aca191",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looked at code a bit, but not extensively.\r\n\r\nThe SignMessage for each scriptpubman is a step backwards considering BIP322 will unify these all into a single place. It would be great if you reviewed that PR (if you already have, and still feel this is the right approach, I'd love to know why).\r\n\r\nI'll review/test this PR as well and comment more generally but wanted to put this out there now.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-358122717",
      "submitted_at": "2020-02-13T11:33:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "commented",
      "id": 585745930,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTc0NTkzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585745930",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-13T13:08:03Z",
      "updated_at": "2020-02-13T13:08:03Z",
      "author_association": "MEMBER",
      "body": "I am trying to merge BIP322 #16440  on top of this, and am running into an issue demonstrated by the below patch:\r\n```diff\r\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\r\nindex bde8a6099..dde7819fa 100644\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -559,6 +559,14 @@ static UniValue signmessage(const JSONRPCRequest& request)\r\n     }\r\n\r\n     const PKHash *pkhash = boost::get<PKHash>(&dest);\r\n+\r\n+    auto provider = pwallet->GetPublicSigningProvider(GetScriptForDestination(dest));\r\n+    auto keyid = GetKeyForDestination(*provider, dest);\r\n+    CKey secret;\r\n+    if (!provider->GetKey(keyid, secret)) {\r\n+        assert(0);\r\n+    }\r\n+\r\n     if (!pkhash) {\r\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\r\n     }\r\n```\r\n\r\nThe above code hits the assert. I.e. despite getting a signing provider for the destination, it still fails to get the key. This code (i.e. getting signing provider and then getting privkey from that) in current master.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-585745930",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "commented",
      "id": 585821638,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTgyMTYzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585821638",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-13T15:40:38Z",
      "updated_at": "2020-02-13T15:42:34Z",
      "author_association": "MEMBER",
      "body": "> The SignMessage for each scriptpubman is a step backwards considering BIP322 will unify these all into a single place. It would be great if you reviewed that PR (if you already have, and still feel this is the right approach, I'd love to know why).\r\n\r\nYou can still have the message signing code unified to a single place, and in fact, this PR does that (it consolidates the `signmessage` RPC and the Sign Message dialog signing implementations). Each `ScriptPubKeyMan` can still call that single unified function from within it's own `SignMessage` function. But each one having it's own `SignMessage` also allows us to implement it differently depending on the `ScriptPubKeyMan`. In particular, for hardware wallets, we can't use the unified `SignMessage` function because that would require producing a `SigningProvider` containing private keys, which is not possible for hardware wallets. In order to sign anything with hardware wallets, we need to pass in the thing to be signed to the device and let it handle the signing rather than signing it ourselves.\r\n\r\nThis change means that a future `HardwareScriptPubKeyMan` can do exactly that: the message is passed into `HardwareScriptPubKeyMan::SignMessage` which then passes it along to the hardware wallet. This way, nothing external to the wallet needs to know that there is a hardware wallet or how to handle it. That can all be done within the `HardwareScriptPubKeyMan`.\r\n\r\n> The above code hits the assert. I.e. despite getting a signing provider for the destination, it still fails to get the key. This code (i.e. getting signing provider and then getting privkey from that) in current master.\r\n\r\nThat's because you are still using the old code and way of signing messages. There is no need for `signmessage` to get a `SigningProvider` anymore. Instead you should be implementing either within the `SignMessage` function that is now in `sign.cpp`. You'll probably need to change the arguments, but you shouldn't need to go to the specific call sites like `signmessage` or the Sign Message dialog.\r\n\r\nSpecifically the reason this hits the assert is that the `SigningProvider` that is returned only returns public keys and scripts. `GetKey` and `HaveKey` have been changed to always fail. Notice that the function named `GetSigningProvider` was renamed to `GetPublicSigningProvider`.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-585821638",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3036853905,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAzNjg1MzkwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3036853905",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-13T23:05:43Z"
    },
    {
      "event": "commented",
      "id": 586016050,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjAxNjA1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586016050",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-13T23:05:45Z",
      "updated_at": "2020-02-13T23:05:45Z",
      "author_association": "MEMBER",
      "body": "I've based this on top of #17577",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-586016050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "commented",
      "id": 586087508,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjA4NzUwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586087508",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T04:03:25Z",
      "updated_at": "2020-02-14T04:04:56Z",
      "author_association": "MEMBER",
      "body": "> That's because you are still using the old code and way of signing messages. There is no need for signmessage to get a SigningProvider anymore. Instead you should be implementing either within the SignMessage function that is now in sign.cpp. You'll probably need to change the arguments, but you shouldn't need to go to the specific call sites like signmessage or the Sign Message dialog.\r\n\r\nAhh. In that case `PublicSigningProvider` is a bad name for it, I think? It's not providing any *signing* at all, after all. I assume this is used to verify signatures? Maybe `GetPublicKeyProvider`.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-586087508",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3039648647,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAzOTY0ODY0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3039648647",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T18:06:43Z"
    },
    {
      "event": "commented",
      "id": 586404074,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQwNDA3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586404074",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T18:07:59Z",
      "updated_at": "2020-02-14T18:07:59Z",
      "author_association": "MEMBER",
      "body": "> Ahh. In that case `PublicSigningProvider` is a bad name for it, I think? It's not providing any _signing_ at all, after all. I assume this is used to verify signatures? Maybe `GetPublicKeyProvider`.\r\n\r\nIt's used primarily for checking solvability. So I've renamed it to `GetSolvingProvider`",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-586404074",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3039655086,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAzOTY1NTA4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3039655086",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T18:09:01Z"
    },
    {
      "event": "commented",
      "id": 586447261,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ0NzI2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586447261",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T19:50:11Z",
      "updated_at": "2020-02-14T19:50:11Z",
      "author_association": "MEMBER",
      "body": "`GetSolutionProvider`? :-P",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-586447261",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "commented",
      "id": 588334247,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODMzNDI0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588334247",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T17:13:01Z",
      "updated_at": "2020-02-19T17:13:01Z",
      "author_association": "MEMBER",
      "body": "concept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-588334247",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "reviewed",
      "id": 362040407,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDQwNDA3",
      "url": null,
      "actor": null,
      "commit_id": "a9f1c58ccd4a55b026518be691a0eae23e4bf489",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK ba91cc878ad18e457c79ca3f84be3b53f1182887 (pending parent PR)\r\n\r\nI made a commit that introduces `SolvingProvider` as the `SigningProvider` base class, which I think makes things more clear. But it's lot of code changes: https://github.com/Sjors/bitcoin/commit/7f97d83ccbc291d0a69c7c8aa5b8f9d217d6badf",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-362040407",
      "submitted_at": "2020-02-20T19:51:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "commented",
      "id": 589734450,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTczNDQ1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589734450",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T16:42:39Z",
      "updated_at": "2020-02-21T16:42:39Z",
      "author_association": "MEMBER",
      "body": "note that this PR is built on https://github.com/bitcoin/bitcoin/pull/17577",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-589734450",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3061258707,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA2MTI1ODcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3061258707",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T17:13:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3061273891,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA2MTI3Mzg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3061273891",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T17:19:09Z"
    },
    {
      "event": "reviewed",
      "id": 363456337,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDU2MzM3",
      "url": null,
      "actor": null,
      "commit_id": "5cab890b915fd9f25cada7ddab7cc00eea22c80b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reviewed to 5cab890b915fd9f25cada7ddab7cc00eea22c80b , just a few points, otherwise looks good",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-363456337",
      "submitted_at": "2020-02-24T15:49:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3066233815,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA2NjIzMzgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3066233815",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-24T17:14:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3066248566,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA2NjI0ODU2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3066248566",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-24T17:18:36Z"
    },
    {
      "event": "commented",
      "id": 590446829,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDQ0NjgyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590446829",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-24T17:19:07Z",
      "updated_at": "2020-02-24T17:19:07Z",
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/18115/commits/2525db8eb1af79f00899cac1bd2ff8a1e85d32f8",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-590446829",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "labeled",
      "id": 3069026127,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNjkwMjYxMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3069026127",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T11:17:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3070314966,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3MDMxNDk2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070314966",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:21:45Z"
    },
    {
      "event": "unlabeled",
      "id": 3070350366,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzA3MDM1MDM2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070350366",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:32:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 364363211,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzYzMjEx",
      "url": null,
      "actor": null,
      "commit_id": "c81a3c1222a22936503d34d3dab153a2fda87d40",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK b26777cb7b3fa59c4b518d953165fdb80ca444a9, modulo the below issue",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-364363211",
      "submitted_at": "2020-02-25T18:58:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3070695158,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3MDY5NTE1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070695158",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T19:28:47Z"
    },
    {
      "event": "commented",
      "id": 591032633,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTAzMjYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591032633",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T19:41:44Z",
      "updated_at": "2020-02-26T08:38:12Z",
      "author_association": "MEMBER",
      "body": "utACK 1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-591032633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "reviewed",
      "id": 364422642,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDIyNjQy",
      "url": null,
      "actor": null,
      "commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-364422642",
      "submitted_at": "2020-02-25T20:24:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "mentioned",
      "id": 3070956697,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA3MDk1NjY5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070956697",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T20:50:43Z"
    },
    {
      "event": "subscribed",
      "id": 3070956704,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNzA5NTY3MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070956704",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T20:50:43Z"
    },
    {
      "event": "commented",
      "id": 591100302,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTEwMDMwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591100302",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T22:19:38Z",
      "updated_at": "2020-02-25T22:19:38Z",
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/18115/commits/1f9a806a0184ebc4fe7b7b99df6341e0a00fef80\r\n\r\nThough I wish the code regarding the last commit was easier to grok about.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-591100302",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "added_to_project",
      "id": 3079108465,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzMDc5MTA4NDY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3079108465",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T19:07:29Z",
      "project_card": {
        "id": 33778975,
        "url": "https://api.github.com/projects/columns/cards/33778975",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "review_requested",
      "id": 3080888338,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50MzA4MDg4ODMzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3080888338",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-28T08:03:30Z",
      "requested_reviewer": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 366742392,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzQyMzky",
      "url": null,
      "actor": null,
      "commit_id": "f4b3fbd70b9c982f6d1b03c62241fd73be6eac10",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/commit/1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-366742392",
      "submitted_at": "2020-02-29T00:13:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3108531632,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwODUzMTYzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3108531632",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-08T16:23:55Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzUyYjU5ZDBhNDRhODZkOTRmZWU0ZTQzNzk3OGQ4MjI4NjJjNTQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c52b59d0a44a86d94fee4e437978d822862c542",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2c52b59d0a44a86d94fee4e437978d822862c542",
      "tree": {
        "sha": "a878b9ed1aec863695990b863868417b27c4e955",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a878b9ed1aec863695990b863868417b27c4e955"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e12a61044b15e4e29ac786135a9ebb72d1bfc61",
          "sha": "5e12a61044b15e4e29ac786135a9ebb72d1bfc61",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5e12a61044b15e4e29ac786135a9ebb72d1bfc61"
        }
      ],
      "message": "Refactor rawtransaction's SignTransaction into generic SignTransaction function",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-08T16:26:27Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T00:19:59Z"
      },
      "sha": "2c52b59d0a44a86d94fee4e437978d822862c542"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTk5ZGQ1ODhjYWIwZmY0NzliYzdiZWU4YzlmYzMzODgwMjY1ZWM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d999dd588cab0ff479bc7bee8c9fc33880265ec6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d999dd588cab0ff479bc7bee8c9fc33880265ec6",
      "tree": {
        "sha": "661ee9f6b871d1e8b3ec1c46a80d60f9b06d3880",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/661ee9f6b871d1e8b3ec1c46a80d60f9b06d3880"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c52b59d0a44a86d94fee4e437978d822862c542",
          "sha": "2c52b59d0a44a86d94fee4e437978d822862c542",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2c52b59d0a44a86d94fee4e437978d822862c542"
        }
      ],
      "message": "Add SignTransaction function to ScriptPubKeyMan and LegacyScriptPubKeyMan",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-08T16:26:32Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T00:49:31Z"
      },
      "sha": "d999dd588cab0ff479bc7bee8c9fc33880265ec6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzdkZTkyNzQ0MmQzZjAyNDkyNmE2NmM0MzZkNTllMzkxYzg2OTZh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f37de927442d3f024926a66c436d59e391c8696a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f37de927442d3f024926a66c436d59e391c8696a",
      "tree": {
        "sha": "dfabaf31b2b9a462d8e47fe53faf1706e4511124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfabaf31b2b9a462d8e47fe53faf1706e4511124"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d999dd588cab0ff479bc7bee8c9fc33880265ec6",
          "sha": "d999dd588cab0ff479bc7bee8c9fc33880265ec6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d999dd588cab0ff479bc7bee8c9fc33880265ec6"
        }
      ],
      "message": "Implement CWallet::SignTransaction using ScriptPubKeyMan::SignTransaction",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-08T16:26:32Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T00:49:56Z"
      },
      "sha": "f37de927442d3f024926a66c436d59e391c8696a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGFmMzI0ZDE1YzFlZTQzYzJhYmQxMWEzMDRhZTE4YzdlZTgyZWIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4af324d15c1ee43c2abd11a304ae18c7ee82eb0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a4af324d15c1ee43c2abd11a304ae18c7ee82eb0",
      "tree": {
        "sha": "594206fa804e9004ab10ba0085df99dea9763841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/594206fa804e9004ab10ba0085df99dea9763841"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f37de927442d3f024926a66c436d59e391c8696a",
          "sha": "f37de927442d3f024926a66c436d59e391c8696a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f37de927442d3f024926a66c436d59e391c8696a"
        }
      ],
      "message": "Use CWallet::SignTransaction in CreateTransaction and signrawtransactionwithwallet\n\nInstead of duplicating signing code, just use the function we already\nhave.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-08T16:27:05Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T00:50:52Z"
      },
      "sha": "a4af324d15c1ee43c2abd11a304ae18c7ee82eb0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3108533730,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwODUzMzczMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3108533730",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-08T16:27:16Z"
    },
    {
      "event": "commented",
      "id": 596223844,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjIyMzg0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596223844",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-08T16:28:06Z",
      "updated_at": "2020-03-08T16:28:06Z",
      "author_association": "MEMBER",
      "body": "There was a hidden merge conflict that required a rebase.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-596223844",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3108539067,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwODUzOTA2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3108539067",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-08T16:35:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3108539721,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwODUzOTcyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3108539721",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-08T16:36:47Z"
    },
    {
      "event": "reviewed",
      "id": 370964993,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwOTY0OTkz",
      "url": null,
      "actor": null,
      "commit_id": "08b9b68528b4644bce6bb925d6b0cbcaae62c5a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Light code review / build / test run ACK 08b9b68528b4644bce6bb925d6b0cbcaae62c5a9\r\n\r\nIf Empact, instagibbs, or Sjors could post-rebase re-ACK I'll merge this",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-370964993",
      "submitted_at": "2020-03-09T07:51:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
    },
    {
      "event": "commented",
      "id": 596451416,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjQ1MTQxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596451416",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T10:38:55Z",
      "updated_at": "2020-03-09T10:56:31Z",
      "author_association": "MEMBER",
      "body": "Will do after @achow101 fixes the Travis build failure :-) https://travis-ci.org/bitcoin/bitcoin/jobs/659844515#L2418\r\n\r\nMarking `fillPSBT()` as `const` in `src/interfaces/wallet.{h,cpp}` might help, and would at least be consistent.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-596451416",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "mentioned",
      "id": 3110056405,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzExMDA1NjQwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3110056405",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T10:38:55Z"
    },
    {
      "event": "subscribed",
      "id": 3110056410,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMTAwNTY0MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3110056410",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T10:38:55Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDcwZGQ5OWY5Zjc0ZWVmNzBiMTlmZjZmNmY4NTBhZGMwZDVlZjhm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d70dd99f9f74eef70b19ff6f6f850adc0d5ef8f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d70dd99f9f74eef70b19ff6f6f850adc0d5ef8f",
      "tree": {
        "sha": "4a4f77dfab8fa0209237a259293ccc545c2f5037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a4f77dfab8fa0209237a259293ccc545c2f5037"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4af324d15c1ee43c2abd11a304ae18c7ee82eb0",
          "sha": "a4af324d15c1ee43c2abd11a304ae18c7ee82eb0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a4af324d15c1ee43c2abd11a304ae18c7ee82eb0"
        }
      ],
      "message": "Move FillPSBT to be a member of CWallet",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-09T15:16:17Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T00:50:56Z"
      },
      "sha": "3d70dd99f9f74eef70b19ff6f6f850adc0d5ef8f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmEzMGZhZGU3MGEyYTk1YzJiYmVhYzRhYTA2ZGFmZGE2MDA0Nzlk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82a30fade70a2a95c2bbeac4aa06dafda600479d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/82a30fade70a2a95c2bbeac4aa06dafda600479d",
      "tree": {
        "sha": "cc02aef6e3e2821fde11a53a82469db51f5eb3cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc02aef6e3e2821fde11a53a82469db51f5eb3cd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d70dd99f9f74eef70b19ff6f6f850adc0d5ef8f",
          "sha": "3d70dd99f9f74eef70b19ff6f6f850adc0d5ef8f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d70dd99f9f74eef70b19ff6f6f850adc0d5ef8f"
        }
      ],
      "message": "Move key and script filling and signing from CWallet::FillPSBT to ScriptPubKeyMan::FillPSBT\n\nInstead of fetching a SigningProvider from ScriptPubKeyMan in order\nto fill and sign the keys and scripts for a PSBT, just pass that\nPSBT to a new FillPSBT function that does all that for us.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-09T15:16:20Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T00:50:59Z"
      },
      "sha": "82a30fade70a2a95c2bbeac4aa06dafda600479d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTljNDI5MDg0YjQwMzU2YWEzNmFhNjc5OTJkYTM1ZjYxYzJmNmEy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a9c429084b40356aa36aa67992da35f61c2f6a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6a9c429084b40356aa36aa67992da35f61c2f6a2",
      "tree": {
        "sha": "e2590bf410fd5c78b4e6edd5805ba99802130de6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2590bf410fd5c78b4e6edd5805ba99802130de6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82a30fade70a2a95c2bbeac4aa06dafda600479d",
          "sha": "82a30fade70a2a95c2bbeac4aa06dafda600479d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82a30fade70a2a95c2bbeac4aa06dafda600479d"
        }
      ],
      "message": "Move direct calls to MessageSign into new SignMessage functions in CWallet and ScriptPubKeyMan\n\nInstead of getting a SigningProvider and then going to MessageSign,\nhave ScriptPubKeyMan handle the message signing internally.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-09T15:16:20Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-13T22:09:12Z"
      },
      "sha": "6a9c429084b40356aa36aa67992da35f61c2f6a2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzE3NDg4MWFkODQ5OGE2OTA1YmEyODJhNDgwNzdiYzVjODAzN2E3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc174881ad8498a6905ba282a48077bc5c8037a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dc174881ad8498a6905ba282a48077bc5c8037a7",
      "tree": {
        "sha": "cf16d8436418d8550d43cc7315a0d499c0b6ff5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf16d8436418d8550d43cc7315a0d499c0b6ff5e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a9c429084b40356aa36aa67992da35f61c2f6a2",
          "sha": "6a9c429084b40356aa36aa67992da35f61c2f6a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6a9c429084b40356aa36aa67992da35f61c2f6a2"
        }
      ],
      "message": "Replace GetSigningProvider with GetSolvingProvider\n\nNot all ScriptPubKeyMans will be able to provide private keys,\nbut pubkeys and scripts should be. So only provide public-only\nSigningProviders, i.e. ones that can help with Solving.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-09T15:16:20Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-11T02:27:59Z"
      },
      "sha": "dc174881ad8498a6905ba282a48077bc5c8037a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjc3NGMwOWNmY2M2YzVjOTY3ZDQwYmIwOTRlYWJjOGMwYmRiNmJm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "tree": {
        "sha": "219d788dcd228bb6993def93e6b8e89890773327",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/219d788dcd228bb6993def93e6b8e89890773327"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc174881ad8498a6905ba282a48077bc5c8037a7",
          "sha": "dc174881ad8498a6905ba282a48077bc5c8037a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dc174881ad8498a6905ba282a48077bc5c8037a7"
        }
      ],
      "message": "Clear any input_errors for an input after it is signed\n\nMake sure that there are no errors set for an input after it is signed.\nThis is useful for when there are multiple ScriptPubKeyMans. Some may\nfail to sign, but one may be able to sign, and after it does, we don't\nwant there to be any more errors there.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-09T15:16:20Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-02-12T00:24:14Z"
      },
      "sha": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3111109930,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExMTEwOTkzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3111109930",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T15:18:40Z"
    },
    {
      "event": "commented",
      "id": 596599384,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjU5OTM4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596599384",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T15:27:19Z",
      "updated_at": "2020-03-09T15:27:19Z",
      "author_association": "MEMBER",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/18115/commits/d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-596599384",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "commented",
      "id": 596600502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjYwMDUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596600502",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T15:29:05Z",
      "updated_at": "2020-03-09T15:29:05Z",
      "author_association": "MEMBER",
      "body": "> Will do after @achow101 fixes the Travis build failure :-) https://travis-ci.org/bitcoin/bitcoin/jobs/659844515#L2418\r\n> \r\n> Marking `fillPSBT()` as `const` in `src/interfaces/wallet.{h,cpp}` might help, and would at least be consistent.\r\n\r\nI did that, but I don't think it will help. I'm not sure what would cause that travis failure; it's failing on something that the other targets are compiling too. I think travis may have gotten confused?",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-596600502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "mentioned",
      "id": 3111157548,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzExMTE1NzU0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3111157548",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T15:29:06Z"
    },
    {
      "event": "subscribed",
      "id": 3111157551,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMTExNTc1NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3111157551",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T15:29:06Z"
    },
    {
      "event": "commented",
      "id": 596694939,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjY5NDkzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596694939",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T18:15:45Z",
      "updated_at": "2020-03-09T18:15:45Z",
      "author_association": "MEMBER",
      "body": "re-utACK d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-596694939",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "commented",
      "id": 596748854,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njc0ODg1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596748854",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T19:56:16Z",
      "updated_at": "2020-03-09T19:56:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-utACK d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#issuecomment-596748854",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18115"
    },
    {
      "event": "merged",
      "id": 3112205634,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzExMjIwNTYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112205634",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dcf2ccbfde1f11c055900aff69fd527559512eab",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcf2ccbfde1f11c055900aff69fd527559512eab",
      "created_at": "2020-03-09T20:02:53Z"
    },
    {
      "event": "closed",
      "id": 3112205652,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzExMjIwNTY1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112205652",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T20:02:53Z"
    },
    {
      "event": "referenced",
      "id": 3112877253,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMTI4NzcyNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112877253",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "98c8a84b4cc51366e30f949b5b061b9774a59649",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/98c8a84b4cc51366e30f949b5b061b9774a59649",
      "created_at": "2020-03-10T00:54:41Z"
    },
    {
      "event": "removed_from_project",
      "id": 3119414105,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzExOTQxNDEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3119414105",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T15:49:03Z",
      "project_card": {
        "id": 33778975,
        "url": "https://api.github.com/projects/columns/cards/33778975",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 3175337111,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxNzUzMzcxMTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3175337111",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "248ed9dbbc1c81a20afeec2b616bb95e27d5f9d0",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/248ed9dbbc1c81a20afeec2b616bb95e27d5f9d0",
      "created_at": "2020-03-28T21:15:47Z"
    },
    {
      "event": "referenced",
      "id": 3917107799,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTcxMDc3OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917107799",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dabfedaea058a976202d57a62e17924198aed61c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/dabfedaea058a976202d57a62e17924198aed61c",
      "created_at": "2020-10-24T18:59:27Z"
    },
    {
      "event": "referenced",
      "id": 3917110507,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTcxMTA1MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917110507",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "588d25004d15fc8900f3bbf01fc17519b77420a2",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/588d25004d15fc8900f3bbf01fc17519b77420a2",
      "created_at": "2020-10-24T19:02:31Z"
    },
    {
      "event": "referenced",
      "id": 3917110509,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTcxMTA1MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917110509",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dd2c6cebcda03f4d53d60fc0332134a4823f96d5",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/dd2c6cebcda03f4d53d60fc0332134a4823f96d5",
      "created_at": "2020-10-24T19:02:31Z"
    },
    {
      "event": "referenced",
      "id": 3917311343,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTczMTEzNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917311343",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "27fe47e7afc929544819d19503bd2a9f1a7c58b7",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/27fe47e7afc929544819d19503bd2a9f1a7c58b7",
      "created_at": "2020-10-24T23:58:36Z"
    },
    {
      "event": "referenced",
      "id": 3917333025,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTczMzMwMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917333025",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7f2483ac9415c01b41c5bbd37d831223789346ca",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/7f2483ac9415c01b41c5bbd37d831223789346ca",
      "created_at": "2020-10-25T00:38:38Z"
    },
    {
      "event": "referenced",
      "id": 3917913510,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTc5MTM1MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917913510",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f0ce8173081fad26bb496b9eefeaaa5c65f2ba17",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/f0ce8173081fad26bb496b9eefeaaa5c65f2ba17",
      "created_at": "2020-10-25T15:12:10Z"
    },
    {
      "event": "referenced",
      "id": 3917917750,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTc5MTc3NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917917750",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bee3cb09b38bcc70aa4fd7882d07334b68dd0b89",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/bee3cb09b38bcc70aa4fd7882d07334b68dd0b89",
      "created_at": "2020-10-25T15:16:52Z"
    },
    {
      "event": "referenced",
      "id": 3917920324,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTc5MjAzMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917920324",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "67435e511aa3cd77038d98070a4d07211bc7c957",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/67435e511aa3cd77038d98070a4d07211bc7c957",
      "created_at": "2020-10-25T15:19:55Z"
    },
    {
      "event": "referenced",
      "id": 3917940406,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MTc5NDA0MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3917940406",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "206346fce4db26b935910ef3d030b4e1888e9308",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/206346fce4db26b935910ef3d030b4e1888e9308",
      "created_at": "2020-10-25T15:42:06Z"
    },
    {
      "event": "referenced",
      "id": 3980859056,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTkwNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980859056",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cf35de8d519592fe5970e85b737918baf48cab90",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/cf35de8d519592fe5970e85b737918baf48cab90",
      "created_at": "2020-11-10T20:39:53Z"
    },
    {
      "event": "locked",
      "id": 6073765642,
      "node_id": "LOE_lADOABII584hjnfgzwAAAAFqBk8K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073765642",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:27:50Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378125160",
      "pull_request_review_id": 357293657,
      "id": 378125160,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNTE2MA==",
      "diff_hunk": "@@ -24,6 +24,7 @@ class SigningProvider;\n  * @param result         JSON object where signed transaction results accumulate\n  */\n void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result);\n+void MakeSignTransactionResult(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, std::map<int, std::string>& input_errors, UniValue& result);",
      "path": "src/rpc/rawtransaction_util.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 0eb285f7146ae9beec3a19829cc4420ad9f251ae, this trips up AppVeyor:\r\n```\r\n:\\projects\\bitcoin\\src\\rpc\\rawtransaction_util.h(27,132): error C2039: 'string': is not a member of 'std' [C:\\projects\\bitcoin\\build_msvc\\libbitcoin_common\\libbitcoin_common.vcxproj]\r\n63C:\\projects\\bitcoin\\src\\rpc\\rawtransaction_util.h(27,138): error C2065: 'string': undeclared identifier [C:\\projects\\bitcoin\\build_msvc\\libbitcoin_common\\libbitcoin_common.vcxproj]\r\n64C:\\projects\\bitcoin\\src\\rpc\\rawtransaction_util.h(27,118): error C2923: 'std::map': 'string' is not a valid template type argument for parameter '_Ty' [C:\\projects\\bitcoin\\build_msvc\\libbitcoin_common\\libbitcoin_common.vcxproj]\r\n65C:\\projects\\bitcoin\\src\\rpc\\rawtransaction_util.h(27,138): fatal error C1903: unable to recover from previous error(s); stopping compilation [C:\\projects\\bitcoin\\build_msvc\\libbitcoin_common\\libbitcoin_common.vcxproj]\r\n```",
      "created_at": "2020-02-12T09:20:28Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378125160",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378125160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378133077",
      "pull_request_review_id": 357303366,
      "id": 378133077,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEzMzA3Nw==",
      "diff_hunk": "@@ -133,30 +133,31 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n         return;\n     }\n \n-    CKey key;\n-    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n-    {\n-        ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));\n-        return;\n+    std::string message = ui->messageIn_SM->document()->toPlainText().toStdString();\n+    std::string sig;\n+    SigningError err = model->wallet().signMessage(message, *pkhash, sig);\n+\n+    QString error;\n+    switch (err) {\n+        case SigningError::OK:\n+            error = tr(\"No error\");\n+        case SigningError::PRIVATE_KEY_NOT_AVAILABLE:\n+            error = tr(\"Private key for the entered address is not available.\");",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 22,
      "original_position": 19,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing `break;`?",
      "created_at": "2020-02-12T09:34:26Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378133077",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378133077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378136589",
      "pull_request_review_id": 357293657,
      "id": 378136589,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEzNjU4OQ==",
      "diff_hunk": "@@ -24,6 +24,7 @@ class SigningProvider;\n  * @param result         JSON object where signed transaction results accumulate\n  */\n void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result);\n+void MakeSignTransactionResult(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, std::map<int, std::string>& input_errors, UniValue& result);",
      "path": "src/rpc/rawtransaction_util.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "in_reply_to_id": 378125160,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe rename it to `SignTransactionResultToJSON()`.",
      "created_at": "2020-02-12T09:40:50Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378136589",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378136589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378140246",
      "pull_request_review_id": 357293657,
      "id": 378140246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MDI0Ng==",
      "diff_hunk": "@@ -465,3 +465,51 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\n     }\n     return false;\n }\n+\n+bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* provider, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors)\n+{\n+    bool is_sighash_single = ((sighash & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+\n+    // Use CTransaction for the constant parts of the\n+    // transaction to avoid rehashing.\n+    const CTransaction tx_const(mtx);\n+    // Sign what we can:\n+    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n+        CTxIn& txin = mtx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n+        }\n+        const CScript& spk = coin->second.out.scriptPubKey;\n+        const CAmount& amount = coin->second.out.nValue;\n+\n+        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n+        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n+        if (!is_sighash_single || (i < mtx.vout.size())) {\n+            ProduceSignature(*provider, MutableTransactionSignatureCreator(&mtx, i, amount, sighash), spk, sigdata);\n+        }\n+\n+        UpdateInput(txin, sigdata);\n+\n+        // amount must be specified for valid segwit signature\n+        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n+            input_errors[i] = \"Missing amount\";",
      "path": "src/script/sign.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 0eb285f7146ae9beec3a19829cc4420ad9f251ae this seems a bit brittle: `input_errors[i] = \"Missing amount\";` (which is then matched by string to throw an exception later). But at least this error message is covered by `rpc_rawtransaction.py`",
      "created_at": "2020-02-12T09:47:31Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378140246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378140246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 497,
      "original_line": 497,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378142817",
      "pull_request_review_id": 357293657,
      "id": 378142817,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MjgxNw==",
      "diff_hunk": "@@ -465,3 +465,51 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\n     }\n     return false;\n }\n+\n+bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* provider, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors)\n+{\n+    bool is_sighash_single = ((sighash & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+\n+    // Use CTransaction for the constant parts of the\n+    // transaction to avoid rehashing.\n+    const CTransaction tx_const(mtx);\n+    // Sign what we can:\n+    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n+        CTxIn& txin = mtx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n+        }\n+        const CScript& spk = coin->second.out.scriptPubKey;\n+        const CAmount& amount = coin->second.out.nValue;\n+\n+        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n+        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n+        if (!is_sighash_single || (i < mtx.vout.size())) {\n+            ProduceSignature(*provider, MutableTransactionSignatureCreator(&mtx, i, amount, sighash), spk, sigdata);\n+        }\n+\n+        UpdateInput(txin, sigdata);\n+\n+        // amount must be specified for valid segwit signature\n+        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n+            input_errors[i] = \"Missing amount\";\n+            continue;\n+        }\n+\n+        ScriptError serror = SCRIPT_ERR_OK;\n+        if (!VerifyScript(txin.scriptSig, spk, &txin.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, TransactionSignatureChecker(&tx_const, i, amount), &serror)) {\n+            if (serror == SCRIPT_ERR_INVALID_STACK_OPERATION) {\n+                // Unable to sign input and verification failed (possible attempt to partially sign).\n+                input_errors[i] = \"Unable to sign input, invalid stack size (possibly missing key)\";",
      "path": "src/script/sign.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a good time to add tests for the three error strings used here (`SCRIPT_ERR_INVALID_STACK_OPERATION`, `SCRIPT_ERR_SIG_NULLFAIL`, `else`). Not sure how though.",
      "created_at": "2020-02-12T09:52:03Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378142817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378142817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 505,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378151197",
      "pull_request_review_id": 357293657,
      "id": 378151197,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE1MTE5Nw==",
      "diff_hunk": "@@ -2403,34 +2403,32 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n-\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n-        }\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n-        }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    bool result = false;\n+    for (const auto& spk_man_pair : m_spk_managers) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e496e2981699ac2938b74297d9b0bce355d26ad8",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In  e496e2981699ac2938b74297d9b0bce355d26ad8 `Implement CWallet::SignTransaction using ScriptPubKeyMan::SignTransaction` at `// Sign the tx with ScriptPubKeyMans`, check `CanProvide()` first?",
      "created_at": "2020-02-12T10:06:35Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378151197",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378151197"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378152215",
      "pull_request_review_id": 357293657,
      "id": 378152215,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE1MjIxNQ==",
      "diff_hunk": "@@ -2403,34 +2403,32 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n-\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n-        }\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n-        }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    bool result = false;\n+    for (const auto& spk_man_pair : m_spk_managers) {\n+        result |= spk_man_pair.second->SignTransaction(tx, coins, sighash, input_errors);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e496e2981699ac2938b74297d9b0bce355d26ad8",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The way `input_errors` are set, if there are multiple matching `ScriptPubKeyMans`* they would override each-others results. The last commit e4714e05ca9f3000384f9ed8f44e91a485f88bee clears the error for any given input, but only if SPKman SignTransaction() returns true, which requires all input errors to be empty, so that seems useless. At minimum this is confusing.\r\n\r\n`*` = not the case with legacy, and in practice shouldn't happen with descriptor wallets, but that's not enforced",
      "created_at": "2020-02-12T10:08:34Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378152215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378152215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378158565",
      "pull_request_review_id": 357293657,
      "id": 378158565,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE1ODU2NQ==",
      "diff_hunk": "@@ -2460,44 +2459,20 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n                 input.non_witness_utxo = wtx.tx;\n             }\n         }\n+    }\n \n-        // Get the Sighash type\n-        if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n-            return TransactionError::SIGHASH_MISMATCH;\n-        }\n-\n-        // Get the scriptPubKey to know which SigningProvider to use\n-        CScript script;\n-        if (!input.witness_utxo.IsNull()) {\n-            script = input.witness_utxo.scriptPubKey;\n-        } else if (input.non_witness_utxo) {\n-            if (txin.prevout.n >= input.non_witness_utxo->vout.size()) {\n-                return TransactionError::MISSING_INPUTS;\n-            }\n-            script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n-        } else {\n-            // There's no UTXO so we can just skip this now\n-            complete = false;\n-            continue;\n-        }\n-        SignatureData sigdata;\n-        input.FillSignatureData(sigdata);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(script, sigdata);\n-        if (!provider) {\n-            complete = false;\n-            continue;\n+    // Fill in information from ScriptPubKeyMans\n+    for (const auto& spk_man_pair : m_spk_managers) {\n+        TransactionError res = spk_man_pair.second->FillPSBT(psbtx, sighash_type, sign, bip32derivs);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "a90a98c3aa90ed4dc4f995fac0859e58f177a79a",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a90a98c3aa90ed4dc4f995fac0859e58f177a79a under `// Fill in information from ScriptPubKeyMans`, add `CanProvide()`?",
      "created_at": "2020-02-12T10:20:03Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378158565",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378158565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378162019",
      "pull_request_review_id": 357293657,
      "id": 378162019,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE2MjAxOQ==",
      "diff_hunk": "@@ -503,6 +503,52 @@ bool LegacyScriptPubKeyMan::SignTransaction(CMutableTransaction& tx, const std::\n     return ::SignTransaction(tx, this, coins, sighash, input_errors);\n }\n \n+TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const\n+{\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        const CTxIn& txin = psbtx.tx->vin[i];\n+        PSBTInput& input = psbtx.inputs.at(i);\n+\n+        if (PSBTInputSigned(input)) {\n+            continue;\n+        }\n+\n+        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n+        if (!input.IsSane()) {\n+            return TransactionError::INVALID_PSBT;\n+        }\n+\n+        // Get the Sighash type\n+        if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n+            return TransactionError::SIGHASH_MISMATCH;\n+        }\n+\n+        // Get the scriptPubKey to know which SigningProvider to use",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "a90a98c3aa90ed4dc4f995fac0859e58f177a79a",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a90a98c3aa90ed4dc4f995fac0859e58f177a79a: this comment is outdated, because you're no longer calling `GetSigningProvider(script, sigdata)`. Also the `CScript script` below is not used.\r\n",
      "created_at": "2020-02-12T10:26:23Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378162019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378162019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378164973",
      "pull_request_review_id": 357293657,
      "id": 378164973,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE2NDk3Mw==",
      "diff_hunk": "@@ -133,30 +133,31 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n         return;\n     }\n \n-    CKey key;\n-    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n-    {\n-        ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));\n-        return;\n+    std::string message = ui->messageIn_SM->document()->toPlainText().toStdString();\n+    std::string sig;\n+    SigningError err = model->wallet().signMessage(message, *pkhash, sig);\n+\n+    QString error;\n+    switch (err) {\n+        case SigningError::OK:\n+            error = tr(\"No error\");\n+        case SigningError::PRIVATE_KEY_NOT_AVAILABLE:\n+            error = tr(\"Private key for the entered address is not available.\");",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 22,
      "original_position": 19,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "in_reply_to_id": 378133077,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also these strings can be obtained from`SigningErrorString` in `error.cpp` (the wording here seems better)",
      "created_at": "2020-02-12T10:31:33Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378164973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378164973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378166986",
      "pull_request_review_id": 357345688,
      "id": 378166986,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE2Njk4Ng==",
      "diff_hunk": "@@ -203,13 +205,20 @@ class ScriptPubKeyMan\n \n     virtual const CKeyMetadata* GetMetadata(const CTxDestination& dest) const { return nullptr; }\n \n-    virtual std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script) const { return nullptr; }\n+    virtual std::unique_ptr<SigningProvider> GetPublicSigningProvider(const CScript& script) const { return nullptr; }\n \n-    /** Whether this ScriptPubKeyMan can provide a SigningProvider (via GetSigningProvider) that, combined with\n-      * sigdata, can produce a valid signature.\n+    /** Whether this ScriptPubKeyMan can provide a SigningProvider (via GetPublicSigningProvider) that, combined with\n+      * sigdata, can produce solving data.\n       */\n     virtual bool CanProvide(const CScript& script, SignatureData& sigdata) { return false; }\n \n+    /** Creates new signatures and adds them to the transaction. Returns whether all inputs were signed */\n+    virtual bool SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const { return false; }\n+    /** Sign a message with the given script */\n+    virtual SigningError SignMessage(const std::string& message, const PKHash& pkhash, std::string& str_sig) const { return SigningError::OK; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 28,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be better to return some error from here (like the neighboring methods do). In case somebody forgets to override this method, it would be unexpected to return OK and leave the output `str_sig` unmodified.\r\n\r\nMaybe even use a pure virtual method `...str_sig) const = 0;` to cause a compilation error if somebody forgets to override `SignMessage()`. I checked that:\r\n* it compiles if changed to pure virtual and\r\n* it does not compile if changed to pure virtual and the `LegacyScriptPubKeyMan` child class forgets to override `SignMessage()`.",
      "created_at": "2020-02-12T10:35:26Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378166986",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378166986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378389666",
      "pull_request_review_id": 357630591,
      "id": 378389666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4OTY2Ng==",
      "diff_hunk": "@@ -465,3 +465,51 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\n     }\n     return false;\n }\n+\n+bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* provider, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors)\n+{\n+    bool is_sighash_single = ((sighash & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+\n+    // Use CTransaction for the constant parts of the\n+    // transaction to avoid rehashing.\n+    const CTransaction tx_const(mtx);\n+    // Sign what we can:\n+    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n+        CTxIn& txin = mtx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n+        }\n+        const CScript& spk = coin->second.out.scriptPubKey;\n+        const CAmount& amount = coin->second.out.nValue;\n+\n+        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n+        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n+        if (!is_sighash_single || (i < mtx.vout.size())) {\n+            ProduceSignature(*provider, MutableTransactionSignatureCreator(&mtx, i, amount, sighash), spk, sigdata);\n+        }\n+\n+        UpdateInput(txin, sigdata);\n+\n+        // amount must be specified for valid segwit signature\n+        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n+            input_errors[i] = \"Missing amount\";",
      "path": "src/script/sign.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "in_reply_to_id": 378140246,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is brittle, and I'm not sure why only that error specifically throws an exception. But keeping it for compatibility.",
      "created_at": "2020-02-12T17:07:26Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378389666",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378389666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 497,
      "original_line": 497,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378393730",
      "pull_request_review_id": 357635816,
      "id": 378393730,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MzczMA==",
      "diff_hunk": "@@ -2403,34 +2403,32 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n-\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n-        }\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n-        }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    bool result = false;\n+    for (const auto& spk_man_pair : m_spk_managers) {\n+        result |= spk_man_pair.second->SignTransaction(tx, coins, sighash, input_errors);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e496e2981699ac2938b74297d9b0bce355d26ad8",
      "in_reply_to_id": 378152215,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The expectation is that all of the errors will be the same across all failed `ScriptPubKeyMan`s because they don't have the private keys. The `ScriptPubKeyMan` which fully signs an input will clear the error for that input. This clearing is not dependent on `input_errors.empty()`.",
      "created_at": "2020-02-12T17:14:33Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378393730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378393730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378397086",
      "pull_request_review_id": 357640094,
      "id": 378397086,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5NzA4Ng==",
      "diff_hunk": "@@ -133,30 +133,31 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n         return;\n     }\n \n-    CKey key;\n-    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n-    {\n-        ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));\n-        return;\n+    std::string message = ui->messageIn_SM->document()->toPlainText().toStdString();\n+    std::string sig;\n+    SigningError err = model->wallet().signMessage(message, *pkhash, sig);\n+\n+    QString error;\n+    switch (err) {\n+        case SigningError::OK:\n+            error = tr(\"No error\");\n+        case SigningError::PRIVATE_KEY_NOT_AVAILABLE:\n+            error = tr(\"Private key for the entered address is not available.\");",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 22,
      "original_position": 19,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "in_reply_to_id": 378133077,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The strings from `SigningErrorString` won't be translated (we don't translate things for RPC), so that logic had to be duplicated here. Also, the strings are different to maintain compatibility.",
      "created_at": "2020-02-12T17:20:22Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378397086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378397086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378405142",
      "pull_request_review_id": 357650113,
      "id": 378405142,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNTE0Mg==",
      "diff_hunk": "@@ -133,30 +133,31 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n         return;\n     }\n \n-    CKey key;\n-    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n-    {\n-        ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));\n-        return;\n+    std::string message = ui->messageIn_SM->document()->toPlainText().toStdString();\n+    std::string sig;\n+    SigningError err = model->wallet().signMessage(message, *pkhash, sig);\n+\n+    QString error;\n+    switch (err) {\n+        case SigningError::OK:\n+            error = tr(\"No error\");\n+        case SigningError::PRIVATE_KEY_NOT_AVAILABLE:\n+            error = tr(\"Private key for the entered address is not available.\");",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 22,
      "original_position": 19,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "in_reply_to_id": 378133077,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added the breaks in.",
      "created_at": "2020-02-12T17:34:48Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378405142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378405142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378405634",
      "pull_request_review_id": 357650736,
      "id": 378405634,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNTYzNA==",
      "diff_hunk": "@@ -203,13 +205,20 @@ class ScriptPubKeyMan\n \n     virtual const CKeyMetadata* GetMetadata(const CTxDestination& dest) const { return nullptr; }\n \n-    virtual std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script) const { return nullptr; }\n+    virtual std::unique_ptr<SigningProvider> GetPublicSigningProvider(const CScript& script) const { return nullptr; }\n \n-    /** Whether this ScriptPubKeyMan can provide a SigningProvider (via GetSigningProvider) that, combined with\n-      * sigdata, can produce a valid signature.\n+    /** Whether this ScriptPubKeyMan can provide a SigningProvider (via GetPublicSigningProvider) that, combined with\n+      * sigdata, can produce solving data.\n       */\n     virtual bool CanProvide(const CScript& script, SignatureData& sigdata) { return false; }\n \n+    /** Creates new signatures and adds them to the transaction. Returns whether all inputs were signed */\n+    virtual bool SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const { return false; }\n+    /** Sign a message with the given script */\n+    virtual SigningError SignMessage(const std::string& message, const PKHash& pkhash, std::string& str_sig) const { return SigningError::OK; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 28,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e4714e05ca9f3000384f9ed8f44e91a485f88bee",
      "in_reply_to_id": 378166986,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed it to return `SigningError::SIGNING_FAILED`. I'm avoiding pure virtual functions in `ScriptPubKeyMan` because there is no requirement for every `ScriptPubKeyMan` to implement every function.",
      "created_at": "2020-02-12T17:35:41Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378405634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378405634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378405792",
      "pull_request_review_id": 357650954,
      "id": 378405792,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNTc5Mg==",
      "diff_hunk": "@@ -24,6 +24,7 @@ class SigningProvider;\n  * @param result         JSON object where signed transaction results accumulate\n  */\n void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result);\n+void MakeSignTransactionResult(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, std::map<int, std::string>& input_errors, UniValue& result);",
      "path": "src/rpc/rawtransaction_util.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "0eb285f7146ae9beec3a19829cc4420ad9f251ae",
      "in_reply_to_id": 378125160,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed (I think) and renamed",
      "created_at": "2020-02-12T17:35:58Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378405792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378405792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378406171",
      "pull_request_review_id": 357651418,
      "id": 378406171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNjE3MQ==",
      "diff_hunk": "@@ -503,6 +503,52 @@ bool LegacyScriptPubKeyMan::SignTransaction(CMutableTransaction& tx, const std::\n     return ::SignTransaction(tx, this, coins, sighash, input_errors);\n }\n \n+TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const\n+{\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        const CTxIn& txin = psbtx.tx->vin[i];\n+        PSBTInput& input = psbtx.inputs.at(i);\n+\n+        if (PSBTInputSigned(input)) {\n+            continue;\n+        }\n+\n+        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n+        if (!input.IsSane()) {\n+            return TransactionError::INVALID_PSBT;\n+        }\n+\n+        // Get the Sighash type\n+        if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n+            return TransactionError::SIGHASH_MISMATCH;\n+        }\n+\n+        // Get the scriptPubKey to know which SigningProvider to use",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "a90a98c3aa90ed4dc4f995fac0859e58f177a79a",
      "in_reply_to_id": 378162019,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed the comment and simplified this block to just check for correct `non_witness_utxo` or `continue` if there is no utxo.",
      "created_at": "2020-02-12T17:36:42Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378406171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378406171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378448191",
      "pull_request_review_id": 357704791,
      "id": 378448191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0ODE5MQ==",
      "diff_hunk": "@@ -2403,34 +2403,32 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n-\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n-        }\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n-        }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    bool result = false;\n+    for (const auto& spk_man_pair : m_spk_managers) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "e496e2981699ac2938b74297d9b0bce355d26ad8",
      "in_reply_to_id": 378151197,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've updated it to use `GetScriptPubKeyMan` which calls `CanProvide`\r\n\r\nThis change is slightly more complex but it does reduce the number of repeated signings.",
      "created_at": "2020-02-12T18:56:47Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378448191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378448191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378448264",
      "pull_request_review_id": 357704878,
      "id": 378448264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0ODI2NA==",
      "diff_hunk": "@@ -2460,44 +2459,20 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n                 input.non_witness_utxo = wtx.tx;\n             }\n         }\n+    }\n \n-        // Get the Sighash type\n-        if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n-            return TransactionError::SIGHASH_MISMATCH;\n-        }\n-\n-        // Get the scriptPubKey to know which SigningProvider to use\n-        CScript script;\n-        if (!input.witness_utxo.IsNull()) {\n-            script = input.witness_utxo.scriptPubKey;\n-        } else if (input.non_witness_utxo) {\n-            if (txin.prevout.n >= input.non_witness_utxo->vout.size()) {\n-                return TransactionError::MISSING_INPUTS;\n-            }\n-            script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n-        } else {\n-            // There's no UTXO so we can just skip this now\n-            complete = false;\n-            continue;\n-        }\n-        SignatureData sigdata;\n-        input.FillSignatureData(sigdata);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(script, sigdata);\n-        if (!provider) {\n-            complete = false;\n-            continue;\n+    // Fill in information from ScriptPubKeyMans\n+    for (const auto& spk_man_pair : m_spk_managers) {\n+        TransactionError res = spk_man_pair.second->FillPSBT(psbtx, sighash_type, sign, bip32derivs);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "a90a98c3aa90ed4dc4f995fac0859e58f177a79a",
      "in_reply_to_id": 378158565,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've updated it to use `GetScriptPubKeyMan` which calls `CanProvide`\r\n\r\nThis change is slightly more complex but it does reduce the number of repeated signings.",
      "created_at": "2020-02-12T18:56:55Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378448264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378448264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378787066",
      "pull_request_review_id": 358122717,
      "id": 378787066,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc4NzA2Ng==",
      "diff_hunk": "@@ -34,6 +34,14 @@ enum class TransactionError {\n \n std::string TransactionErrorString(const TransactionError error);\n \n+enum class SigningError {",
      "path": "src/util/error.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "01839f3797897bb7d6bc2200e804e52cd3aca191",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`SigningResult` seems more friendly, considering this can be OK.",
      "created_at": "2020-02-13T10:52:56Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r378787066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378787066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379208846",
      "pull_request_review_id": 358662436,
      "id": 379208846,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIwODg0Ng==",
      "diff_hunk": "@@ -34,6 +34,14 @@ enum class TransactionError {\n \n std::string TransactionErrorString(const TransactionError error);\n \n+enum class SigningError {",
      "path": "src/util/error.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "01839f3797897bb7d6bc2200e804e52cd3aca191",
      "in_reply_to_id": 378787066,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renamed to `SigningResult`",
      "created_at": "2020-02-14T01:23:31Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r379208846",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379208846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382106652",
      "pull_request_review_id": 362040407,
      "id": 382106652,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNjY1Mg==",
      "diff_hunk": "@@ -465,3 +465,51 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\n     }\n     return false;\n }\n+\n+bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, int nHashType, std::map<int, std::string>& input_errors)\n+{\n+    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+\n+    // Use CTransaction for the constant parts of the\n+    // transaction to avoid rehashing.\n+    const CTransaction txConst(mtx);\n+    // Sign what we can:\n+    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n+        CTxIn& txin = mtx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n+        }\n+        const CScript& prevPubKey = coin->second.out.scriptPubKey;\n+        const CAmount& amount = coin->second.out.nValue;\n+\n+        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n+        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n+        if (!fHashSingle || (i < mtx.vout.size())) {\n+            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);\n+        }\n+\n+        UpdateInput(txin, sigdata);\n+\n+        // amount must be specified for valid segwit signature\n+        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n+            input_errors[i] = \"Missing amount\";\n+            continue;\n+        }\n+\n+        ScriptError serror = SCRIPT_ERR_OK;\n+        if (!VerifyScript(txin.scriptSig, prevPubKey, &txin.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, TransactionSignatureChecker(&txConst, i, amount), &serror)) {\n+            if (serror == SCRIPT_ERR_INVALID_STACK_OPERATION) {\n+                // Unable to sign input and verification failed (possible attempt to partially sign).\n+                input_errors[i] = \"Unable to sign input, invalid stack size (possibly missing key)\";\n+            } else if (serror == SCRIPT_ERR_SIG_NULLFAIL) {\n+                // Verification failed (possibly due to insufficient signatures).\n+                input_errors[i] = \"CHECK(MULTI)SIG failing with non-zero signature (possibly need more signatures)\";\n+            } else {\n+                input_errors[i] = ScriptErrorString(serror);\n+            }\n+        }\n+    }\n+    return input_errors.empty();;",
      "path": "src/script/sign.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "a9f1c58ccd4a55b026518be691a0eae23e4bf489",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "double semicolumn",
      "created_at": "2020-02-20T16:19:20Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382106652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382106652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382125444",
      "pull_request_review_id": 362040407,
      "id": 382125444,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEyNTQ0NA==",
      "diff_hunk": "@@ -2403,34 +2403,66 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);\n+        if (!spk_man) {\n+            input_errors[i] = \"Unable to sign input, missing keys\";\n+            continue;\n+        }\n+\n+        // If we've already been signed by this spk_man, skip it\n+        if (visited_spk_mans.count(spk_man->GetID()) > 0) {\n+            continue;\n+        }\n+\n+        // Sign the tx.\n+        // spk_man->SignTransaction will return true if the transaction is complete,\n+        // so we can exit early and return true if that happens.\n+        if (spk_man->SignTransaction(tx, coins, sighash, input_errors)) {\n+            return true;\n+        }\n+\n+        // Add this spk_man to visited_spk_mans so we can skip it later\n+        visited_spk_mans.insert(spk_man->GetID());",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "2c6db38744ffb0ade6bf84d0b9caab8d7891642d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rather than having this `visited_spk_mans` bookkeeping, maybe just add  `spk_man->SignInput(tx, input, coins, sighash, error)`.",
      "created_at": "2020-02-20T16:48:38Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382125444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382125444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382143470",
      "pull_request_review_id": 362040407,
      "id": 382143470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MzQ3MA==",
      "diff_hunk": "@@ -2511,27 +2516,34 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n             script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n         } else {\n             // There's no UTXO so we can just skip this now\n-            complete = false;\n             continue;\n         }\n         SignatureData sigdata;\n         input.FillSignatureData(sigdata);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(script, sigdata);\n-        if (!provider) {\n-            complete = false;\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(script, sigdata);\n+        if (!spk_man) {\n             continue;\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(provider.get(), !sign, !bip32derivs), psbtx, i, sighash_type);\n-    }\n+        // If we've already been signed by this spk_man, skip it\n+        if (visited_spk_mans.count(spk_man->GetID()) > 0) {\n+            continue;\n+        }\n \n-    // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n-    for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n-        const CTxOut& out = psbtx.tx->vout.at(i);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(out.scriptPubKey);\n-        if (provider) {\n-            UpdatePSBTOutput(HidingSigningProvider(provider.get(), true, !bip32derivs), psbtx, i);\n+        // Fill in the information from the spk_man\n+        TransactionError res = spk_man->FillPSBT(psbtx, sighash_type, sign, bip32derivs);\n+        if (res != TransactionError::OK) {\n+            return res;\n         }\n+\n+        // Add this spk_man to visited_spk_mans so we can skip it later\n+        visited_spk_mans.insert(spk_man->GetID());",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "886002c66b57529856cc8aab2992c951f4051e4b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same suggestion as with regular signing: adding `FillPSBT(PartiallySignedTransaction& psbt, int& index, ...` to `LegacyScriptPubKeyMan()` would avoid this bookkeeping and be easier to reason about than this loop-in-loop behavior.\r\n\r\nSuch per input control could also make its way into the RPC, where e.g. coinjoin software could tell the wallet what to sign while ignoring the other inputs. That might save some (negligible?) time doing `spk_man` lookups on a thousand inputs.",
      "created_at": "2020-02-20T17:20:18Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382143470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382143470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2554,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382151649",
      "pull_request_review_id": 362040407,
      "id": 382151649,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1MTY0OQ==",
      "diff_hunk": "@@ -503,6 +503,48 @@ bool LegacyScriptPubKeyMan::SignTransaction(CMutableTransaction& tx, const std::\n     return ::SignTransaction(tx, this, coins, sighash, input_errors);\n }\n \n+TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const\n+{\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        const CTxIn& txin = psbtx.tx->vin[i];\n+        PSBTInput& input = psbtx.inputs.at(i);\n+\n+        if (PSBTInputSigned(input)) {\n+            continue;\n+        }\n+\n+        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n+        if (!input.IsSane()) {\n+            return TransactionError::INVALID_PSBT;\n+        }\n+\n+        // Get the Sighash type\n+        if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n+            return TransactionError::SIGHASH_MISMATCH;\n+        }\n+\n+        // Check non_witness_utxo has specified prevout\n+        if (input.non_witness_utxo) {\n+            if (txin.prevout.n >= input.non_witness_utxo->vout.size()) {\n+                return TransactionError::MISSING_INPUTS;\n+            }\n+        } else if (input.witness_utxo.IsNull()) {\n+            // There's no UTXO so we can just skip this now\n+            continue;\n+        }\n+        SignatureData sigdata;\n+        input.FillSignatureData(sigdata);\n+        SignPSBTInput(HidingSigningProvider(this, !sign, !bip32derivs), psbtx, i, sighash_type);\n+    }\n+\n+    // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n+    for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n+        UpdatePSBTOutput(HidingSigningProvider(this, true, !bip32derivs), psbtx, i);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 76,
      "original_position": 40,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "886002c66b57529856cc8aab2992c951f4051e4b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I tested that BIP32 info is correctly added to watch-only wallets (see also my comment https://github.com/bitcoin/bitcoin/pull/16528#discussion_r381325869 and earlier(?) version of this code).",
      "created_at": "2020-02-20T17:35:29Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382151649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382151649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 564,
      "original_line": 564,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382673176",
      "pull_request_review_id": 362747089,
      "id": 382673176,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MzE3Ng==",
      "diff_hunk": "@@ -2403,34 +2403,66 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);\n+        if (!spk_man) {\n+            input_errors[i] = \"Unable to sign input, missing keys\";\n+            continue;\n+        }\n+\n+        // If we've already been signed by this spk_man, skip it\n+        if (visited_spk_mans.count(spk_man->GetID()) > 0) {\n+            continue;\n+        }\n+\n+        // Sign the tx.\n+        // spk_man->SignTransaction will return true if the transaction is complete,\n+        // so we can exit early and return true if that happens.\n+        if (spk_man->SignTransaction(tx, coins, sighash, input_errors)) {\n+            return true;\n+        }\n+\n+        // Add this spk_man to visited_spk_mans so we can skip it later\n+        visited_spk_mans.insert(spk_man->GetID());",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "2c6db38744ffb0ade6bf84d0b9caab8d7891642d",
      "in_reply_to_id": 382125444,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I considered that, but not all `ScriptPubKeyMan` implementations will be able to sign just one input without potentially signing all inputs. E.g. a hardware wallet spkman. With such spkmans, we would end up signing the entire tx multiple times which is both slow and bad UX.",
      "created_at": "2020-02-21T16:18:26Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382673176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382673176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382702786",
      "pull_request_review_id": 362785046,
      "id": 382702786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwMjc4Ng==",
      "diff_hunk": "@@ -2403,34 +2403,66 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);\n+        if (!spk_man) {\n+            input_errors[i] = \"Unable to sign input, missing keys\";\n+            continue;\n+        }\n+\n+        // If we've already been signed by this spk_man, skip it\n+        if (visited_spk_mans.count(spk_man->GetID()) > 0) {\n+            continue;\n+        }\n+\n+        // Sign the tx.\n+        // spk_man->SignTransaction will return true if the transaction is complete,\n+        // so we can exit early and return true if that happens.\n+        if (spk_man->SignTransaction(tx, coins, sighash, input_errors)) {\n+            return true;\n+        }\n+\n+        // Add this spk_man to visited_spk_mans so we can skip it later\n+        visited_spk_mans.insert(spk_man->GetID());",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "2c6db38744ffb0ade6bf84d0b9caab8d7891642d",
      "in_reply_to_id": 382125444,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That makes sense. It's worth emphasizing in the comments that `SignTransaction()` will try to sign all inputs, not just `txin`.",
      "created_at": "2020-02-21T17:13:17Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382702786",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382702786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382703031",
      "pull_request_review_id": 362785330,
      "id": 382703031,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwMzAzMQ==",
      "diff_hunk": "@@ -465,3 +465,51 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\n     }\n     return false;\n }\n+\n+bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, int nHashType, std::map<int, std::string>& input_errors)\n+{\n+    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+\n+    // Use CTransaction for the constant parts of the\n+    // transaction to avoid rehashing.\n+    const CTransaction txConst(mtx);\n+    // Sign what we can:\n+    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n+        CTxIn& txin = mtx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n+        }\n+        const CScript& prevPubKey = coin->second.out.scriptPubKey;\n+        const CAmount& amount = coin->second.out.nValue;\n+\n+        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n+        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n+        if (!fHashSingle || (i < mtx.vout.size())) {\n+            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);\n+        }\n+\n+        UpdateInput(txin, sigdata);\n+\n+        // amount must be specified for valid segwit signature\n+        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n+            input_errors[i] = \"Missing amount\";\n+            continue;\n+        }\n+\n+        ScriptError serror = SCRIPT_ERR_OK;\n+        if (!VerifyScript(txin.scriptSig, prevPubKey, &txin.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, TransactionSignatureChecker(&txConst, i, amount), &serror)) {\n+            if (serror == SCRIPT_ERR_INVALID_STACK_OPERATION) {\n+                // Unable to sign input and verification failed (possible attempt to partially sign).\n+                input_errors[i] = \"Unable to sign input, invalid stack size (possibly missing key)\";\n+            } else if (serror == SCRIPT_ERR_SIG_NULLFAIL) {\n+                // Verification failed (possibly due to insufficient signatures).\n+                input_errors[i] = \"CHECK(MULTI)SIG failing with non-zero signature (possibly need more signatures)\";\n+            } else {\n+                input_errors[i] = ScriptErrorString(serror);\n+            }\n+        }\n+    }\n+    return input_errors.empty();;",
      "path": "src/script/sign.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "a9f1c58ccd4a55b026518be691a0eae23e4bf489",
      "in_reply_to_id": 382106652,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2020-02-21T17:13:48Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382703031",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382703031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382703235",
      "pull_request_review_id": 362785567,
      "id": 382703235,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwMzIzNQ==",
      "diff_hunk": "@@ -2511,27 +2516,34 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n             script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n         } else {\n             // There's no UTXO so we can just skip this now\n-            complete = false;\n             continue;\n         }\n         SignatureData sigdata;\n         input.FillSignatureData(sigdata);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(script, sigdata);\n-        if (!provider) {\n-            complete = false;\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(script, sigdata);\n+        if (!spk_man) {\n             continue;\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(provider.get(), !sign, !bip32derivs), psbtx, i, sighash_type);\n-    }\n+        // If we've already been signed by this spk_man, skip it\n+        if (visited_spk_mans.count(spk_man->GetID()) > 0) {\n+            continue;\n+        }\n \n-    // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n-    for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n-        const CTxOut& out = psbtx.tx->vout.at(i);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(out.scriptPubKey);\n-        if (provider) {\n-            UpdatePSBTOutput(HidingSigningProvider(provider.get(), true, !bip32derivs), psbtx, i);\n+        // Fill in the information from the spk_man\n+        TransactionError res = spk_man->FillPSBT(psbtx, sighash_type, sign, bip32derivs);\n+        if (res != TransactionError::OK) {\n+            return res;\n         }\n+\n+        // Add this spk_man to visited_spk_mans so we can skip it later\n+        visited_spk_mans.insert(spk_man->GetID());",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "886002c66b57529856cc8aab2992c951f4051e4b",
      "in_reply_to_id": 382143470,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nvm, see https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382673176",
      "created_at": "2020-02-21T17:14:12Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382703235",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382703235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2554,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382705514",
      "pull_request_review_id": 362788443,
      "id": 382705514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNTUxNA==",
      "diff_hunk": "@@ -2403,34 +2403,66 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);\n+        if (!spk_man) {\n+            input_errors[i] = \"Unable to sign input, missing keys\";\n+            continue;\n+        }\n+\n+        // If we've already been signed by this spk_man, skip it\n+        if (visited_spk_mans.count(spk_man->GetID()) > 0) {\n+            continue;\n+        }\n+\n+        // Sign the tx.\n+        // spk_man->SignTransaction will return true if the transaction is complete,\n+        // so we can exit early and return true if that happens.\n+        if (spk_man->SignTransaction(tx, coins, sighash, input_errors)) {\n+            return true;\n+        }\n+\n+        // Add this spk_man to visited_spk_mans so we can skip it later\n+        visited_spk_mans.insert(spk_man->GetID());",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "2c6db38744ffb0ade6bf84d0b9caab8d7891642d",
      "in_reply_to_id": 382125444,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added some comments.",
      "created_at": "2020-02-21T17:19:11Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r382705514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382705514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383318210",
      "pull_request_review_id": 363456337,
      "id": 383318210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxODIxMA==",
      "diff_hunk": "@@ -272,55 +272,27 @@ void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n {\n     int nHashType = ParseSighashString(hashType);\n \n-    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n-\n     // Script verification errors\n-    UniValue vErrors(UniValue::VARR);\n-\n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(mtx);\n-    // Sign what we can:\n-    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n-        CTxIn& txin = mtx.vin[i];\n-        auto coin = coins.find(txin.prevout);\n-        if (coin == coins.end() || coin->second.IsSpent()) {\n-            TxInErrorToJSON(txin, vErrors, \"Input not found or already spent\");\n-            continue;\n-        }\n-        const CScript& prevPubKey = coin->second.out.scriptPubKey;\n-        const CAmount& amount = coin->second.out.nValue;\n-\n-        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n-        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n-        if (!fHashSingle || (i < mtx.vout.size())) {\n-            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);\n-        }\n-\n-        UpdateInput(txin, sigdata);\n+    std::map<int, std::string> input_errors;\n \n-        // amount must be specified for valid segwit signature\n-        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n-            throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Missing amount for %s\", coin->second.out.ToString()));\n-        }\n+    bool complete = SignTransaction(mtx, keystore, coins, nHashType, input_errors);\n+    SignTransactionResultToJSON(mtx, complete, coins, input_errors, result);\n+}\n \n-        ScriptError serror = SCRIPT_ERR_OK;\n-        if (!VerifyScript(txin.scriptSig, prevPubKey, &txin.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, TransactionSignatureChecker(&txConst, i, amount), &serror)) {\n-            if (serror == SCRIPT_ERR_INVALID_STACK_OPERATION) {\n-                // Unable to sign input and verification failed (possible attempt to partially sign).\n-                TxInErrorToJSON(txin, vErrors, \"Unable to sign input, invalid stack size (possibly missing key)\");\n-            } else if (serror == SCRIPT_ERR_SIG_NULLFAIL) {\n-                // Verification failed (possibly due to insufficient signatures).\n-                TxInErrorToJSON(txin, vErrors, \"CHECK(MULTI)SIG failing with non-zero signature (possibly need more signatures)\");\n-            } else {\n-                TxInErrorToJSON(txin, vErrors, ScriptErrorString(serror));\n-            }\n+void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, std::map<int, std::string>& input_errors, UniValue& result)\n+{\n+    // Make errors UniValue\n+    UniValue vErrors(UniValue::VARR);\n+    for (const auto& err_pair : input_errors) {\n+        if (err_pair.second == \"Missing amount\") {\n+            // This particular error needs to be an exception for some reason",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": 57,
      "original_position": 57,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "5cab890b915fd9f25cada7ddab7cc00eea22c80b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment isn't really helpful for future code readers, just reviewers.",
      "created_at": "2020-02-24T15:05:28Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383318210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383318210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 288,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383321048",
      "pull_request_review_id": 363456337,
      "id": 383321048,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMTA0OA==",
      "diff_hunk": "@@ -916,7 +916,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n      * calling CreateTransaction();\n      */\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosInOut, std::string& strFailReason, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, CCoinControl);\n-    bool SignTransaction(CMutableTransaction& tx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool SignTransaction(CMutableTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const;",
      "path": "src/wallet/wallet.h",
      "position": 19,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please document when these two functions are used.",
      "created_at": "2020-02-24T15:10:19Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383321048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383321048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 924,
      "original_line": 924,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383321143",
      "pull_request_review_id": 363456337,
      "id": 383321143,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMTE0Mw==",
      "diff_hunk": "@@ -1150,6 +1151,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n \n     //! Get the ScriptPubKeyMan for a script\n     ScriptPubKeyMan* GetScriptPubKeyMan(const CScript& script) const;\n+    ScriptPubKeyMan* GetScriptPubKeyMan(const CScript& script, SignatureData& sigdata) const;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 14,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please document how this is used.",
      "created_at": "2020-02-24T15:10:30Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383321143",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383321143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383327654",
      "pull_request_review_id": 363456337,
      "id": 383327654,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyNzY1NA==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will one SPKM always be sufficient for any input even going forward? Seems to me the same SPKM will always be sourced for a particular input?",
      "created_at": "2020-02-24T15:21:03Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383327654",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383327654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383338101",
      "pull_request_review_id": 363456337,
      "id": 383338101,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzODEwMQ==",
      "diff_hunk": "@@ -2513,27 +2520,34 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n             script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n         } else {\n             // There's no UTXO so we can just skip this now\n-            complete = false;\n             continue;\n         }\n         SignatureData sigdata;\n         input.FillSignatureData(sigdata);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(script, sigdata);\n-        if (!provider) {\n-            complete = false;\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(script, sigdata);\n+        if (!spk_man) {\n             continue;\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(provider.get(), !sign, !bip32derivs), psbtx, i, sighash_type);\n-    }\n+        // If we've already been signed by this spk_man, skip it",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "c5ae320bc62607b10bd7575b541ca972234f464c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will one SPKM always be sufficient for any input even going forward? Seems to me the same SPKM will always be sourced for a particular input?",
      "created_at": "2020-02-24T15:37:03Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383338101",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383338101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383342149",
      "pull_request_review_id": 363456337,
      "id": 383342149,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MjE0OQ==",
      "diff_hunk": "@@ -1178,8 +1178,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     ScriptPubKeyMan* GetScriptPubKeyMan(const uint256& id) const;\n \n     //! Get the SigningProvider for a script\n-    std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script) const;\n-    std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script, SignatureData& sigdata) const;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const;",
      "path": "src/wallet/wallet.h",
      "position": 53,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "f2bd919cfd65ee79a9a0e2691980580d8e7404c1",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A little confused by this commit. Should `SigningProvider` itself be renamed as well?",
      "created_at": "2020-02-24T15:43:09Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383342149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383342149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1185,
      "original_line": 1185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383343089",
      "pull_request_review_id": 363456337,
      "id": 383343089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MzA4OQ==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5cab890b915fd9f25cada7ddab7cc00eea22c80b suggests no, there may be multiple.",
      "created_at": "2020-02-24T15:44:39Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383343089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383343089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383387402",
      "pull_request_review_id": 363544110,
      "id": 383387402,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4NzQwMg==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The expectation is that one spkman will be sufficient. But I suppose it is possible that multiple spkmans could sign for a particular input. I don't think we handle that case.\r\n\r\n5cab890 was from a previous iteration where all spkmans signed the transaction. Perhaps it isn't needed anymore.",
      "created_at": "2020-02-24T16:54:10Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383387402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383387402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383388286",
      "pull_request_review_id": 363545299,
      "id": 383388286,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4ODI4Ng==",
      "diff_hunk": "@@ -1178,8 +1178,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     ScriptPubKeyMan* GetScriptPubKeyMan(const uint256& id) const;\n \n     //! Get the SigningProvider for a script\n-    std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script) const;\n-    std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script, SignatureData& sigdata) const;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const;",
      "path": "src/wallet/wallet.h",
      "position": 53,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "f2bd919cfd65ee79a9a0e2691980580d8e7404c1",
      "in_reply_to_id": 383342149,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We should probably refactor `SigningProvider` at some point to have a parent `SolvingProvider` that doesn't have private keys. But for now, this just returns a `SigningProvider` without private keys.",
      "created_at": "2020-02-24T16:55:42Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383388286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383388286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1185,
      "original_line": 1185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383389521",
      "pull_request_review_id": 363546910,
      "id": 383389521,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4OTUyMQ==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it makes sense to remove that commit then, and just state the assumption here.",
      "created_at": "2020-02-24T16:57:51Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383389521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383389521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383393853",
      "pull_request_review_id": 363552273,
      "id": 383393853,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5Mzg1Mw==",
      "diff_hunk": "@@ -1178,8 +1178,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     ScriptPubKeyMan* GetScriptPubKeyMan(const uint256& id) const;\n \n     //! Get the SigningProvider for a script\n-    std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script) const;\n-    std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script, SignatureData& sigdata) const;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const;",
      "path": "src/wallet/wallet.h",
      "position": 53,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "f2bd919cfd65ee79a9a0e2691980580d8e7404c1",
      "in_reply_to_id": 383342149,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have commit for exactly that, see my earlier comment: https://github.com/bitcoin/bitcoin/pull/18115#pullrequestreview-362040407 ",
      "created_at": "2020-02-24T17:05:15Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383393853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383393853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1185,
      "original_line": 1185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383399066",
      "pull_request_review_id": 363558789,
      "id": 383399066,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5OTA2Ng==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dropped the commit. Added a comment about the assumption.",
      "created_at": "2020-02-24T17:14:46Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383399066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383399066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383399138",
      "pull_request_review_id": 363558877,
      "id": 383399138,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5OTEzOA==",
      "diff_hunk": "@@ -2513,27 +2520,34 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n             script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n         } else {\n             // There's no UTXO so we can just skip this now\n-            complete = false;\n             continue;\n         }\n         SignatureData sigdata;\n         input.FillSignatureData(sigdata);\n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(script, sigdata);\n-        if (!provider) {\n-            complete = false;\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(script, sigdata);\n+        if (!spk_man) {\n             continue;\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(provider.get(), !sign, !bip32derivs), psbtx, i, sighash_type);\n-    }\n+        // If we've already been signed by this spk_man, skip it",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "c5ae320bc62607b10bd7575b541ca972234f464c",
      "in_reply_to_id": 383338101,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Documented the assumption.",
      "created_at": "2020-02-24T17:14:54Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383399138",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383399138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383399252",
      "pull_request_review_id": 363559025,
      "id": 383399252,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5OTI1Mg==",
      "diff_hunk": "@@ -916,7 +916,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n      * calling CreateTransaction();\n      */\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosInOut, std::string& strFailReason, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, CCoinControl);\n-    bool SignTransaction(CMutableTransaction& tx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool SignTransaction(CMutableTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const;",
      "path": "src/wallet/wallet.h",
      "position": 19,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383321048,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment.",
      "created_at": "2020-02-24T17:15:06Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383399252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383399252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 924,
      "original_line": 924,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383401146",
      "pull_request_review_id": 363561340,
      "id": 383401146,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwMTE0Ng==",
      "diff_hunk": "@@ -1150,6 +1151,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n \n     //! Get the ScriptPubKeyMan for a script\n     ScriptPubKeyMan* GetScriptPubKeyMan(const CScript& script) const;\n+    ScriptPubKeyMan* GetScriptPubKeyMan(const CScript& script, SignatureData& sigdata) const;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 14,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383321143,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment.",
      "created_at": "2020-02-24T17:18:39Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r383401146",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383401146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384028681",
      "pull_request_review_id": 364326893,
      "id": 384028681,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyODY4MQ==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've had to restore the commit. It actually is needed. It actually doesn't imply that the different `ScriptPubKeyMan`s can successfully sign the same input.\r\n\r\nIt is still needed because each time the wrong `ScriptPubKeyMan` signs an input, it will add an error. Once that input becomes signed by the correct `ScriptPubKeyMan`, we need to clear away those errors otherwise they will incorrectly persist. Thus that commit is still needed.",
      "created_at": "2020-02-25T17:43:58Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384028681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384028681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384057760",
      "pull_request_review_id": 364363211,
      "id": 384057760,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1Nzc2MA==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this loop over all matching `GetScriptPubKeyMan`s? Otherwise the comment above should be changed to \"We assume that each input is **matched** (and signed) by only one ScriptPubKeyMan.\".\r\n\r\nRight now:\r\n* if non-matching `ScriptPubKeyMan` tries and fails to sign this input, we'll try with the matching `ScriptPubKeyMan`, but;\r\n* if we match, but can't sign, that error can only be cleared if another input happens to match a `ScriptPubKeyMan` that then happens to be able for the failed input as well.\r\n\r\nIn practice this shouldn't matter because two ScriptPubKeyMans should never overlap, but we don't have a way to enforce that.",
      "created_at": "2020-02-25T18:52:24Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384057760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384057760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384077686",
      "pull_request_review_id": 364388182,
      "id": 384077686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NzY4Ng==",
      "diff_hunk": "@@ -2403,34 +2403,68 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     return res;\n }\n \n-bool CWallet::SignTransaction(CMutableTransaction& tx)\n+bool CWallet::SignTransaction(CMutableTransaction& tx) const\n {\n     AssertLockHeld(cs_wallet);\n \n-    // sign the new tx\n-    int nIn = 0;\n+    // Build coins map\n+    std::map<COutPoint, Coin> coins;\n     for (auto& input : tx.vin) {\n         std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n         if(mi == mapWallet.end() || input.prevout.n >= mi->second.tx->vout.size()) {\n             return false;\n         }\n-        const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n-        const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n-        SignatureData sigdata;\n+        const CWalletTx& wtx = mi->second;\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+    }\n+    std::map<int, std::string> input_errors;\n+    return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n+}\n \n-        std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-        if (!provider) {\n-            // We don't know about this scriptpbuKey;\n-            return false;\n+bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const\n+{\n+    // Sign the tx with ScriptPubKeyMans\n+    // Because each ScriptPubKeyMan can sign more than one input, we need to keep track of each ScriptPubKeyMan that has signed this transaction.\n+    // Each iteration, we may sign more txins than the txin that is specified in that iteration.\n+    std::set<uint256> visited_spk_mans;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        // Get the prevout\n+        CTxIn& txin = tx.vin[i];\n+        auto coin = coins.find(txin.prevout);\n+        if (coin == coins.end() || coin->second.IsSpent()) {\n+            input_errors[i] = \"Input not found or already spent\";\n+            continue;\n         }\n \n-        if (!ProduceSignature(*provider, MutableTransactionSignatureCreator(&tx, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            return false;\n+        // Check if this input is complete\n+        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n+        if (sigdata.complete) {\n+            continue;\n         }\n-        UpdateInput(input, sigdata);\n-        nIn++;\n+\n+        // Input needs to be signed, find the right ScriptPubKeyMan\n+        ScriptPubKeyMan* spk_man = GetScriptPubKeyMan(coin->second.out.scriptPubKey, sigdata);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1bb7939d3eb7b0e0c551ba6b7e3cf9158c784e68",
      "in_reply_to_id": 383327654,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fine. I've changed it to check all `ScriptPubKeyMan`s that `CanProvide`.",
      "created_at": "2020-02-25T19:29:26Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384077686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384077686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384106082",
      "pull_request_review_id": 364422642,
      "id": 384106082,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNjA4Mg==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Help me understand:\r\n\r\n1) Two SPKM: A and B\r\n2) Two input tx:\r\ninput 1: key resides in A\r\ninput 2: key resides in B\r\n3) A asked to sign 1, successfully\r\n4) A asked to sign 2, unsuccessful, appends error C\r\n5) B asked to sign 1, unsuccessful, appends error D\r\n6) B asked to sign 2, successful, deletes C\r\n\r\nWe're left with error D?",
      "created_at": "2020-02-25T20:24:05Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384106082",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384106082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384107229",
      "pull_request_review_id": 364424016,
      "id": 384107229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNzIyOQ==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5. B asked to sign 1. 1 comes with existing signature. Skips signing because already signed, no error.",
      "created_at": "2020-02-25T20:26:25Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384107229",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384107229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384110779",
      "pull_request_review_id": 364428286,
      "id": 384110779,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMDc3OQ==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`CWallet::SignTransaction` outer loop over inputs has the complete check, not the inner SPKM loop?",
      "created_at": "2020-02-25T20:34:00Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384110779",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384110779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384118377",
      "pull_request_review_id": 364438065,
      "id": 384118377,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExODM3Nw==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@achow101 `CWallet` skips B when considering input 1, because it's already signed. But then when it's considering input 2 it will tell B to sign the transaction, and the sign code doesn't seem skip already signed inputs.\r\n\r\nIt should be easy to reproduce this scenario in a test on the descriptor wallet PR. E.g. spend from a wallet with one legacy and one native SegWit UTXO.",
      "created_at": "2020-02-25T20:50:42Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384118377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384118377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384158440",
      "pull_request_review_id": 364488382,
      "id": 384158440,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1ODQ0MA==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To be more specific, the generic `SignTransaction` function uses `DataFromTransaction` on each input to pull out any existing signatures, pubkeys, and scripts into a `SignatureData` object. When this `SignatureData` object gets passed into `ProduceSignature`, `ProduceSignature` first looks at the `SignatureData` finds an existing signatures, pubkeys, and scripts, and fills those into the transaction rather than asking for the `SigningProvider` (which is produced by the `ScriptPubKeyMan`). So even if that `SigningProvider` can't sign, because we already had signatures, pubkeys, and scripts in that transaction, no error occurs.\r\n\r\nThere is an additional optimization already in `ProduceSignature` which skips signing when it finds that `SignatureData.complete == true`, which is determined by doing a `VerifyScript` within `DataFromTransaction`. Hence signing is skipped for that input.\r\n\r\nAll of this is pre-existing code which allows us to sign a transaction with external inputs without error. The same process that we do internally with multiple `ScriptPubKeyMan`s is almost the same as if you signed a transaction that has inputs from multiple wallets with those different wallets. Errors are not given for the inputs that are already signed.",
      "created_at": "2020-02-25T22:13:03Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384158440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384158440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384160485",
      "pull_request_review_id": 364490945,
      "id": 384160485,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2MDQ4NQ==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I agree with what you're saying, though it's indirect.",
      "created_at": "2020-02-25T22:17:42Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384160485",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384160485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384340436",
      "pull_request_review_id": 364704240,
      "id": 384340436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MDQzNg==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That makes sense and will do for now. Would be good to add a test to #15764 for this type of stuff, because it seems brittle.",
      "created_at": "2020-02-26T08:39:16Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384340436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384340436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384665587",
      "pull_request_review_id": 365118970,
      "id": 384665587,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2NTU4Nw==",
      "diff_hunk": "@@ -509,6 +509,9 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n             } else {\n                 input_errors[i] = ScriptErrorString(serror);\n             }\n+        } else {\n+            // If this input succeeds, make sure there is no error set for it\n+            input_errors.erase(i);",
      "path": "src/script/sign.cpp",
      "position": 50,
      "original_position": 6,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 384106082,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The nature of descriptor wallets as implemented in #16528 requires this commit or tests fail. We are already testing this case. I added back this commit *because* tests were failing without it in #16528.",
      "created_at": "2020-02-26T18:00:26Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r384665587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384665587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 514,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385326206",
      "pull_request_review_id": 365940174,
      "id": 385326206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyNjIwNg==",
      "diff_hunk": "@@ -272,55 +272,27 @@ void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n {\n     int nHashType = ParseSighashString(hashType);\n \n-    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n-\n     // Script verification errors\n-    UniValue vErrors(UniValue::VARR);\n-\n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(mtx);\n-    // Sign what we can:\n-    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n-        CTxIn& txin = mtx.vin[i];\n-        auto coin = coins.find(txin.prevout);\n-        if (coin == coins.end() || coin->second.IsSpent()) {\n-            TxInErrorToJSON(txin, vErrors, \"Input not found or already spent\");\n-            continue;\n-        }\n-        const CScript& prevPubKey = coin->second.out.scriptPubKey;\n-        const CAmount& amount = coin->second.out.nValue;\n-\n-        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n-        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n-        if (!fHashSingle || (i < mtx.vout.size())) {\n-            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);\n-        }\n-\n-        UpdateInput(txin, sigdata);\n+    std::map<int, std::string> input_errors;\n \n-        // amount must be specified for valid segwit signature\n-        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n-            throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Missing amount for %s\", coin->second.out.ToString()));\n-        }\n+    bool complete = SignTransaction(mtx, keystore, coins, nHashType, input_errors);\n+    SignTransactionResultToJSON(mtx, complete, coins, input_errors, result);\n+}\n \n-        ScriptError serror = SCRIPT_ERR_OK;\n-        if (!VerifyScript(txin.scriptSig, prevPubKey, &txin.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, TransactionSignatureChecker(&txConst, i, amount), &serror)) {\n-            if (serror == SCRIPT_ERR_INVALID_STACK_OPERATION) {\n-                // Unable to sign input and verification failed (possible attempt to partially sign).\n-                TxInErrorToJSON(txin, vErrors, \"Unable to sign input, invalid stack size (possibly missing key)\");\n-            } else if (serror == SCRIPT_ERR_SIG_NULLFAIL) {\n-                // Verification failed (possibly due to insufficient signatures).\n-                TxInErrorToJSON(txin, vErrors, \"CHECK(MULTI)SIG failing with non-zero signature (possibly need more signatures)\");\n-            } else {\n-                TxInErrorToJSON(txin, vErrors, ScriptErrorString(serror));\n-            }\n+void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, std::map<int, std::string>& input_errors, UniValue& result)\n+{\n+    // Make errors UniValue\n+    UniValue vErrors(UniValue::VARR);\n+    for (const auto& err_pair : input_errors) {\n+        if (err_pair.second == \"Missing amount\") {\n+            // This particular error needs to be an exception for some reason",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": 57,
      "original_position": 57,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "5cab890b915fd9f25cada7ddab7cc00eea22c80b",
      "in_reply_to_id": 383318210,
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the reason known, or is this a \"rain dance\" and all we know is that it doesn't work if it isn't an Exception?",
      "created_at": "2020-02-27T19:33:02Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385326206",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385326206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 288,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385331262",
      "pull_request_review_id": 365946567,
      "id": 385331262,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzMTI2Mg==",
      "diff_hunk": "@@ -272,55 +272,27 @@ void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n {\n     int nHashType = ParseSighashString(hashType);\n \n-    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n-\n     // Script verification errors\n-    UniValue vErrors(UniValue::VARR);\n-\n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(mtx);\n-    // Sign what we can:\n-    for (unsigned int i = 0; i < mtx.vin.size(); i++) {\n-        CTxIn& txin = mtx.vin[i];\n-        auto coin = coins.find(txin.prevout);\n-        if (coin == coins.end() || coin->second.IsSpent()) {\n-            TxInErrorToJSON(txin, vErrors, \"Input not found or already spent\");\n-            continue;\n-        }\n-        const CScript& prevPubKey = coin->second.out.scriptPubKey;\n-        const CAmount& amount = coin->second.out.nValue;\n-\n-        SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n-        // Only sign SIGHASH_SINGLE if there's a corresponding output:\n-        if (!fHashSingle || (i < mtx.vout.size())) {\n-            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);\n-        }\n-\n-        UpdateInput(txin, sigdata);\n+    std::map<int, std::string> input_errors;\n \n-        // amount must be specified for valid segwit signature\n-        if (amount == MAX_MONEY && !txin.scriptWitness.IsNull()) {\n-            throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Missing amount for %s\", coin->second.out.ToString()));\n-        }\n+    bool complete = SignTransaction(mtx, keystore, coins, nHashType, input_errors);\n+    SignTransactionResultToJSON(mtx, complete, coins, input_errors, result);\n+}\n \n-        ScriptError serror = SCRIPT_ERR_OK;\n-        if (!VerifyScript(txin.scriptSig, prevPubKey, &txin.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, TransactionSignatureChecker(&txConst, i, amount), &serror)) {\n-            if (serror == SCRIPT_ERR_INVALID_STACK_OPERATION) {\n-                // Unable to sign input and verification failed (possible attempt to partially sign).\n-                TxInErrorToJSON(txin, vErrors, \"Unable to sign input, invalid stack size (possibly missing key)\");\n-            } else if (serror == SCRIPT_ERR_SIG_NULLFAIL) {\n-                // Verification failed (possibly due to insufficient signatures).\n-                TxInErrorToJSON(txin, vErrors, \"CHECK(MULTI)SIG failing with non-zero signature (possibly need more signatures)\");\n-            } else {\n-                TxInErrorToJSON(txin, vErrors, ScriptErrorString(serror));\n-            }\n+void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, std::map<int, std::string>& input_errors, UniValue& result)\n+{\n+    // Make errors UniValue\n+    UniValue vErrors(UniValue::VARR);\n+    for (const auto& err_pair : input_errors) {\n+        if (err_pair.second == \"Missing amount\") {\n+            // This particular error needs to be an exception for some reason",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": 57,
      "original_position": 57,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "5cab890b915fd9f25cada7ddab7cc00eea22c80b",
      "in_reply_to_id": 383318210,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's preserving previous behavior of the API which would throw an exception for that particular error instead of putting it into the errors array.",
      "created_at": "2020-02-27T19:42:43Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385331262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385331262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 288,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385967818",
      "pull_request_review_id": 366742392,
      "id": 385967818,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2NzgxOA==",
      "diff_hunk": "@@ -2926,22 +2926,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n \n         if (sign)\n         {\n-            int nIn = 0;\n-            for (const auto& coin : selected_coins)\n-            {\n-                const CScript& scriptPubKey = coin.txout.scriptPubKey;\n-                SignatureData sigdata;\n-\n-                std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-                if (!provider || !ProduceSignature(*provider, MutableTransactionSignatureCreator(&txNew, nIn, coin.txout.nValue, SIGHASH_ALL), scriptPubKey, sigdata))\n-                {\n-                    strFailReason = _(\"Signing transaction failed\").translated;\n-                    return false;\n-                } else {\n-                    UpdateInput(txNew.vin.at(nIn), sigdata);\n-                }\n-\n-                nIn++;\n+            if (!SignTransaction(txNew)) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "f4b3fbd70b9c982f6d1b03c62241fd73be6eac10",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Might also collapse the outer `if (sign)`",
      "created_at": "2020-02-28T23:28:22Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385967818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385967818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3030,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385967946",
      "pull_request_review_id": 366742392,
      "id": 385967946,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2Nzk0Ng==",
      "diff_hunk": "@@ -124,6 +124,11 @@ class CTxIn\n         return !(a == b);\n     }\n \n+    friend bool operator<(const CTxIn& a, const CTxIn& b)\n+    {\n+        return a.prevout < b.prevout;\n+    }\n+",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 8,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "b525f73852423f4d8c5c61f2dbc624b2399c595d",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: this isn't required for this commit - maybe move it to later where it is required?",
      "created_at": "2020-02-28T23:28:51Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385967946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385967946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385973118",
      "pull_request_review_id": 366742392,
      "id": 385973118,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk3MzExOA==",
      "diff_hunk": "@@ -133,20 +133,27 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n         return;\n     }\n \n-    CKey key;\n-    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n-    {\n-        ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));\n-        return;\n-    }\n-\n     const std::string& message = ui->messageIn_SM->document()->toPlainText().toStdString();\n     std::string signature;\n+    SigningResult res = model->wallet().signMessage(message, *pkhash, signature);\n+\n+    QString error;\n+    switch (res) {\n+        case SigningResult::OK:\n+            error = tr(\"No error\");",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: unnecessary assignment",
      "created_at": "2020-02-28T23:52:11Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385973118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385973118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 143,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385979631",
      "pull_request_review_id": 366755761,
      "id": 385979631,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk3OTYzMQ==",
      "diff_hunk": "@@ -133,20 +133,27 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n         return;\n     }\n \n-    CKey key;\n-    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n-    {\n-        ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));\n-        return;\n-    }\n-\n     const std::string& message = ui->messageIn_SM->document()->toPlainText().toStdString();\n     std::string signature;\n+    SigningResult res = model->wallet().signMessage(message, *pkhash, signature);\n+\n+    QString error;\n+    switch (res) {\n+        case SigningResult::OK:\n+            error = tr(\"No error\");",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "1f9a806a0184ebc4fe7b7b99df6341e0a00fef80",
      "in_reply_to_id": 385973118,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Meh. Just in case some other change results in `error` being shown.",
      "created_at": "2020-02-29T00:26:03Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385979631",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385979631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 143,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385981063",
      "pull_request_review_id": 366757379,
      "id": 385981063,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4MTA2Mw==",
      "diff_hunk": "@@ -124,6 +124,11 @@ class CTxIn\n         return !(a == b);\n     }\n \n+    friend bool operator<(const CTxIn& a, const CTxIn& b)\n+    {\n+        return a.prevout < b.prevout;\n+    }\n+",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 8,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "b525f73852423f4d8c5c61f2dbc624b2399c595d",
      "in_reply_to_id": 385967946,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It looks like this isn't needed at all... But I would like to avoid invalidating ACKs, so I'll leave it in unless I have to rebase or make other changes.",
      "created_at": "2020-02-29T00:34:49Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385981063",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385981063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385981088",
      "pull_request_review_id": 366757414,
      "id": 385981088,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4MTA4OA==",
      "diff_hunk": "@@ -2926,22 +2926,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n \n         if (sign)\n         {\n-            int nIn = 0;\n-            for (const auto& coin : selected_coins)\n-            {\n-                const CScript& scriptPubKey = coin.txout.scriptPubKey;\n-                SignatureData sigdata;\n-\n-                std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-                if (!provider || !ProduceSignature(*provider, MutableTransactionSignatureCreator(&txNew, nIn, coin.txout.nValue, SIGHASH_ALL), scriptPubKey, sigdata))\n-                {\n-                    strFailReason = _(\"Signing transaction failed\").translated;\n-                    return false;\n-                } else {\n-                    UpdateInput(txNew.vin.at(nIn), sigdata);\n-                }\n-\n-                nIn++;\n+            if (!SignTransaction(txNew)) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "f4b3fbd70b9c982f6d1b03c62241fd73be6eac10",
      "in_reply_to_id": 385967818,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will collapse if rebase or other changes are needed.",
      "created_at": "2020-02-29T00:35:00Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r385981088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385981088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3030,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389384551",
      "pull_request_review_id": 370842231,
      "id": 389384551,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NDU1MQ==",
      "diff_hunk": "@@ -124,6 +124,11 @@ class CTxIn\n         return !(a == b);\n     }\n \n+    friend bool operator<(const CTxIn& a, const CTxIn& b)\n+    {\n+        return a.prevout < b.prevout;\n+    }\n+",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 8,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "b525f73852423f4d8c5c61f2dbc624b2399c595d",
      "in_reply_to_id": 385967946,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Had to rebase, removed",
      "created_at": "2020-03-08T16:27:38Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r389384551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389384551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389384558",
      "pull_request_review_id": 370842241,
      "id": 389384558,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NDU1OA==",
      "diff_hunk": "@@ -2926,22 +2926,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n \n         if (sign)\n         {\n-            int nIn = 0;\n-            for (const auto& coin : selected_coins)\n-            {\n-                const CScript& scriptPubKey = coin.txout.scriptPubKey;\n-                SignatureData sigdata;\n-\n-                std::unique_ptr<SigningProvider> provider = GetSigningProvider(scriptPubKey);\n-                if (!provider || !ProduceSignature(*provider, MutableTransactionSignatureCreator(&txNew, nIn, coin.txout.nValue, SIGHASH_ALL), scriptPubKey, sigdata))\n-                {\n-                    strFailReason = _(\"Signing transaction failed\").translated;\n-                    return false;\n-                } else {\n-                    UpdateInput(txNew.vin.at(nIn), sigdata);\n-                }\n-\n-                nIn++;\n+            if (!SignTransaction(txNew)) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d2774c09cfcc6c5c967d40bb094eabc8c0bdb6bf",
      "original_commit_id": "f4b3fbd70b9c982f6d1b03c62241fd73be6eac10",
      "in_reply_to_id": 385967818,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "had to rebase, collapsed.",
      "created_at": "2020-03-08T16:27:49Z",
      "updated_at": "2020-03-09T15:18:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18115#discussion_r389384558",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389384558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18115"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3030,
      "side": "RIGHT"
    }
  ]
}