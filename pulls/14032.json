{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032",
    "id": 210482525,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwNDgyNTI1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14032",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14032.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14032.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
    "number": 14032,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add p2p layer encryption with ECDH/ChaCha20Poly1305",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds encryption to the p2p communication after a slightly overhauled version of BIP151 defined [here](https://gist.github.com/jonasschnelli/c530ea8421b8d0e80c51486325587c52) (there is the plan to change BIP151 or to propose this protocol in a new BIP)\r\n\r\nThe encryption is optional and by default disabled (`-netencryption`).\r\n\r\nIf enabled, a peer connecting to another peer signalling `NODE_ENCRYPTED` (or added via `-connect=`) will try to do the proposed key handshake and continue with encrypted communication.\r\n\r\nIf enabled, peers can request (and perform) encrypted communications by sending a handshake request.\r\n\r\nPeers not supporting encryption are still accepted (no option to enforce encrypted communication).\r\n\r\nThere is a plan to make the handshake quantum resistance by adding NewHope to the key handshake (https://newhopecrypto.org). But since this PR is already very large, it's unclear wether this should be an independent patch (probably another ~600 lines of code).\r\n\r\n**Out of scope:**\r\n* optimized ChaCha20 implementation (for review and security reasons, the implementation is extracted from openssh)\r\n* benchmarks added to bench (I have done comparison against the v1 protocol with dbl-SHA256 the performance seems very similar)\r\n* Please no discussion about the used crypto scheme or the [proposal](https://gist.github.com/jonasschnelli/c530ea8421b8d0e80c51486325587c52) itself (better place would be the mailing list)\r\n\r\n**TODO:**\r\n* [ ] add option to `-connect=` RPC `addnode` where it is possible to specify the expected service flags (currently `-connect=` will always try for encrypted coms).",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-08-23T15:11:14Z",
    "updated_at": "2022-08-24T09:46:33Z",
    "closed_at": "2021-08-18T12:25:27Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "278d765a7a2c64d5405a66450f49f755ed03b495",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jonasschnelli:2018/08/bip151",
      "ref": "2018/08/bip151",
      "sha": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 9264454,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjY0NDU0",
        "name": "bitcoin",
        "full_name": "jonasschnelli/bitcoin",
        "owner": {
          "login": "jonasschnelli",
          "id": 178464,
          "node_id": "MDQ6VXNlcjE3ODQ2NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasschnelli",
          "html_url": "https://github.com/jonasschnelli",
          "followers_url": "https://api.github.com/users/jonasschnelli/followers",
          "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
          "repos_url": "https://api.github.com/users/jonasschnelli/repos",
          "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasschnelli/bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/jonasschnelli/bitcoin",
        "archive_url": "https://api.github.com/repos/jonasschnelli/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasschnelli/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasschnelli/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasschnelli/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jonasschnelli/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasschnelli/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasschnelli/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasschnelli/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasschnelli/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jonasschnelli/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jonasschnelli/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasschnelli/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasschnelli/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasschnelli/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasschnelli/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasschnelli/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jonasschnelli/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasschnelli/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/hooks",
        "svn_url": "https://github.com/jonasschnelli/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 194164,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-08-07T18:33:53Z",
        "created_at": "2013-04-06T18:21:51Z",
        "updated_at": "2023-05-19T06:34:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "72634244580dc2e3c630ee27e47587080d064b68",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1764,
    "deletions": 184,
    "changed_files": 23,
    "commits": 21,
    "review_comments": 32,
    "comments": 13
  },
  "events": [
    {
      "event": "labeled",
      "id": 1805549025,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDU1NDkwMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1805549025",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T15:11:14Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 149030580,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5MDMwNTgw",
      "url": null,
      "actor": null,
      "commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-149030580",
      "submitted_at": "2018-08-23T18:03:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 149032015,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5MDMyMDE1",
      "url": null,
      "actor": null,
      "commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-149032015",
      "submitted_at": "2018-08-23T18:07:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 149032670,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5MDMyNjcw",
      "url": null,
      "actor": null,
      "commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-149032670",
      "submitted_at": "2018-08-23T18:08:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 149033591,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5MDMzNTkx",
      "url": null,
      "actor": null,
      "commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-149033591",
      "submitted_at": "2018-08-23T18:11:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 149034437,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5MDM0NDM3",
      "url": null,
      "actor": null,
      "commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-149034437",
      "submitted_at": "2018-08-23T18:13:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "commented",
      "id": 415521431,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTUyMTQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415521431",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T18:28:26Z",
      "updated_at": "2019-07-10T21:16:08Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16362](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16362.html) (gui: Bilingual translation by hebasto)\n* [#16324](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16324.html) (Get cs_main out of the critical path in ProcessMessages by TheBlueMatt)\n* [#16323](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16323.html) (Call ProcessNewBlock() asynchronously by TheBlueMatt)\n* [#16273](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16273.html) (refactor: Remove unused includes by practicalswift)\n* [#16248](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16248.html) (Make whitebind/whitelist permissions more flexible by NicolasDorier)\n* [#16224](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16224.html) (gui: Bilingual GUI error messages by hebasto)\n* [#16202](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16202.html) (Refactor network message deserialization by jonasschnelli)\n* [#16097](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16097.html) (WIP: Prevent meaningless negating of arguments by hebasto)\n* [#16060](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16060.html) (Bury bip9 deployments by jnewbery)\n* [#15649](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15649.html) (Add ChaCha20Poly1305@Bitcoin AEAD by jonasschnelli)\n* [#15505](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15505.html) ([p2p] Request NOTFOUND transactions immediately from other outbound peers, when possible by sdaftuar)\n* [#15206](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15206.html) (Immediately disconnect on invalid net message checksum by jonasschnelli)\n* [#15197](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15197.html) (Refactor and slightly stricter p2p message processing by jonasschnelli)\n* [#14046](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14046.html) (net: Refactor message parsing (CNetMessage), adds flexibility by jonasschnelli)\n* [#10102](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10102.html) ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-415521431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "added_to_project",
      "id": 1806096621,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxODA2MDk2NjIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806096621",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T19:04:51Z",
      "project_card": {
        "id": 12386602,
        "url": "https://api.github.com/projects/columns/cards/12386602",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1806100105,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwNjEwMDEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806100105",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T19:06:23Z"
    },
    {
      "event": "commented",
      "id": 415549299,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU0OTI5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415549299",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T19:50:32Z",
      "updated_at": "2018-08-23T19:50:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed @practicalswift points.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-415549299",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "mentioned",
      "id": 1806198948,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgwNjE5ODk0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806198948",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T19:50:32Z"
    },
    {
      "event": "subscribed",
      "id": 1806198950,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MDYxOTg5NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806198950",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T19:50:32Z"
    },
    {
      "event": "removed_from_project",
      "id": 1806221043,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTgwNjIyMTA0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806221043",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T20:00:06Z",
      "project_card": {
        "id": 12386602,
        "url": "https://api.github.com/projects/columns/cards/12386602",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 415559982,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1OTk4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415559982",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T20:26:51Z",
      "updated_at": "2018-08-23T20:26:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Great work!\r\n\r\nAlthough optimized crypto is certainly out of scope, we do want to be mindful of making any protocol decisions that would preclude using them. :)",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-415559982",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1807175163,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwNzE3NTE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1807175163",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T08:50:19Z"
    },
    {
      "event": "commented",
      "id": 415704147,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTcwNDE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415704147",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T09:22:11Z",
      "updated_at": "2018-08-24T15:13:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Note to reviewers: please review...\r\n* #14046 Refactor message parsing (CNetMessage), adds flexibility \r\n* #14047 Add HKDF_HMAC256_L32 and method to negate a private key\r\n* #14049 Enable libsecp256k1 ecdh module, add ECDH function to CKey\r\n* #14050 Add chacha20/poly1305 and chacha20poly1305_AEAD from openssh\r\n... first (extracted commits from this PR)",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-415704147",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "labeled",
      "id": 1809056397,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDkwNTYzOTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809056397",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T16:40:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1815648236,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxNTY0ODIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1815648236",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T13:28:12Z"
    },
    {
      "event": "unlabeled",
      "id": 1815898549,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgxNTg5ODU0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1815898549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T14:58:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 417054311,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzA1NDMxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417054311",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T18:20:38Z",
      "updated_at": "2018-08-29T18:20:38Z",
      "author_association": "MEMBER",
      "body": "What is the point of `NODE_ENCRYPTED`? Service bits shouldn't be used for mere protocol negotiation...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-417054311",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "commented",
      "id": 417070832,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzA3MDgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417070832",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T19:11:06Z",
      "updated_at": "2018-08-29T19:11:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What is the point of NODE_ENCRYPTED? Service bits shouldn't be used for mere protocol negotiation...\r\n\r\nThis has now been discussed on IRC:\r\nhttps://botbot.me/freenode/bitcoin-core-dev/2018-08-29/?msg=103889728&page=3",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-417070832",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1821363490,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMTM2MzQ5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1821363490",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T19:47:31Z"
    },
    {
      "event": "reviewed",
      "id": 151603394,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxNjAzMzk0",
      "url": null,
      "actor": null,
      "commit_id": "93f64ad566b014f69f797e8911c5ff75bb257758",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-151603394",
      "submitted_at": "2018-09-01T21:07:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 151603405,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxNjAzNDA1",
      "url": null,
      "actor": null,
      "commit_id": "93f64ad566b014f69f797e8911c5ff75bb257758",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-151603405",
      "submitted_at": "2018-09-01T21:07:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1822149594,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMjE0OTU5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822149594",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T07:53:17Z"
    },
    {
      "event": "reviewed",
      "id": 151612586,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxNjEyNTg2",
      "url": null,
      "actor": null,
      "commit_id": "9c2fd588ebd29478c72b3add6acd549d5742e870",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-151612586",
      "submitted_at": "2018-09-02T08:00:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1822152116,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMjE1MjExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822152116",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T08:03:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1822155756,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMjE1NTc1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822155756",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T08:16:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1822160588,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMjE2MDU4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822160588",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T08:34:46Z"
    },
    {
      "event": "commented",
      "id": 417914339,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkxNDMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417914339",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T08:40:51Z",
      "updated_at": "2018-09-02T10:12:59Z",
      "author_association": "MEMBER",
      "body": "Lightly tested on macOS. I was able to establish an encrypted connection and sync headers to afresh node. It didn't (immediately) sync blocks though, but maybe that's normal behavior when you only have 1 peer?\r\n\r\nQT Peers Window doesn't show the new service flag next to Services, and it also doesn't show the encryption info, but that can be done in another PR. \r\n\r\nI would move the TODO `add option to -connect=` to a different PR. I'd also like a way to only accept inbound encrypted peers, and only connect to outbound encrypted peers.\r\n\r\nCan you add more functional tests, e.g. to check that it rotates the key after N bytes? \r\n\r\nI would be nice to have a fork of @sipa's [DNS seeder](https://github.com/sipa/bitcoin-seeder) that finds these nodes on testnet. I'd be happy to switch mine over.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-417914339",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "mentioned",
      "id": 1822162083,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgyMjE2MjA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822162083",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T08:40:51Z"
    },
    {
      "event": "subscribed",
      "id": 1822162084,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MjIxNjIwODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822162084",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T08:40:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1822190672,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMjE5MDY3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1822190672",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-02T10:18:19Z"
    },
    {
      "event": "reviewed",
      "id": 151616903,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxNjE2OTAz",
      "url": null,
      "actor": null,
      "commit_id": "d98eedb3f8765e1909c58da637e187eb872c708d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-151616903",
      "submitted_at": "2018-09-02T11:03:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 151616979,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxNjE2OTc5",
      "url": null,
      "actor": null,
      "commit_id": "0971380cca98d80724c0fd6707e3ee571362d8cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-151616979",
      "submitted_at": "2018-09-02T11:06:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "commented",
      "id": 418086026,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA4NjAyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418086026",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-03T11:23:34Z",
      "updated_at": "2018-09-03T11:23:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "I removed the term \"stealth encryption\" from the source code (plus code comments). Also fixed the protocol.h `NODE_ENCRYPTED` comment.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-418086026",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "reviewed",
      "id": 152360948,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzYwOTQ4",
      "url": null,
      "actor": null,
      "commit_id": "d98eedb3f8765e1909c58da637e187eb872c708d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-152360948",
      "submitted_at": "2018-09-05T07:14:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "labeled",
      "id": 1828810369,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4Mjg4MTAzNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1828810369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-05T20:13:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1851638302,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg1MTYzODMwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1851638302",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-18T07:54:58Z"
    },
    {
      "event": "commented",
      "id": 422293012,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjI5MzAxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422293012",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-18T07:54:59Z",
      "updated_at": "2018-09-18T07:54:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-422293012",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "unlabeled",
      "id": 1851638707,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg1MTYzODcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1851638707",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-18T07:55:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 423453904,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQ1MzkwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423453904",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T08:19:48Z",
      "updated_at": "2018-09-21T08:19:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "This PR does not seem to compile after rebasing on `master` :-)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-423453904",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "reviewed",
      "id": 157590664,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkwNjY0",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-157590664",
      "submitted_at": "2018-09-21T08:27:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 157591231,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkxMjMx",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-157591231",
      "submitted_at": "2018-09-21T08:29:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 157931991,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMxOTkx",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-157931991",
      "submitted_at": "2018-09-23T08:06:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 157931997,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMxOTk3",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-157931997",
      "submitted_at": "2018-09-23T08:07:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 157932011,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyMDEx",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-157932011",
      "submitted_at": "2018-09-23T08:07:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 158726040,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU4NzI2MDQw",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-158726040",
      "submitted_at": "2018-09-25T20:17:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 158726613,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU4NzI2NjEz",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-158726613",
      "submitted_at": "2018-09-25T20:19:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 158728127,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU4NzI4MTI3",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-158728127",
      "submitted_at": "2018-09-25T20:22:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "mentioned",
      "id": 1866816926,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2NjgxNjkyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1866816926",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T20:37:21Z"
    },
    {
      "event": "subscribed",
      "id": 1866816927,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjY4MTY5Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1866816927",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T20:37:21Z"
    },
    {
      "event": "mentioned",
      "id": 1866877274,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2Njg3NzI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1866877274",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T21:06:18Z"
    },
    {
      "event": "subscribed",
      "id": 1866877278,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjY4NzcyNzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1866877278",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-25T21:06:18Z"
    },
    {
      "event": "reviewed",
      "id": 160119600,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYwMTE5NjAw",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-160119600",
      "submitted_at": "2018-09-30T16:06:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 160119658,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYwMTE5NjU4",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-160119658",
      "submitted_at": "2018-09-30T16:08:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 160119796,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYwMTE5Nzk2",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-160119796",
      "submitted_at": "2018-09-30T16:12:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 165351289,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1MzUxMjg5",
      "url": null,
      "actor": null,
      "commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-165351289",
      "submitted_at": "2018-10-16T20:24:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "labeled",
      "id": 1916140290,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5MTYxNDAyOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1916140290",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-20T09:51:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2196517563,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE5NjUxNzU2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2196517563",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T09:37:13Z"
    },
    {
      "event": "unlabeled",
      "id": 2196610758,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjE5NjYxMDc1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2196610758",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T10:10:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2198220125,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE5ODIyMDEyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2198220125",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T19:17:50Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201454918,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU0OTE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201454918",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:58:28Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201455113,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU1MTEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201455113",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:58:34Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201455413,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU1NDEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201455413",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:58:41Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201455701,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU1NzAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201455701",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:58:47Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201456028,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU2MDI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201456028",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:58:54Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201456401,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU2NDAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201456401",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:59:05Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201456570,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU2NTcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201456570",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:59:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2201457399,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIwMTQ1NzM5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201457399",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:59:21Z"
    },
    {
      "event": "comment_deleted",
      "id": 2201457496,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMjAxNDU3NDk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201457496",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T19:59:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2201545018,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIwMTU0NTAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2201545018",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-13T20:34:36Z"
    },
    {
      "event": "reviewed",
      "id": 214230117,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0MjMwMTE3",
      "url": null,
      "actor": null,
      "commit_id": "fe3be2d82f1293e3b6d7d15b9e0180199b3cc376",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-214230117",
      "submitted_at": "2019-03-13T21:50:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 214231000,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0MjMxMDAw",
      "url": null,
      "actor": null,
      "commit_id": "fe3be2d82f1293e3b6d7d15b9e0180199b3cc376",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-214231000",
      "submitted_at": "2019-03-13T21:52:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "reviewed",
      "id": 214233494,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0MjMzNDk0",
      "url": null,
      "actor": null,
      "commit_id": "fe3be2d82f1293e3b6d7d15b9e0180199b3cc376",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-214233494",
      "submitted_at": "2019-03-13T21:58:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2223718533,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIyMzcxODUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2223718533",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-22T20:18:38Z"
    },
    {
      "event": "labeled",
      "id": 2232781339,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyMzI3ODEzMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2232781339",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-27T11:35:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 2347173246,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIzNDcxNzMyNDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2347173246",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "376638afcf945ec43089625d115286594ce0ab16",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/376638afcf945ec43089625d115286594ce0ab16",
      "created_at": "2019-05-16T17:26:37Z"
    },
    {
      "event": "referenced",
      "id": 2351105081,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIzNTExMDUwODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2351105081",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0a01b31f24ccf8f461fc648ad160500b88915a86",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0a01b31f24ccf8f461fc648ad160500b88915a86",
      "created_at": "2019-05-18T19:19:26Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2NjMTNlMWZkYjFmYTU5ZDgzNjU1NTBlYzMzYTJmZGE3OGY0MjEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3cc13e1fdb1fa59d8365550ec33a2fda78f4210",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b3cc13e1fdb1fa59d8365550ec33a2fda78f4210",
      "tree": {
        "sha": "964bb82bd7a44a652b0fce9041192aefd3f7d7e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/964bb82bd7a44a652b0fce9041192aefd3f7d7e3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 964bb82bd7a44a652b0fce9041192aefd3f7d7e3\nparent 72634244580dc2e3c630ee27e47587080d064b68\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1552319669 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346500 +0200\n\n==== CRYPTO ====\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlziewQACgkQHrd2uwPH\nki0+EQ//anNEMPTW/Eu46423WWLtyEWWVnamEZ3tyjI3sY8AnSpCTDoOKLWbSUXg\npLWJw5sw2cQmyXT5NqQdL+m5ZMhfTxWclnoZSjtxYF/WumZyO1ulLQ33JlG6Ml/S\nF/bcAYd4yW+hNU/mhoJnnREf+RUEVagJqUV8dge/UvGBX/vwLhlffQmklKthOT6Z\njjWSB1owyNiuYW//kmu2PjGkA3Y2Br0YxUpcQ8+a6HxUo+yJ4MgMCPqmZCk3UDeu\nokF3WPPPN3pV/OV+RmnS5bkvJ9YaU8yk0O+zCcNgSCKXtggaGpjUa0JamIN9Prsw\nF76IbMFONZn7eCAzzeNiCb5OS90IFdjLU2iP7PK6aTBGSTSZIk7c6Uml1mlrIPKH\nEr7/hk4mdfGSsBCIdtyYs+Wx/NrOtcV8QNwAT7CL3WAnzbtk/FyP2+J+5JqS9Q59\nIDbUTiBR8+1KMOmjN6fq0YG/vg0aGjYcr8KH9bZvldCZe+G31AnqcSrnQs9SgSga\nbySikgUlnnpenk2xpRekTj2LumR8dCJWLIb5xVVNjfrP7krYpYtWKO/0DV30nqAn\nujdMu0y1ghCk5xhZDnzggpV+xgWDvimLKxLP9YdW16Nkd67qZvi51SW5Fabe4pu8\nK3KCRp78APh9z1UKEQj6dBFsb96jY5tnLlVpf1DZXjUimt1U1lw=\n=2Av2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72634244580dc2e3c630ee27e47587080d064b68",
          "sha": "72634244580dc2e3c630ee27e47587080d064b68",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72634244580dc2e3c630ee27e47587080d064b68"
        }
      ],
      "message": "==== CRYPTO ====",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:01:40Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-11T15:54:29Z"
      },
      "sha": "b3cc13e1fdb1fa59d8365550ec33a2fda78f4210"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWQ0ZjI0YmIwZWY5YWQ4Nzg1ZjM2Yzc4ZDY5YzBhOWQ2Y2VhZmQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2",
      "tree": {
        "sha": "4088e27f8f3fe887a9821446b9f01024964ce961",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4088e27f8f3fe887a9821446b9f01024964ce961"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4088e27f8f3fe887a9821446b9f01024964ce961\nparent b3cc13e1fdb1fa59d8365550ec33a2fda78f4210\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1535122061 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346509 +0200\n\nEnable libsecp256k1 ecdh module, add ecdh function to CKey\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlziew0ACgkQHrd2uwPH\nki0SjQ/8CQ9mIqMPMJolPVb9ok4dCIKiJiE7tCY0zXKOi2pSiIqgRvdl+sGVyAjn\nyQRjC2rV+97SCi3LuiO2O03Vs9LN/gHN9tQ+uQnUOdk0wkbbRPEMPD2F2hPzvAA5\nnToyubXBXID3BTN+zNJxRDLiAzlhHaCWl86ZVlgYu8xaQ/gI76MrHLcFDEKqm3tI\nzxHDLSw3Soo6AahzJHf9HPP84NOSuiWa60R+Q2NvejjpwFaAe7PEy2f9No3Pctkp\na1UnmiHD3c1msNCqHiKyzqV3aR8RR4U003iByZUCJqbC6TMQnqoPQeizwft8ueH3\nQDX+KUiq8VrGKcbaKaK90mTY1tYncGgpjoiwkb/tfKBgKaLOKwDckTvL4IPw1J1h\n+AHnHcObjfUu/J7E25jf9JyJ3Tonu7DsTG/gr8TlVG4fZ/BFGzVvkykIDUhK3/rW\nYKSO3XB05YV3yTcFR2BNQ4pBtVlww1sn3txgfQ6PmQRf+oF3IDChoagfBWSU7KCr\niZg8iIWniZ/TSRrkhWRQxWHNh/1mBtoie323kRrlYcNAKa0otm7FZdTtY757kDcD\nU94i71PKq18WQiaQxbRn8Ey5tEZfhlsLtAlGvzptyuOhgNmoaHK44wrxOsjGYr9Q\n8XNj2fd/E7f/Rhc1g8NnHGDSmCCuVfwHz8Nl0rF2CXCON6xknQo=\n=Wyru\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3cc13e1fdb1fa59d8365550ec33a2fda78f4210",
          "sha": "b3cc13e1fdb1fa59d8365550ec33a2fda78f4210",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b3cc13e1fdb1fa59d8365550ec33a2fda78f4210"
        }
      ],
      "message": "Enable libsecp256k1 ecdh module, add ecdh function to CKey",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:01:49Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-24T14:47:41Z"
      },
      "sha": "31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDgyMWY4ZDlkNGJkOGMwYWJiYzUzMzFjNDdkMzgyZDQxMzJlYTA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50821f8d9d4bd8c0abbc5331c47d382d4132ea04",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/50821f8d9d4bd8c0abbc5331c47d382d4132ea04",
      "tree": {
        "sha": "05eccae1bece1e4d84de411d81c5a5cfacb33be7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05eccae1bece1e4d84de411d81c5a5cfacb33be7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 05eccae1bece1e4d84de411d81c5a5cfacb33be7\nparent 31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1535122074 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346512 +0200\n\nQA: Add EC Diffie-Hellman test\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlziexAACgkQHrd2uwPH\nki1erg//QnQmjNg4ggxd7OylF0EmdvfAD9pTUiMu1oMK7WPRPAGgi6Apimx9jrG+\nygEgWlJOIl4qtROIxCqiIsJD88It95DjJBsPf3eU+YdlvhYkNNWD9CgYNvJwrBeq\nJuMXTV3W3ERdNNJH68PiUmipC1Cygno/ln9CtbruUGyeS0Rsxbdhj1aavZjioXNT\nPJDfp09ypnoyxcCJRRPeWeCQ5rEHOas8G+kagDWUYqb5SpfPQZTz+mGhn8dXwgrD\nlIuHNOdQe1+Jmb4otbi7kY3Gv2yh9vs+qNOUYi4UYD7tXD6VAVzmk0xQh1hXkyYD\nlrGJys4z8sM08hH7idSU0iQlmP9+JqU0HvSqfC9loLCBo9qCp+13h6wnL72WSTXQ\n31gJmQEgeCDhWWlnkFhRuQH/Wb4qr78fNe8yp3AQnOl8KlyMsqDKd6dFzYqYdNHR\nz0nhE2U8SbT1fprlgS11e6NJYjTzoIrzIFo4jn9UUuJtib7CB1u28vg4fPhKVqte\nn8xquyNAK4W1IrQRMhKdQVaQBfaW2bTLXqmTki9H6JQCsgrvYnO80oi0hWBKJ0b0\nPLVSRMcmukzxc59z/jOZWFAersM9ri0SAomF7LaMmzTZyrcZenFnnsQDp96GBoOS\nmBjKlXGDC1wmWtWN1/mOkvUg8aXEnqpNOyVvh+SdLajggaQ44uY=\n=9hVt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2",
          "sha": "31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/31d4f24bb0ef9ad8785f36c78d69c0a9d6ceafd2"
        }
      ],
      "message": "QA: Add EC Diffie-Hellman test",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:01:52Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-24T14:47:54Z"
      },
      "sha": "50821f8d9d4bd8c0abbc5331c47d382d4132ea04"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjhhMTVjZmZkMDhiYWRhY2E4Y2JhMmI2NmVlYzk0NDZlYTZmMWVl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb8a15cffd08badaca8cba2b66eec9446ea6f1ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cb8a15cffd08badaca8cba2b66eec9446ea6f1ee",
      "tree": {
        "sha": "32387fcf7fe011c48aacca26db2168555fac9444",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32387fcf7fe011c48aacca26db2168555fac9444"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 32387fcf7fe011c48aacca26db2168555fac9444\nparent 50821f8d9d4bd8c0abbc5331c47d382d4132ea04\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1552317345 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346537 +0200\n\nAdd ChaCha20Poly1305@Bitcoin AEAD implementation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzieykACgkQHrd2uwPH\nki1V+Q/9FRmwSu2y3Ehn4eo0w1QsgBvOEMLobeRI/8I6zdLBWIhkU2xlrEA4XhN3\nlDqmhpNj7lZ6RmTkGKKeQG0JBtAcSDW5ak5x9Vfn57zmqJWZN6kMK0jWxjiH6ntQ\nyDvPEFjRyU9UQz+Uy9/nAWr3KeSHNWbSBr6VxqTD/FoNiOgHITZ+Ol6VBcltxn82\nQ1BclSDRLzsdBDDOmTS1diKah5TqaSCHuqOssaZe7tOOtyD48vlgqoMaeuAlEdCv\nTRlCiyBBxSja7p9t1KAyXUEsKJuNe5xmDDxjpDlf2qULUesCQlONlwUi7ZaFORcj\nLAkDm+kzTOMztlVfq1u020FbX/Lv27CPoqZcZToJkLk0OGdeHuvvp28ksSQtObo6\n5eqhEqoHoz//DMnECTLbfjcPbr7ZbL4jWnw43GieL/8a+aw9GWFCZPqyGIVKG+EX\niP3bFXIY/jtM8Gixt2u3L335ZHsmnmhXTCgNFj03zT+Sr5j4g6x8eUrBeDqhtrpM\n+Rx5GxTxTx2KGUvTkVQCEH28HR6MK2LsZVaEUW6im7mGtmzzVlwcpCbakPwDy267\nr8QanvcpUm9tPefyvQKx9ZGCFkkcwoLEPQi0IYIDi+iWHfrz0LGZaGFCULlPPEBB\nxSzC0nG2PWtAwjfDOXL7uDOFVh/a+ng8l1S45dHnPowjVxVn0NI=\n=xyKn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50821f8d9d4bd8c0abbc5331c47d382d4132ea04",
          "sha": "50821f8d9d4bd8c0abbc5331c47d382d4132ea04",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/50821f8d9d4bd8c0abbc5331c47d382d4132ea04"
        }
      ],
      "message": "Add ChaCha20Poly1305@Bitcoin AEAD implementation",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:17Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-11T15:15:45Z"
      },
      "sha": "cb8a15cffd08badaca8cba2b66eec9446ea6f1ee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzkzZWI3ZjA0MjczY2VmNTZlOGJiNjNjNTA0YTIzNTY0ZmY0MjIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c93eb7f04273cef56e8bb63c504a23564ff4220",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7c93eb7f04273cef56e8bb63c504a23564ff4220",
      "tree": {
        "sha": "364dcf74b768d39b404bac9927fadae3e6786573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/364dcf74b768d39b404bac9927fadae3e6786573"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 364dcf74b768d39b404bac9927fadae3e6786573\nparent cb8a15cffd08badaca8cba2b66eec9446ea6f1ee\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1552317375 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346542 +0200\n\nAdd ChaCha20Poly1305@Bitcoin tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlziey4ACgkQHrd2uwPH\nki2c5xAAlCV1WdAhWcde87BsxDHPq4xN4P9LZzxsE2fAfWaLdpWEImSpR69ynHVa\n991F4+QxAFUZhZXxqNPzNw/atyBUvr/sg6C0cI6+VH6ccEq1q+ymXYL5s9n9YJ17\nBl3I5ipRLLdxX2y5JXrd+VsvDWF5OOdPDlA4a+wKeqfaEVsb9XHxpEktLDiJp2gU\nOjpy/6UTuJN6FZg/VslNuGf50DhxCDgySwmtSTkuyxdvUiyHcmUdu644Q+UqNeim\nmWygteyDbYkubbTwdVsF8uB0f3m13lJwVLA5CFns2IVc1+gQZyNLiIVA6dLHnl7p\nDr/xh4QnK75TYjV1G4vnw3db2jxAF1TirB46vM8seHeZege7CujsTSOKnl3kcER8\n0bJMx3bkpw06dx7AxPyvBb1xE7C/8rc+VGnxBI0TKrDKLmZWe1uDoqMXUyPWy5c2\nsnnMJDV4dOUoCqGsJrDVRY1mQdtHPZ3un5Mfdhpg2T2U/U6py3uBmKc8tgTMHmMN\nf1AYsj84UcFlArE+2aaoI1IlFcvFSfzU3CY/a74GbDCSx2g02D6phhCsOW5vGgqv\nDs3l27m0Hp9rMBsEevEvsHrAE4Jwe5t6WAS1P8lMA7ODucxC6BKQyTgRxUSdvDnr\njXl22L7NkbmfYgbvOJeyTGBExQRKcsSwWivETGRSXfeZrNYZcDk=\n=vtbc\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb8a15cffd08badaca8cba2b66eec9446ea6f1ee",
          "sha": "cb8a15cffd08badaca8cba2b66eec9446ea6f1ee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cb8a15cffd08badaca8cba2b66eec9446ea6f1ee"
        }
      ],
      "message": "Add ChaCha20Poly1305@Bitcoin tests",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:22Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-11T15:16:15Z"
      },
      "sha": "7c93eb7f04273cef56e8bb63c504a23564ff4220"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjY4NjczYmVlYzY0MzE3ZGJkZmJmNmZiNmJkMzQxOTVkNTA2ZjUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f68673beec64317dbdfbf6fb6bd34195d506f50",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6f68673beec64317dbdfbf6fb6bd34195d506f50",
      "tree": {
        "sha": "ef53ff67ea66998f386b086272c72abb14baf969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef53ff67ea66998f386b086272c72abb14baf969"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ef53ff67ea66998f386b086272c72abb14baf969\nparent 7c93eb7f04273cef56e8bb63c504a23564ff4220\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1552919275 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346545 +0200\n\nAdd ChaCha20Poly1305@Bitcoin AEAD benchmark\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlziezEACgkQHrd2uwPH\nki3V3Q/46UaqgGlP9UdPHM/iBe+VH7qBggDhQDzeKeahHLQTRn0FqCqT9Z5f6MCC\nou7cVGDHfOz0kHKu4rwCuf2aeRGMCU4k9tI0Y9AygUL++M8pNzZUCswrk2H3FrDy\nW80a2zwo/qtz1bxo2PywoqCY1Yw0WHH+Q3xxuxi+ji4pwPrpDfLrbKk8jrHXE9OV\nsLalWW8yMcSrflxJakLlyk8m5cHP2hRhWBTQrmbiCjpb4hr/DYyNndavb8Q8j2Mq\nOlP2WIj9vAdVwEJzxQJG1eThAr1N87woG0zVnxJJYNYll68GwHf10IZht3kSW9Rp\nPGEgYIPf/ZExazXvK0hG2Z4qACCwQJpoAwgAXGOOUVHh3RRIfAEvNi6VCgi7z3rk\n7Z7y4OFyxu9Cch/3ZIn6HodCRaFfVwW4FeBLTLAt78MxyI37QiU5H3isCe1tbogZ\nz9H5gN+3XGGoCoNc43J+gJvD3O5K7tY7CXmKTWO9CkHW/taGwCm0At/J9jjZ8fmd\nhbNG/nA2v8wmMgoDlM2VYDQBoTQxMcbZH0nZB0yy7yq+19bvI75rlL/BhLK5wsVe\n1A/BDyuy9q8SOD6zrIPhsizhuHUeCxJXCiaWlItNO8gUL/Br1Amvk7ywpnbTeyvb\n77sShr70MQAs8BQSXWrc4tWr2VNNvuCzNAyJln7DIqWjLoBb6g==\n=qqAf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c93eb7f04273cef56e8bb63c504a23564ff4220",
          "sha": "7c93eb7f04273cef56e8bb63c504a23564ff4220",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7c93eb7f04273cef56e8bb63c504a23564ff4220"
        }
      ],
      "message": "Add ChaCha20Poly1305@Bitcoin AEAD benchmark",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:25Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-18T14:27:55Z"
      },
      "sha": "6f68673beec64317dbdfbf6fb6bd34195d506f50"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2YwNjU1MDllNTVlMzk2ODdlNjAyYWNlMmZmM2JkMTlhZGI2ZjU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97f065509e55e39687e602ace2ff3bd19adb6f57",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97f065509e55e39687e602ace2ff3bd19adb6f57",
      "tree": {
        "sha": "ef53ff67ea66998f386b086272c72abb14baf969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef53ff67ea66998f386b086272c72abb14baf969"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ef53ff67ea66998f386b086272c72abb14baf969\nparent 6f68673beec64317dbdfbf6fb6bd34195d506f50\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1552321599 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346555 +0200\n\n==== REFACTORING ====\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlziezsACgkQHrd2uwPH\nki0QDw/8DANW6x8I6OddAUD0Bo41jiqWBbQkgWksT3qldllg87yj6Z0hNzgeSaHj\nYQPYETHd1B5EXgESZb5iZe75WghGRqRSIF+4N1un3Fn3b5iggQSvTGYWEh3B7OjB\n9CgbSyeNlsLL9LUaB9FTbr2fDPhmj1oQAx5cBOO9oOx0zVtZvVu80nveqfunay+L\nR68Q8O6BqED9+/8ddMkqRaT6rxxxAgdWEr/AstCqGFzBNOBo2L30p+IkmwgoOP0B\njfesLJfcUxDPqcI9OMASijxSMApg/snYHx1CSPcbTr+VBEQ7DR8Yfzy+lxwRFLSm\nPeAG7S6YPp6T8iWzRfZDL2bpxpI4g5YgiDRl1NI39k5p0ZMzuFzK6e9UHHYq1Vfu\nUEtMReNTH6q3QzXwejgcxx4LCbkWyeL98xOPaNnPjTtr7Ax7+vpzBFNDfoSCiQp8\n+z6PUldUkCxMEtAi1Dle+XT4vAKqyyPxxqcjkvBcPUBu4cTpCTS/T6BvRVDWGN6V\n01wcTIxXPKXQkSNKSMGSX/4pVQQigHB6uV+be3m5bXkhvIBQn1uVWXE8ycP1UKZj\nEDgBDw4usCEcMyqcIDwtW0Mqg6W4kS8FvyMttKIs9i2cadQh6M6OQfln0p0Hiczk\nx/MytK+bNXFlRdZ5iMgE+CMUzwOZmCPyrGBFk/NJmelR6y3W4Zo=\n=Lcka\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f68673beec64317dbdfbf6fb6bd34195d506f50",
          "sha": "6f68673beec64317dbdfbf6fb6bd34195d506f50",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6f68673beec64317dbdfbf6fb6bd34195d506f50"
        }
      ],
      "message": "==== REFACTORING ====",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:35Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-11T16:26:39Z"
      },
      "sha": "97f065509e55e39687e602ace2ff3bd19adb6f57"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2E5YTc5ZjkxYTQ1NWU2MWJhZTE1MzIyMjZhZTNkZjkwZWI5NzIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3a9a79f91a455e61bae1532226ae3df90eb9721",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a3a9a79f91a455e61bae1532226ae3df90eb9721",
      "tree": {
        "sha": "4c59212116e4cc531619a0fb9957e4ba8b8ce11d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c59212116e4cc531619a0fb9957e4ba8b8ce11d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4c59212116e4cc531619a0fb9957e4ba8b8ce11d\nparent 97f065509e55e39687e602ace2ff3bd19adb6f57\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1533565340 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346563 +0200\n\nUse unique pointers for CNetMessage handling\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzie0MACgkQHrd2uwPH\nki20RQ/+MfNNNW2po/sLvJq9UNIfwbDMfBLeDWmfIB+7vOWl9zlI+hW5RJt9OCFx\nFmbx7fvwtfJDwWStamu0bKi61Yv18IY1PsEvc709fRL3qzUrBfucLy5ji6zJqs/L\nvkumNvMJHv7xVg2j3fTDdEeC7SBzEfyyvv/i5LQP48Nbly+qf1KYjbMvDz8OUEPT\n868Nv2fF3vX0E4nea5LuEPGq3mDqwOk3jT+D6LWmxZaTD5VVw7zz0YyumXSrLBoR\nyRuiXWuEjGNH46/8V8CsB2ybWBbkmXJ6l5rR+jzlHkYmHQc3OHjzKY5F6VQ8miw8\nKQBYDvg0Y9ffrEe/ZEi39XCJ9WAgupWGuz9Z34IGUqy5JtySKiY9c5oNZmlDx+YT\nMkzXOTISxww0q0lobHHwgNkzmCH6u4ZVgvzAVPLLyjdE7q7lcgtx/+egA90y3M+R\nB8sffrhi2MflMGA/u3ajkIxm3GErd03Z9Mtp/Be6rHN/wpQi+Ok9NDMnzq9J4TA/\nijS3Rveyi/TQDMBScO0ltG/FNgYe/xMydUN87pnuZgEL080eZEdfQWMJSNTjXuKv\ns7hYKvvUllXPW/gFej4XYBKsnJjNorG36xA3k504rd9ZDI9S+73/A7CVpMw4ZeGN\nxfYJw/m/tdvSRFGaEoWBHdFbdPz2fHUblWr+Ag7sdY1Zbi2ejTo=\n=ffAE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97f065509e55e39687e602ace2ff3bd19adb6f57",
          "sha": "97f065509e55e39687e602ace2ff3bd19adb6f57",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97f065509e55e39687e602ace2ff3bd19adb6f57"
        }
      ],
      "message": "Use unique pointers for CNetMessage handling",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:43Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-06T14:22:20Z"
      },
      "sha": "a3a9a79f91a455e61bae1532226ae3df90eb9721"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWMzNzhkY2YwODkyNWNkYTBhNmYxMmMxYzc5YzJlNGNhYzMwNTQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99c378dcf08925cda0a6f12c1c79c2e4cac30549",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/99c378dcf08925cda0a6f12c1c79c2e4cac30549",
      "tree": {
        "sha": "3b6a5cb57eb6e578c919c4c1819bba41f85bf70f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b6a5cb57eb6e578c919c4c1819bba41f85bf70f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3b6a5cb57eb6e578c919c4c1819bba41f85bf70f\nparent a3a9a79f91a455e61bae1532226ae3df90eb9721\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1533584255 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346566 +0200\n\nSplit off format specific details from CNetMessage\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzie0YACgkQHrd2uwPH\nki0n3RAAsnx28wSpu5ziLpUT8grYnoAI5CapcTu44p9XnSO9ntHsNnPsAYISPW5s\nnzKPaMqDXERQ1OFhQWYRIrt3zMG1o2R4Qqkchz7gx1+JE+5i447uzbC6k+P3rpZa\ngNbK4be3VThrFOUoxVjaSzC41flV0NeSsw7al9+gV2SDSHWe2yF0LrJ0BoZS5Jcg\n9+uFj82mVntI80GiBaAJYnVPLpysSezOfkK77iduMLpYgPJqRYsiRNGsho3CRARl\njbb7KWLyPznJFP2zeUTFfeCJrfhTsz0XStzk19Z9wBBns1U3iOeVovw+/nec9C+G\nhUYV3e0bUyPo1zew4820uoeU/i4CrWaaRLsBY0Seoy/gpyZtHupIjfIsLaE+mvnz\naF+NqZ9G0qnkU77ePjlenASYqGOiYY6+Lm/e2ybfO0DpMPUBOvnBJ27FHHClJbtB\nY2NsiKQ4BSd6UqRwGZgaiJsk89sNyXspkwma5aWAGJb1bTnRm4Of9BIxs0HbC5B8\n0JXzAqsE8lKKcY1+19/M3nWIKa6C7IkUFPZJzW/i1ZFCnuboXkbsmscJre84+5lp\nZCV4VPalsHZPxKurk5IdgQ+qL1+Zv5LGYFUWgSGPxdJbprVfonO4UJRU/odN2g+g\nJHL8TV5BBPcMlgu332kCkdXNroTGj7h9m+tBTqsRIvdC7wbZIqM=\n=B/3C\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3a9a79f91a455e61bae1532226ae3df90eb9721",
          "sha": "a3a9a79f91a455e61bae1532226ae3df90eb9721",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3a9a79f91a455e61bae1532226ae3df90eb9721"
        }
      ],
      "message": "Split off format specific details from CNetMessage",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:46Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-06T19:37:35Z"
      },
      "sha": "99c378dcf08925cda0a6f12c1c79c2e4cac30549"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWEzYWMxMjIwNGY4MTQ5ZjJjYjhkNTAxYWM0N2M4ZDU2Zjc2OWUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29a3ac12204f8149f2cb8d501ac47c8d56f769e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29a3ac12204f8149f2cb8d501ac47c8d56f769e3",
      "tree": {
        "sha": "c53700ba47e1b2c0532b96c98fb2a9e2c5fe44d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c53700ba47e1b2c0532b96c98fb2a9e2c5fe44d5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c53700ba47e1b2c0532b96c98fb2a9e2c5fe44d5\nparent 99c378dcf08925cda0a6f12c1c79c2e4cac30549\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1533848642 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346571 +0200\n\nMove NetMessage (NetMessageBase) to net_message.h/cpp\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzie0sACgkQHrd2uwPH\nki1gwxAAnvC7ei8pvte3hRy2NqODafKnGr9ivQOOP9117HnP9pBwhvn35klFX2ze\n43DfUFmhLunVX8Svt7dO51Z3QVDdJ0wSnm0ZbuNGCZQ3wkZeqf6B8h2KPdDKlzpY\nS5NQwxh6R893qL+YhHLwAZrzOzJLQX8CCwkqDPsvv+Kh/E+zMP7Q9cZ2RpKZs8Za\n8kpWtsKQsTL514iau9j6O8t870xcW1bVcUfW5Hw/tkX3MqEX1iGREFtYdQSYtRyO\nQUAfQVYASXSbeFAW11rYrGSH2F4/WzoIUQM6j4o2o86RlBPURXkmFeymkYvvbVKt\nkwea7EGz0EpgDWxNdKFzenab5KKzzCF0DnMpCbuwsAScc0HCAzSw0T4f0p9/u2KZ\njhA+dJoX1BQMfKjje14HpyRfZU7RrMTnKXTX0FcUDsybLMSXUrG14E2ddujnQ4MZ\ngjL2IQPv4jY78Ck5t6aQpUVQJtTePfQgpbycCF6QoeGEjkpnsNflCqs3d3GwR5wx\nBuUhJD07QRNILrrCPwICS3Dql4PhnpYtpTToY/49ilI6ByUHo7VzSHwYngoF7mZo\nlm0E07wCIlSwp6kdZxl61Wv6uH3w1cbGVv4L8n8u4Nc8gAxGvTiAXsINU0610H4i\nvZ7Y09Q2LGBsqmmAsZZDUBH8BMmAlRHC2V7vKmcqg+pyCPm+Ug4=\n=Qsw/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99c378dcf08925cda0a6f12c1c79c2e4cac30549",
          "sha": "99c378dcf08925cda0a6f12c1c79c2e4cac30549",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/99c378dcf08925cda0a6f12c1c79c2e4cac30549"
        }
      ],
      "message": "Move NetMessage (NetMessageBase) to net_message.h/cpp",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:51Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-09T21:04:02Z"
      },
      "sha": "29a3ac12204f8149f2cb8d501ac47c8d56f769e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDQyZmJkZTVjMTA5NjAyZTQ0NDFkZjE1NDU4MGM4NTIyYzlhMDQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd42fbde5c109602e4441df154580c8522c9a040",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bd42fbde5c109602e4441df154580c8522c9a040",
      "tree": {
        "sha": "e9d92360d30efa8af639df4a67ea9a1b4053aa0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9d92360d30efa8af639df4a67ea9a1b4053aa0d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e9d92360d30efa8af639df4a67ea9a1b4053aa0d\nparent 29a3ac12204f8149f2cb8d501ac47c8d56f769e3\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1535100140 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346571 +0200\n\nFactor out RecordRecvBytesPerMsgCmd()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzie0sACgkQHrd2uwPH\nki0PNxAAw13cJyh+tkWVoj5npTsqunXXnx+3f9z1G7WSBg+tg7bsZ6Ri2GKAeBIx\n1kZ8BZakLazYn07Eu+2CWN/BpBbh7zHtcxTME9502rcxwIETJrzhVYcq0n/xs+1k\ndclIvIeQBsLRmS1LLLiDfxZz5jVWxCGaxlSuhSoVLBnL/FL+w03PJhF1yVnNgmDW\nAVuzAgWI7SKXnNB6TS5pr8XNmZ1eUnL6GpUBOXRwZj8C9wv4rchmzSl+dUTMAqX5\nZS1/L69uRlB3AToyyPb0yoeIKP2fSO1OnN7kFiW2DByLQMU9EI4tHNtGy9ZGxTfV\nj2a/sO6GcrG7n5+WaqVLp6+CqFgT5Gc7h1f7CmRnzxAUiQffWk1Vhzu+AXIbOuOn\n5axE+PRKw9sBimxhMVjo9Mpk2G3x4e+VnNHa/Cc2kf//i4q7lpfkc3uj28mh5SWk\nd5cT4WI8l1wEtDLLD4Zva3ZBqI6UeGsLaHpfNjlN95UtK6qCmuzFWE7E9ASLtoED\nQOGZ0rgd/HI2HTJf/Huq7t+7/6CVG5Hr5T+xARlqGiklrVnWSXaV6XiPrn2CPabG\no/o9oaPYBBwnSUqfbzQ0S77G+J0x3L5SAn9pzazxPtl9eQanTAPfbd4J2BL2V2SL\nL3R767iEj65WnK/RZeSIvnZOvaMY0x5LCB2nY9ZZFv0n1HeKJHM=\n=YEux\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29a3ac12204f8149f2cb8d501ac47c8d56f769e3",
          "sha": "29a3ac12204f8149f2cb8d501ac47c8d56f769e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29a3ac12204f8149f2cb8d501ac47c8d56f769e3"
        }
      ],
      "message": "Factor out RecordRecvBytesPerMsgCmd()",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:02:51Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-24T08:42:20Z"
      },
      "sha": "bd42fbde5c109602e4441df154580c8522c9a040"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzM2NjgwMDRkNTg0YWRiZGJjMTcyYzI4NWY1NmVhMDkxMDRmMjU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c3668004d584adbdbc172c285f56ea09104f255",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1c3668004d584adbdbc172c285f56ea09104f255",
      "tree": {
        "sha": "e9d92360d30efa8af639df4a67ea9a1b4053aa0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9d92360d30efa8af639df4a67ea9a1b4053aa0d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e9d92360d30efa8af639df4a67ea9a1b4053aa0d\nparent bd42fbde5c109602e4441df154580c8522c9a040\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1552332898 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346583 +0200\n\n==== V2 P2P implementation ====\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzie1cACgkQHrd2uwPH\nki22Fw/+LPpJad4Rvf9VRpHOQNzIQo6gQYuKnn5hUdRKzgHZiDeDjObjAEWBrW22\nCSe05BBDx4qnEnXAu/eXqWpu4LMEWMxCt9sefv1UlV9AmXQFKZ0QXPvAwCnkYoh4\nErAwW5W00uJHyF+0LMcAoqLU6X7Jt484mRgB8Htr/KKFuTuMHZmmT1VqTmzCbBWZ\ncRa3lRnlnyT5JvRDjeiq7RM7/1q6x5cxzzMxfrUOBhRALEAfS1mjCqxKebE/LIzA\nbW8rSRetRIZXlv05miOOo3BdY81F2gDaDRoKAJXzpnq3Nvz3zCMq5nsyLUl/f/60\nXbPa9rFFschuHqrjr40SchotNoXfXk1epLaJYZPgc0lhBrNxhPJoqcLIzKrbdjFl\ntAmnL8a/ASlDwnFCoYhXSp0UhORmlTieKZThiPea2QWgjRXVznVPfomyzk5vBwYG\n44WNYsUuj/7y5Uv+k2drS91opqKx4MUZUwEAAATnFVHRf5iqiGxV4rt5sbEo8mW7\ndIxrFQi20krpkIzUakF90NOqscqw9/UQ9I/cYn0KAWWi7lp25vBid2YwWSlrBjqj\n99ToqqwutEPvOHBZ4d7ccsWnIO2RYiH3Ri0lbM+i0IwELvT/WhKrP1AwEQ9QH/Dm\nz1NwMWd/aaxvXlJhlAc9jP18HjCysS0i++9e97MobiQJOqCjc7A=\n=tWU2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd42fbde5c109602e4441df154580c8522c9a040",
          "sha": "bd42fbde5c109602e4441df154580c8522c9a040",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bd42fbde5c109602e4441df154580c8522c9a040"
        }
      ],
      "message": "==== V2 P2P implementation ====",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:03:03Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-11T19:34:58Z"
      },
      "sha": "1c3668004d584adbdbc172c285f56ea09104f255"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWUxZWMyODczZGQyODBjMTRjZmJjY2JlYWY3N2I3NTM4OWNlNjBi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bae1ec2873dd280c14cfbccbeaf77b75389ce60b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bae1ec2873dd280c14cfbccbeaf77b75389ce60b",
      "tree": {
        "sha": "77cdc1a096b74f70b00f2d0684b38861ac057db1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77cdc1a096b74f70b00f2d0684b38861ac057db1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 77cdc1a096b74f70b00f2d0684b38861ac057db1\nparent 1c3668004d584adbdbc172c285f56ea09104f255\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1533762056 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558346586 +0200\n\nAdd new p2p message format for encrypted communication\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzie1oACgkQHrd2uwPH\nki2IVw//UjgdJ4JR/yUHqN/+Wy6jMh3xtVw3oZWmF1UFdLDmcO4KBsSfkO/uG4Ge\n+OWHkHcilPQeXWraJXU0YUViRFvweJUbP++m0NrccPkbJ+KmTzKabaiSx4xStvhj\nL4mT/JJZqU80fSA3bGhjvktyc0YW+nCJvjuY7Dr5Md+Xn80lUJuHFLKx2rr6uPME\nYlBOWGGhMfCvVx0KJGrhT6CC1mGh3/UyL6IGLEcFCjStL7gXbI2gopGqNhkU/3j6\nGst7Qf+uDPs72uNKjfjWATC3L/StJQbGoKuSaj2GobNwfDHcsfo00LOUtQItOA53\nntkX3OJToZh7BSnDJuURYyYeuy6ec5isE+X+v4tYeh55TNO2GxCMXAAg5xqZ0S/s\nmfj7FkPlDwubK4iW8e8WrOoL78n3ylO5407338cVm3UntSmCkveVur2pZFQSsgtK\nl9dNrA5j6NGJtCZ+j3qM1g6zjVqWsaRRM7XSKiC02AGJv9rzTULTu+bg5gYjBIqB\n3UAkN8apfdYTAkImHRYB5B7vayDyqCG0YVwyjv5GpD+fPq2MllpRGWbcpYaPGZFY\nbzZyuFkNY9f6FK4EnGk1POd02H5w8jWRw8OifKG9ilvCEQ2+B/SYreZorr4+8TEo\nrZ3AmYoPmEJM+yfb12sEUIy0DmB243WsJsHvrTZNxmyW+mRCdqs=\n=WPKI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c3668004d584adbdbc172c285f56ea09104f255",
          "sha": "1c3668004d584adbdbc172c285f56ea09104f255",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1c3668004d584adbdbc172c285f56ea09104f255"
        }
      ],
      "message": "Add new p2p message format for encrypted communication",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:03:06Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-08T21:00:56Z"
      },
      "sha": "bae1ec2873dd280c14cfbccbeaf77b75389ce60b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMTEzOGJhZGEwYWZlN2ZmNGM3ZDA2YTk5MTU4MThiZGRiNWI0NzAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1138bada0afe7ff4c7d06a9915818bddb5b4701",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d1138bada0afe7ff4c7d06a9915818bddb5b4701",
      "tree": {
        "sha": "6e701d949db853bf6d33d2f3e8fe9a2fc7dc2994",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e701d949db853bf6d33d2f3e8fe9a2fc7dc2994"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6e701d949db853bf6d33d2f3e8fe9a2fc7dc2994\nparent bae1ec2873dd280c14cfbccbeaf77b75389ce60b\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1533845533 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347029 +0200\n\nAdd v2 message transport protocol encryption with static key\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzifRUACgkQHrd2uwPH\nki0VxBAAjUPWbftjEjvFJRVMpdSS7FB0OfH8VD6fhjx2wC3g8k3Pp1mQB/V0Fkf8\nZ+xABBFQbApHKFCi+baxDdkL+SGn/GggEQi4ys6AmEUXnqa7xOQtkqHtldHJWXxZ\nTppc+7H6FB/AvqEELhPYNVv5elpVY65G0431kUV9YxSRc+o2WWjMEQjqvS/QJl5f\nqUYjY9mrDvlDFn4sKuZRkL8EAMU/C85YPpeiC5Y5X1AxOFzl0WKN4zxZnaCEU91z\nFS1adMcSR6iKuiBd6QFxQxAyy0pBhvAvzXaHaKlvw2NVQkAUvHZ2M28JPXcKzSuv\nc7WaPD/5vLChgazskA8gFqandmyTc7HUWMo2w0hkD/EtN6cjEdVP/0+Oa8bcZXjj\n/vqmnk8AijK/GSTm0Ojf6W8TJS3JZz/V9cwZBefuTWLS6cyW38YMnWauWAfVO63K\n8AgZukbz0vp9MSxcFl1zImdkyKDkojGsQfX/a7F3qFjoCKGMd9CvK1fF/u0MVNBI\nfh0lqnR05YwsAgmN7vjgy/bIX2R5LzmXa2XdzSzeSexnFNa9XINT/lORnGCLQbv5\n0A6rMHe12Zzc1WvNf1E/0X+6tMdwIGUIzMxj5poHRrA/UHhy81KRZcKVrPSPn5Eg\nvcOmAerD2x5KU0WN3AVFEqXVzokBxmGRHv45HsMQFUbTY7IsTOY=\n=5RBp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bae1ec2873dd280c14cfbccbeaf77b75389ce60b",
          "sha": "bae1ec2873dd280c14cfbccbeaf77b75389ce60b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bae1ec2873dd280c14cfbccbeaf77b75389ce60b"
        }
      ],
      "message": "Add v2 message transport protocol encryption with static key",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:10:29Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-09T20:12:13Z"
      },
      "sha": "d1138bada0afe7ff4c7d06a9915818bddb5b4701"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDU5Y2M5NGEwZmEzNTRhYzZiZDM4NTQzZGUwYjg0ZTUzN2Y0OTdk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3459cc94a0fa354ac6bd38543de0b84e537f497d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3459cc94a0fa354ac6bd38543de0b84e537f497d",
      "tree": {
        "sha": "ae8c289f18b8db1b3ab14a6f75ebe728f6a292c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae8c289f18b8db1b3ab14a6f75ebe728f6a292c1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ae8c289f18b8db1b3ab14a6f75ebe728f6a292c1\nparent d1138bada0afe7ff4c7d06a9915818bddb5b4701\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1534185416 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347123 +0200\n\nAdd v2 message transport protocol encryption handshake\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzifXQACgkQHrd2uwPH\nki05BQ/+IKkhNBgNtTEg8TMqp3FLq9sqGGSti3rEjcFvMWv6hI24YfTQrmGyK/59\n1SjOnxrbVQfxWZfkNjUY570uL45Ui3eDSOzd7jvN/zmXouNMB9ZvWA5xNTgKzvPQ\n/94aQrFV4avasLMNpqujgfsFQTRg/xQYwx1LpjT746KUAyaKN9wkDpa/ykwUHHnR\nRlVtfrGHod+kv234S+5Jzs9IW6tZPlZNvQAvewEXnFWTLD09cM6kf35qySm0m11q\ns9FGe40mvst4lA0iEZaAKEFyTeY/d8XUI8cyV5Slc3niar4jV1JcMKP+u7WAFrsZ\n25h8S8dI7hibcb/dWN1u+WcnEpsR3091jspwAHmqJRejJBPgiSLTY9MYTTX8UFNJ\n/NAUBBvdGjHPwLmN///8D/WT32cjHn45nYMgS2QKldruX1yb5plWzSOcCYDsWl8M\nWCpmR2BTJzAsnpeqNbmKr8piu6ONZV83b1MbEfdy6A2wCsR5YuZzHUGAB8BQfn4y\nVfoeqHm/fpJJtKykhk4Gc1CVHKtB8bfIF3DkJjDURn1T7Sa6M+tvlcC6xHvBia+U\np0O+ifuncRiwDBjav1NJ9FLb0JtnmdCc2zXykuKv/C8t4C6L7YnVmHOZFLzzn/rJ\nWw/DCCJFITky+8w9dqR7ZOZLBjo4F8bXjPNUiYokf5YmR6bOoKo=\n=ar6O\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1138bada0afe7ff4c7d06a9915818bddb5b4701",
          "sha": "d1138bada0afe7ff4c7d06a9915818bddb5b4701",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d1138bada0afe7ff4c7d06a9915818bddb5b4701"
        }
      ],
      "message": "Add v2 message transport protocol encryption handshake",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:12:03Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-13T18:36:56Z"
      },
      "sha": "3459cc94a0fa354ac6bd38543de0b84e537f497d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTYwOWU2ZGI5ZTE0ZDJjNjE4MDZmYzkxMGNkNmUyNWMzNzM0ODUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59609e6db9e14d2c61806fc910cd6e25c3734851",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/59609e6db9e14d2c61806fc910cd6e25c3734851",
      "tree": {
        "sha": "a0ec1f86c25dbf164ac98b08f2bc05226f25ad53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0ec1f86c25dbf164ac98b08f2bc05226f25ad53"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a0ec1f86c25dbf164ac98b08f2bc05226f25ad53\nparent 3459cc94a0fa354ac6bd38543de0b84e537f497d\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1534317207 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347407 +0200\n\nAdd and respect service flag NODE_P2P_V2\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzifo8ACgkQHrd2uwPH\nki1uShAAgX0QJ+ZhATP890rzQftOySSbXoZHTHbai8sTYSUoOvUgX3ct0OWSpxsd\nHMpJ6Wbk2+mqo594EWSUXdcp8r9a24zQHmKgjUHme7k9v52GI8rdFNaYYtKEKxJo\n/qdiyStRfsgnzitEzSJa5btN9K+P13kEFsaAi63teTOUV4B/FmmHqGu0UZFCpzXF\nTYZ+JIDskXp42xSl6w2kVq7g8vqmVBsICFLXxMT727PidMbOQMtNQnB9uau2OtHq\nPfZnzU7ICS93yDaZa1Dz4Kz8epJjmaXbTUEIPfvYOqVunnLzWvYfbvrH+C3TlpaS\nz94BWgMdsHm9EtsPWrAG1b/2hfh4muiYufhQbfZY6jApLotnWsT5M6oXNMCcIrIV\n9hfEjUtVqR7ykCq8A2ra8kpDNPY2RNnIu0+XwjA39p/ZNyy8F7KjmNGzasvJt2fc\nbH4QJ+h8kGSPPtbSQjPOz40NmDu7YIZty2+Q/eJphzWN+1AEkroZaCyaIh8fBee7\n3SM8phRGH84p3GjtBrRnqpYneV0DjPmJfrCD1QS3aahAhBQiiIFjJzFC+GOde2iM\n9M/bFgXQ9dxQ3LkwLI4UhkKEEqpuahTCPm5rGhhDVhgDOiEQjcKbN2PNCoVyO+QI\nWvsLOVxL4wLWuRPfXoExPu7S1wnti0wIGC7+nX4LNfWzBz/HgvI=\n=YZbV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3459cc94a0fa354ac6bd38543de0b84e537f497d",
          "sha": "3459cc94a0fa354ac6bd38543de0b84e537f497d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3459cc94a0fa354ac6bd38543de0b84e537f497d"
        }
      ],
      "message": "Add and respect service flag NODE_P2P_V2",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:16:47Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-15T07:13:27Z"
      },
      "sha": "59609e6db9e14d2c61806fc910cd6e25c3734851"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTY4MDc0MzMyZDlhOTVlNTAyOTVkNDgyNTEyZDI2OTEwZDc3YmFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2568074332d9a95e50295d482512d26910d77bae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2568074332d9a95e50295d482512d26910d77bae",
      "tree": {
        "sha": "0a2e64ca3affb9f794f0165008b1cb0354540724",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a2e64ca3affb9f794f0165008b1cb0354540724"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0a2e64ca3affb9f794f0165008b1cb0354540724\nparent 59609e6db9e14d2c61806fc910cd6e25c3734851\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1534401712 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347699 +0200\n\nImplement encryption rekeying\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzif7UACgkQHrd2uwPH\nki2wsA/+Kd+iLyp7tyvt8duvEnPcH+Qo3JqgXftybPOFslNymhYFt+XW1HxtrvaP\nzxVyMWS2V1e7rSPS+Ft1XyVIAt6+KCLVkOUErexg3w/lwPOFUHxrpeZXwLecezfg\nTzLjIzoZ7hZgtCyfh6bcoVvIhTb7UoAgfOKxFGzDnryIg2FvJtoMrdoALjFpENAX\nV7ftB+J70Tea4IuKPcxHPOM2LdMzjgaD/e2HCebbzJ1JZyTLT7KRyWMxg6qbpmaz\n74kP1m/1E6A+RiZ/4WBLcLQ7VfdcanZZktiVpl6XMMh/0sQkeBQPzpRjkm6AoadT\nncAeEQgoXyz3OP3U8Go8Qst5Yi+7GMGcB4xQZVVI77z6vDfs7G/QdqEGseqz9mbF\nWQUyqem7XoG8MJz1atDlkxDQHtp3tnz99WhxRq2JJSsKmv0KmHMQZImaSgfZhGzG\nQyL0pLXMXCcZR+1zmALNj7c5WjWF0XTuzHYzLa08mkhMpGk3jkln7S/xyJcb/ukn\njpfp6lWktmH4jPYtAqbNTmjUYnzXeO6+UghbOKZoX+M+T/9uSyE2O/96/tsslS4B\nhhjgz9V0cmMB/UDdyEZ6DSOMSkbdzCNdkkFRl07w8f1idMNIQvLlneTh3DM0S+lX\nj3kCTKW1RdfxnVWYiJo/V/xN/CLi/kBVAiHS9tuceyxqR8D/oaQ=\n=TdG5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59609e6db9e14d2c61806fc910cd6e25c3734851",
          "sha": "59609e6db9e14d2c61806fc910cd6e25c3734851",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/59609e6db9e14d2c61806fc910cd6e25c3734851"
        }
      ],
      "message": "Implement encryption rekeying",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:21:39Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-16T06:41:52Z"
      },
      "sha": "2568074332d9a95e50295d482512d26910d77bae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZGU1ZDI0MTVhOWM0ZTMzNmVhOGU5Y2NhYmU1ZmE3ZDA5NDgwMjlk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d",
      "tree": {
        "sha": "6a649333b4ff2c1038203b736ccc22c80b5a7762",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a649333b4ff2c1038203b736ccc22c80b5a7762"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6a649333b4ff2c1038203b736ccc22c80b5a7762\nparent 2568074332d9a95e50295d482512d26910d77bae\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1534623093 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347703 +0200\n\nAvoid ephemeral key->pubkeys that start with net magic\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzif7cACgkQHrd2uwPH\nki22MxAAkiJjuoWXoJvMari8UOy1Q/rac3fsXeiqFxf6FgYUSugvfPq5XLwdE5RK\nRRHJ0RFuVt3KiSw4FCIRjl5Qv5dw/2kIiOa8myRVUMrSOPr0zhbfaOebzfLeoBmb\nbKvLko36SyYg9GcKvQr1qI1J0ajUcS+oSkFfSqHqdpEqmTRDuAwTf3+Eoms+1Njd\nb/Z7+zK9i3moeTWllLYDbi18QjJDFAlbrGYwbFIv+Ie2FMaK+AsijrQdC+Q2dAJK\np8O5ENlIYS4+RcUlfD/VDg40l3j7NZdr/PIAh9HVoqMHhAnc1jUPXTyk7CAQkfuD\nP1Nc5B5jL15OResl5bIH1BFruWHxwREcTrIPZcrg8JQfoguet/OafQH/cmQxNm/r\np1lXNopJbj8lqNSJI0k0wgbhk/xOw7cKNh5gZgLhDcEIMoZuLf2fJ6jMuibg9TdB\nV+DK2a6usqHpFfHvyZ+JRL64UB0Y+daknR4WW3KvzPVOhI7IiOkk39Lm83uTJeYh\ndnoABPo19OrgnrUSjVX8+CM+GkcS/CFa33eSb5++Q+LivfvSVoS345j6ckCX3Kul\nGuKXF64iXCx8la3Jgy7m+F0zYdXlLIN/Jp0Jm1nAGhc3OMOolhRrLTDW4jSJddim\n0m6od92DBjomiAGg/lXud9ZfP1L8EAQPWVrOqxpTv1wEax1OvbU=\n=PdsS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2568074332d9a95e50295d482512d26910d77bae",
          "sha": "2568074332d9a95e50295d482512d26910d77bae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2568074332d9a95e50295d482512d26910d77bae"
        }
      ],
      "message": "Avoid ephemeral key->pubkeys that start with net magic",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:21:43Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-18T20:11:33Z"
      },
      "sha": "3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDVlMmEyOGJhZTEyNWVjMTdlOGIxMzdiZDg3ZTZhZTExZmNhYjgx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c45e2a28bae125ec17e8b137bd87e6ae11fcab81",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c45e2a28bae125ec17e8b137bd87e6ae11fcab81",
      "tree": {
        "sha": "7ac3ff3dfcde84e5d4bb130ebac6237a07c9c814",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ac3ff3dfcde84e5d4bb130ebac6237a07c9c814"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7ac3ff3dfcde84e5d4bb130ebac6237a07c9c814\nparent 3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1534771713 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347712 +0200\n\nAdd encryption state and session id to getpeerinfo\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzif8AACgkQHrd2uwPH\nki2H0g//bdndTdfXmG/5HXhOrtrBWBnJ7S3ZbOK12l/pY8p33CFu9fsavO7pOJS6\nPLRbl7w/CCR1ZbxPpRxioT5hTAOHIG3oEV3ZXGMb+oWgz6hPy2733NshUlaldluY\nHsLKLiz2H3bg8G4QR3IT+lU8+gTvqycw9nsLXUFTR4KXulNZ6I4iH+hut8CXDPrN\nkTqgRwFqzDjxcbAi2IYdVka8OTwxE2D4IS10YeQrfaKQ/N2aePMWKrbpN3Jbo42c\nGeOFCJk0t+Cmrt0+OmYj8Dxrh8EqbhU3g/0+dzGKSu5hiGh2S7pIwfn6dwARoAJI\n9h7dkjO1GXqQ97IlzkmnDE2sbccZ1DKGM5gNGBQGWk3oJWU9NZRUWsHTK3DX4O97\nqEqZWoyV5eGLyynq6lU4w/4I1VgRcriXC3BADu74n5E8CPC5YACUtmwnDEXdlv3Y\nGrUgvdjW4liButL71Tv88kQ4lD9cOsmVxS3Gx15ZfsaIy4IdNnMo3aCumk1Wj4X5\nkh8rp4GAO7oGaDlBadHJ4+niRJQ38K9ycgsGtUVnVVX/EjJa2frvn6rXrPAAv59m\ny71+B5EKFdvSrZsGWONWFn4ZhQwQKzZ4zkoHEHrHzouDWZGcOleaLk0ixYc5K6zD\nZyqnJz1VHNqUg0QYd0IpgG9hSoAqnGdnxrtrknaEqkXXx9CiRgM=\n=iZSe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d",
          "sha": "3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3de5d2415a9c4e336ea8e9ccabe5fa7d0948029d"
        }
      ],
      "message": "Add encryption state and session id to getpeerinfo",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:21:52Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-20T13:28:33Z"
      },
      "sha": "c45e2a28bae125ec17e8b137bd87e6ae11fcab81"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWY0Yjc3ZjZhZThmYWFmOGIyMDEzMzU2YjM1MTI1YzdiODdlOThh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11f4b77f6ae8faaf8b2013356b35125c7b87e98a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/11f4b77f6ae8faaf8b2013356b35125c7b87e98a",
      "tree": {
        "sha": "5c40a89ecf0608deddb57c57ee1684dc810647e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c40a89ecf0608deddb57c57ee1684dc810647e0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5c40a89ecf0608deddb57c57ee1684dc810647e0\nparent c45e2a28bae125ec17e8b137bd87e6ae11fcab81\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1534771738 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347720 +0200\n\n[QA] add encryption functional test\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzif8gACgkQHrd2uwPH\nki1I7A/7B7aJ3Hh6/HRF4ZjkcM5oU9WRZ5/VvJZE5JYmQyiimcw9p+OUSRc9D6bb\nse0dTuMZoM/qqYuZ5/lv9IrZWcPxQwqMirIMFISm3lsCAqJCC6RDgpGpvMgK5fWh\npK1kTXaGydNvLI7bC66xwWTZNT0c7e0F9nOrTfct/rhov8uslHP6+UxsrocnAND+\n8dQPJCrFZtFqfiYNlMAqoqw3FDx4azR2KWtAmD0jRzof0OA3Sl0xoB3VQSyE1KWR\n2Z0O9CI8vlpDTqlPfvKUiAY+O19EBlO0R1mB03YlUEPCZZLHpPrlAe9vYSsWF4Xe\nMt82T+OvFu+FADqhLwWtPn40HQobWEPUrZGyiiEohvXq9c2v9VRybe+Zon07Zpu0\nlhrzgl2Kz3zw8ngxsIvJkPGIo4hS1DDA4a5yJ5Lh0zrEl8e1f9I5RIzHSeZBUlbv\nmvKTqOSAJ9ujU9vtHnXBP5njt4ezEwdbW4BCfI8KtGcfuAwaq5/eAe5S2sYWgG/D\nwFMx6IBHLEfAiq7QlzTwTidotSFw0JhKpL4Lhe2dalulLEznC65XIF3CUpsKe4Pm\n+mpT0BpQvzKIiYic97GOljiYODmeRtR/1EjQdlfUL6KCBzM1rqdzoRibpn4Um10B\nHfmOV7Xwbhn8FqRZdlzYy559qBg3c5fcfyxnBjeg/zNr+wXnOrI=\n=67Jf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c45e2a28bae125ec17e8b137bd87e6ae11fcab81",
          "sha": "c45e2a28bae125ec17e8b137bd87e6ae11fcab81",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c45e2a28bae125ec17e8b137bd87e6ae11fcab81"
        }
      ],
      "message": "[QA] add encryption functional test",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:22:00Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-08-20T13:28:58Z"
      },
      "sha": "11f4b77f6ae8faaf8b2013356b35125c7b87e98a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWJmMTBmYmUzYmIzYzJkODliODAyMzI4YzkzM2U3Y2QwODE0ZGE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "tree": {
        "sha": "320358053f3f58a0cd551d2843afd1e27d837336",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/320358053f3f58a0cd551d2843afd1e27d837336"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 320358053f3f58a0cd551d2843afd1e27d837336\nparent 11f4b77f6ae8faaf8b2013356b35125c7b87e98a\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1535883043 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1558347738 +0200\n\nImplement v2 p2p protocol command short IDs\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzif9oACgkQHrd2uwPH\nki2MBA/+Op7pKSt+imJGEGpgTQLWocVf8Tm64kGtgD04ikt96jkFkIGN8F/C2i5Q\ntoYIOysCdOQ/YZabM/IusRPin19AbtxHZpnKvIfm0eE4zYP0NDiEXVWxyR2Y0UFM\nHOFq6JIuJ8s+fprV9A/1OBrrgRn4z7/e1DTawRiZkGD4t5+6TOeBefLXJVURUgRb\n2edziLX9UMypKTwnBOApiMUgPG4TJRBW9RuhawsQteIlRQJpst/ApFtPoRB/qc/r\n8Vx/seCCclzIPjdK8zsqxlhAjZEeUR2G1wDsxZxOy8Bg74Nv5EgrEdJll3IbEAyq\n/AnP9mKQ8lexVkCiWroojoy8fsfMK6OtWqs9ldCWLhkwz2JJjIHhW2BbuX/zlvlD\nQbS6l9Zmgd2azzHBiy7/bOU2bcZY1z1UtJG17EzBRvyOksuSbvBnzLFHK3+KHJsQ\nzyyi67LfHlDYJxnmcVLYH3YhRGOncGnTcpxjXWFvM79YVhV8GgHKM21qrabzekcW\nWhN2KUQBsHjVpSml9IvxaxT8aByg8Ey88MI9gKrjy/UEiAV7ZKiJV8kw1/Pqe/fc\nxLEFgwzW6xab8Px5dvqzIoHTkXjc1L+UrHnaUG6H18cwjZANljrcmrY/YeDFGy+H\nQKSxvQsIRjHoMQQRDpOXthjWeDv8hw7exAWmjZqO16u/pE/JkaU=\n=4mxJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11f4b77f6ae8faaf8b2013356b35125c7b87e98a",
          "sha": "11f4b77f6ae8faaf8b2013356b35125c7b87e98a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/11f4b77f6ae8faaf8b2013356b35125c7b87e98a"
        }
      ],
      "message": "Implement v2 p2p protocol command short IDs",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-20T10:22:18Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-09-02T10:10:43Z"
      },
      "sha": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2352652268,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM1MjY1MjI2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2352652268",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-20T10:28:35Z"
    },
    {
      "event": "unlabeled",
      "id": 2353170338,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjM1MzE3MDMzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2353170338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-20T13:45:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 510995529,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDk5NTUyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510995529",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-12T18:54:03Z",
      "updated_at": "2019-07-12T18:54:03Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-510995529",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "labeled",
      "id": 2479914838,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI0Nzk5MTQ4Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2479914838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-12T18:54:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 2979416554,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5Nzk0MTY1NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2979416554",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e01676c82bc5ecdf902fad5ae796e3ef333bb47f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/e01676c82bc5ecdf902fad5ae796e3ef333bb47f",
      "created_at": "2020-01-25T17:10:03Z"
    },
    {
      "event": "referenced",
      "id": 2979419085,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5Nzk0MTkwODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2979419085",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "be3eaed62baa2daf65f531a166717de4a101f30e",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/be3eaed62baa2daf65f531a166717de4a101f30e",
      "created_at": "2020-01-25T17:15:17Z"
    },
    {
      "event": "reviewed",
      "id": 610355339,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwMzU1MzM5",
      "url": null,
      "actor": null,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#pullrequestreview-610355339",
      "submitted_at": "2021-03-12T00:29:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
    },
    {
      "event": "referenced",
      "id": 5138104896,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzgxMDQ4OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5138104896",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c4f7bb5d720ba92f8b1083603d4c51974f9fddca",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/c4f7bb5d720ba92f8b1083603d4c51974f9fddca",
      "created_at": "2021-08-10T22:21:59Z"
    },
    {
      "event": "referenced",
      "id": 5149897520,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTc1MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5149897520",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f7d8279f3d30dbac8cac656bfcc14f7ac7c0261f",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/f7d8279f3d30dbac8cac656bfcc14f7ac7c0261f",
      "created_at": "2021-08-12T14:39:45Z"
    },
    {
      "event": "commented",
      "id": 901069838,
      "node_id": "IC_kwDOABII5841tTwO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901069838",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-18T12:25:27Z",
      "updated_at": "2021-08-18T12:25:27Z",
      "author_association": "MEMBER",
      "body": "My understanding is that someone else is helping with / taking over these changes, and that the BIP is still being overhauled. \r\nI think we'll be better off with new PRs, and clean discussion when work on the implementation resumes in this repo.\r\nChanges from here are be cherry-picked if / when needed. So I'm going to close this PR for now. ",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-901069838",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "closed",
      "id": 5174503977,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTE3NDUwMzk3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5174503977",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-18T12:25:27Z"
    },
    {
      "event": "commented",
      "id": 903711804,
      "node_id": "IC_kwDOABII58413Yw8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903711804",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T12:16:18Z",
      "updated_at": "2021-08-24T08:12:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "For additional context on above from @fanquake [BIP 151](https://github.com/bitcoin/bips/blob/master/bip-0151.mediawiki) has been withdrawn, the replacement is [BIP 324](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489) and the point of contact for BIP 324 appears to be @dhruv from this point on. ",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#issuecomment-903711804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14032"
    },
    {
      "event": "mentioned",
      "id": 5194054232,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTE5NDA1NDIzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5194054232",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T12:16:19Z"
    },
    {
      "event": "subscribed",
      "id": 5194054239,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxOTQwNTQyMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5194054239",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T12:16:19Z"
    },
    {
      "event": "mentioned",
      "id": 5194054245,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTE5NDA1NDI0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5194054245",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T12:16:19Z"
    },
    {
      "event": "subscribed",
      "id": 5194054249,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxOTQwNTQyNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5194054249",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T12:16:19Z"
    },
    {
      "event": "added_to_project",
      "id": 6310140935,
      "node_id": "ATPE_lADOABII584VEOG4zwAAAAF4HRwH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6310140935",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T21:30:38Z",
      "project_card": {
        "id": 79694110,
        "url": "https://api.github.com/projects/columns/cards/79694110",
        "project_id": 13452186,
        "project_url": "https://api.github.com/projects/13452186",
        "column_name": "Closed unmerged"
      }
    },
    {
      "event": "referenced",
      "id": 6568857264,
      "node_id": "REFE_lADOABII584VEOG4zwAAAAGHiM6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6568857264",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f250a21ad29053564f83268faff9541e551fba59",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/f250a21ad29053564f83268faff9541e551fba59",
      "created_at": "2022-05-08T16:47:42Z"
    },
    {
      "event": "locked",
      "id": 7249317795,
      "node_id": "LOE_lADOABII584VEOG4zwAAAAGwF8-j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7249317795",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T09:46:33Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212404219",
      "pull_request_review_id": 149030580,
      "id": 212404219,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwNDIxOQ==",
      "diff_hunk": "@@ -746,43 +764,70 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n         // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n+        if (vRecvMsg.empty() || vRecvMsg.back()->complete()) {\n+            if (m_encryption_handler && m_encryption_handler->shouldCryptMsg()) {\n+                vRecvMsg.emplace_back(std::make_shared<NetCryptedMessageEnvelop>(m_encryption_handler, Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Should this be ”envelope” instead of ”envelop”? If so, change applies throughout this PR and also the BIP.",
      "created_at": "2018-08-23T18:03:45Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r212404219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212404219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 770,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212405404",
      "pull_request_review_id": 149032015,
      "id": 212405404,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwNTQwNA==",
      "diff_hunk": "@@ -477,6 +478,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-maxtxfee=<amt>\", strprintf(\"Maximum total fees (in %s) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions (default: %s)\",\n         CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)), false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-netencryptionfastrekey\", \"Rekeys every 10 seconds and after 10kb of data\", true, OptionsCategory::DEBUG_TEST);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I’m reading the logic correct then this should be ”every 10 seconds _or_ after 10kb of data”?",
      "created_at": "2018-08-23T18:07:22Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r212405404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212405404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212405909",
      "pull_request_review_id": 149032670,
      "id": 212405909,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwNTkwOQ==",
      "diff_hunk": "@@ -746,43 +764,70 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n         // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n+        if (vRecvMsg.empty() || vRecvMsg.back()->complete()) {\n+            if (m_encryption_handler && m_encryption_handler->shouldCryptMsg()) {\n+                vRecvMsg.emplace_back(std::make_shared<NetCryptedMessageEnvelop>(m_encryption_handler, Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n+            } else if (gArgs.GetBoolArg(\"-netencryption\", DEFAULT_ALLOW_NET_ENCRYPTION) && nRecvBytes == nBytes /* first message */) {\n+                // first bytes can be a network encryption handshake\n+                // use a NetMessageEncryptionHandshake with option to fallback to a standard NetMessage (if valid version message is detected)\n+                vRecvMsg.emplace_back(std::make_shared<NetMessageEncryptionHandshake>(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n+            } else {\n+                vRecvMsg.emplace_back(std::make_shared<NetMessage>(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n+            }\n+        }\n+        NetMessageBaseRef msg = vRecvMsg.back();\n \n         // absorb network data\n-        int handled;\n-        if (!msg.in_data)\n-            handled = msg.readHeader(pch, nBytes);\n-        else\n-            handled = msg.readData(pch, nBytes);\n+        int handled = msg->read(pch, nBytes);\n \n         if (handled < 0)\n             return false;\n \n-        if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n+        if (msg->getMessageSize() > MAX_PROTOCOL_MESSAGE_LENGTH) {\n             LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n             return false;\n         }\n \n         pch += handled;\n         nBytes -= handled;\n \n-        if (msg.complete()) {\n+        if (msg->complete()) {\n+            msg->nTime = nTimeMicros;\n+            if (msg->m_type == NetMessageType::PLAINTEXT_ENCRYPTION_HANDSHAKE && !msg->verifyHeader()) {\n+                // message contains expected network magic and \"version\" message command\n+                // threat as version message",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: “treat”",
      "created_at": "2018-08-23T18:08:57Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r212405909",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212405909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212406669",
      "pull_request_review_id": 149033591,
      "id": 212406669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwNjY2OQ==",
      "diff_hunk": "@@ -0,0 +1,375 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+int NetCryptedMessageEnvelop::read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->getAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->getAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->getLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 31));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 31);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->getAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->getTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->authenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+            if (m_rekey_flag) {\n+                // post decrypt rekey if rekey was requested\n+                m_encryption_handler->rekey(false);\n+            }\n+        }\n+        return copy_bytes;\n+    }\n+}\n+\n+int NetMessageEncryptionHandshake::read(const char* pch, unsigned int bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    unsigned int remaining = 32 - m_data_pos;\n+    unsigned int copy_bytes = std::min(remaining, bytes);\n+    if (vRecv.size() < 32) {\n+        vRecv.resize(32);\n+    }\n+    memcpy(&vRecv[m_data_pos], pch, copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+bool NetMessageEncryptionHandshake::verifyHeader() const\n+{\n+    CMessageHeader hdr(Params().MessageStart());\n+    CDataStream str = vRecv; //copy stream to keep function const\n+    try {\n+        str >> hdr;\n+    } catch (const std::exception&) {\n+        return false;\n+    }\n+    if (memcmp(hdr.pchMessageStart, Params().MessageStart(), CMessageHeader::MESSAGE_START_SIZE) == 0 || hdr.GetCommand() == NetMsgType::VERSION) {\n+        return false;\n+    }\n+    return true;\n+}\n+\n+int NetCryptedMessage::read(const char* pch, unsigned int nBytes)\n+{\n+    // not supported\n+    return -1;\n+}\n+\n+bool NetCryptedMessage::decompose_from_stream(CDataStream& stream)\n+{\n+    // decompose a single massage from a multimessage envelop\n+    try {\n+        stream >> m_command_name;\n+        stream >> m_message_size;\n+    } catch (const std::exception&) {\n+        return false;\n+    }\n+    if (m_message_size > MAX_PROTOCOL_MESSAGE_LENGTH || m_message_size > stream.size()) {\n+        return false;\n+    }\n+\n+    // copy the extracted message to the internal message buffer\n+    if (m_message_size > 0) {\n+        assert(vRecv.size() == 0);\n+        vRecv.write(&stream.begin()[0], m_message_size);\n+\n+        // skip the message payload\n+        stream.ignore(m_message_size);\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::authenticatedAndDecrypt(CDataStream& data_in_out)\n+{\n+    // create a buffer for the decrypted payload\n+    std::vector<unsigned char> buf_dec;\n+    buf_dec.resize(data_in_out.size());\n+\n+    // keep the original payload size\n+    size_t vsize = data_in_out.size();\n+\n+    LOCK(cs);\n+    if (m_bytes_decrypted + vsize > ABORT_LIMIT_BYTES || GetTime() - m_time_last_rekey_send > ABORT_LIMIT_TIME ||\n+        (gArgs.GetBoolArg(\"-netencryptionfastrekey\", false) && m_bytes_decrypted + vsize > 12 * 1024)) {\n+        // don't further decrypt and therefor abort connection when counterparty failed to respect rekey limits",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 156,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: “therefore”?",
      "created_at": "2018-08-23T18:11:13Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r212406669",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212406669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212407341",
      "pull_request_review_id": 149034437,
      "id": 212407341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwNzM0MQ==",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NET_MESSAGE_H\n+#define BITCOIN_NET_MESSAGE_H\n+\n+#include <hash.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** Maximum length of incoming protocol messages (no message over 4 MB is currently acceptable). */\n+static const unsigned int MAX_PROTOCOL_MESSAGE_LENGTH = 4 * 1000 * 1000;\n+\n+enum class NetMessageType {\n+    PLAINTEXT,\n+    PLAINTEXT_ENCRYPTION_HANDSHAKE,\n+    BIP151_ENVELOP,\n+    BIP151_MSG\n+};\n+\n+// base class for format agnostic network messages\n+class NetMessageBase\n+{\n+public:\n+    CDataStream vRecv; // received message data\n+    int64_t nTime;     // time (in microseconds) of message receipt.\n+    NetMessageType m_type;\n+\n+    NetMessageBase(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : vRecv(nTypeIn, nVersionIn)\n+    {\n+        nTime = 0;\n+    }\n+\n+    virtual bool complete() const = 0;\n+    virtual uint32_t getMessageSize() const = 0;           //returns 0 when message hat not yet been parsed",
      "path": "src/net_message.h",
      "position": null,
      "original_position": 37,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "e654fd60d8955f74124f700a5d73baacf67301b6",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: “has”?",
      "created_at": "2018-08-23T18:13:18Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r212407341",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212407341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523047",
      "pull_request_review_id": 151603394,
      "id": 214523047,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzA0Nw==",
      "diff_hunk": "@@ -0,0 +1,358 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->AuthenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+\n+            // vRecv holds now the plaintext message excluding the AAD and MAC\n+            // m_message_size holds the packet size exluding the MAC\n+\n+            // initially check the message\n+            try {\n+                vRecv >> m_command_name;\n+            } catch (const std::exception&) {\n+                return false;\n+            }\n+            // vRecv points now to the plaintext message payload (MAC is removed)\n+\n+            if (m_rekey_flag) {\n+                // post decrypt rekey if rekey was requested\n+                m_encryption_handler->Rekey(false);\n+            }\n+        }\n+        return copy_bytes;\n+    }\n+}\n+\n+int NetMessageEncryptionHandshake::Read(const char* pch, unsigned int bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    unsigned int remaining = 32 - m_data_pos;\n+    unsigned int copy_bytes = std::min(remaining, bytes);\n+    if (vRecv.size() < 32) {\n+        vRecv.resize(32);\n+    }\n+    memcpy(&vRecv[m_data_pos], pch, copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+bool NetMessageEncryptionHandshake::VerifyHeader() const\n+{\n+    CMessageHeader hdr(Params().MessageStart());\n+    CDataStream str = vRecv; //copy stream to keep function const\n+    try {\n+        str >> hdr;\n+    } catch (const std::exception&) {\n+        return false;\n+    }\n+    if (memcmp(hdr.pchMessageStart, Params().MessageStart(), CMessageHeader::MESSAGE_START_SIZE) == 0 || hdr.GetCommand() == NetMsgType::VERSION) {\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::AuthenticatedAndDecrypt(CDataStream& data_in_out)\n+{\n+    // create a buffer for the decrypted payload\n+    std::vector<unsigned char> buf_dec;\n+    buf_dec.resize(data_in_out.size());\n+\n+    // keep the original payload size\n+    size_t vsize = data_in_out.size();\n+\n+    LOCK(cs);\n+    if (m_bytes_decrypted + vsize > ABORT_LIMIT_BYTES || GetTime() - m_time_last_rekey_send > ABORT_LIMIT_TIME ||\n+        (gArgs.GetBoolArg(\"-netencryptionfastrekey\", false) && m_bytes_decrypted + vsize > 12 * 1024)) {\n+        // don't further decrypt and therefore abort connection when counterparty failed to respect rekey limits\n+        return false;\n+    }\n+    // authenticate and decrypt the message\n+    if (chacha20poly1305_crypt(&m_recv_aead_ctx, m_recv_seq_nr++, &buf_dec[0], (const uint8_t*)&data_in_out.data()[0],\n+            data_in_out.size() - TAG_LEN - AAD_LEN, AAD_LEN, 0) == -1) {\n+        memory_cleanse(data_in_out.data(), data_in_out.size());\n+        return false;\n+    }\n+\n+    // append chacha20 main payload size\n+    m_bytes_decrypted += data_in_out.size() - TAG_LEN - AAD_LEN;\n+\n+    data_in_out.clear();\n+    data_in_out.write((const char*)&buf_dec.begin()[AAD_LEN], vsize - TAG_LEN - AAD_LEN);\n+    return true;\n+}\n+\n+bool BIP151Encryption::EncryptAppendMAC(std::vector<unsigned char>& data_in_out)\n+{\n+    // first 3 bytes are the LE uint32 message length the most significant bit\n+    // indicates to the counterparty that the next message will be using the next\n+    // key (rekey) with resetted nonce",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 163,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "93f64ad566b014f69f797e8911c5ff75bb257758",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be “reset”?",
      "created_at": "2018-09-01T21:07:03Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r214523047",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523056",
      "pull_request_review_id": 151603405,
      "id": 214523056,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzA1Ng==",
      "diff_hunk": "@@ -0,0 +1,358 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->AuthenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+\n+            // vRecv holds now the plaintext message excluding the AAD and MAC\n+            // m_message_size holds the packet size exluding the MAC\n+\n+            // initially check the message\n+            try {\n+                vRecv >> m_command_name;\n+            } catch (const std::exception&) {\n+                return false;\n+            }\n+            // vRecv points now to the plaintext message payload (MAC is removed)\n+\n+            if (m_rekey_flag) {\n+                // post decrypt rekey if rekey was requested\n+                m_encryption_handler->Rekey(false);\n+            }\n+        }\n+        return copy_bytes;\n+    }\n+}\n+\n+int NetMessageEncryptionHandshake::Read(const char* pch, unsigned int bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    unsigned int remaining = 32 - m_data_pos;\n+    unsigned int copy_bytes = std::min(remaining, bytes);\n+    if (vRecv.size() < 32) {\n+        vRecv.resize(32);\n+    }\n+    memcpy(&vRecv[m_data_pos], pch, copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+bool NetMessageEncryptionHandshake::VerifyHeader() const\n+{\n+    CMessageHeader hdr(Params().MessageStart());\n+    CDataStream str = vRecv; //copy stream to keep function const\n+    try {\n+        str >> hdr;\n+    } catch (const std::exception&) {\n+        return false;\n+    }\n+    if (memcmp(hdr.pchMessageStart, Params().MessageStart(), CMessageHeader::MESSAGE_START_SIZE) == 0 || hdr.GetCommand() == NetMsgType::VERSION) {\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::AuthenticatedAndDecrypt(CDataStream& data_in_out)\n+{\n+    // create a buffer for the decrypted payload\n+    std::vector<unsigned char> buf_dec;\n+    buf_dec.resize(data_in_out.size());\n+\n+    // keep the original payload size\n+    size_t vsize = data_in_out.size();\n+\n+    LOCK(cs);\n+    if (m_bytes_decrypted + vsize > ABORT_LIMIT_BYTES || GetTime() - m_time_last_rekey_send > ABORT_LIMIT_TIME ||\n+        (gArgs.GetBoolArg(\"-netencryptionfastrekey\", false) && m_bytes_decrypted + vsize > 12 * 1024)) {\n+        // don't further decrypt and therefore abort connection when counterparty failed to respect rekey limits\n+        return false;\n+    }\n+    // authenticate and decrypt the message\n+    if (chacha20poly1305_crypt(&m_recv_aead_ctx, m_recv_seq_nr++, &buf_dec[0], (const uint8_t*)&data_in_out.data()[0],\n+            data_in_out.size() - TAG_LEN - AAD_LEN, AAD_LEN, 0) == -1) {\n+        memory_cleanse(data_in_out.data(), data_in_out.size());\n+        return false;\n+    }\n+\n+    // append chacha20 main payload size\n+    m_bytes_decrypted += data_in_out.size() - TAG_LEN - AAD_LEN;\n+\n+    data_in_out.clear();\n+    data_in_out.write((const char*)&buf_dec.begin()[AAD_LEN], vsize - TAG_LEN - AAD_LEN);\n+    return true;\n+}\n+\n+bool BIP151Encryption::EncryptAppendMAC(std::vector<unsigned char>& data_in_out)\n+{\n+    // first 3 bytes are the LE uint32 message length the most significant bit\n+    // indicates to the counterparty that the next message will be using the next\n+    // key (rekey) with resetted nonce\n+    if (data_in_out[2] & (1u << 7)) {\n+        // length is only allowed up to 2^23\n+        return false;\n+    }\n+    bool should_rekey = ShouldRekeySend();\n+    if (should_rekey) {\n+        // set the rekey flag and signal that the next message will be encrypted\n+        // with the next key (and resetted sequence)",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 171,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "93f64ad566b014f69f797e8911c5ff75bb257758",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here: “reset”?",
      "created_at": "2018-09-01T21:07:17Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r214523056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214532174",
      "pull_request_review_id": 151612586,
      "id": 214532174,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzMjE3NA==",
      "diff_hunk": "@@ -0,0 +1,358 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->AuthenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+\n+            // vRecv holds now the plaintext message excluding the AAD and MAC\n+            // m_message_size holds the packet size exluding the MAC",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "9c2fd588ebd29478c72b3add6acd549d5742e870",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo found by `codespell`: exluding",
      "created_at": "2018-09-02T08:00:35Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r214532174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214532174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214533260",
      "pull_request_review_id": 151613701,
      "id": 214533260,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzMzI2MA==",
      "diff_hunk": "@@ -0,0 +1,358 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->AuthenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+\n+            // vRecv holds now the plaintext message excluding the AAD and MAC\n+            // m_message_size holds the packet size exluding the MAC",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "9c2fd588ebd29478c72b3add6acd549d5742e870",
      "in_reply_to_id": 214532174,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed those spelling issues.",
      "created_at": "2018-09-02T08:48:09Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r214533260",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214533260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536556",
      "pull_request_review_id": 151616903,
      "id": 214536556,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjU1Ng==",
      "diff_hunk": "@@ -2820,40 +2788,124 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n-    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n+    size_t nTotalSize = nMessageSize;\n+    size_t serialized_command_size = ::GetSerializeSize(msg.command, SER_NETWORK, PROTOCOL_VERSION);\n+    uint8_t cmd_short_id = 0;\n+    bool should_crypt = pnode->m_encryption_handler && pnode->m_encryption_handler->ShouldCryptMsg();\n+    if (should_crypt) {\n+        // the crypted protocol supports short command IDs\n+        cmd_short_id = GetShortCommandIDFromCommand(msg.command);\n+        if (cmd_short_id != 0) {\n+            // if no short ID is available, use a size between 1-12 (always one byte)\n+            assert(msg.command.size() <= 12);\n+            serialized_command_size = 1;\n+        }\n+\n+        // add encrypted header size (AAD + MAC TAG + Varlen-Command + inner-message-size)\n+        nTotalSize += pnode->m_encryption_handler->GetAADLen() + pnode->m_encryption_handler->GetTagLen() + serialized_command_size;\n+    } else {\n+        nTotalSize += CMessageHeader::HEADER_SIZE;\n+    }\n+    LogPrint(BCLog::NET, \"sending%s %s (%d bytes) peer=%d\\n\", should_crypt ? \" encrypted\" : \"\", SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n \n-    std::vector<unsigned char> serializedHeader;\n-    serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n-    uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n-    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n-    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+    size_t nBytesSent = 0;\n \n-    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+    if (should_crypt) {\n+        std::vector<unsigned char> serialized_envelope;\n+        uint32_t envelope_payload_length = serialized_command_size + nMessageSize;\n+        serialized_envelope.reserve(3 /* <- packet length */ + serialized_command_size + nMessageSize + pnode->m_encryption_handler->GetTagLen());\n \n-    size_t nBytesSent = 0;\n-    {\n-        LOCK(pnode->cs_vSend);\n-        bool optimisticSend(pnode->vSendMsg.empty());\n+        // convert the host 32 bit size into a LE 24bit\n+        envelope_payload_length = htole32(envelope_payload_length);\n+        uint8_t int24[3];\n+        memcpy(int24, &envelope_payload_length, 3);\n \n-        //log total amount of bytes per command\n-        pnode->mapSendBytesPerMsgCmd[msg.command] += nTotalSize;\n-        pnode->nSendSize += nTotalSize;\n+        CVectorWriter vector_writer(SER_NETWORK, INIT_PROTO_VERSION, serialized_envelope, 0, int24[0], int24[1], int24[2]);\n+        if (cmd_short_id) {\n+            // append the single byte short ID...\n+            vector_writer << cmd_short_id;\n+        } else {\n+            // or the ASCII command string\n+            vector_writer << msg.command;\n+        }\n+        //append the message itself (if there is a message)\n+        if (nMessageSize) serialized_envelope.insert(serialized_envelope.end(), msg.data.begin(), msg.data.end());\n \n-        if (pnode->nSendSize > nSendBufferMaxSize)\n-            pnode->fPauseSend = true;\n-        pnode->vSendMsg.push_back(std::move(serializedHeader));\n-        if (nMessageSize)\n-            pnode->vSendMsg.push_back(std::move(msg.data));\n+        //form the AAED (encipher and append tag)\n+        if (!pnode->m_encryption_handler->EncryptAppendMAC(serialized_envelope)) {\n+            LogPrintf(\"Encryption failed, peer=%d\\n\", pnode->GetId());\n+            pnode->fDisconnect = true;\n+            return;\n+        }\n+        {\n+            LOCK(pnode->cs_vSend);\n+            bool optimisticSend(pnode->vSendMsg.empty());\n \n-        // If write queue empty, attempt \"optimistic write\"\n-        if (optimisticSend == true)\n-            nBytesSent = SocketSendData(pnode);\n+            //log total amount of bytes per command\n+            pnode->mapSendBytesPerMsgCmd[msg.command] += nTotalSize;\n+            pnode->nSendSize += nTotalSize;\n+\n+            if (pnode->nSendSize > nSendBufferMaxSize)\n+                pnode->fPauseSend = true;\n+            pnode->vSendMsg.push_back(std::move(serialized_envelope));\n+\n+            // If write queue empty, attempt \"optimistic write\"\n+            if (optimisticSend == true)\n+                nBytesSent = SocketSendData(pnode);\n+        }\n+    } else {\n+        std::vector<unsigned char> serializedHeader;\n+        serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n+        uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n+        CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n+        memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+\n+        CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+        {\n+            LOCK(pnode->cs_vSend);\n+            bool optimisticSend(pnode->vSendMsg.empty());\n+\n+            //log total amount of bytes per command\n+            pnode->mapSendBytesPerMsgCmd[msg.command] += nTotalSize;\n+            pnode->nSendSize += nTotalSize;\n+\n+            if (pnode->nSendSize > nSendBufferMaxSize)\n+                pnode->fPauseSend = true;\n+            pnode->vSendMsg.push_back(std::move(serializedHeader));\n+            if (nMessageSize)\n+                pnode->vSendMsg.push_back(std::move(msg.data));\n+\n+            // If write queue empty, attempt \"optimistic write\"\n+            if (optimisticSend == true)\n+                nBytesSent = SocketSendData(pnode);\n+        }\n     }\n     if (nBytesSent)\n         RecordBytesSent(nBytesSent);\n }\n \n+void CConnman::SendStealthEncryptionHandshakeData(CNode* pnode)\n+{\n+    // initialize encryption, generate ephemeral key\n+    assert(pnode->m_encryption_handler == nullptr);\n+    pnode->m_encryption_handler = std::make_shared<BIP151Encryption>();\n+\n+    // get encryption handshake data\n+    std::vector<unsigned char> handshake_data;\n+    pnode->m_encryption_handler->GetHandshakeRequestData(handshake_data);\n+\n+    // push handshake data\n+    LogPrint(BCLog::NET, \"Send stealth encryption handshake payload of %d bytes, peer=%d\\n\", handshake_data.size(), pnode->GetId());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 360,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "d98eedb3f8765e1909c58da637e187eb872c708d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're using the term \"stealth encryption\" in various places, but this term isn't used in the BIP.",
      "created_at": "2018-09-02T11:03:40Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r214536556",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2898,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536621",
      "pull_request_review_id": 151616979,
      "id": 214536621,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjYyMQ==",
      "diff_hunk": "@@ -268,6 +268,9 @@ enum ServiceFlags : uint64_t {\n     // serving the last 288 (2 day) blocks\n     // See BIP159 for details on how this is implemented.\n     NODE_NETWORK_LIMITED = (1 << 10),\n+    // NODE_ENCRYPTED means that the node does accept encrypted communication after BIP151",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 4,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "0971380cca98d80724c0fd6707e3ee571362d8cb",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"does accept\"? Maybe change to \"NODE_ENCRYPTED: node accepts encrypted communication, see BIP151\"?",
      "created_at": "2018-09-02T11:06:35Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r214536621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215158004",
      "pull_request_review_id": 152360948,
      "id": 215158004,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE1ODAwNA==",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NET_ENCRYPTION_H\n+#define BITCOIN_NET_ENCRYPTION_H\n+\n+#include <atomic>\n+#include <memory>\n+\n+#include <crypto/chachapoly_aead.h>\n+#include <key.h>\n+#include <net_message.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <uint256.h>\n+\n+\n+class EncryptionHandlerInterface\n+{\n+public:\n+    virtual ~EncryptionHandlerInterface() {}\n+\n+    virtual bool GetHandshakeRequestData(std::vector<unsigned char>& handshake_data) = 0;\n+    virtual bool ProcessHandshakeRequestData(const std::vector<unsigned char>& handshake_data) = 0;\n+\n+    virtual bool GetLength(CDataStream& data_in, uint32_t& len_out) = 0;\n+    virtual bool EncryptAppendMAC(std::vector<unsigned char>& data_in_out) = 0;\n+    virtual bool AuthenticatedAndDecrypt(CDataStream& data_in_out) = 0;\n+    virtual bool ShouldCryptMsg() = 0;\n+\n+    virtual unsigned int GetTagLen() const = 0;\n+    virtual unsigned int GetAADLen() const = 0;\n+    virtual void EnableEncryption(bool inbound) = 0;\n+    virtual uint256 GetSessionID() = 0;\n+    virtual bool Rekey(bool send_channel) = 0;\n+};\n+\n+class BIP151Encryption : public EncryptionHandlerInterface\n+{\n+private:\n+    static constexpr unsigned int TAG_LEN = 16; /* poly1305 128bit MAC tag */\n+    static constexpr unsigned int AAD_LEN = 3;  /* 24 bit payload length */\n+\n+    // ChaCha20 must never reuse a {key, nonce} for encryption nor may it be\n+    // used to encrypt more than 2^70 bytes under the same {key, nonce}\n+    // Re-key after 1GB (RFC4253 / SSH recommendation) or after 1h\n+    static constexpr unsigned int REKEY_LIMIT_BYTES = (1024 * 1024 * 1024);\n+    static constexpr unsigned int REKEY_LIMIT_TIME = 3600;                     /* rekey after 1h */\n+    static constexpr unsigned int ABORT_LIMIT_BYTES = REKEY_LIMIT_BYTES * 1.1; // abort after ~10% tolerance buffer\n+    static constexpr unsigned int ABORT_LIMIT_TIME = REKEY_LIMIT_BYTES * 1.1;  // abort after ~10% tolerance buffer\n+    static constexpr unsigned int MIN_REKEY_TIME = 10;                         // minimal rekey time to avoid DOS\n+\n+    CKey m_ecdh_key;\n+    CPrivKey m_raw_ecdh_secret;\n+    CPrivKey m_k1_encryption_keypack; // key1A & key1B (AAD & payload key)\n+    CPrivKey m_k2_encryption_keypack; // key2A & key2B (AAD & payload key)\n+    uint256 m_session_id;\n+    bool m_inbound;",
      "path": "src/net_encryption.h",
      "position": 61,
      "original_position": 59,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "d98eedb3f8765e1909c58da637e187eb872c708d",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_inbound` is not initialized in the constructor?",
      "created_at": "2018-09-05T07:14:46Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r215158004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215158004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 61,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219419536",
      "pull_request_review_id": 157590664,
      "id": 219419536,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxOTUzNg==",
      "diff_hunk": "@@ -0,0 +1,373 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->AuthenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+\n+            // vRecv holds now the plaintext message excluding the AAD and MAC\n+            // m_message_size holds the packet size excluding the MAC\n+\n+            // initially check the message\n+            // the first byte of the message is a ASCII command string size from 1-12\n+            // or a short ID (>12)\n+            uint8_t size_or_shortid;\n+            try {\n+                vRecv >> size_or_shortid;\n+            } catch (const std::exception&) {\n+                return false;\n+            }\n+            if (size_or_shortid == 0) return false; //0 is invalid\n+            if (size_or_shortid <= 12) {\n+                // string command\n+                if (vRecv.size() < size_or_shortid) return false;\n+\n+                m_command_name.resize(size_or_shortid);\n+                vRecv.read(&m_command_name[0], size_or_shortid);\n+            }\n+            else {\n+                // must be a short ID\n+                if (!GetCommandFromShortCommandID(size_or_shortid, m_command_name)) {\n+                    return false; // short ID not found\n+                }\n+            }\n+            // vRecv points now to the plaintext message payload (MAC is removed)\n+\n+            if (m_rekey_flag) {\n+                // post decrypt rekey if rekey was requested\n+                m_encryption_handler->Rekey(false);\n+            }\n+        }\n+        return copy_bytes;\n+    }\n+}\n+\n+int NetMessageEncryptionHandshake::Read(const char* pch, unsigned int bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    unsigned int remaining = 32 - m_data_pos;\n+    unsigned int copy_bytes = std::min(remaining, bytes);\n+    if (vRecv.size() < 32) {\n+        vRecv.resize(32);\n+    }\n+    memcpy(&vRecv[m_data_pos], pch, copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+bool NetMessageEncryptionHandshake::VerifyHeader() const\n+{\n+    CMessageHeader hdr(Params().MessageStart());\n+    CDataStream str = vRecv; //copy stream to keep function const\n+    try {\n+        str >> hdr;\n+    } catch (const std::exception&) {\n+        return false;\n+    }\n+    if (memcmp(hdr.pchMessageStart, Params().MessageStart(), CMessageHeader::MESSAGE_START_SIZE) == 0 || hdr.GetCommand() == NetMsgType::VERSION) {\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::AuthenticatedAndDecrypt(CDataStream& data_in_out)\n+{\n+    // create a buffer for the decrypted payload\n+    std::vector<unsigned char> buf_dec;\n+    buf_dec.resize(data_in_out.size());\n+\n+    // keep the original payload size\n+    size_t vsize = data_in_out.size();\n+\n+    LOCK(cs);\n+    if (m_bytes_decrypted + vsize > ABORT_LIMIT_BYTES || GetTime() - m_time_last_rekey_send > ABORT_LIMIT_TIME ||\n+        (gArgs.GetBoolArg(\"-netencryptionfastrekey\", false) && m_bytes_decrypted + vsize > 12 * 1024)) {\n+        // don't further decrypt and therefore abort connection when counterparty failed to respect rekey limits\n+        return false;\n+    }\n+    // authenticate and decrypt the message\n+    if (chacha20poly1305_crypt(&m_recv_aead_ctx, m_recv_seq_nr++, &buf_dec[0], (const uint8_t*)&data_in_out.data()[0],\n+            data_in_out.size() - TAG_LEN - AAD_LEN, AAD_LEN, 0) == -1) {\n+        memory_cleanse(data_in_out.data(), data_in_out.size());\n+        return false;\n+    }\n+\n+    // append chacha20 main payload size\n+    m_bytes_decrypted += data_in_out.size() - TAG_LEN - AAD_LEN;\n+\n+    data_in_out.clear();\n+    data_in_out.write((const char*)&buf_dec.begin()[AAD_LEN], vsize - TAG_LEN - AAD_LEN);\n+    return true;\n+}\n+\n+bool BIP151Encryption::EncryptAppendMAC(std::vector<unsigned char>& data_in_out)\n+{\n+    // first 3 bytes are the LE uint32 message length the most significant bit\n+    // indicates to the counterparty that the next message will be using the next\n+    // key (rekey) with reset nonce\n+    if (data_in_out[2] & (1u << 7)) {\n+        // length is only allowed up to 2^23\n+        return false;\n+    }\n+    bool should_rekey = ShouldRekeySend();\n+    if (should_rekey) {\n+        // set the rekey flag and signal that the next message will be encrypted\n+        // with the next key (and reset sequence)\n+        // rekey flag is the most significant bit encoded in LE (Bitcoin serialization rule)\n+        data_in_out[2] |= (1u << 7);\n+    }\n+\n+    // create a buffer for the encrypted payload\n+    std::vector<unsigned char> buf_enc;\n+    buf_enc.resize(data_in_out.size() + TAG_LEN);\n+\n+    // encrypt and add MAC tag\n+    LOCK(cs);\n+    chacha20poly1305_crypt(&m_send_aead_ctx, m_send_seq_nr++, &buf_enc[0], &data_in_out[0],\n+        data_in_out.size() - AAD_LEN, AAD_LEN, 1);\n+\n+    // Count total bytes encrypted\n+    m_bytes_encrypted += data_in_out.size() - AAD_LEN;\n+\n+    // clear data_in and append the decrypted data\n+    data_in_out.clear();\n+    data_in_out.insert(data_in_out.begin(), buf_enc.begin(), buf_enc.end());\n+\n+    // if it is time to rekey, rekey post encryption\n+    if (should_rekey) {\n+        Rekey(true);\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::GetLength(CDataStream& data_in, uint32_t& len_out)\n+{\n+    if (data_in.size() < AAD_LEN) {\n+        return false;\n+    }\n+\n+    LOCK(cs);\n+    if (chacha20poly1305_get_length24(&m_recv_aead_ctx, &len_out, m_recv_seq_nr, (const uint8_t*)&data_in.data()[0]) == -1) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+bool BIP151Encryption::ShouldCryptMsg()\n+{\n+    return handshake_done;\n+}\n+\n+uint256 BIP151Encryption::GetSessionID()\n+{\n+    LOCK(cs);\n+    return m_session_id;\n+}\n+\n+void BIP151Encryption::EnableEncryption(bool inbound)\n+{\n+    LOCK(cs);\n+    if (m_raw_ecdh_secret.size() != 32) {\n+        return;\n+    }\n+    m_inbound = inbound;\n+    // extract 2 keys for each direction with HKDF HMAC_SHA256 with length 32\n+    CHKDF_HMAC_SHA256_L32 hkdf_32(&m_raw_ecdh_secret[0], 32, \"BitcoinSharedSecret\");\n+    hkdf_32.Expand32(\"BitcoinK1A\", &m_k1_encryption_keypack[0]);\n+    hkdf_32.Expand32(\"BitcoinK1B\", &m_k1_encryption_keypack[32]);\n+    hkdf_32.Expand32(\"BitcoinK2A\", &m_k2_encryption_keypack[0]);\n+    hkdf_32.Expand32(\"BitcoinK2B\", &m_k2_encryption_keypack[32]);\n+    hkdf_32.Expand32(\"BitcoinSessionID\", m_session_id.begin());\n+\n+    m_bytes_encrypted = 0;\n+    m_time_last_rekey_send = GetTime();\n+    m_time_last_rekey_recv = m_time_last_rekey_send;\n+\n+    // enabling k1 for send channel on requesting peer and for recv channel on responding peer\n+    // enabling k2 for recv channel on requesting peer and for send channel on responding peer\n+    chacha20poly1305_init(&m_send_aead_ctx, inbound ? m_k2_encryption_keypack.data() : m_k1_encryption_keypack.data(), m_k1_encryption_keypack.size());\n+    chacha20poly1305_init(&m_recv_aead_ctx, inbound ? m_k1_encryption_keypack.data() : m_k2_encryption_keypack.data(), m_k1_encryption_keypack.size());\n+\n+    handshake_done = true;\n+}\n+\n+bool BIP151Encryption::GetHandshakeRequestData(std::vector<unsigned char>& handshake_data)\n+{\n+    LOCK(cs);\n+    CPubKey pubkey = m_ecdh_key.GetPubKey();\n+    m_ecdh_key.VerifyPubKey(pubkey); //verify the pubkey\n+    assert(pubkey[0] == 2);\n+\n+    handshake_data.insert(handshake_data.begin(), pubkey.begin() + 1, pubkey.end());\n+    return true;\n+}\n+\n+bool BIP151Encryption::ProcessHandshakeRequestData(const std::vector<unsigned char>& handshake_data)\n+{\n+    CPubKey pubkey;\n+    if (handshake_data.size() != 32) {\n+        return false;\n+    }\n+    std::vector<unsigned char> handshake_data_even_pubkey;\n+    handshake_data_even_pubkey.push_back(2);\n+    handshake_data_even_pubkey.insert(handshake_data_even_pubkey.begin() + 1, handshake_data.begin(), handshake_data.end());\n+    pubkey.Set(handshake_data_even_pubkey.begin(), handshake_data_even_pubkey.end());\n+    if (!pubkey.IsFullyValid()) {\n+        return false;\n+    }\n+\n+    // calculate ECDH secret\n+    LOCK(cs);\n+    bool ret = m_ecdh_key.ComputeECDHSecret(pubkey, m_raw_ecdh_secret);\n+\n+    // After calculating the ECDH secret, the ephemeral key can be cleansed from memory\n+    m_ecdh_key.SetNull();\n+    return ret;\n+}\n+\n+BIP151Encryption::BIP151Encryption() : handshake_done(false)",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 300,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:06:03 clang-tidy(pr=14032): src/net_encryption.cpp:300:1: warning: constructor does not initialize these fields: m_inbound, m_send_aead_ctx, m_recv_aead_ctx [cppcoreguidelines-pro-type-member-init]\r\n```",
      "created_at": "2018-09-21T08:27:38Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r219419536",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219419536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219419987",
      "pull_request_review_id": 157591231,
      "id": 219419987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxOTk4Nw==",
      "diff_hunk": "@@ -0,0 +1,373 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {\n+            // authenticate and decrypt if the message is complete\n+            if (!m_encryption_handler->AuthenticatedAndDecrypt(vRecv)) {\n+                LogPrint(BCLog::NET, \"Authentication or decryption failed\\n\");\n+                return false;\n+            }\n+\n+            // vRecv holds now the plaintext message excluding the AAD and MAC\n+            // m_message_size holds the packet size excluding the MAC\n+\n+            // initially check the message\n+            // the first byte of the message is a ASCII command string size from 1-12\n+            // or a short ID (>12)\n+            uint8_t size_or_shortid;\n+            try {\n+                vRecv >> size_or_shortid;\n+            } catch (const std::exception&) {\n+                return false;\n+            }\n+            if (size_or_shortid == 0) return false; //0 is invalid\n+            if (size_or_shortid <= 12) {\n+                // string command\n+                if (vRecv.size() < size_or_shortid) return false;\n+\n+                m_command_name.resize(size_or_shortid);\n+                vRecv.read(&m_command_name[0], size_or_shortid);\n+            }\n+            else {\n+                // must be a short ID\n+                if (!GetCommandFromShortCommandID(size_or_shortid, m_command_name)) {\n+                    return false; // short ID not found\n+                }\n+            }\n+            // vRecv points now to the plaintext message payload (MAC is removed)\n+\n+            if (m_rekey_flag) {\n+                // post decrypt rekey if rekey was requested\n+                m_encryption_handler->Rekey(false);\n+            }\n+        }\n+        return copy_bytes;\n+    }\n+}\n+\n+int NetMessageEncryptionHandshake::Read(const char* pch, unsigned int bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    unsigned int remaining = 32 - m_data_pos;\n+    unsigned int copy_bytes = std::min(remaining, bytes);\n+    if (vRecv.size() < 32) {\n+        vRecv.resize(32);\n+    }\n+    memcpy(&vRecv[m_data_pos], pch, copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+bool NetMessageEncryptionHandshake::VerifyHeader() const\n+{\n+    CMessageHeader hdr(Params().MessageStart());\n+    CDataStream str = vRecv; //copy stream to keep function const\n+    try {\n+        str >> hdr;\n+    } catch (const std::exception&) {\n+        return false;\n+    }\n+    if (memcmp(hdr.pchMessageStart, Params().MessageStart(), CMessageHeader::MESSAGE_START_SIZE) == 0 || hdr.GetCommand() == NetMsgType::VERSION) {\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::AuthenticatedAndDecrypt(CDataStream& data_in_out)\n+{\n+    // create a buffer for the decrypted payload\n+    std::vector<unsigned char> buf_dec;\n+    buf_dec.resize(data_in_out.size());\n+\n+    // keep the original payload size\n+    size_t vsize = data_in_out.size();\n+\n+    LOCK(cs);\n+    if (m_bytes_decrypted + vsize > ABORT_LIMIT_BYTES || GetTime() - m_time_last_rekey_send > ABORT_LIMIT_TIME ||\n+        (gArgs.GetBoolArg(\"-netencryptionfastrekey\", false) && m_bytes_decrypted + vsize > 12 * 1024)) {\n+        // don't further decrypt and therefore abort connection when counterparty failed to respect rekey limits\n+        return false;\n+    }\n+    // authenticate and decrypt the message\n+    if (chacha20poly1305_crypt(&m_recv_aead_ctx, m_recv_seq_nr++, &buf_dec[0], (const uint8_t*)&data_in_out.data()[0],\n+            data_in_out.size() - TAG_LEN - AAD_LEN, AAD_LEN, 0) == -1) {\n+        memory_cleanse(data_in_out.data(), data_in_out.size());\n+        return false;\n+    }\n+\n+    // append chacha20 main payload size\n+    m_bytes_decrypted += data_in_out.size() - TAG_LEN - AAD_LEN;\n+\n+    data_in_out.clear();\n+    data_in_out.write((const char*)&buf_dec.begin()[AAD_LEN], vsize - TAG_LEN - AAD_LEN);\n+    return true;\n+}\n+\n+bool BIP151Encryption::EncryptAppendMAC(std::vector<unsigned char>& data_in_out)\n+{\n+    // first 3 bytes are the LE uint32 message length the most significant bit\n+    // indicates to the counterparty that the next message will be using the next\n+    // key (rekey) with reset nonce\n+    if (data_in_out[2] & (1u << 7)) {\n+        // length is only allowed up to 2^23\n+        return false;\n+    }\n+    bool should_rekey = ShouldRekeySend();\n+    if (should_rekey) {\n+        // set the rekey flag and signal that the next message will be encrypted\n+        // with the next key (and reset sequence)\n+        // rekey flag is the most significant bit encoded in LE (Bitcoin serialization rule)\n+        data_in_out[2] |= (1u << 7);\n+    }\n+\n+    // create a buffer for the encrypted payload\n+    std::vector<unsigned char> buf_enc;\n+    buf_enc.resize(data_in_out.size() + TAG_LEN);\n+\n+    // encrypt and add MAC tag\n+    LOCK(cs);\n+    chacha20poly1305_crypt(&m_send_aead_ctx, m_send_seq_nr++, &buf_enc[0], &data_in_out[0],\n+        data_in_out.size() - AAD_LEN, AAD_LEN, 1);\n+\n+    // Count total bytes encrypted\n+    m_bytes_encrypted += data_in_out.size() - AAD_LEN;\n+\n+    // clear data_in and append the decrypted data\n+    data_in_out.clear();\n+    data_in_out.insert(data_in_out.begin(), buf_enc.begin(), buf_enc.end());\n+\n+    // if it is time to rekey, rekey post encryption\n+    if (should_rekey) {\n+        Rekey(true);\n+    }\n+    return true;\n+}\n+\n+bool BIP151Encryption::GetLength(CDataStream& data_in, uint32_t& len_out)\n+{\n+    if (data_in.size() < AAD_LEN) {\n+        return false;\n+    }\n+\n+    LOCK(cs);\n+    if (chacha20poly1305_get_length24(&m_recv_aead_ctx, &len_out, m_recv_seq_nr, (const uint8_t*)&data_in.data()[0]) == -1) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+bool BIP151Encryption::ShouldCryptMsg()\n+{\n+    return handshake_done;\n+}\n+\n+uint256 BIP151Encryption::GetSessionID()\n+{\n+    LOCK(cs);\n+    return m_session_id;\n+}\n+\n+void BIP151Encryption::EnableEncryption(bool inbound)\n+{\n+    LOCK(cs);\n+    if (m_raw_ecdh_secret.size() != 32) {\n+        return;\n+    }\n+    m_inbound = inbound;\n+    // extract 2 keys for each direction with HKDF HMAC_SHA256 with length 32\n+    CHKDF_HMAC_SHA256_L32 hkdf_32(&m_raw_ecdh_secret[0], 32, \"BitcoinSharedSecret\");\n+    hkdf_32.Expand32(\"BitcoinK1A\", &m_k1_encryption_keypack[0]);\n+    hkdf_32.Expand32(\"BitcoinK1B\", &m_k1_encryption_keypack[32]);\n+    hkdf_32.Expand32(\"BitcoinK2A\", &m_k2_encryption_keypack[0]);\n+    hkdf_32.Expand32(\"BitcoinK2B\", &m_k2_encryption_keypack[32]);\n+    hkdf_32.Expand32(\"BitcoinSessionID\", m_session_id.begin());\n+\n+    m_bytes_encrypted = 0;\n+    m_time_last_rekey_send = GetTime();\n+    m_time_last_rekey_recv = m_time_last_rekey_send;\n+\n+    // enabling k1 for send channel on requesting peer and for recv channel on responding peer\n+    // enabling k2 for recv channel on requesting peer and for send channel on responding peer\n+    chacha20poly1305_init(&m_send_aead_ctx, inbound ? m_k2_encryption_keypack.data() : m_k1_encryption_keypack.data(), m_k1_encryption_keypack.size());\n+    chacha20poly1305_init(&m_recv_aead_ctx, inbound ? m_k1_encryption_keypack.data() : m_k2_encryption_keypack.data(), m_k1_encryption_keypack.size());\n+\n+    handshake_done = true;\n+}\n+\n+bool BIP151Encryption::GetHandshakeRequestData(std::vector<unsigned char>& handshake_data)\n+{\n+    LOCK(cs);\n+    CPubKey pubkey = m_ecdh_key.GetPubKey();\n+    m_ecdh_key.VerifyPubKey(pubkey); //verify the pubkey\n+    assert(pubkey[0] == 2);\n+\n+    handshake_data.insert(handshake_data.begin(), pubkey.begin() + 1, pubkey.end());\n+    return true;\n+}\n+\n+bool BIP151Encryption::ProcessHandshakeRequestData(const std::vector<unsigned char>& handshake_data)\n+{\n+    CPubKey pubkey;\n+    if (handshake_data.size() != 32) {\n+        return false;\n+    }\n+    std::vector<unsigned char> handshake_data_even_pubkey;\n+    handshake_data_even_pubkey.push_back(2);\n+    handshake_data_even_pubkey.insert(handshake_data_even_pubkey.begin() + 1, handshake_data.begin(), handshake_data.end());\n+    pubkey.Set(handshake_data_even_pubkey.begin(), handshake_data_even_pubkey.end());\n+    if (!pubkey.IsFullyValid()) {\n+        return false;\n+    }\n+\n+    // calculate ECDH secret\n+    LOCK(cs);\n+    bool ret = m_ecdh_key.ComputeECDHSecret(pubkey, m_raw_ecdh_secret);\n+\n+    // After calculating the ECDH secret, the ephemeral key can be cleansed from memory\n+    m_ecdh_key.SetNull();\n+    return ret;\n+}\n+\n+BIP151Encryption::BIP151Encryption() : handshake_done(false)",
      "path": "src/net_encryption.cpp",
      "position": null,
      "original_position": 300,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:10:08 pvs-studio-analyzer(pr=14032): src/net_encryption.cpp:300 [err] V730 Not all members of a class are initialized inside the constructor. Consider inspecting: m_inbound, m_send_aead_ctx, m_recv_aead_ctx.\r\n```",
      "created_at": "2018-09-21T08:29:16Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r219419987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219419987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691387",
      "pull_request_review_id": 157931991,
      "id": 219691387,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTM4Nw==",
      "diff_hunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);",
      "path": "src/bench/chacha20poly1305.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 21:25:19 cpplint(pr=14032): src/bench/chacha20poly1305.cpp:29:  Missing space after ,  [whitespace/comma] [3]\r\n```",
      "created_at": "2018-09-23T08:06:47Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r219691387",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691396",
      "pull_request_review_id": 157931997,
      "id": 219691396,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTM5Ng==",
      "diff_hunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);\n+    std::vector<uint8_t> out(bufsize,0);",
      "path": "src/bench/chacha20poly1305.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 21:25:19 cpplint(pr=14032): src/bench/chacha20poly1305.cpp:30:  Missing space after ,  [whitespace/comma] [3]\r\n```\r\n",
      "created_at": "2018-09-23T08:07:00Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r219691396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691411",
      "pull_request_review_id": 157932011,
      "id": 219691411,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQxMQ==",
      "diff_hunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);\n+    std::vector<uint8_t> out(bufsize,0);\n+\n+    while (state.KeepRunning()) {\n+        chacha20poly1305_crypt(&aead_ctx, seqnr, in.data(), out.data(), in.size()-16,\n+            4, 1);\n+    }\n+}\n+\n+static void CHACHA20POLY1305AEAD_BIG(benchmark::State& state)\n+{\n+    CHACHA20POLY1305AEAD_(state, BUFFER_SIZE_A);\n+}\n+\n+static void CHACHA20POLY1305AEAD_SMALL(benchmark::State& state)\n+{\n+    CHACHA20POLY1305AEAD_(state, BUFFER_SIZE_B);\n+}\n+\n+static void HASH256_(benchmark::State& state, uint64_t bufsize)\n+{\n+    uint8_t hash[CHash256::OUTPUT_SIZE];\n+    std::vector<uint8_t> in(bufsize,0);",
      "path": "src/bench/chacha20poly1305.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 21:25:19 cpplint(pr=14032): src/bench/chacha20poly1305.cpp:51:  Missing space after ,  [whitespace/comma] [3]\r\n```",
      "created_at": "2018-09-23T08:07:25Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r219691411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220339631",
      "pull_request_review_id": 158726040,
      "id": 220339631,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDMzOTYzMQ==",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NET_ENCRYPTION_H\n+#define BITCOIN_NET_ENCRYPTION_H\n+\n+#include <atomic>\n+#include <memory>\n+\n+#include <crypto/chachapoly_aead.h>\n+#include <key.h>\n+#include <net_message.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <uint256.h>\n+\n+\n+class EncryptionHandlerInterface\n+{\n+public:\n+    virtual ~EncryptionHandlerInterface() {}\n+\n+    virtual bool GetHandshakeRequestData(std::vector<unsigned char>& handshake_data) = 0;\n+    virtual bool ProcessHandshakeRequestData(const std::vector<unsigned char>& handshake_data) = 0;\n+\n+    virtual bool GetLength(CDataStream& data_in, uint32_t& len_out) = 0;\n+    virtual bool EncryptAppendMAC(std::vector<unsigned char>& data_in_out) = 0;\n+    virtual bool AuthenticatedAndDecrypt(CDataStream& data_in_out) = 0;\n+    virtual bool ShouldCryptMsg() = 0;\n+\n+    virtual unsigned int GetTagLen() const = 0;\n+    virtual unsigned int GetAADLen() const = 0;\n+    virtual void EnableEncryption(bool inbound) = 0;\n+    virtual uint256 GetSessionID() = 0;\n+    virtual bool Rekey(bool send_channel) = 0;\n+};\n+\n+class BIP151Encryption : public EncryptionHandlerInterface\n+{\n+private:\n+    static constexpr unsigned int TAG_LEN = 16; /* poly1305 128bit MAC tag */\n+    static constexpr unsigned int AAD_LEN = 3;  /* 24 bit payload length */\n+\n+    // ChaCha20 must never reuse a {key, nonce} for encryption nor may it be\n+    // used to encrypt more than 2^70 bytes under the same {key, nonce}\n+    // Re-key after 1GB (RFC4253 / SSH recommendation) or after 1h\n+    static constexpr unsigned int REKEY_LIMIT_BYTES = (1024 * 1024 * 1024);\n+    static constexpr unsigned int REKEY_LIMIT_TIME = 3600;                     /* rekey after 1h */\n+    static constexpr unsigned int ABORT_LIMIT_BYTES = REKEY_LIMIT_BYTES * 1.1; // abort after ~10% tolerance buffer\n+    static constexpr unsigned int ABORT_LIMIT_TIME = REKEY_LIMIT_BYTES * 1.1;  // abort after ~10% tolerance buffer\n+    static constexpr unsigned int MIN_REKEY_TIME = 10;                         // minimal rekey time to avoid DOS\n+\n+    CKey m_ecdh_key;\n+    CPrivKey m_raw_ecdh_secret;\n+    CPrivKey m_k1_encryption_keypack; // key1A & key1B (AAD & payload key)\n+    CPrivKey m_k2_encryption_keypack; // key2A & key2B (AAD & payload key)\n+    uint256 m_session_id;\n+    bool m_inbound;\n+    std::atomic_bool handshake_done;\n+    int64_t m_time_last_rekey_send = 0;\n+    int64_t m_time_last_rekey_recv = 0;\n+    uint64_t m_bytes_encrypted = 0; //counter of bytes encrypted with same key\n+    uint64_t m_bytes_decrypted = 0; //counter of bytes decrypted with same key\n+\n+    CCriticalSection cs;\n+    struct chachapolyaead_ctx m_send_aead_ctx;\n+    struct chachapolyaead_ctx m_recv_aead_ctx;\n+    uint32_t m_recv_seq_nr = 0;\n+    uint32_t m_send_seq_nr = 0;\n+\n+    // check if send channel should rekey\n+    bool ShouldRekeySend();\n+\n+public:\n+    BIP151Encryption();\n+    ~BIP151Encryption()",
      "path": "src/net_encryption.h",
      "position": null,
      "original_position": 77,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-25 21:57:17 clang(pr=14032): net_encryption.h:77:5: warning: '~BIP151Encryption' overrides a destructor but is not marked 'override' [-Winconsistent-missing-destructor-override]\r\n```",
      "created_at": "2018-09-25T20:17:40Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r220339631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220339631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220340103",
      "pull_request_review_id": 158726613,
      "id": 220340103,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDM0MDEwMw==",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NET_ENCRYPTION_H\n+#define BITCOIN_NET_ENCRYPTION_H\n+\n+#include <atomic>\n+#include <memory>\n+\n+#include <crypto/chachapoly_aead.h>\n+#include <key.h>\n+#include <net_message.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <uint256.h>\n+\n+\n+class EncryptionHandlerInterface\n+{\n+public:\n+    virtual ~EncryptionHandlerInterface() {}\n+\n+    virtual bool GetHandshakeRequestData(std::vector<unsigned char>& handshake_data) = 0;\n+    virtual bool ProcessHandshakeRequestData(const std::vector<unsigned char>& handshake_data) = 0;\n+\n+    virtual bool GetLength(CDataStream& data_in, uint32_t& len_out) = 0;\n+    virtual bool EncryptAppendMAC(std::vector<unsigned char>& data_in_out) = 0;\n+    virtual bool AuthenticatedAndDecrypt(CDataStream& data_in_out) = 0;\n+    virtual bool ShouldCryptMsg() = 0;\n+\n+    virtual unsigned int GetTagLen() const = 0;\n+    virtual unsigned int GetAADLen() const = 0;\n+    virtual void EnableEncryption(bool inbound) = 0;\n+    virtual uint256 GetSessionID() = 0;\n+    virtual bool Rekey(bool send_channel) = 0;\n+};\n+\n+class BIP151Encryption : public EncryptionHandlerInterface\n+{\n+private:\n+    static constexpr unsigned int TAG_LEN = 16; /* poly1305 128bit MAC tag */\n+    static constexpr unsigned int AAD_LEN = 3;  /* 24 bit payload length */\n+\n+    // ChaCha20 must never reuse a {key, nonce} for encryption nor may it be\n+    // used to encrypt more than 2^70 bytes under the same {key, nonce}\n+    // Re-key after 1GB (RFC4253 / SSH recommendation) or after 1h\n+    static constexpr unsigned int REKEY_LIMIT_BYTES = (1024 * 1024 * 1024);\n+    static constexpr unsigned int REKEY_LIMIT_TIME = 3600;                     /* rekey after 1h */\n+    static constexpr unsigned int ABORT_LIMIT_BYTES = REKEY_LIMIT_BYTES * 1.1; // abort after ~10% tolerance buffer\n+    static constexpr unsigned int ABORT_LIMIT_TIME = REKEY_LIMIT_BYTES * 1.1;  // abort after ~10% tolerance buffer\n+    static constexpr unsigned int MIN_REKEY_TIME = 10;                         // minimal rekey time to avoid DOS\n+\n+    CKey m_ecdh_key;\n+    CPrivKey m_raw_ecdh_secret;\n+    CPrivKey m_k1_encryption_keypack; // key1A & key1B (AAD & payload key)\n+    CPrivKey m_k2_encryption_keypack; // key2A & key2B (AAD & payload key)\n+    uint256 m_session_id;\n+    bool m_inbound;\n+    std::atomic_bool handshake_done;\n+    int64_t m_time_last_rekey_send = 0;\n+    int64_t m_time_last_rekey_recv = 0;\n+    uint64_t m_bytes_encrypted = 0; //counter of bytes encrypted with same key\n+    uint64_t m_bytes_decrypted = 0; //counter of bytes decrypted with same key\n+\n+    CCriticalSection cs;\n+    struct chachapolyaead_ctx m_send_aead_ctx;\n+    struct chachapolyaead_ctx m_recv_aead_ctx;\n+    uint32_t m_recv_seq_nr = 0;\n+    uint32_t m_send_seq_nr = 0;\n+\n+    // check if send channel should rekey\n+    bool ShouldRekeySend();\n+\n+public:\n+    BIP151Encryption();\n+    ~BIP151Encryption()\n+    {\n+        memory_cleanse(&m_send_aead_ctx, sizeof(m_send_aead_ctx));\n+        memory_cleanse(&m_recv_aead_ctx, sizeof(m_recv_aead_ctx));\n+    }\n+    bool GetHandshakeRequestData(std::vector<unsigned char>& handshake_data) override;\n+    bool ProcessHandshakeRequestData(const std::vector<unsigned char>& handshake_data) override;\n+\n+    bool GetLength(CDataStream& data_in, uint32_t& len_out) override;\n+    bool EncryptAppendMAC(std::vector<unsigned char>& data_in_out) override;\n+    bool AuthenticatedAndDecrypt(CDataStream& data_in_out) override;\n+\n+    bool ShouldCryptMsg() override;\n+    void EnableEncryption(bool inbound) override;\n+    uint256 GetSessionID() override;\n+\n+    inline unsigned int GetTagLen() const override\n+    {\n+        return TAG_LEN;\n+    }\n+\n+    inline unsigned int GetAADLen() const override\n+    {\n+        return AAD_LEN;\n+    }\n+\n+    // rekey for either the send or recv channel\n+    // may return false if recv channel rekey did not respect limits\n+    bool Rekey(bool send_channel) override;\n+};\n+typedef std::shared_ptr<EncryptionHandlerInterface> EncryptionHandlerRef;\n+\n+//network message for 32byte encryption handshake with fallback option\n+class NetMessageEncryptionHandshake : public NetMessageBase\n+{\n+public:\n+    unsigned int m_data_pos;\n+\n+    NetMessageEncryptionHandshake(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : NetMessageBase(nTypeIn, nVersionIn)\n+    {\n+        m_data_pos = 0;\n+        m_type = NetMessageType::PLAINTEXT_ENCRYPTION_HANDSHAKE;\n+    }\n+\n+    bool Complete() const override\n+    {\n+        return (m_data_pos == 32);\n+    }\n+\n+    uint32_t GetMessageSize() const override\n+    {\n+        return vRecv.size();\n+    }\n+\n+    uint32_t GetMessageSizeWithHeader() const override\n+    {\n+        return vRecv.size();\n+    }\n+\n+    std::string GetCommandName() const override\n+    {\n+        return \"\";\n+    }\n+\n+    int Read(const char* pch, unsigned int nBytes) override;\n+\n+    bool VerifyMessageStart() const override { return true; }\n+    bool VerifyHeader() const override;\n+    bool VerifyChecksum(std::string& error) const override { return true; }\n+};\n+\n+//encrypted network message envelope after BIP151\n+class NetCryptedMessage : public NetMessageBase\n+{\n+public:\n+    bool m_in_data;\n+    uint32_t m_message_size;\n+    bool m_rekey_flag;\n+    unsigned int m_hdr_pos;\n+    uint32_t m_data_pos;\n+    std::string m_command_name;\n+\n+    EncryptionHandlerRef m_encryption_handler;\n+\n+    NetCryptedMessage(EncryptionHandlerRef encryption_handler, const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn)",
      "path": "src/net_encryption.h",
      "position": null,
      "original_position": 161,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-25 21:57:17 clang(pr=14032): net_encryption.h:161:105: warning: unused parameter 'pchMessageStartIn' [-Wunused-parameter]\r\n```",
      "created_at": "2018-09-25T20:19:03Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r220340103",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220340103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220341324",
      "pull_request_review_id": 158728127,
      "id": 220341324,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDM0MTMyNA==",
      "diff_hunk": "@@ -2820,40 +2788,124 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n-    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n+    size_t nTotalSize = nMessageSize;\n+    size_t serialized_command_size = ::GetSerializeSize(msg.command, SER_NETWORK, PROTOCOL_VERSION);\n+    uint8_t cmd_short_id = 0;\n+    bool should_crypt = pnode->m_encryption_handler && pnode->m_encryption_handler->ShouldCryptMsg();\n+    if (should_crypt) {\n+        // the crypted protocol supports short command IDs\n+        cmd_short_id = GetShortCommandIDFromCommand(msg.command);\n+        if (cmd_short_id != 0) {\n+            // if no short ID is available, use a size between 1-12 (always one byte)\n+            assert(msg.command.size() <= 12);\n+            serialized_command_size = 1;\n+        }\n+\n+        // add encrypted header size (AAD + MAC TAG + Varlen-Command + inner-message-size)\n+        nTotalSize += pnode->m_encryption_handler->GetAADLen() + pnode->m_encryption_handler->GetTagLen() + serialized_command_size;\n+    } else {\n+        nTotalSize += CMessageHeader::HEADER_SIZE;\n+    }\n+    LogPrint(BCLog::NET, \"sending%s %s (%d bytes) peer=%d\\n\", should_crypt ? \" encrypted\" : \"\", SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n \n-    std::vector<unsigned char> serializedHeader;\n-    serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n-    uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n-    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n-    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+    size_t nBytesSent = 0;\n \n-    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+    if (should_crypt) {\n+        std::vector<unsigned char> serialized_envelope;\n+        uint32_t envelope_payload_length = serialized_command_size + nMessageSize;",
      "path": "src/net.cpp",
      "position": 237,
      "original_position": 262,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-25 21:57:17 clang(pr=14032): net.cpp:2815:68: warning: implicit conversion loses integer precision: 'unsigned long' to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n```",
      "created_at": "2018-09-25T20:22:53Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r220341324",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220341324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2660,
      "original_line": 2660,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220346225",
      "pull_request_review_id": 158733927,
      "id": 220346225,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDM0NjIyNQ==",
      "diff_hunk": "@@ -2820,40 +2788,124 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n-    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n+    size_t nTotalSize = nMessageSize;\n+    size_t serialized_command_size = ::GetSerializeSize(msg.command, SER_NETWORK, PROTOCOL_VERSION);\n+    uint8_t cmd_short_id = 0;\n+    bool should_crypt = pnode->m_encryption_handler && pnode->m_encryption_handler->ShouldCryptMsg();\n+    if (should_crypt) {\n+        // the crypted protocol supports short command IDs\n+        cmd_short_id = GetShortCommandIDFromCommand(msg.command);\n+        if (cmd_short_id != 0) {\n+            // if no short ID is available, use a size between 1-12 (always one byte)\n+            assert(msg.command.size() <= 12);\n+            serialized_command_size = 1;\n+        }\n+\n+        // add encrypted header size (AAD + MAC TAG + Varlen-Command + inner-message-size)\n+        nTotalSize += pnode->m_encryption_handler->GetAADLen() + pnode->m_encryption_handler->GetTagLen() + serialized_command_size;\n+    } else {\n+        nTotalSize += CMessageHeader::HEADER_SIZE;\n+    }\n+    LogPrint(BCLog::NET, \"sending%s %s (%d bytes) peer=%d\\n\", should_crypt ? \" encrypted\" : \"\", SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n \n-    std::vector<unsigned char> serializedHeader;\n-    serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n-    uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n-    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n-    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+    size_t nBytesSent = 0;\n \n-    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+    if (should_crypt) {\n+        std::vector<unsigned char> serialized_envelope;\n+        uint32_t envelope_payload_length = serialized_command_size + nMessageSize;",
      "path": "src/net.cpp",
      "position": 237,
      "original_position": 262,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": 220341324,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@practicalswift Could you slow down the rate of these nits?\r\n\r\nThey're useful, but my mailbox is full of basically just these style of comments. Perhaps these are things to point out when a PR is active, and basically ready for merging, not when it's laid dormant for weeks. This way it litters the PR page with loads of information that's distracting for someone who hasn't even gone to give a concept ACK.\r\n\r\n",
      "created_at": "2018-09-25T20:37:21Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r220346225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220346225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2660,
      "original_line": 2660,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220355440",
      "pull_request_review_id": 158745536,
      "id": 220355440,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDM1NTQ0MA==",
      "diff_hunk": "@@ -2820,40 +2788,124 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n-    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n+    size_t nTotalSize = nMessageSize;\n+    size_t serialized_command_size = ::GetSerializeSize(msg.command, SER_NETWORK, PROTOCOL_VERSION);\n+    uint8_t cmd_short_id = 0;\n+    bool should_crypt = pnode->m_encryption_handler && pnode->m_encryption_handler->ShouldCryptMsg();\n+    if (should_crypt) {\n+        // the crypted protocol supports short command IDs\n+        cmd_short_id = GetShortCommandIDFromCommand(msg.command);\n+        if (cmd_short_id != 0) {\n+            // if no short ID is available, use a size between 1-12 (always one byte)\n+            assert(msg.command.size() <= 12);\n+            serialized_command_size = 1;\n+        }\n+\n+        // add encrypted header size (AAD + MAC TAG + Varlen-Command + inner-message-size)\n+        nTotalSize += pnode->m_encryption_handler->GetAADLen() + pnode->m_encryption_handler->GetTagLen() + serialized_command_size;\n+    } else {\n+        nTotalSize += CMessageHeader::HEADER_SIZE;\n+    }\n+    LogPrint(BCLog::NET, \"sending%s %s (%d bytes) peer=%d\\n\", should_crypt ? \" encrypted\" : \"\", SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n \n-    std::vector<unsigned char> serializedHeader;\n-    serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n-    uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n-    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n-    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+    size_t nBytesSent = 0;\n \n-    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+    if (should_crypt) {\n+        std::vector<unsigned char> serialized_envelope;\n+        uint32_t envelope_payload_length = serialized_command_size + nMessageSize;",
      "path": "src/net.cpp",
      "position": 237,
      "original_position": 262,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": 220341324,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa Absolutely! I'm still calibrating this reporting to increase the signal to noise, so feedback is appreciated!\r\n\r\nI'll try to find the right threshold for things that are worth commenting about, and also some heuristic for determining which PR:s to analyze. Currently I'm analyzing all open PR:s but that is perhaps overkill.\r\n\r\nThere should probably be a max comment count per PR too. This PR is a good example – it is massive (+1800 lines) which gives a high warning count even if the warning ratio is comparable with other PRs (say one warning per 50 lines of code).\r\n\r\nAs said - feedback appreciated! :-)",
      "created_at": "2018-09-25T21:06:18Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r220355440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220355440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2660,
      "original_line": 2660,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220551168",
      "pull_request_review_id": 158982889,
      "id": 220551168,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDU1MTE2OA==",
      "diff_hunk": "@@ -2820,40 +2788,124 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n-    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n+    size_t nTotalSize = nMessageSize;\n+    size_t serialized_command_size = ::GetSerializeSize(msg.command, SER_NETWORK, PROTOCOL_VERSION);\n+    uint8_t cmd_short_id = 0;\n+    bool should_crypt = pnode->m_encryption_handler && pnode->m_encryption_handler->ShouldCryptMsg();\n+    if (should_crypt) {\n+        // the crypted protocol supports short command IDs\n+        cmd_short_id = GetShortCommandIDFromCommand(msg.command);\n+        if (cmd_short_id != 0) {\n+            // if no short ID is available, use a size between 1-12 (always one byte)\n+            assert(msg.command.size() <= 12);\n+            serialized_command_size = 1;\n+        }\n+\n+        // add encrypted header size (AAD + MAC TAG + Varlen-Command + inner-message-size)\n+        nTotalSize += pnode->m_encryption_handler->GetAADLen() + pnode->m_encryption_handler->GetTagLen() + serialized_command_size;\n+    } else {\n+        nTotalSize += CMessageHeader::HEADER_SIZE;\n+    }\n+    LogPrint(BCLog::NET, \"sending%s %s (%d bytes) peer=%d\\n\", should_crypt ? \" encrypted\" : \"\", SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n \n-    std::vector<unsigned char> serializedHeader;\n-    serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n-    uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n-    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n-    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+    size_t nBytesSent = 0;\n \n-    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+    if (should_crypt) {\n+        std::vector<unsigned char> serialized_envelope;\n+        uint32_t envelope_payload_length = serialized_command_size + nMessageSize;",
      "path": "src/net.cpp",
      "position": 237,
      "original_position": 262,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": 220341324,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think waiting for either two concept ACK or one utACK / ACK / tACK would make sense.",
      "created_at": "2018-09-26T13:02:29Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r220551168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220551168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2660,
      "original_line": 2660,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221464261",
      "pull_request_review_id": 160119600,
      "id": 221464261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2NDI2MQ==",
      "diff_hunk": "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_ENCRYPTED (v2 protocol, encryption after BIP151).\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, connect_nodes\n+\n+class EncryptionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [['-netencryption'], ['-netencryption'], ['-netencryption=0'], ['-netencryption']]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[2], 1)\n+        connect_nodes(self.nodes[2], 3)\n+        connect_nodes(self.nodes[3], 1)\n+        self.sync_all()\n+\n+    def getEncryptionSessions(self, node):",
      "path": "test/functional/p2p_encryption.py",
      "position": 23,
      "original_position": 23,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be `get_encryption_sessions`? Could also be a function instead of method since `self` is not used?",
      "created_at": "2018-09-30T16:06:20Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r221464261",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221464261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221464337",
      "pull_request_review_id": 160119658,
      "id": 221464337,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2NDMzNw==",
      "diff_hunk": "@@ -0,0 +1,373 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {",
      "path": "src/net_encryption.cpp",
      "position": 58,
      "original_position": 55,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could drop this `else` statement (and keep the block as-is but one indentation level to the left) to make the code easier to follow?",
      "created_at": "2018-09-30T16:08:19Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r221464337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221464337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221464481",
      "pull_request_review_id": 160119796,
      "id": 221464481,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2NDQ4MQ==",
      "diff_hunk": "@@ -0,0 +1,373 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <net_encryption.h>\n+\n+#include <chainparams.h>\n+#include <crypto/hkdf_sha256_32.h>\n+#include <net_message.h>\n+#include <util.h>\n+\n+int NetCryptedMessage::Read(const char* pch, unsigned bytes)\n+{\n+    if (!m_in_data) {\n+        // copy data to temporary parsing buffer\n+        unsigned int remaining = m_encryption_handler->GetAADLen() - m_hdr_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        memcpy(&vRecv[m_hdr_pos], pch, copy_bytes);\n+        m_hdr_pos += copy_bytes;\n+\n+        // if AAD incomplete, exit\n+        if (m_hdr_pos < m_encryption_handler->GetAADLen()) {\n+            return copy_bytes;\n+        }\n+\n+        // decrypt the length from the AAD\n+        if (!m_encryption_handler->GetLength(vRecv, m_message_size)) {\n+            return -1;\n+        }\n+\n+        // check and unset rekey bit\n+        // the counterparty can signal a post-this-message rekey by setting the\n+        // most significant bit in the (unencrypted) length\n+        m_rekey_flag = (m_message_size & (1U << 23));\n+        if (m_rekey_flag) {\n+            LogPrint(BCLog::NET, \"Rekey flag detected %ld\\n\", m_message_size);\n+            m_message_size &= ~(1U << 23);\n+        }\n+\n+        // reject messages larger than MAX_SIZE\n+        if (m_message_size > MAX_SIZE) {\n+            LogPrint(BCLog::NET, \"Max message size exceeded %ld\\n\", m_message_size);\n+            return -1;\n+        }\n+\n+        // switch state to reading message data\n+        m_in_data = true;\n+\n+        return copy_bytes;\n+    } else {\n+        // copy the message payload plus the MAC tag\n+        const unsigned int AAD_LEN = m_encryption_handler->GetAADLen();\n+        const unsigned int TAG_LEN = m_encryption_handler->GetTagLen();\n+        unsigned int remaining = m_message_size + TAG_LEN - m_data_pos;\n+        unsigned int copy_bytes = std::min(remaining, bytes);\n+\n+        // extend buffer, respect previous copied AAD part\n+        if (vRecv.size() < AAD_LEN + m_data_pos + copy_bytes) {\n+            // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+            vRecv.resize(std::min(AAD_LEN + m_message_size + TAG_LEN, AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + TAG_LEN));\n+        }\n+\n+        memcpy(&vRecv[AAD_LEN + m_data_pos], pch, copy_bytes);\n+        m_data_pos += copy_bytes;\n+\n+        if (Complete()) {",
      "path": "src/net_encryption.cpp",
      "position": 74,
      "original_position": 71,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Invert logic here to handle the `!Complete()` case first? That would simplify the code and reduce indentation.",
      "created_at": "2018-09-30T16:12:33Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r221464481",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221464481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225694991",
      "pull_request_review_id": 165351289,
      "id": 225694991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTY5NDk5MQ==",
      "diff_hunk": "@@ -1569,9 +1578,44 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     return true;\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)\n+bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61, const NetMessageType msg_type)\n {\n-    LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->GetId());\n+    /* handling encryption handshake */\n+    if (pfrom->nVersion == 0 && msg_type == NetMessageType::PLAINTEXT_ENCRYPTION_HANDSHAKE) {\n+        LogPrint(BCLog::NET, \"Encryption handshake payload received, peer=%i\\n\", pfrom->GetId());\n+\n+        std::vector<unsigned char> handshake_msg;\n+        handshake_msg.resize(vRecv.size());\n+        memcpy(&handshake_msg[0], &vRecv[0], handshake_msg.size());\n+\n+        if (!pfrom->fInbound && pfrom->m_encryption_handler) {\n+            // we have initiated the encryption\n+            // the message does now contain the remote pubkey\n+            if (!pfrom->m_encryption_handler->ProcessHandshakeRequestData(handshake_msg)) {\n+                LogPrint(BCLog::NET, \"Invalid handshake received, peer=%d\\n\", pfrom->GetId());\n+                return false;\n+            }\n+            pfrom->m_encryption_handler->EnableEncryption(false);\n+            LogPrint(BCLog::NET, \"Enabling encryption as handshake-initiator, sessionID=%s, peer=%d\\n\", pfrom->m_encryption_handler->GetSessionID().ToString(), pfrom->GetId());\n+\n+            // set the trigger to send the vesrion",
      "path": "src/net_processing.cpp",
      "position": 56,
      "original_position": 66,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "6e6f8bc3db39d3510f8e73ddd8dd5a42a1260977",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be \"version\" :-)",
      "created_at": "2018-10-16T20:24:06Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r225694991",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225694991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1858,
      "original_line": 1858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265345892",
      "pull_request_review_id": 214230117,
      "id": 265345892,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTM0NTg5Mg==",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha_poly_aead.h>\n+\n+#include <crypto/common.h>\n+#include <crypto/poly1305.h>\n+#include <support/cleanse.h>\n+\n+#include <assert.h>\n+#include <cstdio>\n+#include <limits>\n+#include <string.h>\n+\n+#define XOR(v, w) ((v) ^ (w))\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif // TIMINGSAFE_BCMP\n+\n+ChaCha20Poly1305AEAD::ChaCha20Poly1305AEAD(const unsigned char *K_1, size_t K_1_len, const unsigned char *K_2, size_t K_2_len) {\n+    assert(K_1_len == CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    assert(K_2_len == CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    m_chacha_main.SetKey(K_1, CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    m_chacha_header.SetKey(K_2, CHACHA20_POLY1305_AEAD_KEY_LEN);\n+\n+    // set the cached sequence number to uint64 max which hints for an unset cache.\n+    // we can't hit uint64 max since the rekey rule (which resets the sequence number) is 1GB\n+    m_cached_aad_seqnr = std::numeric_limits<uint64_t>::max();\n+}\n+\n+bool ChaCha20Poly1305AEAD::Crypt(uint64_t seqnr, unsigned char* dest, const unsigned char* src, uint32_t len, bool is_encrypt) {\n+  unsigned char expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t aad_chacha_iv_hdr = 0;",
      "path": "src/crypto/chacha_poly_aead.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "fe3be2d82f1293e3b6d7d15b9e0180199b3cc376",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Scope could be reduced?",
      "created_at": "2019-03-13T21:49:59Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r265345892",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265345892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265346596",
      "pull_request_review_id": 214231000,
      "id": 265346596,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTM0NjU5Ng==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CRYPTO_CHACHA_POLY_AEAD_H\n+#define BITCOIN_CRYPTO_CHACHA_POLY_AEAD_H\n+\n+#include <crypto/chacha20.h>\n+\n+#include <cmath>\n+\n+static constexpr int CHACHA20_POLY1305_AEAD_KEY_LEN = 32;\n+static constexpr int CHACHA20_POLY1305_AEAD_AAD_LEN = 3; /* 3 bytes length */\n+static constexpr int CHACHA20_ROUND_OUTPUT = 64; /* 64 bytes per round */\n+static constexpr int AAD_PACKAGES_PER_ROUND = 21; /* 64 / 3 round down*/\n+\n+/* A AEAD class for ChaCha20-Poly1305@bitcoin.\n+ *\n+ * ChaCha20 is a stream cipher designed by Daniel Bernstein and described in\n+ * http://cr.yp.to/chacha/chacha-20080128.pdf\n+ * It operates by permuting 128 fixed bits, 128 or 256 bits of key, a 64 bit\n+ * nonce and a 64 bit counter into 64 bytes of output. This output is used as a\n+ * keystream, with any unused bytes simply discarded.\n+ * Poly1305 (http://cr.yp.to/mac/poly1305-20050329.pdf), also by Daniel\n+ * Bernstein, is a one-time Carter-Wegman MAC that computes a 128 bit integrity\n+ * tag given a message and a single-use 256 bit secret key.\n+ *\n+ * The chacha20-poly1305@bitcoin combines these two primitives into an\n+ * authenticated encryption mode. The construction used is based on that\n+ * proposed for TLS by Adam Langley in\n+ * http://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-03, but differs in\n+ * the layout of data passed to the MAC and in the addition of encyption of the\n+ * packet lengths.\n+ *\n+ * ==== Detailed Construction ====\n+ *\n+ * The chacha20-poly1305@bitcoin cipher requires two 256 bits of key material\n+ * as output from the key exchange. Each key (K_1 and K_2) are used by two\n+ * separate instances of chacha20.\n+ *\n+ * The instance keyed by K_1 is a stream cipher that is used only to encrypt\n+ * the 3 byte packet length field. The second instance, keyed by K_2, is used\n+ * in conjunction with poly1305 to build an AEAD (Authenticated Encryption\n+ * with Associated Data) that is used to encrypt and authenticate the entire\n+ * packet.\n+ *\n+ * Two separate cipher instances are used here so as to keep the packet lengths\n+ * confidential but not create an oracle for the packet payload cipher by\n+ * decrypting and using the packet length prior to checking the MAC. By using\n+ * an independently-keyed cipher instance to encrypt the length, an active\n+ * attacker seeking to exploit the packet input handling as a decryption oracle\n+ * can learn nothing about the payload contents or its MAC (assuming key\n+ * derivation, ChaCha20 and Poly1305 are secure).\n+ *\n+ * The AEAD is constructed as follows: for each packet, generate a Poly1305 key\n+ * by taking the first 256 bits of ChaCha20 stream output generated using K_2,\n+ * an IV consisting of the packet sequence number encoded as an uint64 under\n+ * the SSH wire encoding rules and a ChaCha20 block counter of zero. The K_2\n+ * ChaCha20 block counter is then set to the little-endian encoding of 1 (i.e.\n+ * {1, 0, 0, 0, 0, 0, 0, 0}) and this instance is used for encryption of the\n+ * packet payload.\n+ *\n+ * The initial value of the sequence number is 0.\n+ *\n+ * ==== Packet Handling ====\n+ * When receiving a packet, the length must be decrypted first. When 3 bytes of\n+ * ciphertext length have been received, they may be decrypted using the K_1\n+ * key, a nonce consisting of the packet sequence number encoded as a LE uint64\n+ * and a zero block counter to obtain the plaintext length.\n+ *\n+ * A ChaCha20 round always calculates 64bytes which is sufficient to crypt 21\n+ * times a 3 bytes length field (21*3 = 63). The packet sequence number must be\n+ * divided by 21 and rounded down to calculate the internal sequence number\n+ * nonce for the length-cipher ChaCha20 instance (K_1). The length field must\n+ * be enc-/decrypted with the ChaCha20 keystream defined by block counter 0 and\n+ * the internal sequence number. The position in the keystream is defined by\n+ * the internal sequence number modulo 21 times 3 (seek always 3 bytes forward\n+ * but ignore last byte (byte 64) per ChaCha20 round).\n+ *\n+ * Once the entire packet has been received, the MAC MUST be checked before\n+ * decryption. A per-packet Poly1305 key is generated as described above and\n+ * the MAC tag calculated using Poly1305 with this key over the ciphertext of\n+ * the packet length and the payload together. The calculated MAC is then\n+ * compared in constant time with the one appended to the packet and the packet\n+ * decrypted using ChaCha20 as described above (with K_2, the packet sequence\n+ * number as nonce and a starting block counter of 1).\n+ *\n+ * Detection of an invalid MAC MUST lead to immediate connection termination.\n+ *\n+ * To send a packet, first encode the 3 byte length and encrypt it using K_1 as\n+ * described above. Encrypt the packet payload (using K_2) and append it to the\n+ * encrypted length. Finally, calculate a MAC tag and append it.\n+ *\n+ * The initiating peer MUST use <code>K_1_A, K_2_A</code> to encrypt messages\n+ * on the send channel, <code>K_1_B, K_2_B</code> MUST be used to decrypt\n+ * messages on the receive channel.\n+ *\n+ * The responding peer MUST use <code>K_1_A, K_2_A</code> to decrypt messages\n+ * on the receive channel, <code>K_1_B, K_2_B</code> MUST be used to encrypt\n+ * messages on the send channel.\n+ *\n+ * ChaCha20 must never reuse a {key, nonce} for encryption nor may it be used\n+ * to encrypt more than 2^70 bytes under the same {key, nonce}.\n+ *\n+ * We use a message sequence number for both communication directions as\n+ * ChaCha20 nonce.\n+*/\n+\n+class ChaCha20Poly1305AEAD\n+{\n+private:\n+    ChaCha20 m_chacha_main;\n+    ChaCha20 m_chacha_header;\n+    unsigned char m_aad_keystream_buffer[CHACHA20_ROUND_OUTPUT];",
      "path": "src/crypto/chacha_poly_aead.h",
      "position": null,
      "original_position": 114,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "fe3be2d82f1293e3b6d7d15b9e0180199b3cc376",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Initialize to zero here (or in constructor) to be on the safe side?",
      "created_at": "2019-03-13T21:52:15Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r265346596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265346596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265348618",
      "pull_request_review_id": 214233494,
      "id": 265348618,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTM0ODYxOA==",
      "diff_hunk": "@@ -201,3 +201,30 @@ const std::vector<std::string> &getAllNetMessageTypes()\n {\n     return allNetMessageTypesVec;\n }\n+\n+uint8_t GetShortCommandIDFromCommand(const std::string cmd) {",
      "path": "src/protocol.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "fe3be2d82f1293e3b6d7d15b9e0180199b3cc376",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the non-ref const string here intentional? Assuming SSO will take place?",
      "created_at": "2019-03-13T21:58:54Z",
      "updated_at": "2019-05-20T10:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r265348618",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265348618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 205,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592826271",
      "pull_request_review_id": 610355339,
      "id": 592826271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNjI3MQ==",
      "diff_hunk": "@@ -560,42 +578,58 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n         // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n+        if (vRecvMsg.empty() || vRecvMsg.back()->Complete()) {\n+            if (m_encryption_handler && m_encryption_handler->ShouldCryptMsg()) {\n+                vRecvMsg.emplace_back(MakeUnique<NetV2Message>(m_encryption_handler, Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));",
      "path": "src/net.cpp",
      "position": 48,
      "original_position": 48,
      "commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "original_commit_id": "39bf10fbe3bb3c2d89b802328c933e7cd0814da4",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please [use `std::make_unique` in new code](https://github.com/bitcoin/bitcoin/blob/master/src/util/memory.h#L13).",
      "created_at": "2021-03-12T00:29:06Z",
      "updated_at": "2021-03-12T00:29:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14032#discussion_r592826271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592826271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 584,
      "original_line": 584,
      "side": "RIGHT"
    }
  ]
}