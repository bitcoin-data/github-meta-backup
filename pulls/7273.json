{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273",
    "id": 54908045,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ5MDgwNDU=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7273",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/7273.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/7273.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/3494217323059c13faa561d37563c48c144448ad",
    "number": 7273,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[Wallet] Simple HD/BIP32 support",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Most simplest HD feature.\n- Use BIP32/hd key derivation by default for new wallets (m/0'/0')\n- Only private key derivation is supported (no pubkey-only-wallets for now)\n- No on the fly generation of private keys (keypools get still refilled, all derived private keys are touching the database, but deterministic)\n- Internal support for multiple hd keychains (potential allows simple key rotation feature)\n- Supports encrypted wallets\n- RPC- and unit-tests included\n- Currently now way to create a hd keychain for existing wallets (upcoming feature if/once this got merged)\n\n**ment as a starting point, have concrete plans to extend this, but don't want to overload this PR**\n\n`getnewaddress \"\" true` (last parameter `true` = \"show details\") returns an object if the new address was hd derived:\n\n``` JSON\n{\n  \"address\": \"n1EU7TC4YqVYGQYy5eav1APHhS3z3Jrgf4\",\n  \"keypath\": \"m/0'/230'\"\n}\n```\n\n(same for `getaddressesbyaccount`)\n",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2016-01-02T16:04:13Z",
    "updated_at": "2021-09-08T11:58:08Z",
    "closed_at": "2016-05-10T09:26:39Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "2f40dc580427e160d783685d618be30eb3bf624d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "bitcoin:2016/01/hdsimple",
      "ref": "2016/01/hdsimple",
      "sha": "3494217323059c13faa561d37563c48c144448ad",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b24266c20748b871dd39243bc1488ce1070ad331",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 901,
    "deletions": 51,
    "changed_files": 15,
    "commits": 3,
    "review_comments": 37,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 503987879,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUwMzk4Nzg3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/503987879",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-02T16:04:13Z",
      "label": {
        "name": "Wallet",
        "color": "02d7e1"
      }
    },
    {
      "event": "milestoned",
      "id": 503987880,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDUwMzk4Nzg4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/503987880",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-02T16:04:13Z",
      "milestone": {
        "title": "0.13.0"
      }
    },
    {
      "event": "commented",
      "id": 168403059,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQwMzA1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/168403059",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-02T16:13:01Z",
      "updated_at": "2016-01-02T16:13:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "The main benefits of this PR:\n- A `wallet.dat` backup, regardless of it's age, can be used to recover all private keys.\n- **Basic groundwork for detaching the private-keys from the wallet (allow signing over hardware wallets, etc.)**\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-168403059",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 168414293,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQxNDI5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/168414293",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-02T18:21:43Z",
      "updated_at": "2016-01-02T18:21:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-168414293",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 172040350,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA0MDM1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/172040350",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-15T18:12:32Z",
      "updated_at": "2016-01-15T18:12:32Z",
      "author_association": "MEMBER",
      "body": "Note to test: If encrypting wallet fails for any reason at any late stage, the wallet should retain all unencrypted data.\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-172040350",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4ODk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4OTE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4OTM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 174049907,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDA0OTkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/174049907",
      "actor": {
        "login": "pointbiz",
        "id": 1024428,
        "node_id": "MDQ6VXNlcjEwMjQ0Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1024428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pointbiz",
        "html_url": "https://github.com/pointbiz",
        "followers_url": "https://api.github.com/users/pointbiz/followers",
        "following_url": "https://api.github.com/users/pointbiz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pointbiz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pointbiz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pointbiz/subscriptions",
        "organizations_url": "https://api.github.com/users/pointbiz/orgs",
        "repos_url": "https://api.github.com/users/pointbiz/repos",
        "events_url": "https://api.github.com/users/pointbiz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pointbiz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-22T21:10:19Z",
      "updated_at": "2016-01-22T21:10:19Z",
      "author_association": "NONE",
      "body": "Concept ACK \n",
      "user": {
        "login": "pointbiz",
        "id": 1024428,
        "node_id": "MDQ6VXNlcjEwMjQ0Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1024428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pointbiz",
        "html_url": "https://github.com/pointbiz",
        "followers_url": "https://api.github.com/users/pointbiz/followers",
        "following_url": "https://api.github.com/users/pointbiz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pointbiz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pointbiz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pointbiz/subscriptions",
        "organizations_url": "https://api.github.com/users/pointbiz/orgs",
        "repos_url": "https://api.github.com/users/pointbiz/repos",
        "events_url": "https://api.github.com/users/pointbiz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pointbiz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-174049907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4OTY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 559535468,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTU5NTM1NDY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/559535468",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-22T12:37:37Z"
    },
    {
      "event": "commented",
      "id": 187154838,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzE1NDgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/187154838",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-22T12:38:59Z",
      "updated_at": "2016-02-22T12:38:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and fixed reported nits.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-187154838",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4OTg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA4OTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA5MDA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA5MDI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA5MDM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTY1MTQzNzMxYzlkOTViOWI1NWRjMGM0MjQzNTY0ODI3NjY4NGI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a65143731c9d95b9b55dc0c42435648276684b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6a65143731c9d95b9b55dc0c42435648276684b7",
      "tree": {
        "sha": "0204769cb71bb38a3ce55d0c5417d083cd040746",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0204769cb71bb38a3ce55d0c5417d083cd040746"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0204769cb71bb38a3ce55d0c5417d083cd040746\nparent b24266c20748b871dd39243bc1488ce1070ad331\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1450904177 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1457944979 +0100\n\n[Wallet] Add hdkeystore\n- master seeds are kept seperated and can be encrypted\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJW5nmTAAoJECnUvLZBb1Ps8BwP/R8bgwevPGitKToVakfU0Reh\n+BV8moMlavGL8juazVKlNfH0eJShy88fNiVLZoaHCNlvY7AWVsSjm1Uw+z8c4jQM\nO0jbNDf7H+uiLHoTlBbR8s27FfmrMYpSgQzB3xYvOvdT3PxgDnhGn2FIuJtrMaoH\n00jqwzGkfPiDJQWWwzrAQW2zR5m1FcPuzaBvN06x1LML44YP8xM7HGXik6TnzzB3\neYU2vcCpQ3cK1OvTlXV+NRkiYLLvvkLZIL8mm3InwafArrX/1E3fsEfWKBWbyI2n\nQVBaNdsN0wpVMYnItJCJHiuMSEv1bJKg98VAudjTs38M5VHO05qLjtknQtxHLX5W\nith8gvNQf25VihTcYR3rrGJEEc4ZboZA2AFKv7u7P4DbogtkGYRkrxpnbNTS1tF3\ncyWJNSQUVn4qTJfXWDS4OB7lOopUdttdPlte/UIKEQae2mxgKk1JcCGh2hsTIlGZ\n1AqVFCdO8YZRd8z9vNDTtbE07cgyXWkzw3xXaNPPYIuppzHVmNrCd+JQCFxxGTDc\nZDqdEg5o0F7NqyiFqqh5EPB+mHZxyvRh9wMYnFUal3acG6ohb2WEEae9n/iwQPaf\nj+3JSLiqorvN+U1mw7F2efZsSjBx6a4Gxu3PgabaYNwqu63YY8Rdb2A/NvrXsH3r\nUXRupJDxifsbdcG8Cpk1\n=7pMr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b24266c20748b871dd39243bc1488ce1070ad331",
          "sha": "b24266c20748b871dd39243bc1488ce1070ad331",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b24266c20748b871dd39243bc1488ce1070ad331"
        }
      ],
      "message": "[Wallet] Add hdkeystore\n- master seeds are kept seperated and can be encrypted",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-14T08:42:59Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-23T20:56:17Z"
      },
      "sha": "6a65143731c9d95b9b55dc0c42435648276684b7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzE3YjQyNThiOGUzNjlhZDljYWE1NjJhNGFhZjY1NzA0ZjhlYWQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b717b4258b8e369ad9caa562a4aaf65704f8ead2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b717b4258b8e369ad9caa562a4aaf65704f8ead2",
      "tree": {
        "sha": "02222b67b06c1a327d2bdbc181d3fa457a879f03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02222b67b06c1a327d2bdbc181d3fa457a879f03"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 02222b67b06c1a327d2bdbc181d3fa457a879f03\nparent 6a65143731c9d95b9b55dc0c42435648276684b7\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1451734448 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1457944980 +0100\n\n[Wallet] Extend walletdb with some hd related records\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJW5nmUAAoJECnUvLZBb1PszPkQAIavwpvtJ68qjJ1Un+bMgUV9\nD1oJ6re4mq4S5kh1fRXHGecklN3KRwbtMOEG2UHyiolO1EMUW7v4rt4KjjwI+dCM\nOKPEIx+i0aEuw7M+rBcfLO2NBtxaUijgl9epBE0n/0CaewOcTj4BJ3H5mhm3ktLL\nj+tMabGgUjrrx1J6hoPcah4nKjimjCcVaimsVmzGLmNi6Fav1cZjupJbW/RGe1Mk\nzVDRiOl8JhN0jEYJT+dWj7ho866J1+xLoFBNWoZ9o//fv2dJhq4wKoiFeDYU5wEm\nYCghdQvjWEkorxa7QnuLhYFTmq02lq5ioCvM7wsZch6c6UvTl1NlV3bqBkSicORM\ndeNAK97b3MXdtsLen6DsfYCme8xML/lNIe+s/zgIh8s1BM+1+MJrQBMxxNWifmu9\nTYSiGvlYBew0BIJLYn4hOZU6cu9A8JnH9Qi32OJoD33LM0o4IlY9KJCXiEgtADWR\nGZPSTu0apmF3vje2OfDq3GVjT4eSDqfrOTmZjQM+KnFvpQ0MhwY2uXMfMnFv3OgO\nBLZ6yQYBaM/jIacDUz4VDopXzONfu7yNnaGwSxtYrh6NhwJ0uXpk99xumojKoBqF\nkIKlK3ILEtj0qYviOBRvskYlfH7N+RdcV6SQBadkFwm/SE8nDGnxZswkzZd9Lk1P\nM2SwKCQ2k3e1+4kOtWr4\n=cPSN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a65143731c9d95b9b55dc0c42435648276684b7",
          "sha": "6a65143731c9d95b9b55dc0c42435648276684b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6a65143731c9d95b9b55dc0c42435648276684b7"
        }
      ],
      "message": "[Wallet] Extend walletdb with some hd related records",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-14T08:43:00Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-02T11:34:08Z"
      },
      "sha": "b717b4258b8e369ad9caa562a4aaf65704f8ead2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDk0MjE3MzIzMDU5YzEzZmFhNTYxZDM3NTYzYzQ4YzE0NDQ0OGFk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3494217323059c13faa561d37563c48c144448ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3494217323059c13faa561d37563c48c144448ad",
      "tree": {
        "sha": "e07066a2efc8554f031eb28420fd35f45a5a1d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e07066a2efc8554f031eb28420fd35f45a5a1d25"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e07066a2efc8554f031eb28420fd35f45a5a1d25\nparent b717b4258b8e369ad9caa562a4aaf65704f8ead2\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1451734496 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1457945698 +0100\n\n[Wallet] use HD by default for all new wallets\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJW5nxkAAoJECnUvLZBb1PsW1kQAIqeUpdm8jjbzNZ3Qi6pPL5x\nP3Z1pgM973sUvSVXUUH6vIqDa3UjHlevqlnLAJqk/ipQmCr95fs7DvCP3LzA7+oa\n8wovQ6JXlVIdWtlH5YqqTiRRWj1YWhP4J8Ln7Rh0nva7C/behm+id/Dbj24faMy6\n2hNuPRjmB36ynHqsFtjPaaWEQqE5mQpZbF9xE7imgmJqT54MOILrph+J1LiEn41b\nt1AH/aR1Mg+avOKp86H4yYOO9Q79U5bJ2+NzkPg+rB5uhqgLvGqJVFBjbi7dMUzC\n00xdGVeGxq2kJpk4HMwMum7Ew24sEx9tP/QafxbSMwZfX4r2aV7ZNFRdALevh38i\n2tCZNgGQAlwqbDWCJYFp7nPnnSPixlgCglc/BAkY8QzqCZEhOLmdfIu2I6VO5MsY\npqeOzIJP970mDgB9kVB9EZWaYOtkWr+UPI90wIrNAF4I1keY1vnR2Vmur8YTFNp0\n8VhGODyRRoe5O2wzz6qVXULLXccqVf2MxByGKisiig8e1iE4UUNjfYVolCpwWfrd\n8ei9l5Yhe+0yHu4V9RW5n6r+lHU4PQyyhSTbCt39rdqrfQcL6TMucaQZ54XIoJsR\nGCVcU9Q9sI8j4cvSu/7eFXYSLLRuHnlooasbvPuN+RM7N86TaMHBPGsX9ZpybN1y\n3nsra7sFhb8WV+i8sOwC\n=qnBX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b717b4258b8e369ad9caa562a4aaf65704f8ead2",
          "sha": "b717b4258b8e369ad9caa562a4aaf65704f8ead2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b717b4258b8e369ad9caa562a4aaf65704f8ead2"
        }
      ],
      "message": "[Wallet] use HD by default for all new wallets",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-14T08:54:58Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-02T11:34:56Z"
      },
      "sha": "3494217323059c13faa561d37563c48c144448ad"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 588381293,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTg4MzgxMjkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/588381293",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-14T08:56:59Z"
    },
    {
      "event": "commented",
      "id": 196210532,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjIxMDUzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196210532",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-14T08:57:30Z",
      "updated_at": "2016-03-14T08:57:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and fixed some nits.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-196210532",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "mentioned",
      "id": 588967732,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTg4OTY3NzMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/588967732",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-14T16:24:33Z"
    },
    {
      "event": "subscribed",
      "id": 588967733,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU4ODk2NzczMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/588967733",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-14T16:24:33Z"
    },
    {
      "event": "commented",
      "id": 196426461,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyNjQ2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196426461",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-14T17:35:32Z",
      "updated_at": "2016-03-14T17:35:32Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\n\nI think on-ramping users to this safely/transparently will be the most difficult part.\n\nWarning users that the flag they've set can't be properly used until a new wallet is created(or some migration happens) is a must imo. There needs to be a tool/process to help with that migration, most likely with a backup/cloning step.\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-196426461",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "commented",
      "id": 218105205,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxODEwNTIwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/218105205",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-10T09:26:39Z",
      "updated_at": "2016-05-10T09:26:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing in favor of #8035.\nSome parts of this PR could be used to extend HD functionality if and once #8035 has been merged.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-218105205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "closed",
      "id": 655495965,
      "node_id": "MDExOkNsb3NlZEV2ZW50NjU1NDk1OTY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/655495965",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-10T09:26:39Z"
    },
    {
      "event": "commented",
      "id": 219285501,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTI4NTUwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/219285501",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-15T13:22:16Z",
      "updated_at": "2016-05-15T13:22:16Z",
      "author_association": "MEMBER",
      "body": "@jonasschnelli Is it ok to delete the `2016/01/hdsimple` branch from https://github.com/bitcoin/bitcoin/branches now?\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-219285501",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "mentioned",
      "id": 660966519,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjYwOTY2NTE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/660966519",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-15T13:22:16Z"
    },
    {
      "event": "subscribed",
      "id": 660966520,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDY2MDk2NjUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/660966520",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-15T13:22:16Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 661624857,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ2NjE2MjQ4NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/661624857",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-16T13:44:20Z"
    },
    {
      "event": "commented",
      "id": 219428446,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTQyODQ0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/219428446",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-16T13:45:58Z",
      "updated_at": "2016-05-16T13:45:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "I deleted the branch. There is still some useful stuff in this branch (thinks like child key derivation by keypath-string) that could be re-used later.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#issuecomment-219428446",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7273"
    },
    {
      "event": "demilestoned",
      "id": 661626976,
      "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50NjYxNjI2OTc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/661626976",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-16T13:46:04Z",
      "milestone": {
        "title": "0.13.0"
      }
    },
    {
      "event": "locked",
      "id": 5271822040,
      "node_id": "LOE_lADOABII584HbTLyzwAAAAE6OZ7Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271822040",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:58:08Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686227",
      "pull_request_review_id": null,
      "id": 48686227,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MjI3",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 4)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        connect_nodes_bi(self.nodes,0,1)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        print \"Mining blocks...\"\n+\n+        encrypt = True\n+        self.nodes[0].generate(1)\n+\n+        walletinfo = self.nodes[0].getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 50)\n+        assert_equal(walletinfo['balance'], 0)\n+        self.nodes[0].generate(100)\n+        self.sync_all()\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"muWGGSSma5s7TjHbT5fCKunkoyBaF1uy8D\");\n+        assert_equal(adr['keypath'], \"m/0'/4'\");\n+        \n+        stop_node(self.nodes[0], 0)\n+        stop_node(self.nodes[1], 1)\n+        \n+        #try to recover over master seed\n+        os.remove(self.options.tmpdir + \"/node0/regtest/wallet.dat\")\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mqfCLB8d4vP1BTyMo88WzjT9VJG4NWEbni\");\n+        assert_equal(adr['keypath'], \"m/0'/1'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"n4mEdLhWJgDHvsChPcttAkqQSMrndhzdAv\");\n+        assert_equal(adr['keypath'], \"m/0'/2'\");\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        print \"encrypt wallet\"\n+        self.nodes[0].encryptwallet(\"test\")\n+        bitcoind_processes[0].wait()\n+        del bitcoind_processes[0]",
      "path": "qa/rpc-tests/hdwallet.py",
      "position": 69,
      "original_position": 69,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Is there a compelling reason to do this?\n",
      "created_at": "2016-01-02T18:01:35Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686233",
      "pull_request_review_id": null,
      "id": 48686233,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MjMz",
      "diff_hunk": "@@ -395,6 +395,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n+    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key derivation (HD wallets) (default: true)\"));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We no longer translate every time the default changes.\n",
      "created_at": "2016-01-02T18:02:32Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686247",
      "pull_request_review_id": null,
      "id": 48686247,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MjQ3",
      "diff_hunk": "@@ -1465,6 +1467,40 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             // Create new keyUser and set as default key\n             RandAddSeedPerfmon();\n \n+            if (GetBoolArg(\"-usehd\", true))\n+            {\n+                // create a new seed / chain\n+                // default keypath is m/c'/k'\n+                // results in m/0'/0' for the first external key\n+                // results in m/1'/0' for the first internal key\n+                // results in m/0'/1' for the second external key\n+\n+                CHDChain chain;\n+                chain.keypathTemplate = \"m/c'\";\n+                \n+                CKey key;\n+                key.MakeNewKey(true); //generate a seed\n+                CKeyingMaterial seed = CKeyingMaterial(32);\n+                seed.assign(key.begin(), key.end());\n+\n+                if (GetArg(\"-hdseed\", \"\").size() == 64)",
      "path": "src/init.cpp",
      "position": 20,
      "original_position": 29,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this fail otherwise?\n",
      "created_at": "2016-01-02T18:04:02Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1509,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686258",
      "pull_request_review_id": null,
      "id": 48686258,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MjU4",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/hdkeystore.h\"\n+\n+#include \"base58.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/algorithm/string.hpp>\n+#include <boost/foreach.hpp>\n+\n+bool CHDKeyStore::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed)\n+{\n+    LOCK(cs_KeyStore);\n+    if (IsCrypted())\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey; //an empty key will tell EncryptSeed() to use the internal vMasterKey\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+\n+        mapHDCryptedMasterSeeds[chainID] = vchCryptedSecret;\n+        return true;\n+    }\n+    mapHDMasterSeeds[chainID] = masterSeed;\n+    return true;\n+}\n+\n+bool CHDKeyStore::AddCryptedMasterSeed(const HDChainID& chainID, const std::vector<unsigned char>& vchCryptedSecret)\n+{\n+    LOCK(cs_KeyStore);\n+    mapHDCryptedMasterSeeds[chainID] = vchCryptedSecret;\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetMasterSeed(const HDChainID& chainID, CKeyingMaterial& seedOut) const\n+{\n+    LOCK(cs_KeyStore);\n+    if (!IsCrypted())\n+    {\n+        std::map<HDChainID, CKeyingMaterial >::const_iterator it=mapHDMasterSeeds.find(chainID);\n+        if (it == mapHDMasterSeeds.end())\n+            return false;\n+\n+        seedOut = it->second;\n+        return true;\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::map<HDChainID, std::vector<unsigned char> >::const_iterator it=mapHDCryptedMasterSeeds.find(chainID);\n+        if (it == mapHDCryptedMasterSeeds.end())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret = it->second;\n+        CKeyingMaterial emptyKey; //an empty key will tell DecryptSeed() to use the internal vMasterKey\n+        if (!DecryptSeed(emptyKey, vchCryptedSecret, chainID, seedOut))\n+            return false;\n+\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CHDKeyStore::EncryptSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    LOCK(cs_KeyStore);\n+    for (std::map<HDChainID, CKeyingMaterial >::iterator it = mapHDMasterSeeds.begin(); it != mapHDMasterSeeds.end(); ++it)\n+    {\n+        std::vector<unsigned char> vchCryptedSecret;\n+        if (!EncryptSeed(vMasterKeyIn, it->second, it->first, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(it->first, vchCryptedSecret);\n+    }\n+    mapHDMasterSeeds.clear();\n+    if (!SetCrypted())\n+        return false;\n+\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetCryptedMasterSeed(const HDChainID& chainID, std::vector<unsigned char>& vchCryptedSecret) const\n+{\n+    LOCK(cs_KeyStore);\n+    if (!IsCrypted())\n+        return false;\n+\n+    std::map<HDChainID, std::vector<unsigned char> >::const_iterator it=mapHDCryptedMasterSeeds.find(chainID);\n+    if (it == mapHDCryptedMasterSeeds.end())\n+        return false;\n+\n+    vchCryptedSecret = it->second;\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetAvailableChainIDs(std::vector<HDChainID>& chainIDs)\n+{\n+    LOCK(cs_KeyStore);\n+    chainIDs.clear();\n+\n+    if (IsCrypted())\n+    {\n+        for (std::map<HDChainID, std::vector<unsigned char> >::iterator it = mapHDCryptedMasterSeeds.begin(); it != mapHDCryptedMasterSeeds.end(); ++it) {\n+            chainIDs.push_back(it->first);\n+        }\n+    }\n+    else\n+    {\n+        for (std::map<HDChainID, CKeyingMaterial >::iterator it = mapHDMasterSeeds.begin(); it != mapHDMasterSeeds.end(); ++it) {\n+            chainIDs.push_back(it->first);\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+bool CHDKeyStore::PrivateKeyDerivation(const std::string keypath, const HDChainID& chainID, CExtKey& extKeyOut) const\n+{\n+    std::vector<std::string> pathFragments;\n+    boost::split(pathFragments, keypath, boost::is_any_of(\"/\"));\n+\n+    CExtKey extKey;\n+    CExtKey parentKey;\n+    BOOST_FOREACH(std::string fragment, pathFragments)\n+    {\n+        bool harden = false;\n+        if (*fragment.rbegin() == '\\'' || *fragment.rbegin() == 'h')\n+        {\n+            harden = true;\n+            fragment = fragment.substr(0,fragment.size()-1);\n+        }\n+\n+        if (fragment == \"m\")\n+        {\n+            CExtKey bip32MasterKey;\n+            CKeyingMaterial masterSeed;\n+\n+            // get master seed\n+            if (!GetMasterSeed(chainID, masterSeed))\n+                return false;\n+\n+            bip32MasterKey.SetMaster(&masterSeed[0], masterSeed.size());\n+            parentKey = bip32MasterKey;\n+        }\n+        else if (fragment == \"c\")\n+            return false;\n+        else\n+        {\n+            CExtKey childKey;\n+            int32_t nIndex;\n+            if (!ParseInt32(fragment,&nIndex))\n+                return false;\n+            parentKey.Derive(childKey, (harden ? 0x80000000 : 0)+nIndex);\n+            parentKey = childKey;\n+        }\n+    }\n+    extKeyOut = parentKey;\n+    return true;\n+}\n+\n+bool CHDKeyStore::DeriveKey(const HDChainID chainID, const std::string keypath, CKey& keyOut) const\n+{\n+    //this methode required no locking",
      "path": "src/wallet/hdkeystore.cpp",
      "position": null,
      "original_position": 170,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: typo\n",
      "created_at": "2016-01-02T18:05:10Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686281",
      "pull_request_review_id": null,
      "id": 48686281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2Mjgx",
      "diff_hunk": "@@ -317,12 +328,13 @@ UniValue getaddressesbyaccount(const UniValue& params, bool fHelp)\n     if (!EnsureWalletIsAvailable(fHelp))\n         return NullUniValue;\n     \n-    if (fHelp || params.size() != 1)\n+    if (fHelp || params.size() > 2)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The first arg is required\n",
      "created_at": "2016-01-02T18:07:45Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 346,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686295",
      "pull_request_review_id": null,
      "id": 48686295,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2Mjk1",
      "diff_hunk": "@@ -344,7 +358,27 @@ UniValue getaddressesbyaccount(const UniValue& params, bool fHelp)\n         const CBitcoinAddress& address = item.first;\n         const string& strName = item.second.name;\n         if (strName == strAccount)\n-            ret.push_back(address.ToString());\n+        {\n+            if (GetBoolArg(\"-usehd\", true) && showDetails)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Guess it makes sense to use a global or `DEFAULT_` here.\n",
      "created_at": "2016-01-02T18:09:07Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686295",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686430",
      "pull_request_review_id": null,
      "id": 48686430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2NDMw",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 4)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        connect_nodes_bi(self.nodes,0,1)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        print \"Mining blocks...\"\n+\n+        encrypt = True\n+        self.nodes[0].generate(1)\n+\n+        walletinfo = self.nodes[0].getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 50)\n+        assert_equal(walletinfo['balance'], 0)\n+        self.nodes[0].generate(100)\n+        self.sync_all()\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"muWGGSSma5s7TjHbT5fCKunkoyBaF1uy8D\");\n+        assert_equal(adr['keypath'], \"m/0'/4'\");\n+        \n+        stop_node(self.nodes[0], 0)\n+        stop_node(self.nodes[1], 1)\n+        \n+        #try to recover over master seed\n+        os.remove(self.options.tmpdir + \"/node0/regtest/wallet.dat\")\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mqfCLB8d4vP1BTyMo88WzjT9VJG4NWEbni\");\n+        assert_equal(adr['keypath'], \"m/0'/1'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"n4mEdLhWJgDHvsChPcttAkqQSMrndhzdAv\");\n+        assert_equal(adr['keypath'], \"m/0'/2'\");\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        print \"encrypt wallet\"\n+        self.nodes[0].encryptwallet(\"test\")\n+        bitcoind_processes[0].wait()\n+        del bitcoind_processes[0]",
      "path": "qa/rpc-tests/hdwallet.py",
      "position": 69,
      "original_position": 69,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Encrypting the wallet does stop the process,... i think this is required.\n",
      "created_at": "2016-01-02T18:26:58Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686433",
      "pull_request_review_id": null,
      "id": 48686433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2NDMz",
      "diff_hunk": "@@ -1465,6 +1467,40 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             // Create new keyUser and set as default key\n             RandAddSeedPerfmon();\n \n+            if (GetBoolArg(\"-usehd\", true))\n+            {\n+                // create a new seed / chain\n+                // default keypath is m/c'/k'\n+                // results in m/0'/0' for the first external key\n+                // results in m/1'/0' for the first internal key\n+                // results in m/0'/1' for the second external key\n+\n+                CHDChain chain;\n+                chain.keypathTemplate = \"m/c'\";\n+                \n+                CKey key;\n+                key.MakeNewKey(true); //generate a seed\n+                CKeyingMaterial seed = CKeyingMaterial(32);\n+                seed.assign(key.begin(), key.end());\n+\n+                if (GetArg(\"-hdseed\", \"\").size() == 64)",
      "path": "src/init.cpp",
      "position": 20,
      "original_position": 29,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. Good point. Will fix.\n",
      "created_at": "2016-01-02T18:27:30Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r48686433",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48686433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1509,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49883811",
      "pull_request_review_id": null,
      "id": 49883811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgzODEx",
      "diff_hunk": "@@ -133,6 +101,13 @@ class CWalletDB : public CDB\n     static bool Recover(CDBEnv& dbenv, const std::string& filename, bool fOnlyKeys);\n     static bool Recover(CDBEnv& dbenv, const std::string& filename);\n \n+    /* HD functions */\n+    bool WriteHDMasterSeed(const uint256& hash, const CKeyingMaterial& masterSeed);\n+    bool WriteHDCryptedMasterSeed(const uint256& hash, const std::vector<unsigned char>& vchCryptedSecret);\n+    bool EraseHDMasterSeed(const uint256& hash);\n+    bool WriteHDChain(const CHDChain& chain);\n+    bool WriteHDAchiveChain(const uint256& hash);",
      "path": "src/wallet/walletdb.h",
      "position": null,
      "original_position": 57,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo? Achive -> Active?\n",
      "created_at": "2016-01-15T18:00:20Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r49883811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49883811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49884875",
      "pull_request_review_id": null,
      "id": 49884875,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0ODc1",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_HDKEYSTORE_H\n+#define BITCOIN_WALLET_HDKEYSTORE_H\n+\n+#include \"keystore.h\"\n+#include \"wallet/crypter.h\"\n+#include \"serialize.h\"\n+#include \"pubkey.h\"\n+\n+typedef uint256 HDChainID;\n+\n+class CKeyMetadata\n+{\n+public:\n+    static const int CURRENT_VERSION=2;\n+    int nVersion;\n+    int64_t nCreateTime; // 0 means unknown\n+    HDChainID chainID;\n+    std::string keypath;\n+\n+    CKeyMetadata()\n+    {\n+        SetNull();\n+    }\n+    CKeyMetadata(int64_t nCreateTime_)\n+    {\n+        nVersion = CKeyMetadata::CURRENT_VERSION;\n+        nCreateTime = nCreateTime_;\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+        READWRITE(nCreateTime);\n+        if (nVersion >= 2)\n+        {\n+            READWRITE(keypath);\n+            if (keypath.size() > 0)\n+                READWRITE(chainID);\n+        }\n+    }\n+\n+    void SetNull()\n+    {\n+        nVersion = CKeyMetadata::CURRENT_VERSION;\n+        nCreateTime = 0;\n+        keypath.clear();\n+        chainID.SetNull();\n+    }\n+};\n+\n+/** class for representing a hd chain of keys. */\n+class CHDChain\n+{\n+public:\n+    static const int CURRENT_VERSION=1;\n+    int nVersion;\n+    bool usePubCKD;\n+    int64_t nCreateTime; // 0 means unknown\n+\n+    HDChainID chainID; //hash of the masterpubkey\n+    std::string keypathTemplate; //example \"m'/44'/0'/0'/c\"\n+\n+    CHDChain()\n+    {\n+        SetNull();\n+    }\n+\n+    CHDChain(int64_t nCreateTime_)\n+    {\n+        SetNull();\n+        nCreateTime = nCreateTime_;\n+    }\n+\n+    bool IsValid()\n+    {\n+        return (keypathTemplate.size() > 0);\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+\n+        READWRITE(nCreateTime);\n+        READWRITE(chainID);\n+        READWRITE(keypathTemplate);\n+    }\n+\n+    void SetNull()\n+    {\n+        nVersion = CHDChain::CURRENT_VERSION;\n+        nCreateTime = 0;\n+        chainID.SetNull();\n+        keypathTemplate.clear();\n+    }\n+};\n+\n+class CHDKeyStore : public CCryptoKeyStore\n+{\n+protected:\n+    std::map<HDChainID, CKeyingMaterial > mapHDMasterSeeds; //master seeds are stored outside of CHDChain (mind crypting)",
      "path": "src/wallet/hdkeystore.h",
      "position": null,
      "original_position": 110,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "mind crypting???\n",
      "created_at": "2016-01-15T18:11:03Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r49884875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49884875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49885671",
      "pull_request_review_id": null,
      "id": 49885671,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1Njcx",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Return value is ignored.\n",
      "created_at": "2016-01-15T18:18:18Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r49885671",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49885671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49894964",
      "pull_request_review_id": null,
      "id": 49894964,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0OTY0",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_HDKEYSTORE_H\n+#define BITCOIN_WALLET_HDKEYSTORE_H\n+\n+#include \"keystore.h\"\n+#include \"wallet/crypter.h\"\n+#include \"serialize.h\"\n+#include \"pubkey.h\"\n+\n+typedef uint256 HDChainID;\n+\n+class CKeyMetadata\n+{\n+public:\n+    static const int CURRENT_VERSION=2;\n+    int nVersion;\n+    int64_t nCreateTime; // 0 means unknown\n+    HDChainID chainID;\n+    std::string keypath;\n+\n+    CKeyMetadata()\n+    {\n+        SetNull();\n+    }\n+    CKeyMetadata(int64_t nCreateTime_)\n+    {\n+        nVersion = CKeyMetadata::CURRENT_VERSION;\n+        nCreateTime = nCreateTime_;\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+        READWRITE(nCreateTime);\n+        if (nVersion >= 2)",
      "path": "src/wallet/hdkeystore.h",
      "position": null,
      "original_position": 41,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "2 is VERSION_SUPPORT_FLAGS...\n",
      "created_at": "2016-01-15T19:32:57Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r49894964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49894964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49900458",
      "pull_request_review_id": null,
      "id": 49900458,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAwNDU4",
      "diff_hunk": "@@ -126,6 +130,13 @@ UniValue getnewaddress(const UniValue& params, bool fHelp)\n \n     pwalletMain->SetAddressBook(keyID, strAccount, \"receive\");\n \n+    if (GetBoolArg(\"-usehd\", true) && showDetails && pwalletMain->mapKeyMetadata[keyID].keypath.size() > 0)\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        result.pushKV(\"address\", CBitcoinAddress(keyID).ToString());\n+        result.pushKV(\"keypath\", pwalletMain->mapKeyMetadata[keyID].keypath);\n+        return result;\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 41,
      "original_position": 40,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "showDetails ought to return Object format even when not generating from a HD key IMO.\n",
      "created_at": "2016-01-15T20:20:57Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r49900458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49900458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/51429190",
      "pull_request_review_id": null,
      "id": 51429190,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI5MTkw",
      "diff_hunk": "@@ -395,6 +395,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n+    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key derivation (HD wallets) (default: true)\"));\n+    strUsage += HelpMessageOpt(\"-hdseed\", _(\"Use the given 256bit (64 char hex) as HD master seed (default: <generate random seed>)\"));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably should make this clear it only happens upon first run of the wallet.\n",
      "created_at": "2016-02-01T15:12:55Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r51429190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/51429190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/51430314",
      "pull_request_review_id": null,
      "id": 51430314,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMzE0",
      "diff_hunk": "@@ -395,6 +395,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n+    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key derivation (HD wallets) (default: true)\"));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, `true` is not a valid default value.\n",
      "created_at": "2016-02-01T15:22:06Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r51430314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/51430314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53617049",
      "pull_request_review_id": null,
      "id": 53617049,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MDQ5",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_HDKEYSTORE_H\n+#define BITCOIN_WALLET_HDKEYSTORE_H\n+\n+#include \"keystore.h\"\n+#include \"wallet/crypter.h\"\n+#include \"serialize.h\"\n+#include \"pubkey.h\"\n+\n+typedef uint256 HDChainID;\n+\n+class CKeyMetadata\n+{\n+public:\n+    static const int CURRENT_VERSION=2;\n+    int nVersion;\n+    int64_t nCreateTime; // 0 means unknown\n+    HDChainID chainID;\n+    std::string keypath;\n+\n+    CKeyMetadata()\n+    {\n+        SetNull();\n+    }\n+    CKeyMetadata(int64_t nCreateTime_)\n+    {\n+        nVersion = CKeyMetadata::CURRENT_VERSION;\n+        nCreateTime = nCreateTime_;\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+        READWRITE(nCreateTime);\n+        if (nVersion >= 2)",
      "path": "src/wallet/hdkeystore.h",
      "position": null,
      "original_position": 41,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> 2 is VERSION_SUPPORT_FLAGS...\n\nNot in core... :) But yes. Let me use three.\n",
      "created_at": "2016-02-22T12:16:30Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r53617049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53617049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53617298",
      "pull_request_review_id": null,
      "id": 53617298,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3Mjk4",
      "diff_hunk": "@@ -126,6 +130,13 @@ UniValue getnewaddress(const UniValue& params, bool fHelp)\n \n     pwalletMain->SetAddressBook(keyID, strAccount, \"receive\");\n \n+    if (GetBoolArg(\"-usehd\", true) && showDetails && pwalletMain->mapKeyMetadata[keyID].keypath.size() > 0)\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        result.pushKV(\"address\", CBitcoinAddress(keyID).ToString());\n+        result.pushKV(\"keypath\", pwalletMain->mapKeyMetadata[keyID].keypath);\n+        return result;\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 41,
      "original_position": 40,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> showDetails ought to return Object format even when not generating from a HD key IMO.\n\nIt shouldn't (`&& pwalletMain->mapKeyMetadata[keyID].keypath.size() > 0`).\n",
      "created_at": "2016-02-22T12:19:46Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r53617298",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53617298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53617477",
      "pull_request_review_id": null,
      "id": 53617477,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3NDc3",
      "diff_hunk": "@@ -395,6 +395,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n+    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key derivation (HD wallets) (default: true)\"));\n+    strUsage += HelpMessageOpt(\"-hdseed\", _(\"Use the given 256bit (64 char hex) as HD master seed (default: <generate random seed>)\"));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Probably should make this clear it only happens upon first run of the wallet.\n\nI agree, `-hdseed` as startup parameter is somehow not ideal. Not seeding the wallet at first start, would require an additional rpc command (something `generatehdwallet`, `seedwallet`, etc.).\n\nOr an additional \"`bitcoin-wallet`\" tool that could allow generating and manipulating wallet.dat files.\n\nBut because I fear lack of reviewer, I don't want to make this PR more complex for now. \n",
      "created_at": "2016-02-22T12:22:19Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r53617477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53617477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53618798",
      "pull_request_review_id": null,
      "id": 53618798,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE4Nzk4",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.\n",
      "created_at": "2016-02-22T12:38:17Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r53618798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/53618798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55893160",
      "pull_request_review_id": null,
      "id": 55893160,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODkzMTYw",
      "diff_hunk": "@@ -1004,3 +1036,39 @@ bool CWalletDB::EraseDestData(const std::string &address, const std::string &key\n     nWalletDBUpdated++;\n     return Erase(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)));\n }\n+\n+bool CWalletDB::WriteHDMasterSeed(const uint256& hash, const CKeyingMaterial& masterSeed)\n+{\n+    nWalletDBUpdated++;\n+    return Write(std::make_pair(std::string(\"hdmasterseed\"), hash), masterSeed);\n+}\n+\n+bool CWalletDB::WriteHDCryptedMasterSeed(const uint256& hash, const std::vector<unsigned char>& vchCryptedSecret)\n+{\n+    nWalletDBUpdated++;\n+    if (!Write(std::make_pair(std::string(\"hdcryptedmasterseed\"), hash), vchCryptedSecret))\n+        return false;\n+\n+    Erase(std::make_pair(std::string(\"hdmasterseed\"), hash));\n+    Erase(std::make_pair(std::string(\"hdmasterseed\"), hash));",
      "path": "src/wallet/walletdb.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "915b69dbde5d01cda9bef94bbda666ff6d92625f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "double deletion?\n",
      "created_at": "2016-03-11T21:45:20Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55893160",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55893160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55893620",
      "pull_request_review_id": null,
      "id": 55893620,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODkzNjIw",
      "diff_hunk": "@@ -0,0 +1,256 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/hdkeystore.h\"\n+\n+#include \"base58.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/algorithm/string.hpp>\n+#include <boost/foreach.hpp>\n+\n+bool CHDKeyStore::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed)\n+{\n+    LOCK(cs_KeyStore);\n+    if (IsCrypted())\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey; //an empty key will tell EncryptSeed() to use the internal vMasterKey\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+\n+        mapHDCryptedMasterSeeds[chainID] = vchCryptedSecret;\n+        return true;\n+    }\n+    mapHDMasterSeeds[chainID] = masterSeed;\n+    return true;\n+}\n+\n+bool CHDKeyStore::AddCryptedMasterSeed(const HDChainID& chainID, const std::vector<unsigned char>& vchCryptedSecret)\n+{\n+    LOCK(cs_KeyStore);\n+    mapHDCryptedMasterSeeds[chainID] = vchCryptedSecret;\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetMasterSeed(const HDChainID& chainID, CKeyingMaterial& seedOut) const\n+{\n+    LOCK(cs_KeyStore);\n+    if (!IsCrypted())\n+    {\n+        std::map<HDChainID, CKeyingMaterial >::const_iterator it=mapHDMasterSeeds.find(chainID);\n+        if (it == mapHDMasterSeeds.end())\n+            return false;\n+\n+        seedOut = it->second;\n+        return true;\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::map<HDChainID, std::vector<unsigned char> >::const_iterator it=mapHDCryptedMasterSeeds.find(chainID);\n+        if (it == mapHDCryptedMasterSeeds.end())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret = it->second;\n+        CKeyingMaterial emptyKey; //an empty key will tell DecryptSeed() to use the internal vMasterKey\n+        if (!DecryptSeed(emptyKey, vchCryptedSecret, chainID, seedOut))\n+            return false;\n+\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CHDKeyStore::EncryptSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    LOCK(cs_KeyStore);\n+    for (std::map<HDChainID, CKeyingMaterial >::iterator it = mapHDMasterSeeds.begin(); it != mapHDMasterSeeds.end(); ++it)\n+    {\n+        std::vector<unsigned char> vchCryptedSecret;\n+        if (!EncryptSeed(vMasterKeyIn, it->second, it->first, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(it->first, vchCryptedSecret);\n+    }\n+    mapHDMasterSeeds.clear();\n+    if (!SetCrypted())\n+        return false;\n+\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetCryptedMasterSeed(const HDChainID& chainID, std::vector<unsigned char>& vchCryptedSecret) const\n+{\n+    LOCK(cs_KeyStore);\n+    if (!IsCrypted())\n+        return false;\n+\n+    std::map<HDChainID, std::vector<unsigned char> >::const_iterator it=mapHDCryptedMasterSeeds.find(chainID);\n+    if (it == mapHDCryptedMasterSeeds.end())\n+        return false;\n+\n+    vchCryptedSecret = it->second;\n+    return true;\n+}\n+\n+void CHDKeyStore::GetAvailableChainIDs(std::vector<HDChainID>& chainIDs)\n+{\n+    LOCK(cs_KeyStore);\n+    chainIDs.clear();\n+\n+    if (IsCrypted())\n+    {\n+        for (std::map<HDChainID, std::vector<unsigned char> >::iterator it = mapHDCryptedMasterSeeds.begin(); it != mapHDCryptedMasterSeeds.end(); ++it) {\n+            chainIDs.push_back(it->first);\n+        }\n+    }\n+    else\n+    {\n+        for (std::map<HDChainID, CKeyingMaterial >::iterator it = mapHDMasterSeeds.begin(); it != mapHDMasterSeeds.end(); ++it) {\n+            chainIDs.push_back(it->first);\n+        }\n+    }\n+}\n+\n+bool CHDKeyStore::PrivateKeyDerivation(const std::string keypath, const HDChainID& chainID, CExtKey& extKeyOut) const\n+{\n+    std::vector<std::string> pathFragments;\n+    boost::split(pathFragments, keypath, boost::is_any_of(\"/\"));\n+\n+    CExtKey extKey;\n+    CExtKey parentKey;\n+    BOOST_FOREACH(std::string fragment, pathFragments)\n+    {\n+        bool harden = false;\n+        if (*fragment.rbegin() == '\\'' || *fragment.rbegin() == 'h')\n+        {\n+            harden = true;\n+            fragment = fragment.substr(0,fragment.size()-1);\n+        }\n+\n+        if (fragment == \"m\")\n+        {\n+            CExtKey bip32MasterKey;\n+            CKeyingMaterial masterSeed;\n+\n+            // get master seed\n+            if (!GetMasterSeed(chainID, masterSeed))\n+                return false;\n+\n+            bip32MasterKey.SetMaster(&masterSeed[0], masterSeed.size());\n+            parentKey = bip32MasterKey;\n+        }\n+        else if (fragment == \"c\")\n+            return false;\n+        else\n+        {\n+            CExtKey childKey;\n+            int32_t nIndex;\n+            if (!ParseInt32(fragment,&nIndex))\n+                return false;\n+            parentKey.Derive(childKey, (harden ? 0x80000000 : 0)+nIndex);\n+            parentKey = childKey;\n+        }\n+    }\n+    extKeyOut = parentKey;\n+    return true;\n+}\n+\n+bool CHDKeyStore::DeriveKey(const HDChainID chainID, const std::string keypath, CKey& keyOut) const\n+{\n+    //this methode requires no locking\n+    CExtKey extKeyOut;\n+    if (!PrivateKeyDerivation(keypath, chainID, extKeyOut))\n+        return false;\n+\n+    keyOut = extKeyOut.key;\n+    return true;\n+}\n+\n+bool CHDKeyStore::DeriveKeyAtIndex(const HDChainID chainID, CKey& keyOut, std::string& keypathOut, unsigned int nIndex, bool internal) const",
      "path": "src/wallet/hdkeystore.cpp",
      "position": 177,
      "original_position": 177,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "915b69dbde5d01cda9bef94bbda666ff6d92625f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "arg sandwich: in/out/out/in/in \n",
      "created_at": "2016-03-11T21:48:37Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55893620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55893620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55893741",
      "pull_request_review_id": null,
      "id": 55893741,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODkzNzQx",
      "diff_hunk": "@@ -0,0 +1,256 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/hdkeystore.h\"\n+\n+#include \"base58.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/algorithm/string.hpp>\n+#include <boost/foreach.hpp>\n+\n+bool CHDKeyStore::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed)\n+{\n+    LOCK(cs_KeyStore);\n+    if (IsCrypted())\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey; //an empty key will tell EncryptSeed() to use the internal vMasterKey\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+\n+        mapHDCryptedMasterSeeds[chainID] = vchCryptedSecret;\n+        return true;\n+    }\n+    mapHDMasterSeeds[chainID] = masterSeed;\n+    return true;\n+}\n+\n+bool CHDKeyStore::AddCryptedMasterSeed(const HDChainID& chainID, const std::vector<unsigned char>& vchCryptedSecret)\n+{\n+    LOCK(cs_KeyStore);\n+    mapHDCryptedMasterSeeds[chainID] = vchCryptedSecret;\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetMasterSeed(const HDChainID& chainID, CKeyingMaterial& seedOut) const\n+{\n+    LOCK(cs_KeyStore);\n+    if (!IsCrypted())\n+    {\n+        std::map<HDChainID, CKeyingMaterial >::const_iterator it=mapHDMasterSeeds.find(chainID);\n+        if (it == mapHDMasterSeeds.end())\n+            return false;\n+\n+        seedOut = it->second;\n+        return true;\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::map<HDChainID, std::vector<unsigned char> >::const_iterator it=mapHDCryptedMasterSeeds.find(chainID);\n+        if (it == mapHDCryptedMasterSeeds.end())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret = it->second;\n+        CKeyingMaterial emptyKey; //an empty key will tell DecryptSeed() to use the internal vMasterKey\n+        if (!DecryptSeed(emptyKey, vchCryptedSecret, chainID, seedOut))\n+            return false;\n+\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CHDKeyStore::EncryptSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    LOCK(cs_KeyStore);\n+    for (std::map<HDChainID, CKeyingMaterial >::iterator it = mapHDMasterSeeds.begin(); it != mapHDMasterSeeds.end(); ++it)\n+    {\n+        std::vector<unsigned char> vchCryptedSecret;\n+        if (!EncryptSeed(vMasterKeyIn, it->second, it->first, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(it->first, vchCryptedSecret);\n+    }\n+    mapHDMasterSeeds.clear();\n+    if (!SetCrypted())\n+        return false;\n+\n+    return true;\n+}\n+\n+bool CHDKeyStore::GetCryptedMasterSeed(const HDChainID& chainID, std::vector<unsigned char>& vchCryptedSecret) const\n+{\n+    LOCK(cs_KeyStore);\n+    if (!IsCrypted())\n+        return false;\n+\n+    std::map<HDChainID, std::vector<unsigned char> >::const_iterator it=mapHDCryptedMasterSeeds.find(chainID);\n+    if (it == mapHDCryptedMasterSeeds.end())\n+        return false;\n+\n+    vchCryptedSecret = it->second;\n+    return true;\n+}\n+\n+void CHDKeyStore::GetAvailableChainIDs(std::vector<HDChainID>& chainIDs)\n+{\n+    LOCK(cs_KeyStore);\n+    chainIDs.clear();\n+\n+    if (IsCrypted())\n+    {\n+        for (std::map<HDChainID, std::vector<unsigned char> >::iterator it = mapHDCryptedMasterSeeds.begin(); it != mapHDCryptedMasterSeeds.end(); ++it) {\n+            chainIDs.push_back(it->first);\n+        }\n+    }\n+    else\n+    {\n+        for (std::map<HDChainID, CKeyingMaterial >::iterator it = mapHDMasterSeeds.begin(); it != mapHDMasterSeeds.end(); ++it) {\n+            chainIDs.push_back(it->first);\n+        }\n+    }\n+}\n+\n+bool CHDKeyStore::PrivateKeyDerivation(const std::string keypath, const HDChainID& chainID, CExtKey& extKeyOut) const\n+{\n+    std::vector<std::string> pathFragments;\n+    boost::split(pathFragments, keypath, boost::is_any_of(\"/\"));\n+\n+    CExtKey extKey;\n+    CExtKey parentKey;\n+    BOOST_FOREACH(std::string fragment, pathFragments)\n+    {\n+        bool harden = false;\n+        if (*fragment.rbegin() == '\\'' || *fragment.rbegin() == 'h')\n+        {\n+            harden = true;\n+            fragment = fragment.substr(0,fragment.size()-1);\n+        }\n+\n+        if (fragment == \"m\")\n+        {\n+            CExtKey bip32MasterKey;\n+            CKeyingMaterial masterSeed;\n+\n+            // get master seed\n+            if (!GetMasterSeed(chainID, masterSeed))\n+                return false;\n+\n+            bip32MasterKey.SetMaster(&masterSeed[0], masterSeed.size());\n+            parentKey = bip32MasterKey;\n+        }\n+        else if (fragment == \"c\")\n+            return false;\n+        else\n+        {\n+            CExtKey childKey;\n+            int32_t nIndex;\n+            if (!ParseInt32(fragment,&nIndex))\n+                return false;\n+            parentKey.Derive(childKey, (harden ? 0x80000000 : 0)+nIndex);\n+            parentKey = childKey;\n+        }\n+    }\n+    extKeyOut = parentKey;\n+    return true;\n+}\n+\n+bool CHDKeyStore::DeriveKey(const HDChainID chainID, const std::string keypath, CKey& keyOut) const\n+{\n+    //this methode requires no locking\n+    CExtKey extKeyOut;\n+    if (!PrivateKeyDerivation(keypath, chainID, extKeyOut))\n+        return false;\n+\n+    keyOut = extKeyOut.key;\n+    return true;\n+}\n+\n+bool CHDKeyStore::DeriveKeyAtIndex(const HDChainID chainID, CKey& keyOut, std::string& keypathOut, unsigned int nIndex, bool internal) const\n+{\n+    CHDChain hdChain;\n+    if (!GetChain(chainID, hdChain))\n+        return false;\n+\n+    if (nIndex >= 0x80000000)\n+        throw std::runtime_error(\"CHDKeyStore::DeriveKeyAtIndex(): No more available keys!\");\n+\n+    keypathOut = hdChain.keypathTemplate;\n+    boost::replace_all(keypathOut, \"c\", itostr(internal)); //replace the chain switch index\n+\n+    keypathOut += \"/\"+itostr(nIndex)+\"'\"; //add hardened flag\n+\n+    CExtKey extKeyOut;\n+    if (!PrivateKeyDerivation(keypathOut, chainID, extKeyOut))\n+        throw std::runtime_error(\"CHDKeyStore::DeriveKeyAtIndex(): Private Key Derivation failed!\");\n+    keyOut = extKeyOut.key;\n+\n+    return true;\n+}\n+\n+unsigned int CHDKeyStore::GetNextChildIndex(const HDChainID& chainID, bool internal)\n+{\n+    std::vector<unsigned int> vIndices;\n+\n+    {\n+        LOCK(cs_KeyStore);\n+\n+        CHDChain hdChain;\n+        if (!GetChain(chainID, hdChain))\n+            return false;\n+\n+        std::string keypathBase = hdChain.keypathTemplate;\n+        boost::replace_all(keypathBase, \"c\", itostr(internal)); //replace the chain switch index\n+\n+        //get next unused child index\n+        for (std::map<CKeyID, CKeyMetadata>::iterator it = mapKeyMetadata.begin(); it != mapKeyMetadata.end(); ++it)\n+        {\n+            //skip non hd keys\n+            if (it->second.keypath.size() == 0)\n+                continue;\n+\n+            std::string keysBaseKeypath = it->second.keypath.substr(0, it->second.keypath.find_last_of(\"/\"));\n+            std::string childStr = it->second.keypath.substr(it->second.keypath.find_last_of(\"/\") + 1);\n+            boost::erase_all(childStr, \"'\");\n+            int32_t nChild;\n+            if(it->second.chainID == chainID &&\n+               it->second.keypath.substr(0, it->second.keypath.find_last_of(\"/\")) == keypathBase &&\n+               ParseInt32(childStr, &nChild))\n+            {\n+                vIndices.push_back(nChild);\n+            }\n+        }\n+    }\n+\n+    for (unsigned int i=0;i<0x80000000;i++)\n+        if (std::find(vIndices.begin(), vIndices.end(), i) == vIndices.end())\n+            return i;\n+\n+    return 0;",
      "path": "src/wallet/hdkeystore.cpp",
      "position": 237,
      "original_position": 237,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "915b69dbde5d01cda9bef94bbda666ff6d92625f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(nit?) technically this only returns when you have 0x80000000 keys already... clearly not a worry, but if reached should probably barf\n",
      "created_at": "2016-03-11T21:49:34Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55893741",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55893741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 237,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55894444",
      "pull_request_review_id": null,
      "id": 55894444,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODk0NDQ0",
      "diff_hunk": "@@ -1526,6 +1528,46 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             // Create new keyUser and set as default key\n             RandAddSeedPerfmon();\n \n+            if (GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET))",
      "path": "src/init.cpp",
      "position": 4,
      "original_position": 13,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "915b69dbde5d01cda9bef94bbda666ff6d92625f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd still prefer the user is warned that they are trying to use hd but already have a running non-hd wallet or simply be disallowed.\n",
      "created_at": "2016-03-11T21:54:42Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55894444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55894444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1493,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55895424",
      "pull_request_review_id": null,
      "id": 55895424,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODk1NDI0",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 4)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        connect_nodes_bi(self.nodes,0,1)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        print \"Mining blocks...\"\n+\n+        encrypt = True\n+        self.nodes[0].generate(1)\n+\n+        walletinfo = self.nodes[0].getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 50)\n+        assert_equal(walletinfo['balance'], 0)\n+        self.nodes[0].generate(100)\n+        self.sync_all()\n+\n+        adr = self.nodes[0].getnewaddress(\"\", True)\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        adr = self.nodes[0].getnewaddress(\"\", True)\n+        assert_equal(adr['address'], \"muWGGSSma5s7TjHbT5fCKunkoyBaF1uy8D\");\n+        assert_equal(adr['keypath'], \"m/0'/4'\");\n+        \n+        stop_node(self.nodes[0], 0)\n+        stop_node(self.nodes[1], 1)\n+        \n+        #try to recover over master seed\n+        os.remove(self.options.tmpdir + \"/node0/regtest/wallet.dat\")\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        adr = self.nodes[0].getnewaddress(\"\", True)\n+        assert_equal(adr['address'], \"mqfCLB8d4vP1BTyMo88WzjT9VJG4NWEbni\");\n+        assert_equal(adr['keypath'], \"m/0'/1'\");\n+        \n+        adr = self.nodes[0].getnewaddress(\"\", True)\n+        assert_equal(adr['address'], \"n4mEdLhWJgDHvsChPcttAkqQSMrndhzdAv\");\n+        assert_equal(adr['keypath'], \"m/0'/2'\");\n+\n+        adr = self.nodes[0].getnewaddress(\"\", True)\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        print \"encrypt wallet\"\n+        self.nodes[0].encryptwallet(\"test\")\n+        bitcoind_processes[0].wait()\n+        del bitcoind_processes[0]\n+\n+        self.nodes[0] = start_node(0, self.options.tmpdir, extra_args=['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'])\n+        self.nodes[0].walletpassphrase(\"test\", 100)\n+        adr = self.nodes[0].getnewaddress(\"\", True)\n+        assert_equal(adr['address'], \"n32WRiXX6P6KFkdGV37CAbsTjLcxt4VhRY\");\n+        assert_equal(adr['keypath'], \"m/0'/5'\");",
      "path": "qa/rpc-tests/hdwallet.py",
      "position": 75,
      "original_position": 75,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "915b69dbde5d01cda9bef94bbda666ff6d92625f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm missing the jump from 3 to 5 here.\n",
      "created_at": "2016-03-11T22:02:25Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55895424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55895424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55968892",
      "pull_request_review_id": null,
      "id": 55968892,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY4ODky",
      "diff_hunk": "@@ -1465,6 +1467,40 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             // Create new keyUser and set as default key\n             RandAddSeedPerfmon();\n \n+            if (GetBoolArg(\"-usehd\", true))\n+            {\n+                // create a new seed / chain\n+                // default keypath is m/c'/k'\n+                // results in m/0'/0' for the first external key\n+                // results in m/1'/0' for the first internal key\n+                // results in m/0'/1' for the second external key\n+\n+                CHDChain chain;\n+                chain.keypathTemplate = \"m/c'\";\n+                \n+                CKey key;\n+                key.MakeNewKey(true); //generate a seed\n+                CKeyingMaterial seed = CKeyingMaterial(32);\n+                seed.assign(key.begin(), key.end());\n+\n+                if (GetArg(\"-hdseed\", \"\").size() == 64)",
      "path": "src/init.cpp",
      "position": 20,
      "original_position": 29,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.\n",
      "created_at": "2016-03-14T08:46:13Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55968892",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55968892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1509,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55969388",
      "pull_request_review_id": null,
      "id": 55969388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY5Mzg4",
      "diff_hunk": "@@ -1526,6 +1528,46 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             // Create new keyUser and set as default key\n             RandAddSeedPerfmon();\n \n+            if (GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET))",
      "path": "src/init.cpp",
      "position": 4,
      "original_position": 13,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "915b69dbde5d01cda9bef94bbda666ff6d92625f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right. This PR currently only allows to use hd when no wallet.dat file is present (wallet creation phase). IMO this could be a save start,... first release that includes HD option should probably silently offer the feature with a more or less in-prominent startup argument.\nBut agree, if someone passes `-usehd` while the current wallet is present and does not support HD, we should warn.\n",
      "created_at": "2016-03-14T08:51:57Z",
      "updated_at": "2016-03-14T08:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r55969388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55969388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1493,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56028700",
      "pull_request_review_id": null,
      "id": 56028700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI4NzAw",
      "diff_hunk": "@@ -126,6 +130,13 @@ UniValue getnewaddress(const UniValue& params, bool fHelp)\n \n     pwalletMain->SetAddressBook(keyID, strAccount, \"receive\");\n \n+    if (GetBoolArg(\"-usehd\", true) && showDetails && pwalletMain->mapKeyMetadata[keyID].keypath.size() > 0)\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        result.pushKV(\"address\", CBitcoinAddress(keyID).ToString());\n+        result.pushKV(\"keypath\", pwalletMain->mapKeyMetadata[keyID].keypath);\n+        return result;\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 41,
      "original_position": 40,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think @luke-jr  meant prescriptively that the output should be same format regardless. \n",
      "created_at": "2016-03-14T16:24:33Z",
      "updated_at": "2016-03-14T16:24:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r56028700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56028700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56115527",
      "pull_request_review_id": null,
      "id": 56115527,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE1NTI3",
      "diff_hunk": "@@ -126,6 +130,13 @@ UniValue getnewaddress(const UniValue& params, bool fHelp)\n \n     pwalletMain->SetAddressBook(keyID, strAccount, \"receive\");\n \n+    if (GetBoolArg(\"-usehd\", true) && showDetails && pwalletMain->mapKeyMetadata[keyID].keypath.size() > 0)\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        result.pushKV(\"address\", CBitcoinAddress(keyID).ToString());\n+        result.pushKV(\"keypath\", pwalletMain->mapKeyMetadata[keyID].keypath);\n+        return result;\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 41,
      "original_position": 40,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes\n",
      "created_at": "2016-03-15T05:03:23Z",
      "updated_at": "2016-03-15T05:03:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r56115527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56115527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746473",
      "pull_request_review_id": 157993130,
      "id": 219746473,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTc0NjQ3Mw==",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 49885671,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oky",
      "created_at": "2018-09-24T07:33:55Z",
      "updated_at": "2018-09-24T07:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r219746473",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746481",
      "pull_request_review_id": 157993130,
      "id": 219746481,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTc0NjQ4MQ==",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 49885671,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oky",
      "created_at": "2018-09-24T07:33:57Z",
      "updated_at": "2018-09-24T07:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r219746481",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746487",
      "pull_request_review_id": 157993140,
      "id": 219746487,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTc0NjQ4Nw==",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 49885671,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oky",
      "created_at": "2018-09-24T07:33:59Z",
      "updated_at": "2018-09-24T07:33:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r219746487",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746489",
      "pull_request_review_id": 157993143,
      "id": 219746489,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTc0NjQ4OQ==",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 49885671,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oky",
      "created_at": "2018-09-24T07:33:59Z",
      "updated_at": "2018-09-24T07:33:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r219746489",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746490",
      "pull_request_review_id": 157993144,
      "id": 219746490,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTc0NjQ5MA==",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 49885671,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oky",
      "created_at": "2018-09-24T07:34:00Z",
      "updated_at": "2018-09-24T07:34:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r219746490",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746491",
      "pull_request_review_id": 157993145,
      "id": 219746491,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTc0NjQ5MQ==",
      "diff_hunk": "@@ -954,6 +969,89 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::AddMasterSeed(const HDChainID& chainID, const CKeyingMaterial& masterSeed, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!IsCrypted())\n+    {\n+        CHDKeyStore::AddMasterSeed(chainID, masterSeed);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDMasterSeed(chainID, masterSeed))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+    else\n+    {\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial emptyKey;\n+        if (!EncryptSeed(emptyKey, masterSeed, chainID, vchCryptedSecret))\n+            return false;\n+        AddCryptedMasterSeed(chainID, vchCryptedSecret);\n+\n+        if (!memonly && !CWalletDB(strWalletFile).WriteHDCryptedMasterSeed(chainID, vchCryptedSecret))\n+            throw runtime_error(\"AddMasterSeed(): writing master seed failed\");\n+    }\n+\n+    return true;\n+}\n+\n+bool CWallet::AddHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    CHDKeyStore::AddHDChain(chain);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+    return true;\n+}\n+\n+bool CWallet::EncryptHDSeeds(CKeyingMaterial& vMasterKeyIn)\n+{\n+    EncryptSeeds(vMasterKeyIn);\n+\n+    std::vector<HDChainID> chainIds;\n+    GetAvailableChainIDs(chainIds);",
      "path": "src/wallet/wallet.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 49885671,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oky",
      "created_at": "2018-09-24T07:34:00Z",
      "updated_at": "2018-09-24T07:34:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r219746491",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219746491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1100,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220273383",
      "pull_request_review_id": 158643564,
      "id": 220273383,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDI3MzM4Mw==",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 4)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        connect_nodes_bi(self.nodes,0,1)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        print \"Mining blocks...\"\n+\n+        encrypt = True\n+        self.nodes[0].generate(1)\n+\n+        walletinfo = self.nodes[0].getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 50)\n+        assert_equal(walletinfo['balance'], 0)\n+        self.nodes[0].generate(100)\n+        self.sync_all()\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"muWGGSSma5s7TjHbT5fCKunkoyBaF1uy8D\");\n+        assert_equal(adr['keypath'], \"m/0'/4'\");\n+        \n+        stop_node(self.nodes[0], 0)\n+        stop_node(self.nodes[1], 1)\n+        \n+        #try to recover over master seed\n+        os.remove(self.options.tmpdir + \"/node0/regtest/wallet.dat\")\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mqfCLB8d4vP1BTyMo88WzjT9VJG4NWEbni\");\n+        assert_equal(adr['keypath'], \"m/0'/1'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"n4mEdLhWJgDHvsChPcttAkqQSMrndhzdAv\");\n+        assert_equal(adr['keypath'], \"m/0'/2'\");\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        print \"encrypt wallet\"\n+        self.nodes[0].encryptwallet(\"test\")\n+        bitcoind_processes[0].wait()\n+        del bitcoind_processes[0]",
      "path": "qa/rpc-tests/hdwallet.py",
      "position": 69,
      "original_position": 69,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 48686227,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Riky",
      "created_at": "2018-09-25T16:56:46Z",
      "updated_at": "2018-09-25T16:56:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r220273383",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220273383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220273387",
      "pull_request_review_id": 158643564,
      "id": 220273387,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDI3MzM4Nw==",
      "diff_hunk": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 4)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        connect_nodes_bi(self.nodes,0,1)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        print \"Mining blocks...\"\n+\n+        encrypt = True\n+        self.nodes[0].generate(1)\n+\n+        walletinfo = self.nodes[0].getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 50)\n+        assert_equal(walletinfo['balance'], 0)\n+        self.nodes[0].generate(100)\n+        self.sync_all()\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"muWGGSSma5s7TjHbT5fCKunkoyBaF1uy8D\");\n+        assert_equal(adr['keypath'], \"m/0'/4'\");\n+        \n+        stop_node(self.nodes[0], 0)\n+        stop_node(self.nodes[1], 1)\n+        \n+        #try to recover over master seed\n+        os.remove(self.options.tmpdir + \"/node0/regtest/wallet.dat\")\n+        self.nodes = start_nodes(2, self.options.tmpdir, extra_args=[\n+            ['-hdseed=f81a7a4efdc29e54dcc739df87315a756038d0b68fbc4880ffbbbef222152e6a'],\n+            []\n+            ])\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mqfCLB8d4vP1BTyMo88WzjT9VJG4NWEbni\");\n+        assert_equal(adr['keypath'], \"m/0'/1'\");\n+        \n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"n4mEdLhWJgDHvsChPcttAkqQSMrndhzdAv\");\n+        assert_equal(adr['keypath'], \"m/0'/2'\");\n+\n+        adr = self.nodes[0].getnewaddress()\n+        assert_equal(adr['address'], \"mtGrK6eX8uhW6FhoUzyQmxFBLxjZRhcfQJ\");\n+        assert_equal(adr['keypath'], \"m/0'/3'\");\n+        \n+        print \"encrypt wallet\"\n+        self.nodes[0].encryptwallet(\"test\")\n+        bitcoind_processes[0].wait()\n+        del bitcoind_processes[0]",
      "path": "qa/rpc-tests/hdwallet.py",
      "position": 69,
      "original_position": 69,
      "commit_id": "3494217323059c13faa561d37563c48c144448ad",
      "original_commit_id": "42d2a1a37bd28c0697f255a731d39be0cbb1cbe2",
      "in_reply_to_id": 48686227,
      "user": {
        "login": "ali8889",
        "id": 39613535,
        "node_id": "MDQ6VXNlcjM5NjEzNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39613535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ali8889",
        "html_url": "https://github.com/ali8889",
        "followers_url": "https://api.github.com/users/ali8889/followers",
        "following_url": "https://api.github.com/users/ali8889/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ali8889/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ali8889/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ali8889/subscriptions",
        "organizations_url": "https://api.github.com/users/ali8889/orgs",
        "repos_url": "https://api.github.com/users/ali8889/repos",
        "events_url": "https://api.github.com/users/ali8889/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ali8889/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Riky",
      "created_at": "2018-09-25T16:56:47Z",
      "updated_at": "2018-09-25T16:56:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7273#discussion_r220273387",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220273387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}