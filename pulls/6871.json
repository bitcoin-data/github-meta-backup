{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871",
    "id": 48520102,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg1MjAxMDI=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6871",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/6871.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/6871.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/63b5840257a0b892228dfa9cce943b5a2bb94e1a",
    "number": 6871,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "nSequence-based Full-RBF opt-in",
    "user": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Replaces transactions already in the mempool if a new transaction seen with a higher fee, specifically both a higher fee per KB and a higher absolute fee. Children are evaluated for replacement as well, using the mempool package tracking to calculate replaced fees/size efficiently. Transactions opt-in to transaction replacement by setting nSequence < maxint-1 on at least one input. (which no wallet currently does)\n\nNo first-seen-safe functionality, but that can easily be added as a separate pull if there's demand from wallet vendors.\n\nIf anyone feels like converting the tests to the internal python library used by the qa/rpc-tests, pull-reqs accepted.\n",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/19",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/19",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/19/labels",
      "id": 1092458,
      "node_id": "MDk6TWlsZXN0b25lMTA5MjQ1OA==",
      "number": 19,
      "state": "closed",
      "title": "0.12.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 78,
      "created_at": "2015-05-01T12:31:35Z",
      "updated_at": "2016-09-26T14:08:41Z",
      "closed_at": "2016-08-16T10:17:40Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2015-10-22T22:11:42Z",
    "updated_at": "2021-09-08T11:03:31Z",
    "closed_at": "2015-11-27T12:21:00Z",
    "mergeable_state": "unknown",
    "merged_at": "2015-11-27T12:21:00Z",
    "merge_commit_sha": "b36a863a70a67d74ee4b66d5584cd734e9e07a9d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "petertodd:2015-10-rbf-with-opt-out",
      "ref": "2015-10-rbf-with-opt-out",
      "sha": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 5992112,
        "node_id": "MDEwOlJlcG9zaXRvcnk1OTkyMTEy",
        "name": "bitcoin",
        "full_name": "petertodd/bitcoin",
        "owner": {
          "login": "petertodd",
          "id": 7042,
          "node_id": "MDQ6VXNlcjcwNDI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/petertodd",
          "html_url": "https://github.com/petertodd",
          "followers_url": "https://api.github.com/users/petertodd/followers",
          "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
          "organizations_url": "https://api.github.com/users/petertodd/orgs",
          "repos_url": "https://api.github.com/users/petertodd/repos",
          "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/petertodd/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/petertodd/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/petertodd/bitcoin",
        "archive_url": "https://api.github.com/repos/petertodd/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/petertodd/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/petertodd/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/petertodd/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/petertodd/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/petertodd/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/petertodd/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/petertodd/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/petertodd/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/petertodd/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/petertodd/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/petertodd/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/petertodd/bitcoin/events",
        "forks_url": "https://api.github.com/repos/petertodd/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/petertodd/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/petertodd/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/petertodd/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/petertodd/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/petertodd/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/petertodd/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/petertodd/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/petertodd/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/petertodd/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/petertodd/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/petertodd/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/petertodd/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/petertodd/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/petertodd/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/petertodd/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:petertodd/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/petertodd/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/petertodd/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/petertodd/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/petertodd/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/petertodd/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/petertodd/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/petertodd/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/petertodd/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/petertodd/bitcoin/hooks",
        "svn_url": "https://github.com/petertodd/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 6,
        "stargazers_count": 20,
        "watchers_count": 20,
        "size": 215368,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-26T23:38:42Z",
        "created_at": "2012-09-28T03:31:40Z",
        "updated_at": "2023-06-01T22:33:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1089,
    "deletions": 9,
    "changed_files": 7,
    "commits": 9,
    "review_comments": 30,
    "comments": 45
  },
  "events": [
    {
      "event": "commented",
      "id": 150370804,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3MDgwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150370804",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:13:46Z",
      "updated_at": "2015-10-22T22:13:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Feedback I heard from wallet vendors previously was that FSS was burdensome (needed extra txins, and so less useful).\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150370804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 150371262,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3MTI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150371262",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:16:07Z",
      "updated_at": "2015-10-22T22:16:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gmaxwell Same feedback I've heard too.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150371262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 443199930,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQzMTk5OTMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443199930",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:16:07Z"
    },
    {
      "event": "subscribed",
      "id": 443199931,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MzE5OTkzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443199931",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:16:07Z"
    },
    {
      "event": "commented",
      "id": 150375556,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3NTU1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150375556",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:37:23Z",
      "updated_at": "2015-10-22T22:37:23Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150375556",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 150377435,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3NzQzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150377435",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:48:16Z",
      "updated_at": "2015-10-22T22:48:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. \n",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150377435",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 150377726,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3NzcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150377726",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:50:02Z",
      "updated_at": "2015-10-22T22:50:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150377726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 150377871,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3Nzg3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150377871",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:50:57Z",
      "updated_at": "2015-10-22T22:51:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "How does this work with CPFP, and descendent transactions (e.g a chained transaction that could have its based replaced?)\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150377871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 150379108,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3OTEwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150379108",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:59:34Z",
      "updated_at": "2015-10-22T22:59:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dcousens What do you mean \"how does this work\" with CPFP? CPFP isn't implemented in Bitcoin Core, so there's nothing to affect.\n\nNow, when replacing a tx with children, the fees and size of all children are taken into account before deciding to replace or not.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150379108",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 443232166,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQzMjMyMTY2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443232166",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:59:34Z"
    },
    {
      "event": "subscribed",
      "id": 443232167,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MzIzMjE2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443232167",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T22:59:34Z"
    },
    {
      "event": "commented",
      "id": 150379560,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3OTU2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150379560",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T23:02:39Z",
      "updated_at": "2015-10-22T23:04:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @dcousens What do you mean \"how does this work\" with CPFP? CPFP isn't implemented in Bitcoin Core, so there's nothing to affect.\n\nI meant conceptually, sorry.  CPFP is something that was on the roadmap AFAIK?\n\n> all children are taken into account before deciding to replace or not.\n\nBy taken into account, do you mean that you have to have a higher fee than all subsequent children to replace?\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150379560",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 443234086,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQzMjM0MDg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443234086",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T23:02:39Z"
    },
    {
      "event": "subscribed",
      "id": 443234087,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MzIzNDA4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443234087",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T23:02:39Z"
    },
    {
      "event": "commented",
      "id": 150379993,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM3OTk5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150379993",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T23:05:22Z",
      "updated_at": "2015-10-22T23:05:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "> By taken into account, do you mean that you have to have a higher fee than all subsequent children?\n\nYes.\n\nOnly extremely sophisticated CPFP that does relaying of whole packages of transactions based on fees paid by children is affected by RBF, and no-one has any plans to actually implement that yet.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150379993",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 443242886,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQzMjQyODg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443242886",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T23:17:43Z"
    },
    {
      "event": "renamed",
      "id": 443367447,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDQzMzY3NDQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443367447",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-23T02:52:32Z",
      "rename": {
        "from": "Full-RBF with opt-out",
        "to": "nSequence-based Full-RBF opt-in"
      }
    },
    {
      "event": "commented",
      "id": 150491410,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDQ5MTQxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150491410",
      "actor": {
        "login": "greenaddress",
        "id": 5269298,
        "node_id": "MDQ6VXNlcjUyNjkyOTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/greenaddress",
        "html_url": "https://github.com/greenaddress",
        "followers_url": "https://api.github.com/users/greenaddress/followers",
        "following_url": "https://api.github.com/users/greenaddress/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/greenaddress/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/greenaddress/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
        "organizations_url": "https://api.github.com/users/greenaddress/orgs",
        "repos_url": "https://api.github.com/users/greenaddress/repos",
        "events_url": "https://api.github.com/users/greenaddress/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/greenaddress/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-23T06:51:13Z",
      "updated_at": "2015-10-23T06:51:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\n",
      "user": {
        "login": "greenaddress",
        "id": 5269298,
        "node_id": "MDQ6VXNlcjUyNjkyOTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/greenaddress",
        "html_url": "https://github.com/greenaddress",
        "followers_url": "https://api.github.com/users/greenaddress/followers",
        "following_url": "https://api.github.com/users/greenaddress/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/greenaddress/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/greenaddress/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
        "organizations_url": "https://api.github.com/users/greenaddress/orgs",
        "repos_url": "https://api.github.com/users/greenaddress/repos",
        "events_url": "https://api.github.com/users/greenaddress/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/greenaddress/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150491410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 150526220,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUyNjIyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150526220",
      "actor": {
        "login": "rubensayshi",
        "id": 649160,
        "node_id": "MDQ6VXNlcjY0OTE2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rubensayshi",
        "html_url": "https://github.com/rubensayshi",
        "followers_url": "https://api.github.com/users/rubensayshi/followers",
        "following_url": "https://api.github.com/users/rubensayshi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rubensayshi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rubensayshi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rubensayshi/subscriptions",
        "organizations_url": "https://api.github.com/users/rubensayshi/orgs",
        "repos_url": "https://api.github.com/users/rubensayshi/repos",
        "events_url": "https://api.github.com/users/rubensayshi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rubensayshi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-23T09:24:01Z",
      "updated_at": "2015-10-23T09:24:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK\n",
      "user": {
        "login": "rubensayshi",
        "id": 649160,
        "node_id": "MDQ6VXNlcjY0OTE2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rubensayshi",
        "html_url": "https://github.com/rubensayshi",
        "followers_url": "https://api.github.com/users/rubensayshi/followers",
        "following_url": "https://api.github.com/users/rubensayshi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rubensayshi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rubensayshi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rubensayshi/subscriptions",
        "organizations_url": "https://api.github.com/users/rubensayshi/orgs",
        "repos_url": "https://api.github.com/users/rubensayshi/repos",
        "events_url": "https://api.github.com/users/rubensayshi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rubensayshi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150526220",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "labeled",
      "id": 443658218,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0MzY1ODIxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/443658218",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-23T10:17:22Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 150548182,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDU0ODE4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150548182",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-23T11:28:39Z",
      "updated_at": "2015-10-23T11:28:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-150548182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MTQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 151130336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTEzMDMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151130336",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-26T13:17:56Z",
      "updated_at": "2015-10-26T13:17:56Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. FSS is a pain.\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-151130336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MjI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MjM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MjQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MjU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4Mjc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 153828785,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzgyODc4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/153828785",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-04T18:52:27Z",
      "updated_at": "2015-11-04T18:52:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added @sdaftuar's changes from https://github.com/petertodd/bitcoin/pull/4#issuecomment-152636458\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-153828785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 454846167,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDU0ODQ2MTY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/454846167",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-04T18:52:27Z"
    },
    {
      "event": "subscribed",
      "id": 454846168,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1NDg0NjE2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/454846168",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-04T18:52:27Z"
    },
    {
      "event": "commented",
      "id": 153916023,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkxNjAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/153916023",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T00:36:49Z",
      "updated_at": "2015-11-05T00:37:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Great work @sdaftuar on the added tests, once-over ACK\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-153916023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 455187956,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDU1MTg3OTU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/455187956",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T00:36:49Z"
    },
    {
      "event": "subscribed",
      "id": 455187957,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1NTE4Nzk1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/455187957",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T00:36:49Z"
    },
    {
      "event": "commented",
      "id": 154127386,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDEyNzM4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154127386",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T17:19:29Z",
      "updated_at": "2015-11-05T17:19:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "needs rebase\n",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-154127386",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "milestoned",
      "id": 456159706,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ1NjE1OTcwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/456159706",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T20:06:14Z",
      "milestone": {
        "title": "0.12.0"
      }
    },
    {
      "event": "commented",
      "id": 155483936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQ4MzkzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155483936",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T16:50:50Z",
      "updated_at": "2015-11-10T16:50:50Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155483936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 155485328,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQ4NTMyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155485328",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T16:56:06Z",
      "updated_at": "2015-11-10T16:56:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155485328",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 460478735,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYwNDc4NzM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460478735",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:12:50Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODkxZjg3MGQ2OGQ5MDQwOGFhNWNlNWI1OTdmYjU3NGYyZDJjYmNh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5891f870d68d90408aa5ce5b597fb574f2d2cbca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5891f870d68d90408aa5ce5b597fb574f2d2cbca",
      "tree": {
        "sha": "eb7c975bcace8a191f1d88db8a78c73c58ccb8fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb7c975bcace8a191f1d88db8a78c73c58ccb8fe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
          "sha": "de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/de7d4591a7ce064ba64c36ccb729f1d94c21aa90"
        }
      ],
      "message": "Add opt-in full-RBF to mempool\n\nReplaces transactions already in the mempool if a new transaction seen\nwith a higher fee, specifically both a higher fee per KB and a higher\nabsolute fee. Children are evaluateed for replacement as well, using the\nmempool package tracking to calculate replaced fees/size. Transactions\ncan opt-out of transaction replacement by setting nSequence >= maxint-1\non all inputs. (which all wallets do already)",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:06Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-22T18:13:18Z"
      },
      "sha": "5891f870d68d90408aa5ce5b597fb574f2d2cbca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTM3ZTZmYWZkMDg3ODg4NzkxOTNjMTE1NTg4MzM2NDIzNzg2OWYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0137e6fafd08788879193c1155883364237869f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0137e6fafd08788879193c1155883364237869f1",
      "tree": {
        "sha": "e9450f16329e5276b65fc023af81fb6e32e8c0fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9450f16329e5276b65fc023af81fb6e32e8c0fa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5891f870d68d90408aa5ce5b597fb574f2d2cbca",
          "sha": "5891f870d68d90408aa5ce5b597fb574f2d2cbca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5891f870d68d90408aa5ce5b597fb574f2d2cbca"
        }
      ],
      "message": "Add tests for transaction replacement",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:07Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-22T21:05:52Z"
      },
      "sha": "0137e6fafd08788879193c1155883364237869f1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzhjMTlhMDdjMjBhYjYzZjZhNjlmNzQ5NGY0ODYyMDRkOGYyYjdh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc8c19a07c20ab63f6a69f7494f486204d8f2b7a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fc8c19a07c20ab63f6a69f7494f486204d8f2b7a",
      "tree": {
        "sha": "d238f7f8bc0690e2c5f5f813f97c83632f2c3f72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d238f7f8bc0690e2c5f5f813f97c83632f2c3f72"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0137e6fafd08788879193c1155883364237869f1",
          "sha": "0137e6fafd08788879193c1155883364237869f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0137e6fafd08788879193c1155883364237869f1"
        }
      ],
      "message": "Prevent low feerate txs from (directly) replacing high feerate txs\n\nPreviously all conflicting transactions were evaluated as a whole to\ndetermine if the feerate was being increased. This meant that low\nfeerate children pulled the feerate down, potentially allowing a high\ntransaction with a high feerate to be replaced by one with a lower\nfeerate.",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:07Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-30T02:55:48Z"
      },
      "sha": "fc8c19a07c20ab63f6a69f7494f486204d8f2b7a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjcyZWNmZGIzOWY5NzZkZDYxZTM1YmFjYjIyMDQ3ZGEwMmIzNDE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b272ecfdb39f976dd61e35bacb22047da02b3416",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b272ecfdb39f976dd61e35bacb22047da02b3416",
      "tree": {
        "sha": "a9897306c70c1940d610fd0d82bcf4b1a8a11664",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9897306c70c1940d610fd0d82bcf4b1a8a11664"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc8c19a07c20ab63f6a69f7494f486204d8f2b7a",
          "sha": "fc8c19a07c20ab63f6a69f7494f486204d8f2b7a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fc8c19a07c20ab63f6a69f7494f486204d8f2b7a"
        }
      ],
      "message": "Reject replacements that add new unconfirmed inputs",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:07Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-30T04:04:00Z"
      },
      "sha": "b272ecfdb39f976dd61e35bacb22047da02b3416"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2Q5MDQwMDlkYzI1ZGRmZTVkNmM0YTkxYTEzNjczYzhmNWNmODdh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73d904009dc25ddfe5d6c4a91a13673c8f5cf87a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/73d904009dc25ddfe5d6c4a91a13673c8f5cf87a",
      "tree": {
        "sha": "0e4407ac15d3977fbe0efa613876a897a8b62e3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e4407ac15d3977fbe0efa613876a897a8b62e3d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b272ecfdb39f976dd61e35bacb22047da02b3416",
          "sha": "b272ecfdb39f976dd61e35bacb22047da02b3416",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b272ecfdb39f976dd61e35bacb22047da02b3416"
        }
      ],
      "message": "Improve RBF replacement criteria\n\nFix the calculation of conflicting size/conflicting fees.",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:07Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-10-30T02:49:00Z"
      },
      "sha": "73d904009dc25ddfe5d6c4a91a13673c8f5cf87a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDM2N2Q4MzFmZTBmZGI5MjY3OGQwMzU1Mjg2NmMyNjZhYWJiZDgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20367d831fe0fdb92678d03552866c266aabbd83",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/20367d831fe0fdb92678d03552866c266aabbd83",
      "tree": {
        "sha": "4ca3d4559adbe586b0fe896f02015a39a4e0ffb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ca3d4559adbe586b0fe896f02015a39a4e0ffb2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73d904009dc25ddfe5d6c4a91a13673c8f5cf87a",
          "sha": "73d904009dc25ddfe5d6c4a91a13673c8f5cf87a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/73d904009dc25ddfe5d6c4a91a13673c8f5cf87a"
        }
      ],
      "message": "Add test for max replacement limit",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:07Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-10-30T15:26:31Z"
      },
      "sha": "20367d831fe0fdb92678d03552866c266aabbd83"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzIwM2Y1NjA2YmY3NmEyMzM5MjhhZGFmYjBjZTIyZjE1Y2FmN2Fl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97203f5606bf76a233928adafb0ce22f15caf7ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97203f5606bf76a233928adafb0ce22f15caf7ae",
      "tree": {
        "sha": "c74c5b0bfe8c74a54492a4a9c10305f137f9d257",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c74c5b0bfe8c74a54492a4a9c10305f137f9d257"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c74c5b0bfe8c74a54492a4a9c10305f137f9d257\nparent 20367d831fe0fdb92678d03552866c266aabbd83\nauthor Suhas Daftuar <sdaftuar@chaincode.com> 1446231332 -0400\ncommitter Peter Todd <pete@petertodd.org> 1447182886 -0500\n\nPort test to rpc-test framework\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWQkIoXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwM2M2OTBjMzJjOTEwMDI0NjRhMDEwOWZiMWJlZGM1YTlm\nNDEzYmE0ZjY2NTgzOTEvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQwIXyHOf0udwEEAf/RjIbVdNyS+N2LwWZBJmd+FN3\nn6oMv13S9dzaeSJoVea7VnUv2rpQHmptugqQFSwzio/Hk50DyfHWQSsChWXrAdKK\n9miTwvkk+/Oz8CHPUYtQkThrfo/mH+pPSahXFrHGm8fn5GjdgHacSH2HxVq1P/9y\nBpPTMoTk3Xp5wIA4OMBdcRKA0DCCt291X7taY4HGvGcJ+Ik7UFgq4AEGxYy76PW8\nSbKllngrB6e4TUmbtUCpYQhqg+1vky0CIsp4ugUquyy+1Bh2ld1lytaSwAZYSJYN\nvk2dJBviDMBiX3tXi0eMuAJ2LAPbvmj4KXG6td5f8L5PVIbm8flbTM2wtZLoJA==\n=0U6Z\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20367d831fe0fdb92678d03552866c266aabbd83",
          "sha": "20367d831fe0fdb92678d03552866c266aabbd83",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/20367d831fe0fdb92678d03552866c266aabbd83"
        }
      ],
      "message": "Port test to rpc-test framework",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T19:14:46Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-10-30T18:55:32Z"
      },
      "sha": "97203f5606bf76a233928adafb0ce22f15caf7ae"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 460480895,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYwNDgwODk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460480895",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:14:59Z"
    },
    {
      "event": "commented",
      "id": 155535756,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTUzNTc1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155535756",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:15:29Z",
      "updated_at": "2015-11-10T19:15:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155535756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 155536453,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTUzNjQ1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155536453",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:18:26Z",
      "updated_at": "2015-11-10T19:18:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Main question I have right now, is do we want to go with @sdaftuar's somewhat more complex, but more correct, code? (https://github.com/petertodd/bitcoin/commit/20367d831fe0fdb92678d03552866c266aabbd83) Or keep it simple?\n\nI'm happy with either way, and the code is written and looks good to me. Just a matter of risk tolerance.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155536453",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 460484502,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwNDg0NTAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460484502",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:18:26Z"
    },
    {
      "event": "subscribed",
      "id": 460484503,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDQ4NDUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460484503",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:18:26Z"
    },
    {
      "event": "commented",
      "id": 155545632,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU0NTYzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155545632",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:46:05Z",
      "updated_at": "2015-11-10T19:46:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Also, regarding the duplicated tests, I'm inclined to leave my ones in git history for historical reference in case questions come up later, but delete them from from the codebase soon in favor of @sdaftuar's. (possibly even in this pull-req) They're relatively \"battle-tested\" tests. :)\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155545632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 460517889,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwNTE3ODg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460517889",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:46:05Z"
    },
    {
      "event": "subscribed",
      "id": 460517890,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDUxNzg5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/460517890",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T19:46:05Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmEyZjkzNjI5Zjc1ZDE4Mjg3MWYyODhmMDM5NmFmZTZjZGM4NTA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16a2f93629f75d182871f288f0396afe6cdc8504",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/16a2f93629f75d182871f288f0396afe6cdc8504",
      "tree": {
        "sha": "8c35d8db6297f5c195bf7df4ee4f1281810ba671",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c35d8db6297f5c195bf7df4ee4f1281810ba671"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8c35d8db6297f5c195bf7df4ee4f1281810ba671\nparent 97203f5606bf76a233928adafb0ce22f15caf7ae\nauthor Peter Todd <pete@petertodd.org> 1447196286 -0500\ncommitter Peter Todd <pete@petertodd.org> 1447196424 -0500\n\nFix incorrect locking of mempool during RBF replacement\n\nPreviously RemoveStaged() was called without pool.cs held.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWQncsXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwNDAzZGQxOTMwYWI5NDFmOWVjODBiZGIyYjYyYmJkMzRl\nZjI4NGYzZmM0MzliNWIvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQwIXyHOf0udxytwf/Z89nrPdrwQfMlaFO/DxN4Bv6\n9TsloifQXc7ibGM6iL8//+QYEqSFGWzmZxs2SqGWnwOCoR3FqG7BG90J534d8NLu\nyAhgyfeg73kV8LeWlRzHWmmgVPM4YuDALAxjmXiLJlUHliijq6O2+iCp0c/GtjLx\n56r5VSzg2BELadYg/WrQfocMKXmuEy+8MukMOIaKpXrqsOtDCksIoJa7ZxKcTgQh\ntT1cg583cHZzgQss/HiyJQkqMXumc1npMITV3VJJC1cEwDe8u4m75mNQM2gtXSXS\nbkiBmIpD1+nzdcMGTHxfzyjUU3xn2zw8pANaX2p0NM5Lmfmn4E1emvx/KvuSug==\n=6Ih9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97203f5606bf76a233928adafb0ce22f15caf7ae",
          "sha": "97203f5606bf76a233928adafb0ce22f15caf7ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97203f5606bf76a233928adafb0ce22f15caf7ae"
        }
      ],
      "message": "Fix incorrect locking of mempool during RBF replacement\n\nPreviously RemoveStaged() was called without pool.cs held.",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T23:00:24Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-10T22:58:06Z"
      },
      "sha": "16a2f93629f75d182871f288f0396afe6cdc8504"
    },
    {
      "event": "commented",
      "id": 155595438,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU5NTQzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155595438",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-10T23:01:45Z",
      "updated_at": "2015-11-10T23:01:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed test failure due to not having pool.cs lock held.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155595438",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 155693011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTY5MzAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155693011",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T07:32:56Z",
      "updated_at": "2015-11-11T07:32:56Z",
      "author_association": "MEMBER",
      "body": "This will enable replacement for BIP68 transactions?\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155693011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 155730787,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTczMDc4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155730787",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T10:39:28Z",
      "updated_at": "2015-11-11T10:39:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa Yup!\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155730787",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 461148323,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYxMTQ4MzIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/461148323",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T10:39:28Z"
    },
    {
      "event": "subscribed",
      "id": 461148324,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MTE0ODMyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/461148324",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T10:39:28Z"
    },
    {
      "event": "commented",
      "id": 155925679,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTkyNTY3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155925679",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-11T22:10:22Z",
      "updated_at": "2015-11-11T22:10:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Incremental sendmany demo: https://github.com/petertodd/replace-by-fee-tools#incremental-send-many\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-155925679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4Mjg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 156139953,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjEzOTk1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156139953",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-12T15:34:47Z",
      "updated_at": "2015-11-12T15:34:47Z",
      "author_association": "MEMBER",
      "body": "Code review ACK\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-156139953",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 156479123,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjQ3OTEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156479123",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T16:25:23Z",
      "updated_at": "2015-11-13T16:25:23Z",
      "author_association": "MEMBER",
      "body": "After further thought I think we can hold the mempool lock for a bit less time.  I don't think it's possible for transactions to be added or removed from the mempool without holding `cs_main`, and ATMP holds `cs_main` the whole time.  So I think all we need to do so that the mempool shows a consistent view to any RPC calls that only grab the mempool lock is acquire the lock before calling `RemoveStaged()`, and release the lock after calling `addUnchecked()`.  (Hopefully someone can verify my reasoning...)\n\nAnyway I think that's pretty minor either way.\n\nACK.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-156479123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 156523788,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjUyMzc4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156523788",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T18:57:33Z",
      "updated_at": "2015-11-13T18:57:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar That's a good point, though I think changing that should be done in a separate pull-req after this is merged.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-156523788",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 463924216,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYzOTI0MjE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/463924216",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T18:57:33Z"
    },
    {
      "event": "subscribed",
      "id": 463924217,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MzkyNDIxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/463924217",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T18:57:33Z"
    },
    {
      "event": "commented",
      "id": 156537226,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjUzNzIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156537226",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T19:38:04Z",
      "updated_at": "2015-11-13T19:38:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Upgraded to utACK.\n",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-156537226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 157491460,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQ5MTQ2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157491460",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T20:10:18Z",
      "updated_at": "2015-11-17T20:10:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, so far is this goes.  It can only help to allow spenders to declare their intention not to double-spend, or to keep the option open.\n\nIt will be unfortunate if wallets _silently_ make \"replaceable\" the default for new transactions.  This setting should be exposed and visible, although there are different ways it could be labeled.\n\ncc @jonasschnelli\n",
      "user": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157491460",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 467144361,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3MTQ0MzYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467144361",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T20:10:18Z"
    },
    {
      "event": "subscribed",
      "id": 467144362,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzE0NDM2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467144362",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T20:10:18Z"
    },
    {
      "event": "commented",
      "id": 157495164,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQ5NTE2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157495164",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T20:20:16Z",
      "updated_at": "2015-11-17T20:20:16Z",
      "author_association": "MEMBER",
      "body": "In response to @dgenr8 's comment, I do think we need to make it very clear that there is still no such thing as technically \"declaring an intention not to double-spend\". Strongly prefer adding a full RBF option, even if unwise for miners to deploy today.\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157495164",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 467156412,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3MTU2NDEy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467156412",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T20:20:16Z"
    },
    {
      "event": "subscribed",
      "id": 467156414,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzE1NjQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467156414",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T20:20:16Z"
    },
    {
      "event": "commented",
      "id": 157513575,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzUxMzU3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157513575",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T21:30:53Z",
      "updated_at": "2015-11-17T21:30:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dgenr8 The nSequence for opt-in is one that no wallets today use by default.\n\nIn any case, indicating an intention not to double-spend isn't something wallets should really be doing today, given their poor track record of not double-spending; there are many failure modes where wallets today will double-spend a transaction inadvertently, something you can easily see if you watch double-spend logs. This is why any type of doublespend punishment scheme needs to be carefully engineered, and definitely not used with standard wallets.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157513575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 467228424,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3MjI4NDI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467228424",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T21:30:53Z"
    },
    {
      "event": "subscribed",
      "id": 467228425,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzIyODQyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467228425",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T21:30:53Z"
    },
    {
      "event": "commented",
      "id": 157523647,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzUyMzY0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157523647",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T22:04:16Z",
      "updated_at": "2015-11-17T22:06:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think I can phrase my point better.  Allowing spenders to declare their intention to double-spend, if they should later so desire, is helpful to 0-conf-accepting receivers because they can be sure not to rely on the transaction before confirmation.\n\nThe 72-hour expiration that will soon be policy is also helpful because it gives a better option to those who have stuck transactions (even those without opt-in RBF set): \"wait 72 hours and try again.\"  This is a lot better than \"download @petertodd's tools,\" \"use rawtxes,\" etc.\n",
      "user": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157523647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 467263603,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3MjYzNjAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467263603",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T22:04:16Z"
    },
    {
      "event": "subscribed",
      "id": 467263604,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzI2MzYwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467263604",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T22:04:16Z"
    },
    {
      "event": "commented",
      "id": 157526464,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzUyNjQ2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157526464",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T22:14:51Z",
      "updated_at": "2015-11-17T22:14:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Well, with this you don't have to wait anything. You can pay more fees at any point to \"try again\", that's kind of the whole point of RBF.\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157526464",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 157570808,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU3MDgwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157570808",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T01:47:29Z",
      "updated_at": "2015-11-18T01:47:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dgenr8 Does the advice \"wait 72 hours and try again\" even work right now in Bitcoin Core? IIRC we don't delete transactions from the wallet itself on that timeout.\n\nAnyway, while this pull-req doesn't change any wallet behavior, subsequent pull-reqs of course can of course add the required wallet code to unstick stuck transactions.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157570808",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 467446797,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3NDQ2Nzk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467446797",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T01:47:29Z"
    },
    {
      "event": "subscribed",
      "id": 467446798,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzQ0Njc5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467446798",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T01:47:29Z"
    },
    {
      "event": "commented",
      "id": 157740068,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzc0MDA2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157740068",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T14:58:50Z",
      "updated_at": "2015-11-30T06:45:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "@petertodd Opt-in and expiration both suggest new wallet functions:\n\nOn new tx:\n- [ ] Mark transaction as replaceable (receiver must wait for confirmation)\n\nOn replaceable or expired unconfirmed tx:\n- Send new version with higher fees\n- Send new version that pays myself instead  (permanently cancels original)\n- Forget [release inputs]\n\nOn forgotten transactions with inputs still unspent:\n- Unforget\n",
      "user": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157740068",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 468025185,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY4MDI1MTg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468025185",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T14:58:50Z"
    },
    {
      "event": "subscribed",
      "id": 468025186,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2ODAyNTE4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468025186",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T14:58:50Z"
    },
    {
      "event": "commented",
      "id": 157758745,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzc1ODc0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157758745",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T15:59:34Z",
      "updated_at": "2015-11-18T16:01:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dgenr8 That analysis seems about right. I would personally prefer that the replaceable option was always true (on non-raw transactions, obviously) for Bitcoin Core. But those are changes to the wallet that as explained by @petertodd are out of the scope of this PR. \n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157758745",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 468096969,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY4MDk2OTY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468096969",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T15:59:34Z"
    },
    {
      "event": "subscribed",
      "id": 468096970,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2ODA5Njk3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468096970",
      "actor": {
        "login": "dgenr8",
        "id": 4284124,
        "node_id": "MDQ6VXNlcjQyODQxMjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgenr8",
        "html_url": "https://github.com/dgenr8",
        "followers_url": "https://api.github.com/users/dgenr8/followers",
        "following_url": "https://api.github.com/users/dgenr8/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgenr8/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgenr8/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
        "organizations_url": "https://api.github.com/users/dgenr8/orgs",
        "repos_url": "https://api.github.com/users/dgenr8/repos",
        "events_url": "https://api.github.com/users/dgenr8/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgenr8/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T15:59:34Z"
    },
    {
      "event": "mentioned",
      "id": 468096971,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY4MDk2OTcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468096971",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T15:59:34Z"
    },
    {
      "event": "subscribed",
      "id": 468096972,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2ODA5Njk3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/468096972",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T15:59:34Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MzE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 157932605,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzkzMjYwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157932605",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-19T02:48:35Z",
      "updated_at": "2015-11-19T02:48:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK, haven't had time for code review\n",
      "user": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-157932605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MzM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 158189462,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE4OTQ2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158189462",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-19T20:32:59Z",
      "updated_at": "2015-11-19T20:32:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "CodeReview ACK.\n(sidenote: it's always nice to review well documented PRs!)\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-158189462",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 470436623,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwNDM2NjIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470436623",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T14:29:56Z"
    },
    {
      "event": "subscribed",
      "id": 470436624,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDQzNjYyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470436624",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T14:29:56Z"
    },
    {
      "event": "mentioned",
      "id": 470799660,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwNzk5NjYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470799660",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:05:16Z"
    },
    {
      "event": "subscribed",
      "id": 470799661,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDc5OTY2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470799661",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:05:16Z"
    },
    {
      "event": "mentioned",
      "id": 470799675,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwNzk5Njc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470799675",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:05:17Z"
    },
    {
      "event": "subscribed",
      "id": 470799676,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDc5OTY3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470799676",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:05:17Z"
    },
    {
      "event": "commented",
      "id": 158511352,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODUxMTM1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158511352",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:06:58Z",
      "updated_at": "2015-11-20T20:06:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jonasschnelli Thanks! Yeah, apparently my life long dream was actually to become a technical writer, not a programmer. :)\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-158511352",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 470801149,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwODAxMTQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470801149",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:06:58Z"
    },
    {
      "event": "subscribed",
      "id": 470801150,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDgwMTE1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/470801150",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-20T20:06:58Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2I1ODQwMjU3YTBiODkyMjI4ZGZhOWNjZTk0M2I1YTJiYjk0ZTFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "tree": {
        "sha": "bea21499af9d8cf4d2667a9115986ba18d310e1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bea21499af9d8cf4d2667a9115986ba18d310e1d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bea21499af9d8cf4d2667a9115986ba18d310e1d\nparent 16a2f93629f75d182871f288f0396afe6cdc8504\nauthor Peter Todd <pete@petertodd.org> 1448054581 -0500\ncommitter Peter Todd <pete@petertodd.org> 1448054581 -0500\n\nFix usage of local python-bitcoinlib\n\nPreviously was using the system-wide python-bitcoinlib, if it existed,\nrather than the local copy that you check out in the README.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWT49JXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwZDFmMWJjMDU4ZDUxODY0ZmJkMGRmNTZhODdkNDBjMzg0\nOTZiMzYxMjYzMmM2NzgvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQwIXyHOf0udykZwgAiklmtLupNAocwohMsLpz5BOO\nwA+cDIMw9iuV1yjh04AitYrhMBo/fxM9ZmqY7GQkJ9IfZnYO37mMelFf4nBQCmc9\n72TTDcDlB/3M6OP5auijj2iOIwOR45+gWx4s2//YaAIs1mN/U+CDWwwa3H0bhlpM\nBlwS0DLAcSj2NP+b4o07YsnNXcCZSdK2BFEMedYKZsEpS5Ut1QUoPD557h0KnwXm\nfbP28fZmxgDESqFQ8w4TaI5kAFQv9/qvA8RilPSxMcCRVBlrQdRgxxpVSP9heCa8\nuuKN/r/+dkilk+7A2S/QDHpfKiVEReU/FiDBtN0b8Bro6bGp/rFqsSmToCgJJQ==\n=X5dq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16a2f93629f75d182871f288f0396afe6cdc8504",
          "sha": "16a2f93629f75d182871f288f0396afe6cdc8504",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/16a2f93629f75d182871f288f0396afe6cdc8504"
        }
      ],
      "message": "Fix usage of local python-bitcoinlib\n\nPreviously was using the system-wide python-bitcoinlib, if it existed,\nrather than the local copy that you check out in the README.",
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-20T21:23:01Z"
      },
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-20T21:23:01Z"
      },
      "sha": "63b5840257a0b892228dfa9cce943b5a2bb94e1a"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4MzY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 159772336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTc3MjMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159772336",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:13:23Z",
      "updated_at": "2015-11-26T01:14:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Is a higher sequence number still preferred?\nIn the case of a fee tie?\n\n> specifically both a higher fee per KB and a higher absolute fee\n\nOr only the higher fee?\n\nWhat is the behaviour if a transaction is broadcast with the sequence number `0xffffffff` after a transaction was already found that was 'opt-in'?\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-159772336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "commented",
      "id": 159772689,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTc3MjY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159772689",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:16:54Z",
      "updated_at": "2015-11-26T01:16:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dcousens Just higher fee. Ties get rejected to avoid them being used as a way to waste bandwidth.\n\nIf a nSequence > maxint-2 transaction is broadcast it is subject to the same rules as any other replacement; it won't get accepted without paying a (sufficiently) higher fee. That said, if it is accepted further replacements will be rejected. The replacement behavior is stateless, acting only on what is in the mempool right now.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-159772689",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 475120782,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1MTIwNzgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475120782",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:16:54Z"
    },
    {
      "event": "subscribed",
      "id": 475120783,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTEyMDc4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475120783",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:16:54Z"
    },
    {
      "event": "commented",
      "id": 159778915,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTc3ODkxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159778915",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:54:54Z",
      "updated_at": "2015-11-26T01:54:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for clarifying that @petertodd :+1: \n\n@kristovatlas I wonder if the 'default' sequence number when opting into RBF should just be `0` then? \nJust thinking of the privacy implications.\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-159778915",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 475140101,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1MTQwMTAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475140101",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:54:54Z"
    },
    {
      "event": "subscribed",
      "id": 475140102,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTE0MDEwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475140102",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:54:54Z"
    },
    {
      "event": "mentioned",
      "id": 475140103,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1MTQwMTAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475140103",
      "actor": {
        "login": "kristovatlas",
        "id": 7227529,
        "node_id": "MDQ6VXNlcjcyMjc1Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7227529?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristovatlas",
        "html_url": "https://github.com/kristovatlas",
        "followers_url": "https://api.github.com/users/kristovatlas/followers",
        "following_url": "https://api.github.com/users/kristovatlas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristovatlas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristovatlas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristovatlas/subscriptions",
        "organizations_url": "https://api.github.com/users/kristovatlas/orgs",
        "repos_url": "https://api.github.com/users/kristovatlas/repos",
        "events_url": "https://api.github.com/users/kristovatlas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristovatlas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:54:54Z"
    },
    {
      "event": "subscribed",
      "id": 475140104,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTE0MDEwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475140104",
      "actor": {
        "login": "kristovatlas",
        "id": 7227529,
        "node_id": "MDQ6VXNlcjcyMjc1Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7227529?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristovatlas",
        "html_url": "https://github.com/kristovatlas",
        "followers_url": "https://api.github.com/users/kristovatlas/followers",
        "following_url": "https://api.github.com/users/kristovatlas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristovatlas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristovatlas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristovatlas/subscriptions",
        "organizations_url": "https://api.github.com/users/kristovatlas/orgs",
        "repos_url": "https://api.github.com/users/kristovatlas/repos",
        "events_url": "https://api.github.com/users/kristovatlas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristovatlas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T01:54:54Z"
    },
    {
      "event": "commented",
      "id": 159780063,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTc4MDA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159780063",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T02:00:45Z",
      "updated_at": "2015-11-26T02:00:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dcousens nSequence=0 makes sense from the perspective of https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki too.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-159780063",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 475143473,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1MTQzNDcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475143473",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T02:00:45Z"
    },
    {
      "event": "subscribed",
      "id": 475143474,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTE0MzQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475143474",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T02:00:45Z"
    },
    {
      "event": "merged",
      "id": 476297575,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDc2Mjk3NTc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476297575",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "created_at": "2015-11-27T12:21:00Z"
    },
    {
      "event": "closed",
      "id": 476297578,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDc2Mjk3NTc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476297578",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T12:21:00Z"
    },
    {
      "event": "referenced",
      "id": 476297623,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NjI5NzYyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476297623",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0e935865b9ee3a79fc63f5766074b6f539a0cf85",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e935865b9ee3a79fc63f5766074b6f539a0cf85",
      "created_at": "2015-11-27T12:21:04Z"
    },
    {
      "event": "commented",
      "id": 160222244,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDIyMjI0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160222244",
      "actor": {
        "login": "kristovatlas",
        "id": 7227529,
        "node_id": "MDQ6VXNlcjcyMjc1Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7227529?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristovatlas",
        "html_url": "https://github.com/kristovatlas",
        "followers_url": "https://api.github.com/users/kristovatlas/followers",
        "following_url": "https://api.github.com/users/kristovatlas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristovatlas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristovatlas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristovatlas/subscriptions",
        "organizations_url": "https://api.github.com/users/kristovatlas/orgs",
        "repos_url": "https://api.github.com/users/kristovatlas/repos",
        "events_url": "https://api.github.com/users/kristovatlas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristovatlas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T22:31:45Z",
      "updated_at": "2015-11-27T22:31:45Z",
      "author_association": "NONE",
      "body": "@dcousens defaulting to nSequence=0 for the purpose of reducing wallet client fingerprintability makes sense to me.\n",
      "user": {
        "login": "kristovatlas",
        "id": 7227529,
        "node_id": "MDQ6VXNlcjcyMjc1Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7227529?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristovatlas",
        "html_url": "https://github.com/kristovatlas",
        "followers_url": "https://api.github.com/users/kristovatlas/followers",
        "following_url": "https://api.github.com/users/kristovatlas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristovatlas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristovatlas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristovatlas/subscriptions",
        "organizations_url": "https://api.github.com/users/kristovatlas/orgs",
        "repos_url": "https://api.github.com/users/kristovatlas/repos",
        "events_url": "https://api.github.com/users/kristovatlas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristovatlas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#issuecomment-160222244",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6871"
    },
    {
      "event": "mentioned",
      "id": 476644115,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc2NjQ0MTE1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476644115",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T22:31:45Z"
    },
    {
      "event": "subscribed",
      "id": 476644116,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NjY0NDExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476644116",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T22:31:45Z"
    },
    {
      "event": "referenced",
      "id": 487201148,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4NzIwMTE0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/487201148",
      "actor": {
        "login": "braydonf",
        "id": 544777,
        "node_id": "MDQ6VXNlcjU0NDc3Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/544777?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/braydonf",
        "html_url": "https://github.com/braydonf",
        "followers_url": "https://api.github.com/users/braydonf/followers",
        "following_url": "https://api.github.com/users/braydonf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/braydonf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/braydonf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/braydonf/subscriptions",
        "organizations_url": "https://api.github.com/users/braydonf/orgs",
        "repos_url": "https://api.github.com/users/braydonf/repos",
        "events_url": "https://api.github.com/users/braydonf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/braydonf/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f1d19b438e08fad6a32f94f52192f522a7cfd324",
      "commit_url": "https://api.github.com/repos/braydonf/btcjs/commits/f1d19b438e08fad6a32f94f52192f522a7cfd324",
      "created_at": "2015-12-09T17:33:33Z"
    },
    {
      "event": "referenced",
      "id": 564113249,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDU2NDExMzI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/564113249",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "44757729a4fff2a7e28e02727b0f1d66e2873b59",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/44757729a4fff2a7e28e02727b0f1d66e2873b59",
      "created_at": "2016-02-24T18:34:33Z"
    },
    {
      "event": "referenced",
      "id": 564122668,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDU2NDEyMjY2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/564122668",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8fc81e098362130218f256cd6b60e81227d39db9",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/8fc81e098362130218f256cd6b60e81227d39db9",
      "created_at": "2016-02-24T18:40:39Z"
    },
    {
      "event": "referenced",
      "id": 690514543,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDY5MDUxNDU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/690514543",
      "actor": {
        "login": "makevoid",
        "id": 14677,
        "node_id": "MDQ6VXNlcjE0Njc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/14677?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/makevoid",
        "html_url": "https://github.com/makevoid",
        "followers_url": "https://api.github.com/users/makevoid/followers",
        "following_url": "https://api.github.com/users/makevoid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/makevoid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/makevoid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/makevoid/subscriptions",
        "organizations_url": "https://api.github.com/users/makevoid/orgs",
        "repos_url": "https://api.github.com/users/makevoid/repos",
        "events_url": "https://api.github.com/users/makevoid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/makevoid/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "596a2f5ad362f36435d607bf55d1e6af6a67ecb9",
      "commit_url": "https://api.github.com/repos/makevoid/bitcoin/commits/596a2f5ad362f36435d607bf55d1e6af6a67ecb9",
      "created_at": "2016-06-13T14:31:21Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg4Mzc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "referenced",
      "id": 3402820574,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0MDI4MjA1NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3402820574",
      "actor": {
        "login": "ryanxcharles",
        "id": 63740,
        "node_id": "MDQ6VXNlcjYzNzQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/63740?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanxcharles",
        "html_url": "https://github.com/ryanxcharles",
        "followers_url": "https://api.github.com/users/ryanxcharles/followers",
        "following_url": "https://api.github.com/users/ryanxcharles/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanxcharles/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanxcharles/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanxcharles/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanxcharles/orgs",
        "repos_url": "https://api.github.com/users/ryanxcharles/repos",
        "events_url": "https://api.github.com/users/ryanxcharles/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanxcharles/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e6d055f914d85ea19e2c467dff8de6175730bb88",
      "commit_url": "https://api.github.com/repos/moneybutton/bsv/commits/e6d055f914d85ea19e2c467dff8de6175730bb88",
      "created_at": "2020-06-03T15:45:30Z"
    },
    {
      "event": "locked",
      "id": 5271553907,
      "node_id": "LOE_lADOABII584Gur_xzwAAAAE6NYdz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271553907",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:03:31Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42913338",
      "pull_request_review_id": null,
      "id": 42913338,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMzM4",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        if (setConflicts.size())\n+        {\n+            LOCK(pool.cs);\n+\n+            // Check if it's economically rational to mine this transaction\n+            // rather than the ones it replaces. For efficiency we simply sum\n+            // up the pre-calculated fees/size-with-descendants values from the\n+            // mempool package tracking; this does mean the pathological case\n+            // of diamond tx graphs will be overcounted.\n+            BOOST_FOREACH(const uint256 hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+                nConflictingFees += mi->GetFeesWithDescendants();\n+                nConflictingSize += mi->GetSizeWithDescendants();\n+            }\n+\n+            // Replace?\n+            //\n+            // First of all we can't allow a replacement unless it pays greater\n+            // fees than the transactions it conflicts with - if we did the\n+            // bandwidth used by those conflicting transactions would not be\n+            // paid for\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Secondly in addition to paying more fees than the conflicts the\n+            // new transaction must additionally pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally replace only if we end up with a larger fees-per-kb than\n+            // the replacements.\n+            CFeeRate oldFeeRate(nConflictingFees, nConflictingSize);\n+            CFeeRate newFeeRate(nFees, nSize);\n+            if (newFeeRate <= oldFeeRate)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure this comparison makes sense. The existence of a low-fee-rate descendant doesn't make a transaction worse for miners, but it would cause the feerate to look worse in this comparison.\n",
      "created_at": "2015-10-23T20:55:39Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r42913338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42913338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42923364",
      "pull_request_review_id": null,
      "id": 42923364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMzY0",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        if (setConflicts.size())\n+        {\n+            LOCK(pool.cs);\n+\n+            // Check if it's economically rational to mine this transaction\n+            // rather than the ones it replaces. For efficiency we simply sum\n+            // up the pre-calculated fees/size-with-descendants values from the\n+            // mempool package tracking; this does mean the pathological case\n+            // of diamond tx graphs will be overcounted.\n+            BOOST_FOREACH(const uint256 hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+                nConflictingFees += mi->GetFeesWithDescendants();\n+                nConflictingSize += mi->GetSizeWithDescendants();\n+            }\n+\n+            // Replace?\n+            //\n+            // First of all we can't allow a replacement unless it pays greater\n+            // fees than the transactions it conflicts with - if we did the\n+            // bandwidth used by those conflicting transactions would not be\n+            // paid for\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Secondly in addition to paying more fees than the conflicts the\n+            // new transaction must additionally pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally replace only if we end up with a larger fees-per-kb than\n+            // the replacements.\n+            CFeeRate oldFeeRate(nConflictingFees, nConflictingSize);\n+            CFeeRate newFeeRate(nFees, nSize);\n+            if (newFeeRate <= oldFeeRate)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So, you mean the scenario where we have a high fee-rate transaction that is spent by one or more low fee-rate transactions? For instance suppose we have two transactions in our mempool: tx1a, 1KB w/ 1mBTC fee, which is spent by tx2, 10KB w/ 1mBTC fee. We get tx1b, 10KB w/ 2.1mBTC fee. Since the overall feerate of tx1b is higher than tx1a+tx2, it'll be accepted, even though a miner might have rather mined tx1a instead, ignoring tx2 (for now).\n\nI agree that's less than optimal. If we make the assumption that there's always more demand for blockchain space than supply, it might be reasonable for the replacement logic criteria to be whether or not we're increasing the fee-rate of any subset of the mempool. (while still paying more fees than the replaced transactions)\n\nWithout taking CPFP into account, you could simply use the same kind of priority heap logic as in CreateNewBlock() on the list of transactions that would be replaced by the new transaction. You'd iterate through the heap from highest priority to lowest, stopping once you had found as many bytes worth of transactions as the candidate replacement. If the fee-rate of the replacement is higher than the fee-rate of those transactions, accept the replacement into the mempool.\n\nTo take CPFP into account... Thinking about it more the mempool package tracking is probably backwards from what we want. Right now it tracks descendants, when really what we want to know is \"what's the total fee-rate if I mine this transaction, and all ancestors?\" If we kept track of \"packages\" that way, we'd be able to do the comparison by determining if the total fee-rate of the new package created by the replacement is higher than the fee-rates of all the packages invalidated by it. I actually did some work on something along these lines a few years ago, though didn't finish it - the implementation is a lot simpler now that we have strict ancestor limits. (when limiting, just throw away the tx associated with the lowest fee-rate package, which is guaranteed to have no descendants)\n\nFor now though I'd be inclined to merge this PR as-is, as all the above options are pretty complex. I also don't see any way this code could be used in an DoS attack.\n",
      "created_at": "2015-10-23T23:03:07Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r42923364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42923364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43024249",
      "pull_request_review_id": null,
      "id": 43024249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0MjQ5",
      "diff_hunk": "@@ -0,0 +1,280 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))\n+\n+import unittest\n+\n+import bitcoin\n+bitcoin.SelectParams('regtest')\n+\n+import bitcoin.rpc\n+\n+from bitcoin.core import *\n+from bitcoin.core.script import *\n+from bitcoin.wallet import *\n+\n+MAX_REPLACEMENT_LIMIT = 100\n+\n+class Test_ReplaceByFee(unittest.TestCase):\n+    proxy = None\n+\n+    @classmethod\n+    def setUpClass(cls):\n+        if cls.proxy is None:\n+            cls.proxy = bitcoin.rpc.Proxy()\n+\n+    @classmethod\n+    def tearDownClass(cls):\n+        # Make sure mining works\n+        mempool_size = 1\n+        while mempool_size:\n+            cls.proxy.generate(1)",
      "path": "qa/replace-by-fee/rbf-tests.py",
      "position": null,
      "original_position": 42,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When I check out the commit referenced in the README and run the test, I get an error:\n`AttributeError: 'Proxy' object has no attribute 'generate'`\n\nI think this function is not defined in the Proxy class?  Adding it in the appropriate place in python-bitcoinlib seems to fix it.\n",
      "created_at": "2015-10-26T17:25:03Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43024249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43024249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43024293",
      "pull_request_review_id": null,
      "id": 43024293,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0Mjkz",
      "diff_hunk": "@@ -806,15 +806,42 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         return state.Invalid(false, REJECT_ALREADY_KNOWN, \"txn-already-in-mempool\");\n \n     // Check for conflicts with in-memory transactions\n+    set<uint256> setConflicts;\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    BOOST_FOREACH(const CTxIn txin, tx.vin)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason not to make this `const CTxIn &txin`, here and at line 832 below? \n",
      "created_at": "2015-10-26T17:25:13Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43024293",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43024293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43024496",
      "pull_request_review_id": null,
      "id": 43024496,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0NDk2",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could also be `const uint256 &hashAncestor`.\n",
      "created_at": "2015-10-26T17:26:24Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43024496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43024496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43025108",
      "pull_request_review_id": null,
      "id": 43025108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1MTA4",
      "diff_hunk": "@@ -0,0 +1,280 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))\n+\n+import unittest\n+\n+import bitcoin\n+bitcoin.SelectParams('regtest')\n+\n+import bitcoin.rpc\n+\n+from bitcoin.core import *\n+from bitcoin.core.script import *\n+from bitcoin.wallet import *\n+\n+MAX_REPLACEMENT_LIMIT = 100\n+\n+class Test_ReplaceByFee(unittest.TestCase):\n+    proxy = None\n+\n+    @classmethod\n+    def setUpClass(cls):\n+        if cls.proxy is None:\n+            cls.proxy = bitcoin.rpc.Proxy()\n+\n+    @classmethod\n+    def tearDownClass(cls):\n+        # Make sure mining works\n+        mempool_size = 1\n+        while mempool_size:\n+            cls.proxy.generate(1)",
      "path": "qa/replace-by-fee/rbf-tests.py",
      "position": null,
      "original_position": 42,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not included, no. You can just do a \"call\" instead. \n\n> proxy.call(\"generate\", 1)\n",
      "created_at": "2015-10-26T17:30:34Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43025108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43025108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43025671",
      "pull_request_review_id": null,
      "id": 43025671,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1Njcx",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        if (setConflicts.size())\n+        {\n+            LOCK(pool.cs);\n+\n+            // Check if it's economically rational to mine this transaction\n+            // rather than the ones it replaces. For efficiency we simply sum\n+            // up the pre-calculated fees/size-with-descendants values from the\n+            // mempool package tracking; this does mean the pathological case\n+            // of diamond tx graphs will be overcounted.\n+            BOOST_FOREACH(const uint256 hashConflicting, setConflicts)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this logic needlessly overcounts the descendants.  Why not just call CalculateDescendants on the entries in setConflicts, and then loop over all of them?\n\nAssuming the replacing transaction is successful, you don't end up wasting any time, because you can pass the descendant set directly into RemoveStaged later.\n\nIf the replacing transaction were to fail, and we're worried about the amount of work an attacker might try to make us do, then we could just put a work bound here where we fail to replace if there are too many things to look at.\n\nI think it's a good idea to address though because a simple pattern where you have two parent transactions that are spent by a single child of both couldn't be consolidated down to a single transaction without paying for that child twice, if we went with this algorithm; that seems like a needless overhead.\n",
      "created_at": "2015-10-26T17:34:32Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43025671",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43025671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43026591",
      "pull_request_review_id": null,
      "id": 43026591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2NTkx",
      "diff_hunk": "@@ -806,15 +806,42 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         return state.Invalid(false, REJECT_ALREADY_KNOWN, \"txn-already-in-mempool\");\n \n     // Check for conflicts with in-memory transactions\n+    set<uint256> setConflicts;\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    BOOST_FOREACH(const CTxIn txin, tx.vin)\n     {\n-        COutPoint outpoint = tx.vin[i].prevout;\n-        if (pool.mapNextTx.count(outpoint))\n+        if (pool.mapNextTx.count(txin.prevout))\n         {\n-            // Disable replacement feature for now\n-            return state.Invalid(false, REJECT_CONFLICT, \"txn-mempool-conflict\");\n+            const CTransaction *ptxConflicting = pool.mapNextTx[txin.prevout].ptx;\n+            if (!setConflicts.count(ptxConflicting->GetHash()))\n+            {\n+                // Allow opt-out of transaction replacement by setting\n+                // nSequence >= maxint-1 on all inputs.\n+                //\n+                // maxint-1 is picked to still allow use of nLockTime by\n+                // non-replacable transactions. All inputs rather than just one\n+                // is for the sake of multi-party protocols, where we don't\n+                // want a single party to be able to disable replacement.\n+                //\n+                // The opt-out ignores decendents as anyone relying on",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \"descendants\"\n",
      "created_at": "2015-10-26T17:40:39Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43026591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43026591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43031583",
      "pull_request_review_id": null,
      "id": 43031583,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMxNTgz",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        if (setConflicts.size())\n+        {\n+            LOCK(pool.cs);\n+\n+            // Check if it's economically rational to mine this transaction\n+            // rather than the ones it replaces. For efficiency we simply sum\n+            // up the pre-calculated fees/size-with-descendants values from the\n+            // mempool package tracking; this does mean the pathological case\n+            // of diamond tx graphs will be overcounted.\n+            BOOST_FOREACH(const uint256 hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+                nConflictingFees += mi->GetFeesWithDescendants();\n+                nConflictingSize += mi->GetSizeWithDescendants();\n+            }\n+\n+            // Replace?\n+            //\n+            // First of all we can't allow a replacement unless it pays greater\n+            // fees than the transactions it conflicts with - if we did the\n+            // bandwidth used by those conflicting transactions would not be\n+            // paid for\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Secondly in addition to paying more fees than the conflicts the\n+            // new transaction must additionally pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally replace only if we end up with a larger fees-per-kb than\n+            // the replacements.\n+            CFeeRate oldFeeRate(nConflictingFees, nConflictingSize);\n+            CFeeRate newFeeRate(nFees, nSize);\n+            if (newFeeRate <= oldFeeRate)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, the distinction between ancestor and descendant package is what I was getting at.\n\nDescendant packages are I think the right thing to use for mempool limiting.  I don't follow what you're saying about a limiting algorithm that uses fee with ancestors -- it's entirely possible that the worst thing under that sort would have descendants in the mempool.\n\n(FYI I have a branch that implements [ancestor packages](https://github.com/sdaftuar/bitcoin/tree/ancestor-tracking).  I might propose merging it at some point if it looks like we can take advantage of it in the mining code, but I'm not ready to advocate that now.)\n\nAnyway in this code, we are comparing the feerate of the replacing transaction (with uncalculated/unknown fee rate including its ancestors) to an estimate of the feerate of the descendants of all the conflicting transactions.  This strikes me as incorrect on both fronts; by not putting any bounds on the ancestor fee rate, we might be accepting a replacement transaction that is unlikely to confirm anytime soon.  On the other hand, by looking at feerate with children (and overcounting those children, at least in the current implementation), we might be making it so that miners would prefer the original transactions to the replacing one.\n\nI don't know that either of these issues constitutes an attack, but I do think it's useful to try to help users avoid shooting themselves in the foot, say by accidentally adding an input that is part of a long unconfirmed chain (causing the replacing transaction to be worse), and to give miners code that doesn't require further optimization to do the economically rational thing.\n\nSo with that in mind, how about this:\n- Require that any new inputs that show up in the replacing transaction be already confirmed.  In the future, if we do merge something like ancestor package tracking and better mining code, we could update this test appropriately.\n- Require that for each entry E in setConflicts, \n  `feerate(replacing transaction) > max(feerate of E, feerate of E with descendants)`.  That doesn't completely eliminate the possibility that it could be somehow worse for a miner to accept the new transaction, but it eliminates some degenerate cases (where a high fee rate transaction is dragged down by lower fee rate transactions) and is easy to calculate.\n",
      "created_at": "2015-10-26T18:18:30Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43031583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43031583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43032924",
      "pull_request_review_id": null,
      "id": 43032924,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMyOTI0",
      "diff_hunk": "@@ -952,6 +1058,19 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 __func__, hash.ToString(), FormatStateMessage(state));\n         }\n \n+        // Remove conflicting transactions from the mempool\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 142,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just to add on to my comment above -- if you call `CalculateDescendants` above and use `RemoveStaged` here, then we don't have to copy all these transactions...\n",
      "created_at": "2015-10-26T18:28:13Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43032924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43032924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465297",
      "pull_request_review_id": null,
      "id": 43465297,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1Mjk3",
      "diff_hunk": "@@ -0,0 +1,280 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))\n+\n+import unittest\n+\n+import bitcoin\n+bitcoin.SelectParams('regtest')\n+\n+import bitcoin.rpc\n+\n+from bitcoin.core import *\n+from bitcoin.core.script import *\n+from bitcoin.wallet import *\n+\n+MAX_REPLACEMENT_LIMIT = 100\n+\n+class Test_ReplaceByFee(unittest.TestCase):\n+    proxy = None\n+\n+    @classmethod\n+    def setUpClass(cls):\n+        if cls.proxy is None:\n+            cls.proxy = bitcoin.rpc.Proxy()\n+\n+    @classmethod\n+    def tearDownClass(cls):\n+        # Make sure mining works\n+        mempool_size = 1\n+        while mempool_size:\n+            cls.proxy.generate(1)",
      "path": "qa/replace-by-fee/rbf-tests.py",
      "position": null,
      "original_position": 42,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.\n\nI forgot to add generate() when python-bitcoinlib dropped support for calling RPC commands implicitly; replaced with .call() so as to continue to use the official v0.5.0 release rather than git master.\n",
      "created_at": "2015-10-30T01:51:05Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43465297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465406",
      "pull_request_review_id": null,
      "id": 43465406,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NDA2",
      "diff_hunk": "@@ -806,15 +806,42 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         return state.Invalid(false, REJECT_ALREADY_KNOWN, \"txn-already-in-mempool\");\n \n     // Check for conflicts with in-memory transactions\n+    set<uint256> setConflicts;\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    BOOST_FOREACH(const CTxIn txin, tx.vin)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Fixed.\n",
      "created_at": "2015-10-30T01:53:55Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43465406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465409",
      "pull_request_review_id": null,
      "id": 43465409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NDA5",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also fixed.\n",
      "created_at": "2015-10-30T01:54:00Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43465409",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465634",
      "pull_request_review_id": null,
      "id": 43465634,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NjM0",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        if (setConflicts.size())\n+        {\n+            LOCK(pool.cs);\n+\n+            // Check if it's economically rational to mine this transaction\n+            // rather than the ones it replaces. For efficiency we simply sum\n+            // up the pre-calculated fees/size-with-descendants values from the\n+            // mempool package tracking; this does mean the pathological case\n+            // of diamond tx graphs will be overcounted.\n+            BOOST_FOREACH(const uint256 hashConflicting, setConflicts)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well, I'm trying to keep this pull as simple as possible, while writing it in a way that isn't likely to lead to any DoS attacks; a previous version of this patch did do exactly what you suggest, but given that descendant tracking exists I figured I'd use it. (after all, I'm writing this patch pro bono)\n\nAs for your example where it would matter, that'd require wallets that attempted to both get txs to non-RBF miners and RBF miners simultaneously by broadcasting one then the other. It's a good idea, but doing that doesn't yet save you any money due to the rule that replacements must pay >= the fees of the transactions being replaced.\n",
      "created_at": "2015-10-30T02:00:08Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43465634",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465684",
      "pull_request_review_id": null,
      "id": 43465684,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1Njg0",
      "diff_hunk": "@@ -806,15 +806,42 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         return state.Invalid(false, REJECT_ALREADY_KNOWN, \"txn-already-in-mempool\");\n \n     // Check for conflicts with in-memory transactions\n+    set<uint256> setConflicts;\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    BOOST_FOREACH(const CTxIn txin, tx.vin)\n     {\n-        COutPoint outpoint = tx.vin[i].prevout;\n-        if (pool.mapNextTx.count(outpoint))\n+        if (pool.mapNextTx.count(txin.prevout))\n         {\n-            // Disable replacement feature for now\n-            return state.Invalid(false, REJECT_CONFLICT, \"txn-mempool-conflict\");\n+            const CTransaction *ptxConflicting = pool.mapNextTx[txin.prevout].ptx;\n+            if (!setConflicts.count(ptxConflicting->GetHash()))\n+            {\n+                // Allow opt-out of transaction replacement by setting\n+                // nSequence >= maxint-1 on all inputs.\n+                //\n+                // maxint-1 is picked to still allow use of nLockTime by\n+                // non-replacable transactions. All inputs rather than just one\n+                // is for the sake of multi-party protocols, where we don't\n+                // want a single party to be able to disable replacement.\n+                //\n+                // The opt-out ignores decendents as anyone relying on",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed\n",
      "created_at": "2015-10-30T02:01:19Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43465684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465707",
      "pull_request_review_id": null,
      "id": 43465707,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NzA3",
      "diff_hunk": "@@ -952,6 +1058,19 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 __func__, hash.ToString(), FormatStateMessage(state));\n         }\n \n+        // Remove conflicting transactions from the mempool\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 142,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed. Although again, I'm not worried about the case where the transactions do end up replaced; I'm worried about the possible DoS attack case where they aren't.\n",
      "created_at": "2015-10-30T02:02:05Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43465707",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43465707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43470275",
      "pull_request_review_id": null,
      "id": 43470275,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwMjc1",
      "diff_hunk": "@@ -932,6 +959,85 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        if (setConflicts.size())\n+        {\n+            LOCK(pool.cs);\n+\n+            // Check if it's economically rational to mine this transaction\n+            // rather than the ones it replaces. For efficiency we simply sum\n+            // up the pre-calculated fees/size-with-descendants values from the\n+            // mempool package tracking; this does mean the pathological case\n+            // of diamond tx graphs will be overcounted.\n+            BOOST_FOREACH(const uint256 hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+                nConflictingFees += mi->GetFeesWithDescendants();\n+                nConflictingSize += mi->GetSizeWithDescendants();\n+            }\n+\n+            // Replace?\n+            //\n+            // First of all we can't allow a replacement unless it pays greater\n+            // fees than the transactions it conflicts with - if we did the\n+            // bandwidth used by those conflicting transactions would not be\n+            // paid for\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Secondly in addition to paying more fees than the conflicts the\n+            // new transaction must additionally pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally replace only if we end up with a larger fees-per-kb than\n+            // the replacements.\n+            CFeeRate oldFeeRate(nConflictingFees, nConflictingSize);\n+            CFeeRate newFeeRate(nFees, nSize);\n+            if (newFeeRate <= oldFeeRate)",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "b233451b00f5e58ea5cb380aebe0297d436bd1f5",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed both these issues.\n\nI decided not to do the max() version of this, as I think the requirement that the new fees > total-replaced-fees is sufficient; might help to get txs unstuck in some cases, and non-CPFP miners aren't evaluating that anyway.\n",
      "created_at": "2015-10-30T04:07:53Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r43470275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43470275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44660476",
      "pull_request_review_id": null,
      "id": 44660476,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYwNDc2",
      "diff_hunk": "@@ -0,0 +1,13 @@\n+Replace-by-fee regression tests\n+===============================\n+\n+First get version v0.5.0 of the python-bitcoinlib library. In this directory\n+run:\n+\n+    git clone -n https://github.com/petertodd/python-bitcoinlib",
      "path": "qa/replace-by-fee/README.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like hard-coding a commit ID here. It will go out of date very soon. If this requires v0.5.x, Can we do something like:\n\n```\ngit clone --branch 0.5 https://github.com/petertodd/python-bitcoinlib\n```\n",
      "created_at": "2015-11-12T14:13:16Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r44660476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44660476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44699335",
      "pull_request_review_id": null,
      "id": 44699335,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5MzM1",
      "diff_hunk": "@@ -0,0 +1,13 @@\n+Replace-by-fee regression tests\n+===============================\n+\n+First get version v0.5.0 of the python-bitcoinlib library. In this directory\n+run:\n+\n+    git clone -n https://github.com/petertodd/python-bitcoinlib",
      "path": "qa/replace-by-fee/README.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My thinking re: hard-coding is reproducability; if we're out of date, we should explicitly update it rather than implicitly.\n\nAlso, this set of tests will likely get removed fairly soon, and kept just for historical reference now that they've been mostly rewritten.\n",
      "created_at": "2015-11-12T19:03:54Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r44699335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44699335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45219187",
      "pull_request_review_id": null,
      "id": 45219187,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5MTg3",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather",
      "path": "src/main.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can't all this new code (1003 to 1140) be a new function?\nEDIT: since it uses the mempool, it's probably better that this doesn't move to policy.cpp yet. In main.cpp is fine, just apart from AcceptToMemoryPool().\n",
      "created_at": "2015-11-18T16:08:38Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45219187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45219187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1003,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45396057",
      "pull_request_review_id": null,
      "id": 45396057,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk2MDU3",
      "diff_hunk": "@@ -977,6 +1158,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 __func__, hash.ToString(), FormatStateMessage(state));\n         }\n \n+        // Remove conflicting transactions from the mempool\n+        BOOST_FOREACH(const CTxMemPool::txiter it, allConflicting)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                    it->GetTx().GetHash().ToString(),\n+                    hash.ToString(),\n+                    FormatMoney(nFees - nConflictingFees),\n+                    (int)nSize - (int)nConflictingSize);",
      "path": "src/main.cpp",
      "position": 220,
      "original_position": 220,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(maybe out of scope for this PR)\n\nDo we need a new signal here? How can the wallet detect removed (or replaced) transactions? Maybe the signal needs to be emitted from `void CTxMemPool::RemoveStaged(setEntries &stage)` (or nearby) to also include the mempool limiting behavior.\n",
      "created_at": "2015-11-19T20:30:43Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45396057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45396057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1168,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45473643",
      "pull_request_review_id": null,
      "id": 45473643,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNjQz",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather",
      "path": "src/main.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @jtimon . It's hard to read a function spanning over 400 lines not knowing which parts belong together.\n",
      "created_at": "2015-11-20T14:29:56Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45473643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45473643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1003,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45510187",
      "pull_request_review_id": null,
      "id": 45510187,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEwMTg3",
      "diff_hunk": "@@ -977,6 +1158,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 __func__, hash.ToString(), FormatStateMessage(state));\n         }\n \n+        // Remove conflicting transactions from the mempool\n+        BOOST_FOREACH(const CTxMemPool::txiter it, allConflicting)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                    it->GetTx().GetHash().ToString(),\n+                    hash.ToString(),\n+                    FormatMoney(nFees - nConflictingFees),\n+                    (int)nSize - (int)nConflictingSize);",
      "path": "src/main.cpp",
      "position": 220,
      "original_position": 220,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We probably do. But yeah, I think adding that can wait for another pull-req; belongs as a wallet code change IMO, so might as well let whomever ends up writing that decide what they need.\n",
      "created_at": "2015-11-20T19:49:10Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45510187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45510187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1168,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45512199",
      "pull_request_review_id": null,
      "id": 45512199,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyMTk5",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather",
      "path": "src/main.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@jtimon Yeah, it's tricky though, because we reuse allConflicting later in the removal code for performance, and that in turn requires us to hold a lock; the way the code works isn't really modularized yet. That said compared to my previous patch we do at least take advantage of other mempool-related code, CalculateDescendants(), so we're a bit ahead.\n\nI'd be inclined to leave it as-is right now, and do the refactor later when we add RBF-related code to the wallet and/or RPC - that's when we'll have a better idea of what the refactor should look like and how the refactored code should interact with both uses. For instance, the ability to calculate on demand how expensive it would be to replace a specific transaction would be useful.\n",
      "created_at": "2015-11-20T20:05:16Z",
      "updated_at": "2015-11-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45512199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45512199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1003,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45586305",
      "pull_request_review_id": null,
      "id": 45586305,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MzA1",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather",
      "path": "src/main.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't see how is tricky, if you need something inside the new function and in the caller, just pass it as reference. If you were holding the lock, well keep holding it, etc...It should be basically cut the code I said and paste it out as a (for now static) function, and adapt the parameters until it compiles, I think.\nOf course we can always leave refactors for later, but they often become harder with time (because the code keeps evolving from its current form, not from \"what we plan to do with it in a later refactor\".\nI'm fine with not doing it within this PR (although it would be less disruptive to squash that with the commit that introduces the new code), but I highly dislike when people insist to \"postpone refactor X until after feature Y\". If X is ready 6months before Y starts being coded...should we wait there too?\nThat kind of thinking is what has led us to, for example, wait more than 1 year to introduce a CPolicy class (and I'm still waiting because apparently #6068 would be too disruptive for this and other mempool-related changes [I disagree but was tired of rebasing]).\nIf we leave this PR as it is, fine. But please don't postpone or restrict any kind of development unnecessarily. Complain in the PRs when they exist, but don't plan how to serialize refactors between features or I predict: new important features will be proposed and the refactors will never happen (and encapsulations will become increasingly hard).\n",
      "created_at": "2015-11-23T10:02:19Z",
      "updated_at": "2015-11-23T10:02:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45586305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45586305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1003,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45597053",
      "pull_request_review_id": null,
      "id": 45597053,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3MDUz",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        uint64_t nConflictingCount = 0;\n+        CTxMemPool::setEntries allConflicting;\n+\n+        // If we don't hold the lock allConflicting might be incomplete; the\n+        // subsequent RemoveStaged() and addUnchecked() calls don't guarantee\n+        // mempool consistency for us.\n+        LOCK(pool.cs);\n+        if (setConflicts.size())\n+        {\n+            CFeeRate newFeeRate(nFees, nSize);\n+            set<uint256> setConflictsParents;\n+            const int maxDescendantsToVisit = 100;\n+            CTxMemPool::setEntries setIterConflicting;\n+            BOOST_FOREACH(const uint256 &hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+\n+                // Save these to avoid repeated lookups\n+                setIterConflicting.insert(mi);\n+\n+                // If this entry is \"dirty\", then we don't have descendant\n+                // state for this transaction, which means we probably have\n+                // lots of in-mempool descendants.\n+                // Don't allow replacements of dirty transactions, to ensure\n+                // that we don't spend too much time walking descendants.\n+                // This should be rare.\n+                if (mi->IsDirty()) {\n+                    return state.DoS(0,\n+                            error(\"AcceptToMemoryPool: rejecting replacement %s; cannot replace tx %s with untracked descendants\",\n+                                hash.ToString(),\n+                                mi->GetTx().GetHash().ToString()),\n+                            REJECT_NONSTANDARD, \"too many potential replacements\");\n+                }\n+\n+                // Don't allow the replacement to reduce the feerate of the\n+                // mempool.\n+                //\n+                // We usually don't want to accept replacements with lower\n+                // feerates than what they replaced as that would lower the\n+                // feerate of the next block. Requiring that the feerate always\n+                // be increased is also an easy-to-reason about way to prevent\n+                // DoS attacks via replacements.\n+                //\n+                // The mining code doesn't (currently) take children into\n+                // account (CPFP) so we only consider the feerates of\n+                // transactions being directly replaced, not their indirect\n+                // descendants. While that does mean high feerate children are\n+                // ignored when deciding whether or not to replace, we do\n+                // require the replacement to pay more overall fees too,\n+                // mitigating most cases.\n+                CFeeRate oldFeeRate(mi->GetFee(), mi->GetTxSize());\n+                if (newFeeRate <= oldFeeRate)\n+                {\n+                    return state.DoS(0,\n+                            error(\"AcceptToMemoryPool: rejecting replacement %s; new feerate %s <= old feerate %s\",\n+                                  hash.ToString(),\n+                                  newFeeRate.ToString(),\n+                                  oldFeeRate.ToString()),\n+                            REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+                }\n+\n+                BOOST_FOREACH(const CTxIn &txin, mi->GetTx().vin)\n+                {\n+                    setConflictsParents.insert(txin.prevout.hash);\n+                }\n+\n+                nConflictingCount += mi->GetCountWithDescendants();\n+            }\n+            // This potentially overestimates the number of actual descendants\n+            // but we just want to be conservative to avoid doing too much\n+            // work.\n+            if (nConflictingCount <= maxDescendantsToVisit) {\n+                // If not too many to replace, then calculate the set of\n+                // transactions that would have to be evicted\n+                BOOST_FOREACH(CTxMemPool::txiter it, setIterConflicting) {\n+                    pool.CalculateDescendants(it, allConflicting);\n+                }\n+                BOOST_FOREACH(CTxMemPool::txiter it, allConflicting) {\n+                    nConflictingFees += it->GetFee();\n+                    nConflictingSize += it->GetTxSize();\n+                }\n+            } else {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n+                            hash.ToString(),\n+                            nConflictingCount,\n+                            maxDescendantsToVisit),\n+                        REJECT_NONSTANDARD, \"too many potential replacements\");\n+            }\n+\n+            for (unsigned int j = 0; j < tx.vin.size(); j++)\n+            {\n+                // We don't want to accept replacements that require low\n+                // feerate junk to be mined first. Ideally we'd keep track of\n+                // the ancestor feerates and make the decision based on that,\n+                // but for now requiring all new inputs to be confirmed works.\n+                if (!setConflictsParents.count(tx.vin[j].prevout.hash))\n+                {\n+                    // Rather than check the UTXO set - potentially expensive -\n+                    // it's cheaper to just check if the new input refers to a\n+                    // tx that's in the mempool.\n+                    if (pool.mapTx.find(tx.vin[j].prevout.hash) != pool.mapTx.end())\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s adds unconfirmed input, idx %d\",\n+                                                  hash.ToString(), j),\n+                                         REJECT_NONSTANDARD, \"replacement-adds-unconfirmed\");\n+                }\n+            }\n+\n+            // The replacement must pay greater fees than the transactions it\n+            // replaces - if we did the bandwidth used by those conflicting\n+            // transactions would not be paid for.\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally in addition to paying more fees than the conflicts the\n+            // new transaction must pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+        }\n+\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))",
      "path": "src/main.cpp",
      "position": 208,
      "original_position": 208,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't it be better to put the new code (from L987) after this check instead of before?\nIt would avoid doing further mempool validations for transactions that are going to be rejected by this check anyway.\nI know there can be transactions that would pass this check but be rejected as a replacement, but this check already has the inputs of the transaction cached, so it seems cheaper than the RBF logic and it makes sense to me to do it first.\nNote that this minor nit wouldn't change the total diff (although it can be done later with other changes too [for example, a rebased #6445 ]).\n",
      "created_at": "2015-11-23T12:16:49Z",
      "updated_at": "2015-11-23T12:19:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45597053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45597053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1143,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45599341",
      "pull_request_review_id": null,
      "id": 45599341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MzQx",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather",
      "path": "src/main.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "16a2f93629f75d182871f288f0396afe6cdc8504",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was talking about something like this: https://github.com/jtimon/bitcoin/commit/f10b5317d21eea21375bb0da718dc98ee4e37452 but as said  I'm completely fine with not creating the new function yet (although now it would be almost free diff-wise).\n",
      "created_at": "2015-11-23T12:48:24Z",
      "updated_at": "2015-11-23T12:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45599341",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45599341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1003,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45898813",
      "pull_request_review_id": null,
      "id": 45898813,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4ODEz",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        uint64_t nConflictingCount = 0;\n+        CTxMemPool::setEntries allConflicting;\n+\n+        // If we don't hold the lock allConflicting might be incomplete; the\n+        // subsequent RemoveStaged() and addUnchecked() calls don't guarantee\n+        // mempool consistency for us.\n+        LOCK(pool.cs);\n+        if (setConflicts.size())\n+        {\n+            CFeeRate newFeeRate(nFees, nSize);\n+            set<uint256> setConflictsParents;\n+            const int maxDescendantsToVisit = 100;\n+            CTxMemPool::setEntries setIterConflicting;\n+            BOOST_FOREACH(const uint256 &hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+\n+                // Save these to avoid repeated lookups\n+                setIterConflicting.insert(mi);\n+\n+                // If this entry is \"dirty\", then we don't have descendant\n+                // state for this transaction, which means we probably have\n+                // lots of in-mempool descendants.\n+                // Don't allow replacements of dirty transactions, to ensure\n+                // that we don't spend too much time walking descendants.\n+                // This should be rare.\n+                if (mi->IsDirty()) {\n+                    return state.DoS(0,\n+                            error(\"AcceptToMemoryPool: rejecting replacement %s; cannot replace tx %s with untracked descendants\",\n+                                hash.ToString(),\n+                                mi->GetTx().GetHash().ToString()),\n+                            REJECT_NONSTANDARD, \"too many potential replacements\");\n+                }\n+\n+                // Don't allow the replacement to reduce the feerate of the\n+                // mempool.\n+                //\n+                // We usually don't want to accept replacements with lower\n+                // feerates than what they replaced as that would lower the\n+                // feerate of the next block. Requiring that the feerate always\n+                // be increased is also an easy-to-reason about way to prevent\n+                // DoS attacks via replacements.\n+                //\n+                // The mining code doesn't (currently) take children into\n+                // account (CPFP) so we only consider the feerates of\n+                // transactions being directly replaced, not their indirect\n+                // descendants. While that does mean high feerate children are\n+                // ignored when deciding whether or not to replace, we do\n+                // require the replacement to pay more overall fees too,\n+                // mitigating most cases.\n+                CFeeRate oldFeeRate(mi->GetFee(), mi->GetTxSize());\n+                if (newFeeRate <= oldFeeRate)\n+                {\n+                    return state.DoS(0,\n+                            error(\"AcceptToMemoryPool: rejecting replacement %s; new feerate %s <= old feerate %s\",\n+                                  hash.ToString(),\n+                                  newFeeRate.ToString(),\n+                                  oldFeeRate.ToString()),\n+                            REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+                }\n+\n+                BOOST_FOREACH(const CTxIn &txin, mi->GetTx().vin)\n+                {\n+                    setConflictsParents.insert(txin.prevout.hash);\n+                }\n+\n+                nConflictingCount += mi->GetCountWithDescendants();\n+            }\n+            // This potentially overestimates the number of actual descendants\n+            // but we just want to be conservative to avoid doing too much\n+            // work.\n+            if (nConflictingCount <= maxDescendantsToVisit) {\n+                // If not too many to replace, then calculate the set of\n+                // transactions that would have to be evicted\n+                BOOST_FOREACH(CTxMemPool::txiter it, setIterConflicting) {\n+                    pool.CalculateDescendants(it, allConflicting);\n+                }\n+                BOOST_FOREACH(CTxMemPool::txiter it, allConflicting) {\n+                    nConflictingFees += it->GetFee();\n+                    nConflictingSize += it->GetTxSize();\n+                }\n+            } else {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n+                            hash.ToString(),\n+                            nConflictingCount,\n+                            maxDescendantsToVisit),\n+                        REJECT_NONSTANDARD, \"too many potential replacements\");\n+            }\n+\n+            for (unsigned int j = 0; j < tx.vin.size(); j++)\n+            {\n+                // We don't want to accept replacements that require low\n+                // feerate junk to be mined first. Ideally we'd keep track of\n+                // the ancestor feerates and make the decision based on that,\n+                // but for now requiring all new inputs to be confirmed works.\n+                if (!setConflictsParents.count(tx.vin[j].prevout.hash))\n+                {\n+                    // Rather than check the UTXO set - potentially expensive -\n+                    // it's cheaper to just check if the new input refers to a\n+                    // tx that's in the mempool.\n+                    if (pool.mapTx.find(tx.vin[j].prevout.hash) != pool.mapTx.end())\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s adds unconfirmed input, idx %d\",\n+                                                  hash.ToString(), j),\n+                                         REJECT_NONSTANDARD, \"replacement-adds-unconfirmed\");\n+                }\n+            }\n+\n+            // The replacement must pay greater fees than the transactions it\n+            // replaces - if we did the bandwidth used by those conflicting\n+            // transactions would not be paid for.\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally in addition to paying more fees than the conflicts the\n+            // new transaction must pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+        }\n+\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))",
      "path": "src/main.cpp",
      "position": 208,
      "original_position": 208,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You mean after the CheckInputs() line? The RBF code is just a bunch of pointer following of in-memory data, with limited depth and breadth, so it shouldn't be expensive code to run - remember that the mempool has tx fee and size data in the CTxMemPool structs.\n",
      "created_at": "2015-11-25T17:58:03Z",
      "updated_at": "2015-11-25T17:58:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45898813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45898813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1143,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45899404",
      "pull_request_review_id": null,
      "id": 45899404,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5NDA0",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        uint64_t nConflictingCount = 0;\n+        CTxMemPool::setEntries allConflicting;\n+\n+        // If we don't hold the lock allConflicting might be incomplete; the\n+        // subsequent RemoveStaged() and addUnchecked() calls don't guarantee\n+        // mempool consistency for us.\n+        LOCK(pool.cs);\n+        if (setConflicts.size())\n+        {\n+            CFeeRate newFeeRate(nFees, nSize);\n+            set<uint256> setConflictsParents;\n+            const int maxDescendantsToVisit = 100;\n+            CTxMemPool::setEntries setIterConflicting;\n+            BOOST_FOREACH(const uint256 &hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+\n+                // Save these to avoid repeated lookups\n+                setIterConflicting.insert(mi);\n+\n+                // If this entry is \"dirty\", then we don't have descendant\n+                // state for this transaction, which means we probably have\n+                // lots of in-mempool descendants.\n+                // Don't allow replacements of dirty transactions, to ensure\n+                // that we don't spend too much time walking descendants.\n+                // This should be rare.\n+                if (mi->IsDirty()) {\n+                    return state.DoS(0,\n+                            error(\"AcceptToMemoryPool: rejecting replacement %s; cannot replace tx %s with untracked descendants\",\n+                                hash.ToString(),\n+                                mi->GetTx().GetHash().ToString()),\n+                            REJECT_NONSTANDARD, \"too many potential replacements\");\n+                }\n+\n+                // Don't allow the replacement to reduce the feerate of the\n+                // mempool.\n+                //\n+                // We usually don't want to accept replacements with lower\n+                // feerates than what they replaced as that would lower the\n+                // feerate of the next block. Requiring that the feerate always\n+                // be increased is also an easy-to-reason about way to prevent\n+                // DoS attacks via replacements.\n+                //\n+                // The mining code doesn't (currently) take children into\n+                // account (CPFP) so we only consider the feerates of\n+                // transactions being directly replaced, not their indirect\n+                // descendants. While that does mean high feerate children are\n+                // ignored when deciding whether or not to replace, we do\n+                // require the replacement to pay more overall fees too,\n+                // mitigating most cases.\n+                CFeeRate oldFeeRate(mi->GetFee(), mi->GetTxSize());\n+                if (newFeeRate <= oldFeeRate)\n+                {\n+                    return state.DoS(0,\n+                            error(\"AcceptToMemoryPool: rejecting replacement %s; new feerate %s <= old feerate %s\",\n+                                  hash.ToString(),\n+                                  newFeeRate.ToString(),\n+                                  oldFeeRate.ToString()),\n+                            REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+                }\n+\n+                BOOST_FOREACH(const CTxIn &txin, mi->GetTx().vin)\n+                {\n+                    setConflictsParents.insert(txin.prevout.hash);\n+                }\n+\n+                nConflictingCount += mi->GetCountWithDescendants();\n+            }\n+            // This potentially overestimates the number of actual descendants\n+            // but we just want to be conservative to avoid doing too much\n+            // work.\n+            if (nConflictingCount <= maxDescendantsToVisit) {\n+                // If not too many to replace, then calculate the set of\n+                // transactions that would have to be evicted\n+                BOOST_FOREACH(CTxMemPool::txiter it, setIterConflicting) {\n+                    pool.CalculateDescendants(it, allConflicting);\n+                }\n+                BOOST_FOREACH(CTxMemPool::txiter it, allConflicting) {\n+                    nConflictingFees += it->GetFee();\n+                    nConflictingSize += it->GetTxSize();\n+                }\n+            } else {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n+                            hash.ToString(),\n+                            nConflictingCount,\n+                            maxDescendantsToVisit),\n+                        REJECT_NONSTANDARD, \"too many potential replacements\");\n+            }\n+\n+            for (unsigned int j = 0; j < tx.vin.size(); j++)\n+            {\n+                // We don't want to accept replacements that require low\n+                // feerate junk to be mined first. Ideally we'd keep track of\n+                // the ancestor feerates and make the decision based on that,\n+                // but for now requiring all new inputs to be confirmed works.\n+                if (!setConflictsParents.count(tx.vin[j].prevout.hash))\n+                {\n+                    // Rather than check the UTXO set - potentially expensive -\n+                    // it's cheaper to just check if the new input refers to a\n+                    // tx that's in the mempool.\n+                    if (pool.mapTx.find(tx.vin[j].prevout.hash) != pool.mapTx.end())\n+                        return state.DoS(0, error(\"AcceptToMemoryPool: replacement %s adds unconfirmed input, idx %d\",\n+                                                  hash.ToString(), j),\n+                                         REJECT_NONSTANDARD, \"replacement-adds-unconfirmed\");\n+                }\n+            }\n+\n+            // The replacement must pay greater fees than the transactions it\n+            // replaces - if we did the bandwidth used by those conflicting\n+            // transactions would not be paid for.\n+            if (nFees < nConflictingFees)\n+            {\n+                return state.DoS(0, error(\"AcceptToMemoryPool: rejecting replacement %s, less fees than conflicting txs; %s < %s\",\n+                                          hash.ToString(), FormatMoney(nFees), FormatMoney(nConflictingFees)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+\n+            // Finally in addition to paying more fees than the conflicts the\n+            // new transaction must pay for its own bandwidth.\n+            CAmount nDeltaFees = nFees - nConflictingFees;\n+            if (nDeltaFees < ::minRelayTxFee.GetFee(nSize))\n+            {\n+                return state.DoS(0,\n+                        error(\"AcceptToMemoryPool: rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n+                              hash.ToString(),\n+                              FormatMoney(nDeltaFees),\n+                              FormatMoney(::minRelayTxFee.GetFee(nSize))),\n+                        REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+        }\n+\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))",
      "path": "src/main.cpp",
      "position": 208,
      "original_position": 208,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Never mind, I misread this line for AreInputsStandard().\n",
      "created_at": "2015-11-25T18:03:39Z",
      "updated_at": "2015-11-25T18:03:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r45899404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45899404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1143,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76198016",
      "pull_request_review_id": null,
      "id": 76198016,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2MTk4MDE2",
      "diff_hunk": "@@ -957,6 +984,160 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n         }\n \n+        // A transaction that spends outputs that would be replaced by it is invalid. Now\n+        // that we have the set of all ancestors we can detect this\n+        // pathological case by making sure setConflicts and setAncestors don't\n+        // intersect.\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors)\n+        {\n+            const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+            if (setConflicts.count(hashAncestor))\n+            {\n+                return state.DoS(10, error(\"AcceptToMemoryPool: %s spends conflicting transaction %s\",\n+                                           hash.ToString(),\n+                                           hashAncestor.ToString()),\n+                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\");\n+            }\n+        }\n+\n+        // Check if it's economically rational to mine this transaction rather\n+        // than the ones it replaces.\n+        CAmount nConflictingFees = 0;\n+        size_t nConflictingSize = 0;\n+        uint64_t nConflictingCount = 0;\n+        CTxMemPool::setEntries allConflicting;\n+\n+        // If we don't hold the lock allConflicting might be incomplete; the\n+        // subsequent RemoveStaged() and addUnchecked() calls don't guarantee\n+        // mempool consistency for us.\n+        LOCK(pool.cs);\n+        if (setConflicts.size())\n+        {\n+            CFeeRate newFeeRate(nFees, nSize);\n+            set<uint256> setConflictsParents;\n+            const int maxDescendantsToVisit = 100;\n+            CTxMemPool::setEntries setIterConflicting;\n+            BOOST_FOREACH(const uint256 &hashConflicting, setConflicts)\n+            {\n+                CTxMemPool::txiter mi = pool.mapTx.find(hashConflicting);\n+                if (mi == pool.mapTx.end())\n+                    continue;\n+\n+                // Save these to avoid repeated lookups\n+                setIterConflicting.insert(mi);\n+",
      "path": "src/main.cpp",
      "position": 93,
      "original_position": 93,
      "commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "original_commit_id": "63b5840257a0b892228dfa9cce943b5a2bb94e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The following was later removed by #7594\n",
      "created_at": "2016-08-25T08:08:57Z",
      "updated_at": "2016-08-25T08:08:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6871#discussion_r76198016",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76198016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6871"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1028,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}