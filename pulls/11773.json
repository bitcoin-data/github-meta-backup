{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773",
    "id": 154858664,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0ODU4NjY0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11773",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/11773.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/11773.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/265d7c44b1aae06aee93f745a865807732218a73",
    "number": 11773,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": " [tests] Change feature_block.py to use BitcoinTestFramework",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Next step in #10603.\r\n\r\n- first three commits tidy up feature_block.py\r\n- fourth commit removes usage of ComparisonTestFramework\r\n\r\nLonger term, it would be better to separate net_processing testing from validation testing, but I think this is still a useful PR, since it moves us away from the comparison test framework.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-11-27T16:40:32Z",
    "updated_at": "2021-09-08T11:53:54Z",
    "closed_at": "2018-03-29T15:36:30Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-03-29T15:36:30Z",
    "merge_commit_sha": "265d7c44b1aae06aee93f745a865807732218a73",
    "assignee": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jnewbery:refactor_p2pfullblocktest",
      "ref": "refactor_p2pfullblocktest",
      "sha": "265d7c44b1aae06aee93f745a865807732218a73",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 68248485,
        "node_id": "MDEwOlJlcG9zaXRvcnk2ODI0ODQ4NQ==",
        "name": "bitcoin",
        "full_name": "jnewbery/bitcoin",
        "owner": {
          "login": "jnewbery",
          "id": 1063656,
          "node_id": "MDQ6VXNlcjEwNjM2NTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jnewbery",
          "html_url": "https://github.com/jnewbery",
          "followers_url": "https://api.github.com/users/jnewbery/followers",
          "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
          "organizations_url": "https://api.github.com/users/jnewbery/orgs",
          "repos_url": "https://api.github.com/users/jnewbery/repos",
          "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jnewbery/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jnewbery/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jnewbery/bitcoin",
        "archive_url": "https://api.github.com/repos/jnewbery/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jnewbery/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jnewbery/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jnewbery/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jnewbery/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jnewbery/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jnewbery/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jnewbery/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jnewbery/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jnewbery/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jnewbery/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jnewbery/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jnewbery/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jnewbery/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jnewbery/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jnewbery/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jnewbery/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jnewbery/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jnewbery/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jnewbery/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jnewbery/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jnewbery/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jnewbery/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jnewbery/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jnewbery/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jnewbery/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jnewbery/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jnewbery/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jnewbery/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jnewbery/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jnewbery/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jnewbery/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jnewbery/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jnewbery/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jnewbery/bitcoin/hooks",
        "svn_url": "https://github.com/jnewbery/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 219109,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-21T11:07:55Z",
        "created_at": "2016-09-14T22:29:05Z",
        "updated_at": "2021-07-06T16:23:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ee7b67e2784a5f08dffa6b05cee0e64c53a693c8",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T00:11:53Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 677,
    "deletions": 644,
    "changed_files": 2,
    "commits": 5,
    "review_comments": 23,
    "comments": 22
  },
  "events": [
    {
      "event": "labeled",
      "id": 1360202341,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEzNjAyMDIzNDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1360202341",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-27T21:51:32Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "assigned",
      "id": 1360514340,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQxMzYwNTE0MzQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1360514340",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-28T02:23:36Z",
      "assignee": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 79743968,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Nzk3NDM5Njg=",
      "url": null,
      "actor": null,
      "commit_id": "36cfdb9dbbb4a078590a4cd99e09e1136c59f317",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Just some basic review of code standards/conventions. Mostly applies to the refactored code, new code looks to have done the job from the get go.",
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-79743968",
      "submitted_at": "2017-11-29T06:22:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "commented",
      "id": 347859204,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzg1OTIwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347859204",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T13:25:06Z",
      "updated_at": "2017-11-29T13:25:06Z",
      "author_association": "MEMBER",
      "body": "Thanks for your input @JohnVonNeumann. Three of your nits are on comments that are already in the code, and the last is to revert a pep8 fix (pep8 states that 'inline comments should be separated by at least two spaces from the statement. They should start with a # and a single space.')\r\n\r\nthe invalidtxrequest and invalidblockrequest refactors are covered by #11771 and #11772. If you have functional review of those tests, can you leave comments in those PRs?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347859204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "mentioned",
      "id": 1363506233,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM2MzUwNjIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1363506233",
      "actor": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T13:25:06Z"
    },
    {
      "event": "subscribed",
      "id": 1363506234,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNjM1MDYyMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1363506234",
      "actor": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T13:25:06Z"
    },
    {
      "event": "commented",
      "id": 347957605,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk1NzYwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347957605",
      "actor": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T18:48:04Z",
      "updated_at": "2017-11-29T18:53:37Z",
      "author_association": "NONE",
      "body": "Is it typically best off to leave preexisting nits for other PRs? Is that something I could fix myself and submit as a PR? Would that be the typical way to address it? I assume you look to keep the PRs clean otherwise people would just keep bringing up little things and it would be difficult to tell what was actually being added in the PR itself?\r\n\r\nApologies on the last PEP8 spacing comment too! I missed that part when reading the docs!\r\n\r\nWill have a look at the other PRs and comment in those. Thanks for the feedback as well.\r\n\r\nEDIT: Also sorry for not seeing that you had asked for #11771 and #11772 to be reviewed first, I didn't read the PR notes thoroughly, will keep an eye on them better from now on.",
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347957605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 347958810,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk1ODgxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347958810",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T18:52:09Z",
      "updated_at": "2017-11-29T18:52:20Z",
      "author_association": "MEMBER",
      "body": "> Is it typically best off to leave preexisting nits for other PRs? Is that something I could fix myself and submit as a PR? Would that be the typical way to address it? I assume you look to keep the PRs clean otherwise people would just keep bringing up little things and it would be difficult to tell what was actually being added in the PR itself?\r\n\r\nI usually clean up style nits as I go, and precede functional-change commits with tidy-up commits as I have in this PR.\r\n\r\nThe nits you've raised are more your personal preference than following any particular style convention, so I don't think there's any benefit for you to open a PR for them.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347958810",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 347960754,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk2MDc1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347960754",
      "actor": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T18:58:30Z",
      "updated_at": "2017-11-29T18:58:30Z",
      "author_association": "NONE",
      "body": "Ok this makes sense, although I disagree that all my comments were related directly to my personal preference, for me it was just about keeping the standards throughout the code, for example with the redundant inline comment, I don't see any of them throughout the newly written code, so it would make sense to not have them in the old code. However, you are probably right, and I'll happily defer to your experience. \r\n\r\nI'll try and make my reviews more valuable.\r\n\r\nCheers",
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347960754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1364874005,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM2NDg3NDAwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1364874005",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-30T03:35:38Z"
    },
    {
      "event": "commented",
      "id": 348702673,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcwMjY3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348702673",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-02T16:24:10Z",
      "updated_at": "2017-12-02T16:24:10Z",
      "author_association": "MEMBER",
      "body": "This requires rebase, but I'll leave it as it is until #11771 is reviewed/merged.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-348702673",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1386339177,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM4NjMzOTE3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1386339177",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-13T19:39:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1388182372,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM4ODE4MjM3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1388182372",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-14T17:43:50Z"
    },
    {
      "event": "reviewed",
      "id": 84888774,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODQ4ODg3NzQ=",
      "url": null,
      "actor": null,
      "commit_id": "a9554710e65484d7973b706829be67faff53c357",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Skipped first two commits which are from #11771 and not up to date. Reviewed remaining individual commits:\r\n\r\n- utACK 13ed1ebe08d100500a8f5311c0f91fe4d8f680db [tests] Improve assert message when wait_until() fails\r\n- utACK 1e5da2e20d655d602e62ed87a80df0f23bbe7a34 [tests] Change p2p-fullblocktest to use BitcoinTestFramework\r\n- utACK 63782cd7c7e864f73b2fb715e24513d3d3117214 [tests] Add logging to p2p-fullblocktest.py\r\n- utACK a9554710e65484d7973b706829be67faff53c357 [tests] Tidy up p2pfullblocktest\r\n- utACK 40f7f6b99698552e71537c97e76c2011ebaa5626 [tests] Fix flake8 warnings in p2p-fullblocktest\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-84888774",
      "submitted_at": "2017-12-20T20:44:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1473004396,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3MzAwNDM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1473004396",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T03:23:23Z"
    },
    {
      "event": "commented",
      "id": 365484221,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQ4NDIyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/365484221",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T03:23:55Z",
      "updated_at": "2018-02-14T03:23:55Z",
      "author_association": "MEMBER",
      "body": "Rebased now that #11771 has been merged.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-365484221",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1474713220,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3NDcxMzIyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1474713220",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T21:16:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1474734634,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3NDczNDYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1474734634",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T21:29:28Z"
    },
    {
      "event": "renamed",
      "id": 1474815004,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTQ3NDgxNTAwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1474815004",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T22:17:18Z",
      "rename": {
        "from": " [tests] Change p2p-fullblocktest to use BitcoinTestFramework",
        "to": " [tests] Change feature_blocks.py to use BitcoinTestFramework"
      }
    },
    {
      "event": "renamed",
      "id": 1474817395,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTQ3NDgxNzM5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1474817395",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T22:18:49Z",
      "rename": {
        "from": " [tests] Change feature_blocks.py to use BitcoinTestFramework",
        "to": " [tests] Change feature_block.py to use BitcoinTestFramework"
      }
    },
    {
      "event": "commented",
      "id": 366023674,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAyMzY3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366023674",
      "actor": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-15T18:47:18Z",
      "updated_at": "2018-02-15T18:47:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK",
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-366023674",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 366024380,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAyNDM4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366024380",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-15T18:49:41Z",
      "updated_at": "2018-02-15T18:49:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 061f4d8cfba58d299dd913bd96f88bddebae8276\r\n\r\nThanks for a very nice cleanup! Looking forward to seeing this merged!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-366024380",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 366025989,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAyNTk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366025989",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-15T18:55:22Z",
      "updated_at": "2018-02-15T18:55:22Z",
      "author_association": "MEMBER",
      "body": "I saw Travis fail on this, but the trace wasn't printed because of https://github.com/bitcoin/bitcoin/pull/12438.\r\n\r\nI reran the job and it passed. It seems that there may be an intermittent failure in the test. I'll rebase on master to get #12438 and try kicking Travis a few times.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-366025989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1476541354,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3NjU0MTM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1476541354",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-15T18:55:49Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2QwMWQyMzVhNmE4ZmI4NmFlNjkzY2RlZDc4YjU1MzVjZGM5NGIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cd01d235a6a8fb86ae693cded78b5535cdc94b3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5cd01d235a6a8fb86ae693cded78b5535cdc94b3",
      "tree": {
        "sha": "1ccc9e16e6e3dc38b3a9126fed40a0cf1b6c6372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ccc9e16e6e3dc38b3a9126fed40a0cf1b6c6372"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00d1680498c5550e7db1f359202d3433a092fafd",
          "sha": "00d1680498c5550e7db1f359202d3433a092fafd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/00d1680498c5550e7db1f359202d3433a092fafd"
        }
      ],
      "message": "[tests] Fix flake8 warnings in feature_block.py",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-19T13:33:37Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-11-22T17:57:58Z"
      },
      "sha": "5cd01d235a6a8fb86ae693cded78b5535cdc94b3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODk4YzRmM2Q3YWZhMGFiZjg3NjgzMWJmNDc5YzNiOGYxNTE0MDcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3898c4f3d7afa0abf876831bf479c3b8f1514070",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3898c4f3d7afa0abf876831bf479c3b8f1514070",
      "tree": {
        "sha": "0c5ebf957a5d438a20294387e6dd10547bf229f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c5ebf957a5d438a20294387e6dd10547bf229f8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cd01d235a6a8fb86ae693cded78b5535cdc94b3",
          "sha": "5cd01d235a6a8fb86ae693cded78b5535cdc94b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5cd01d235a6a8fb86ae693cded78b5535cdc94b3"
        }
      ],
      "message": "[tests] Tidy up feature_block.py\n\n- move all helper methods to the end\n- remove block, create_tx and create_and_sign_tx shortcuts\n- remove --runbarelyexpensive option, since it defaults to True and it's\nunlikely that anyone ever runs the test with this option set to false.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-19T13:33:37Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-11-22T18:47:03Z"
      },
      "sha": "3898c4f3d7afa0abf876831bf479c3b8f1514070"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzAyYzEyYWU5MTVhYzA0MGY2NDg2MDA0ODkxMmQxNjI0YjkyMWZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc02c12ae915ac040f64860048912d1624b921fb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fc02c12ae915ac040f64860048912d1624b921fb",
      "tree": {
        "sha": "f00ac689e08a70d2158fe66aa2e420c54ff91f2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f00ac689e08a70d2158fe66aa2e420c54ff91f2b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3898c4f3d7afa0abf876831bf479c3b8f1514070",
          "sha": "3898c4f3d7afa0abf876831bf479c3b8f1514070",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3898c4f3d7afa0abf876831bf479c3b8f1514070"
        }
      ],
      "message": "[tests] Add logging to feature_block.py",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-19T13:33:37Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-11-22T19:07:26Z"
      },
      "sha": "fc02c12ae915ac040f64860048912d1624b921fb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1528478351,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUyODQ3ODM1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1528478351",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T13:33:45Z"
    },
    {
      "event": "commented",
      "id": 374212872,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDIxMjg3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374212872",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T13:33:55Z",
      "updated_at": "2018-03-19T13:33:55Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374212872",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "reviewed",
      "id": 105051384,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA1MDUxMzg0",
      "url": null,
      "actor": null,
      "commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code looks good. Just some comments need update in commit 06d512f11998d9b935edf8b032eb76e491cfb7cc it seems",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-105051384",
      "submitted_at": "2018-03-19T18:04:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "reviewed",
      "id": 105077927,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA1MDc3OTI3",
      "url": null,
      "actor": null,
      "commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-105077927",
      "submitted_at": "2018-03-19T18:06:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "commented",
      "id": 374311412,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDMxMTQxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374311412",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T18:09:37Z",
      "updated_at": "2018-03-19T18:09:37Z",
      "author_association": "MEMBER",
      "body": "utACK 1f7a8662cdf2c7775942e3abc90c3745c2adaecc\r\n\r\nGitHub hiding my review is probably a bug on their end.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374311412",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "reviewed",
      "id": 105081074,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA1MDgxMDc0",
      "url": null,
      "actor": null,
      "commit_id": "1f7a8662cdf2c7775942e3abc90c3745c2adaecc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-105081074",
      "submitted_at": "2018-03-19T18:15:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmYwNTNhYzYxMzU5NDE5MDdlY2ZlYmNjYzc3OGRhMzRiNTg1ZmFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebf053ac6135941907ecfebccc778da34b585fac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ebf053ac6135941907ecfebccc778da34b585fac",
      "tree": {
        "sha": "128d5198d14c4e61fd77e725b511374d2e702bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/128d5198d14c4e61fd77e725b511374d2e702bbc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc02c12ae915ac040f64860048912d1624b921fb",
          "sha": "fc02c12ae915ac040f64860048912d1624b921fb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fc02c12ae915ac040f64860048912d1624b921fb"
        }
      ],
      "message": "[tests] Change feature_block.py to use BitcoinTestFramework",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-19T18:26:09Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-08T19:59:04Z"
      },
      "sha": "ebf053ac6135941907ecfebccc778da34b585fac"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjVkN2M0NGIxYWFlMDZhZWU5M2Y3NDVhODY1ODA3NzMyMjE4YTcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/265d7c44b1aae06aee93f745a865807732218a73",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/265d7c44b1aae06aee93f745a865807732218a73",
      "tree": {
        "sha": "87b07c01384fd6403576cb3f7e14e30f0be50cc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87b07c01384fd6403576cb3f7e14e30f0be50cc8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebf053ac6135941907ecfebccc778da34b585fac",
          "sha": "ebf053ac6135941907ecfebccc778da34b585fac",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ebf053ac6135941907ecfebccc778da34b585fac"
        }
      ],
      "message": "[tests] Improve assert message when wait_until() fails",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-19T18:26:12Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-12-13T19:39:44Z"
      },
      "sha": "265d7c44b1aae06aee93f745a865807732218a73"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1529217027,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUyOTIxNzAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529217027",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T18:31:59Z"
    },
    {
      "event": "commented",
      "id": 374318731,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDMxODczMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374318731",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T18:32:15Z",
      "updated_at": "2018-03-19T18:32:15Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @MarcoFalke - I think I've addressed your comments",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374318731",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "mentioned",
      "id": 1529217564,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTUyOTIxNzU2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529217564",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T18:32:15Z"
    },
    {
      "event": "subscribed",
      "id": 1529217566,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1MjkyMTc1NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529217566",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T18:32:15Z"
    },
    {
      "event": "commented",
      "id": 374323597,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDMyMzU5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374323597",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-19T18:47:34Z",
      "updated_at": "2018-03-19T18:47:34Z",
      "author_association": "MEMBER",
      "body": "Thanks re-utACK 265d7c44b1aae06aee93f745a865807732218a73",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374323597",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 374596825,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDU5NjgyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374596825",
      "actor": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-20T13:27:21Z",
      "updated_at": "2018-03-20T13:27:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Test re-ACK 265d7c44b1aae06aee93f745a865807732218a73",
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374596825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 376522188,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjUyMjE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376522188",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T13:20:40Z",
      "updated_at": "2018-03-27T13:20:40Z",
      "author_association": "MEMBER",
      "body": "Ready for merge?",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376522188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 376553468,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjU1MzQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376553468",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:48:52Z",
      "updated_at": "2018-03-27T14:48:52Z",
      "author_association": "MEMBER",
      "body": "Needs more (re) acks\n\nOn Tue, Mar 27, 2018, 09:21 jamesob <notifications@github.com> wrote:\n\n> Ready for merge?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376522188>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmv32N2D39OikZv_aEbDkLMcUm6iy6ks5tijzTgaJpZM4Qr7m3>\n> .\n>\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376553468",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 376555284,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjU1NTI4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376555284",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:53:41Z",
      "updated_at": "2018-03-27T14:53:41Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky @practicalswift - care to reACK?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376555284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "mentioned",
      "id": 1543438661,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU0MzQzODY2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1543438661",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:53:41Z"
    },
    {
      "event": "subscribed",
      "id": 1543438662,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NDM0Mzg2NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1543438662",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:53:41Z"
    },
    {
      "event": "mentioned",
      "id": 1543438663,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU0MzQzODY2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1543438663",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:53:41Z"
    },
    {
      "event": "subscribed",
      "id": 1543438664,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NDM0Mzg2NjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1543438664",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:53:41Z"
    },
    {
      "event": "reviewed",
      "id": 107410988,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA3NDEwOTg4",
      "url": null,
      "actor": null,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 265d7c44b1aae06aee93f745a865807732218a73. No code changes since last review except rebase and tweaks in feature_block.py commit (updating comments and reverting b89 loop change). There was also a commit message change mentioning runbarelyexpensive.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-107410988",
      "submitted_at": "2018-03-27T18:23:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "reviewed",
      "id": 107426126,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA3NDI2MTI2",
      "url": null,
      "actor": null,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/11773/commits/265d7c44b1aae06aee93f745a865807732218a73",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-107426126",
      "submitted_at": "2018-03-27T19:05:53Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "commented",
      "id": 376650940,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjY1MDk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376650940",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T19:45:36Z",
      "updated_at": "2018-03-27T19:45:36Z",
      "author_association": "MEMBER",
      "body": "4 ACKs. Ready for merge @MarcoFalke ?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376650940",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "mentioned",
      "id": 1544077366,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU0NDA3NzM2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1544077366",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T19:45:36Z"
    },
    {
      "event": "subscribed",
      "id": 1544077369,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NDQwNzczNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1544077369",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T19:45:36Z"
    },
    {
      "event": "commented",
      "id": 376666080,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjY2NjA4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376666080",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T20:35:24Z",
      "updated_at": "2018-03-27T20:35:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 265d7c44b1aae06aee93f745a865807732218a73",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376666080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 376692703,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjY5MjcwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376692703",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T22:11:03Z",
      "updated_at": "2018-03-27T22:11:03Z",
      "author_association": "MEMBER",
      "body": "@laanwj Could you please merge this, since I am using my travel laptop for the next few days?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376692703",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "mentioned",
      "id": 1544343299,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU0NDM0MzI5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1544343299",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T22:11:03Z"
    },
    {
      "event": "subscribed",
      "id": 1544343300,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NDQzNDMzMDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1544343300",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T22:11:03Z"
    },
    {
      "event": "assigned",
      "id": 1544343688,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQxNTQ0MzQzNjg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1544343688",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T22:11:19Z",
      "assignee": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "merged",
      "id": 1548175165,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTU0ODE3NTE2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1548175165",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/265d7c44b1aae06aee93f745a865807732218a73",
      "created_at": "2018-03-29T15:36:30Z"
    },
    {
      "event": "closed",
      "id": 1548175170,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTU0ODE3NTE3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1548175170",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-29T15:36:30Z"
    },
    {
      "event": "referenced",
      "id": 1548176345,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1NDgxNzYzNDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1548176345",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f0f9732d05d79a0c0a69cd0e5b1a074acad40265",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0f9732d05d79a0c0a69cd0e5b1a074acad40265",
      "created_at": "2018-03-29T15:36:56Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 1548184495,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQxNTQ4MTg0NDk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1548184495",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-29T15:40:18Z"
    },
    {
      "event": "commented",
      "id": 377672312,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY3MjMxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377672312",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-31T07:10:02Z",
      "updated_at": "2018-03-31T07:10:02Z",
      "author_association": "MEMBER",
      "body": "It looks like ebf053ac6135941907ecfebccc778da34b585fac is causing feature_block.py to use about 5GB of RSS memory instead of about 1GB, haven't had time to look into quite why yet. It's causing MemoryError exceptions on my 4GB vm :(",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-377672312",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "commented",
      "id": 378023123,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODAyMzEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378023123",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-02T19:45:21Z",
      "updated_at": "2018-04-02T19:45:21Z",
      "author_association": "MEMBER",
      "body": "@ajtowns - I think your memory problem is fixed in #12861",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-378023123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11773"
    },
    {
      "event": "mentioned",
      "id": 1552608812,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1MjYwODgxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1552608812",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-02T19:45:21Z"
    },
    {
      "event": "subscribed",
      "id": 1552608813,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTI2MDg4MTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1552608813",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-02T19:45:21Z"
    },
    {
      "event": "referenced",
      "id": 1557730358,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1NTc3MzAzNTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1557730358",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9a2db3b3d511b34489c3cda78d8b80f39e5ade0f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a2db3b3d511b34489c3cda78d8b80f39e5ade0f",
      "created_at": "2018-04-05T00:49:17Z"
    },
    {
      "event": "reviewed",
      "id": 118863309,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE4ODYzMzA5",
      "url": null,
      "actor": null,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#pullrequestreview-118863309",
      "submitted_at": "2018-05-09T18:58:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
    },
    {
      "event": "referenced",
      "id": 2673873555,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2NzM4NzM1NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2673873555",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "22b9bfea33b7fa895e1a990b21e9b007a293f942",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/22b9bfea33b7fa895e1a990b21e9b007a293f942",
      "created_at": "2019-09-30T16:07:25Z"
    },
    {
      "event": "referenced",
      "id": 2674066530,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2NzQwNjY1MzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2674066530",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c32b2714101d900353cbe1c87f531ecd754ba1c1",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/c32b2714101d900353cbe1c87f531ecd754ba1c1",
      "created_at": "2019-09-30T17:08:37Z"
    },
    {
      "event": "referenced",
      "id": 2679891725,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2Nzk4OTE3MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2679891725",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "79d6ae2922c17cc87fefb3e726c02fe3e99c2bf2",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/79d6ae2922c17cc87fefb3e726c02fe3e99c2bf2",
      "created_at": "2019-10-02T09:21:00Z"
    },
    {
      "event": "referenced",
      "id": 2680575373,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2ODA1NzUzNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2680575373",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4bf88d56ce406a42cc74cda5144bc43be9070b28",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/4bf88d56ce406a42cc74cda5144bc43be9070b28",
      "created_at": "2019-10-02T13:26:31Z"
    },
    {
      "event": "referenced",
      "id": 2683608822,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2ODM2MDg4MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2683608822",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "400674c412dd3ee74ad733a83a85bf9d3e1fc45b",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/400674c412dd3ee74ad733a83a85bf9d3e1fc45b",
      "created_at": "2019-10-03T10:48:33Z"
    },
    {
      "event": "referenced",
      "id": 2683815107,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2ODM4MTUxMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2683815107",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f7d1974e3ddb0a9e5ffd001e60b68ec1e0a3e432",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/f7d1974e3ddb0a9e5ffd001e60b68ec1e0a3e432",
      "created_at": "2019-10-03T12:10:01Z"
    },
    {
      "event": "referenced",
      "id": 2940298536,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDAyOTg1MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940298536",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "91b4a38398b2b0ac0dd2ca485feb345d2f1f69fa",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/91b4a38398b2b0ac0dd2ca485feb345d2f1f69fa",
      "created_at": "2020-01-11T01:31:29Z"
    },
    {
      "event": "referenced",
      "id": 4517981497,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1MTc5ODE0OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4517981497",
      "actor": {
        "login": "ckti",
        "id": 7046769,
        "node_id": "MDQ6VXNlcjcwNDY3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7046769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ckti",
        "html_url": "https://github.com/ckti",
        "followers_url": "https://api.github.com/users/ckti/followers",
        "following_url": "https://api.github.com/users/ckti/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ckti/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ckti/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ckti/subscriptions",
        "organizations_url": "https://api.github.com/users/ckti/orgs",
        "repos_url": "https://api.github.com/users/ckti/repos",
        "events_url": "https://api.github.com/users/ckti/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ckti/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3170bf03b08c26bb6fe38fb9598823d6943d895c",
      "commit_url": "https://api.github.com/repos/ckti-ioncore-current/ion/commits/3170bf03b08c26bb6fe38fb9598823d6943d895c",
      "created_at": "2021-03-28T10:02:57Z"
    },
    {
      "event": "referenced",
      "id": 4962428161,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NjI0MjgxNjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4962428161",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "211cda13b3db6d103eaedb5e6c12fa611eaaf204",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/211cda13b3db6d103eaedb5e6c12fa611eaaf204",
      "created_at": "2021-06-30T22:39:50Z"
    },
    {
      "event": "locked",
      "id": 5271801168,
      "node_id": "LOE_lADOABII584QhAB4zwAAAAE6OU1Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271801168",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:53:54Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153699992",
      "pull_request_review_id": 79743968,
      "id": 153699992,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY5OTk5Mg==",
      "diff_hunk": "@@ -10,74 +10,65 @@\n 3) Invalid block with bad coinbase value should be rejected and not\n re-requested.\n \"\"\"\n-\n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n-from test_framework.blocktools import *\n import copy\n-import time\n \n-# Use the ComparisonTestFramework with 1 node: only use --testbinary.\n-class InvalidBlockRequestTest(ComparisonTestFramework):\n+from test_framework.blocktools import create_block, create_coinbase, create_transaction\n+from test_framework.messages import COIN\n+from test_framework.mininode import NetworkThread, P2PStub\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n \n-    ''' Can either run this test as 1 node with expected answers, or two and compare them. \n-        Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n+class InvalidBlockRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n \n     def run_test(self):\n-        test = TestManager(self, self.options.tmpdir)\n-        test.add_all_connections(self.nodes)\n-        self.tip = None\n-        self.block_time = None\n-        NetworkThread().start() # Start up network handling in another thread\n-        test.run()\n-\n-    def get_tests(self):\n-        if self.tip is None:\n-            self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n-        self.block_time = int(time.time())+1\n-\n-        '''\n-        Create a new block with an anyone-can-spend coinbase\n-        '''\n+        # Add p2p connection to node0\n+        node = self.nodes[0]  # convenience reference to the node\n+        node.add_p2p_connection(P2PStub())\n+\n+        NetworkThread().start()  # Start up network handling in another thread",
      "path": "test/functional/invalidblockrequest.py",
      "position": null,
      "original_position": 48,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "36cfdb9dbbb4a078590a4cd99e09e1136c59f317",
      "in_reply_to_id": null,
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unsure if you guys adhere directly to PEP8 but this comment looks like it could be removed, seems redundant.",
      "created_at": "2017-11-29T06:04:18Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153699992",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153699992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153700278",
      "pull_request_review_id": 79743968,
      "id": 153700278,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwMDI3OA==",
      "diff_hunk": "@@ -10,74 +10,65 @@\n 3) Invalid block with bad coinbase value should be rejected and not\n re-requested.\n \"\"\"\n-\n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n-from test_framework.blocktools import *\n import copy\n-import time\n \n-# Use the ComparisonTestFramework with 1 node: only use --testbinary.\n-class InvalidBlockRequestTest(ComparisonTestFramework):\n+from test_framework.blocktools import create_block, create_coinbase, create_transaction\n+from test_framework.messages import COIN\n+from test_framework.mininode import NetworkThread, P2PStub\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n \n-    ''' Can either run this test as 1 node with expected answers, or two and compare them. \n-        Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n+class InvalidBlockRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n \n     def run_test(self):\n-        test = TestManager(self, self.options.tmpdir)\n-        test.add_all_connections(self.nodes)\n-        self.tip = None\n-        self.block_time = None\n-        NetworkThread().start() # Start up network handling in another thread\n-        test.run()\n-\n-    def get_tests(self):\n-        if self.tip is None:\n-            self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n-        self.block_time = int(time.time())+1\n-\n-        '''\n-        Create a new block with an anyone-can-spend coinbase\n-        '''\n+        # Add p2p connection to node0\n+        node = self.nodes[0]  # convenience reference to the node\n+        node.add_p2p_connection(P2PStub())\n+\n+        NetworkThread().start()  # Start up network handling in another thread\n+        node.p2p.wait_for_verack()\n+\n+        best_block = node.getblock(node.getbestblockhash())\n+        tip = int(\"0x\" + node.getbestblockhash(), 0)\n+        height = best_block[\"height\"] + 1\n+        block_time = best_block[\"time\"] + 1\n+\n+        self.log.info(\"Create a new block with an anyone-can-spend coinbase\")\n+\n         height = 1\n-        block = create_block(self.tip, create_coinbase(height), self.block_time)\n-        self.block_time += 1\n+        block = create_block(tip, create_coinbase(height), block_time)\n+        block_time += 1\n         block.solve()\n         # Save the coinbase for later",
      "path": "test/functional/invalidblockrequest.py",
      "position": null,
      "original_position": 64,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "36cfdb9dbbb4a078590a4cd99e09e1136c59f317",
      "in_reply_to_id": null,
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would imagine this would be best moved inline as opposed to on it's own line to keep convention with inline comments like on line 32 and 29.",
      "created_at": "2017-11-29T06:07:06Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153700278",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153700278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153701261",
      "pull_request_review_id": 79743968,
      "id": 153701261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwMTI2MQ==",
      "diff_hunk": "@@ -10,74 +10,65 @@\n 3) Invalid block with bad coinbase value should be rejected and not\n re-requested.\n \"\"\"\n-\n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n-from test_framework.blocktools import *\n import copy\n-import time\n \n-# Use the ComparisonTestFramework with 1 node: only use --testbinary.\n-class InvalidBlockRequestTest(ComparisonTestFramework):\n+from test_framework.blocktools import create_block, create_coinbase, create_transaction\n+from test_framework.messages import COIN\n+from test_framework.mininode import NetworkThread, P2PStub\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n \n-    ''' Can either run this test as 1 node with expected answers, or two and compare them. \n-        Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n+class InvalidBlockRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n \n     def run_test(self):\n-        test = TestManager(self, self.options.tmpdir)\n-        test.add_all_connections(self.nodes)\n-        self.tip = None\n-        self.block_time = None\n-        NetworkThread().start() # Start up network handling in another thread\n-        test.run()\n-\n-    def get_tests(self):\n-        if self.tip is None:\n-            self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n-        self.block_time = int(time.time())+1\n-\n-        '''\n-        Create a new block with an anyone-can-spend coinbase\n-        '''\n+        # Add p2p connection to node0\n+        node = self.nodes[0]  # convenience reference to the node\n+        node.add_p2p_connection(P2PStub())\n+\n+        NetworkThread().start()  # Start up network handling in another thread\n+        node.p2p.wait_for_verack()\n+\n+        best_block = node.getblock(node.getbestblockhash())\n+        tip = int(\"0x\" + node.getbestblockhash(), 0)\n+        height = best_block[\"height\"] + 1\n+        block_time = best_block[\"time\"] + 1\n+\n+        self.log.info(\"Create a new block with an anyone-can-spend coinbase\")\n+\n         height = 1\n-        block = create_block(self.tip, create_coinbase(height), self.block_time)\n-        self.block_time += 1\n+        block = create_block(tip, create_coinbase(height), block_time)\n+        block_time += 1\n         block.solve()\n         # Save the coinbase for later\n-        self.block1 = block\n-        self.tip = block.sha256\n+        block1 = block\n+        tip = block.sha256\n         height += 1\n-        yield TestInstance([[block, True]])\n-\n-        '''\n-        Now we need that block to mature so we can spend the coinbase.\n-        '''\n-        test = TestInstance(sync_every_block=False)\n-        for i in range(100):\n-            block = create_block(self.tip, create_coinbase(height), self.block_time)\n-            block.solve()\n-            self.tip = block.sha256\n-            self.block_time += 1\n-            test.blocks_and_transactions.append([block, True])\n-            height += 1\n-        yield test\n-\n-        '''\n-        Now we use merkle-root malleability to generate an invalid block with\n-        same blockheader.\n-        Manufacture a block with 3 transactions (coinbase, spend of prior\n-        coinbase, spend of that spend).  Duplicate the 3rd transaction to \n-        leave merkle root and blockheader unchanged but invalidate the block.\n-        '''\n-        block2 = create_block(self.tip, create_coinbase(height), self.block_time)\n-        self.block_time += 1\n+        node.p2p.send_blocks_and_test([block1], node, True)\n+\n+        self.log.info(\"Mature the block.\")\n+        node.generate(100)\n+\n+        best_block = node.getblock(node.getbestblockhash())\n+        tip = int(\"0x\" + node.getbestblockhash(), 0)\n+        height = best_block[\"height\"] + 1\n+        block_time = best_block[\"time\"] + 1\n+\n+        # Use merkle-root malleability to generate an invalid block with",
      "path": "test/functional/invalidblockrequest.py",
      "position": null,
      "original_position": 104,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "36cfdb9dbbb4a078590a4cd99e09e1136c59f317",
      "in_reply_to_id": null,
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would assume this block comment should be moved into a docstring block like in test/functional/test_framework/mininode.py P2PStub class. Seems like the standard are great in there, I'm assuming that's down to this section being a refactor.",
      "created_at": "2017-11-29T06:17:49Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153701261",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153701261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153701345",
      "pull_request_review_id": 79743968,
      "id": 153701345,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwMTM0NQ==",
      "diff_hunk": "@@ -4,68 +4,50 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid transactions.\n \n-In this test we connect to one node over p2p, and test tx requests.\n-\"\"\"\n-\n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n-from test_framework.blocktools import *\n+In this test we connect to one node over p2p, and test tx requests.\"\"\"\n import time\n \n+from test_framework.blocktools import create_block, create_coinbase, create_transaction\n+from test_framework.mininode import NetworkThread, P2PStub\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n \n+class InvalidTxRequestTest(BitcoinTestFramework):\n \n-# Use the ComparisonTestFramework with 1 node: only use --testbinary.\n-class InvalidTxRequestTest(ComparisonTestFramework):\n-\n-    ''' Can either run this test as 1 node with expected answers, or two and compare them. \n-        Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n \n     def run_test(self):\n-        test = TestManager(self, self.options.tmpdir)\n-        test.add_all_connections(self.nodes)\n-        self.tip = None\n-        self.block_time = None\n-        NetworkThread().start() # Start up network handling in another thread\n-        test.run()\n+        # Add p2p connection to node0\n+        node = self.nodes[0]  # convenience reference to the node\n+        node.add_p2p_connection(P2PStub())\n+\n+        NetworkThread().start()  # Start up network handling in another thread",
      "path": "test/functional/invalidtxrequest.py",
      "position": null,
      "original_position": 41,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "36cfdb9dbbb4a078590a4cd99e09e1136c59f317",
      "in_reply_to_id": null,
      "user": {
        "login": "JohnVonNeumann",
        "id": 18162779,
        "node_id": "MDQ6VXNlcjE4MTYyNzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/18162779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JohnVonNeumann",
        "html_url": "https://github.com/JohnVonNeumann",
        "followers_url": "https://api.github.com/users/JohnVonNeumann/followers",
        "following_url": "https://api.github.com/users/JohnVonNeumann/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JohnVonNeumann/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JohnVonNeumann/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions",
        "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs",
        "repos_url": "https://api.github.com/users/JohnVonNeumann/repos",
        "events_url": "https://api.github.com/users/JohnVonNeumann/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Newly added whitespace can be removed.",
      "created_at": "2017-11-29T06:18:49Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153701345",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153701345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158128644",
      "pull_request_review_id": 84888774,
      "id": 158128644,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODEyODY0NA==",
      "diff_hunk": "@@ -94,228 +96,123 @@ def set_test_params(self):\n         self.tip = None\n         self.blocks = {}\n \n-    def add_options(self, parser):\n-        super().add_options(parser)\n-        parser.add_option(\"--runbarelyexpensive\", dest=\"runbarelyexpensive\", default=True)",
      "path": "test/functional/p2p-fullblocktest.py",
      "position": null,
      "original_position": 15,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "a9554710e65484d7973b706829be67faff53c357",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Tidy up p2pfullblocktest\"\r\n\r\nCan you note that this option was removed in the commit message (and maybe say why it wasn't useful?)",
      "created_at": "2017-12-20T20:32:32Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r158128644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158128644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/168069256",
      "pull_request_review_id": 96376342,
      "id": 168069256,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODA2OTI1Ng==",
      "diff_hunk": "@@ -94,228 +96,123 @@ def set_test_params(self):\n         self.tip = None\n         self.blocks = {}\n \n-    def add_options(self, parser):\n-        super().add_options(parser)\n-        parser.add_option(\"--runbarelyexpensive\", dest=\"runbarelyexpensive\", default=True)",
      "path": "test/functional/p2p-fullblocktest.py",
      "position": null,
      "original_position": 15,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "a9554710e65484d7973b706829be67faff53c357",
      "in_reply_to_id": 158128644,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep. Added to commit message.",
      "created_at": "2018-02-14T03:23:13Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r168069256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/168069256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175510431",
      "pull_request_review_id": 105051384,
      "id": 175510431,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUxMDQzMQ==",
      "diff_hunk": "@@ -82,46 +71,42 @@ def serialize(self, with_witness=False):\n         return r\n \n     def normal_serialize(self):\n-        r = b\"\"\n-        r += super(CBrokenBlock, self).serialize()\n-        return r\n+        return super().serialize()\n \n-class FullBlockTest(ComparisonTestFramework):\n-    # Can either run this test as 1 node with expected answers, or two and compare them.\n-    # Change the \"outcome\" variable from each TestInstance object to only do the comparison.\n+class FullBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]  # convenience reference to the node\n+\n+        network_thread_start()",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 69,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Could mention in a comment that this is only needed because `connect_p2p` assumes the thread is already running.\r\n\r\nnit: Could rename `connect_p2p` to `reconnect_p2p`, since it only works when the thread is already running?",
      "created_at": "2018-03-19T17:01:22Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175510431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175510431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175521812",
      "pull_request_review_id": 105051384,
      "id": 175521812,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUyMTgxMg==",
      "diff_hunk": "@@ -149,60 +134,60 @@ def get_tests(self):\n         self.move_tip(1)\n         b3 = self.next_block(3, spend=out[1])\n         txout_b3 = PreviousSpendableOutput(b3.vtx[1], 0)\n-        yield self.rejected()\n+        self.sync_blocks([b3], False)\n \n         # Now we add another block to make the alternative chain longer.\n         #\n         #     genesis -> b1 (0) -> b2 (1)\n         #                      \\-> b3 (1) -> b4 (2)\n         self.log.info(\"Reorg to a longer chain\")\n-        self.next_block(4, spend=out[2])\n-        yield self.accepted()\n+        b4 = self.next_block(4, spend=out[2])\n+        self.sync_blocks([b4])\n \n         # ... and back to the first chain.\n         #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6 (3)\n         #                      \\-> b3 (1) -> b4 (2)\n         self.move_tip(2)\n-        self.next_block(5, spend=out[2])\n+        b5 = self.next_block(5, spend=out[2])\n         self.save_spendable_output()\n-        yield self.rejected()\n+        self.sync_blocks([b5], False)\n \n         self.log.info(\"Reorg back to the original chain\")\n-        self.next_block(6, spend=out[3])\n-        yield self.accepted()\n+        b6 = self.next_block(6, spend=out[3])\n+        self.sync_blocks([b6], True)\n \n         # Try to create a fork that double-spends\n         #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6 (3)\n-        #                                          \\-> b7 (2) -> b8 (4)\n+        #                                          \\-> b7 (3) -> b8 (4)",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 169,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are you changing this comment?\r\n\r\nBlock 7 spends the output 2 (c.f. line 165)",
      "created_at": "2018-03-19T17:33:39Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175521812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175521812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175525042",
      "pull_request_review_id": 105051384,
      "id": 175525042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUyNTA0Mg==",
      "diff_hunk": "@@ -214,17 +199,12 @@ def get_tests(self):\n         b12 = self.next_block(12, spend=out[3])\n         self.save_spendable_output()\n         b13 = self.next_block(13, spend=out[4])\n-        # Deliver the block header for b12, and the block b13.\n-        # b13 should be accepted but the tip won't advance until b12 is delivered.\n-        yield TestInstance([[CBlockHeader(b12), None], [b13, False]])\n-\n         self.save_spendable_output()\n-        # b14 is invalid, but the node won't know that until it tries to connect\n-        # Tip still can't advance because b12 is missing\n-        self.next_block(14, spend=out[5], additional_coinbase_value=1)\n-        yield self.rejected()\n+        b14 = self.next_block(14, spend=out[5], additional_coinbase_value=1)\n+        self.sync_blocks([b12, b13, b14], False, 16, b'bad-cb-amount', reconnect=True)",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 226,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment above `(b12 added last)` is no longer true with this change.",
      "created_at": "2018-03-19T17:42:57Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175525042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175525042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 204,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175531218",
      "pull_request_review_id": 105051384,
      "id": 175531218,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzMTIxOA==",
      "diff_hunk": "@@ -1201,33 +1186,30 @@ def get_tests(self):\n             tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n             b = self.update_block(i, [tx])\n             assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n-            test1.blocks_and_transactions.append([self.tip, True])\n+            blocks.append(b)\n             self.save_spendable_output()\n             spend = self.get_spendable_output()\n \n-        yield test1\n+        self.sync_blocks(blocks, True, timeout=180)\n         chain1_tip = i\n \n         # now create alt chain of same length\n         self.move_tip(88)\n-        test2 = TestInstance(sync_every_block=False)\n-        for i in range(89, LARGE_REORG_SIZE + 89):\n-            self.next_block(\"alt\" + str(i))\n-            test2.blocks_and_transactions.append([self.tip, False])\n-        yield test2\n+        blocks2 = []\n+        for i in range(1, LARGE_REORG_SIZE + 1):",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 1052,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are you changing this to `1`? We are building blocks on top of block with id `88`, so naming them `\"alt89\"` ... seems appropriate.",
      "created_at": "2018-03-19T18:00:40Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175531218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175531218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175533248",
      "pull_request_review_id": 105077927,
      "id": 175533248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzMzI0OA==",
      "diff_hunk": "@@ -598,77 +577,78 @@ def get_tests(self):\n         self.tip = b46\n         assert 46 not in self.blocks\n         self.blocks[46] = b46\n-        yield self.rejected(RejectResult(16, b'bad-blk-length'))\n+        # s = ser_uint256(b46.hashMerkleRoot)",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 509,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit 06d512f11998d9b935edf8b032eb76e491cfb7cc:\r\n\r\nWhy are you adding this comment? The `ser_uint256` symbol is not imported and it will unsurprisingly be all zeros, since it was set to 0.",
      "created_at": "2018-03-19T18:06:34Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175533248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175533248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175535906",
      "pull_request_review_id": 105081074,
      "id": 175535906,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzNTkwNg==",
      "diff_hunk": "@@ -218,8 +219,12 @@ def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=N\n         time.sleep(0.05)\n \n     # Print the cause of the timeout\n-    assert_greater_than(attempts, attempt)\n-    assert_greater_than(timeout, time.time())\n+    predicate_source = inspect.getsourcelines(predicate)",
      "path": "test/functional/test_framework/util.py",
      "position": 26,
      "original_position": 26,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "1f7a8662cdf2c7775942e3abc90c3745c2adaecc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the last commit:\r\n\r\nI think you meant `inspect.getsource`, since the line itself won't help when the file name is unknown. And the Traceback already shows the line number and file name (as well as the predicate, in case it fits into a single line).",
      "created_at": "2018-03-19T18:15:18Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175535906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175535906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175536022",
      "pull_request_review_id": 105081209,
      "id": 175536022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzNjAyMg==",
      "diff_hunk": "@@ -82,46 +71,42 @@ def serialize(self, with_witness=False):\n         return r\n \n     def normal_serialize(self):\n-        r = b\"\"\n-        r += super(CBrokenBlock, self).serialize()\n-        return r\n+        return super().serialize()\n \n-class FullBlockTest(ComparisonTestFramework):\n-    # Can either run this test as 1 node with expected answers, or two and compare them.\n-    # Change the \"outcome\" variable from each TestInstance object to only do the comparison.\n+class FullBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]  # convenience reference to the node\n+\n+        network_thread_start()",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 69,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": 175510431,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sounds good. Done both.",
      "created_at": "2018-03-19T18:15:35Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175536022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175536022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175536419",
      "pull_request_review_id": 105081570,
      "id": 175536419,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzNjQxOQ==",
      "diff_hunk": "@@ -218,8 +219,12 @@ def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=N\n         time.sleep(0.05)\n \n     # Print the cause of the timeout\n-    assert_greater_than(attempts, attempt)\n-    assert_greater_than(timeout, time.time())\n+    predicate_source = inspect.getsourcelines(predicate)",
      "path": "test/functional/test_framework/util.py",
      "position": 26,
      "original_position": 26,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "1f7a8662cdf2c7775942e3abc90c3745c2adaecc",
      "in_reply_to_id": 175535906,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Imo we could do without `inspect`, since it doesn't seem to add information unless I am missing something.",
      "created_at": "2018-03-19T18:16:34Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175536419",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175536419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175536935",
      "pull_request_review_id": 105082174,
      "id": 175536935,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzNjkzNQ==",
      "diff_hunk": "@@ -149,60 +134,60 @@ def get_tests(self):\n         self.move_tip(1)\n         b3 = self.next_block(3, spend=out[1])\n         txout_b3 = PreviousSpendableOutput(b3.vtx[1], 0)\n-        yield self.rejected()\n+        self.sync_blocks([b3], False)\n \n         # Now we add another block to make the alternative chain longer.\n         #\n         #     genesis -> b1 (0) -> b2 (1)\n         #                      \\-> b3 (1) -> b4 (2)\n         self.log.info(\"Reorg to a longer chain\")\n-        self.next_block(4, spend=out[2])\n-        yield self.accepted()\n+        b4 = self.next_block(4, spend=out[2])\n+        self.sync_blocks([b4])\n \n         # ... and back to the first chain.\n         #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6 (3)\n         #                      \\-> b3 (1) -> b4 (2)\n         self.move_tip(2)\n-        self.next_block(5, spend=out[2])\n+        b5 = self.next_block(5, spend=out[2])\n         self.save_spendable_output()\n-        yield self.rejected()\n+        self.sync_blocks([b5], False)\n \n         self.log.info(\"Reorg back to the original chain\")\n-        self.next_block(6, spend=out[3])\n-        yield self.accepted()\n+        b6 = self.next_block(6, spend=out[3])\n+        self.sync_blocks([b6], True)\n \n         # Try to create a fork that double-spends\n         #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6 (3)\n-        #                                          \\-> b7 (2) -> b8 (4)\n+        #                                          \\-> b7 (3) -> b8 (4)",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 169,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": 175521812,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes - you're right. Fixed",
      "created_at": "2018-03-19T18:18:02Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175536935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175536935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175537883",
      "pull_request_review_id": 105083229,
      "id": 175537883,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzNzg4Mw==",
      "diff_hunk": "@@ -214,17 +199,12 @@ def get_tests(self):\n         b12 = self.next_block(12, spend=out[3])\n         self.save_spendable_output()\n         b13 = self.next_block(13, spend=out[4])\n-        # Deliver the block header for b12, and the block b13.\n-        # b13 should be accepted but the tip won't advance until b12 is delivered.\n-        yield TestInstance([[CBlockHeader(b12), None], [b13, False]])\n-\n         self.save_spendable_output()\n-        # b14 is invalid, but the node won't know that until it tries to connect\n-        # Tip still can't advance because b12 is missing\n-        self.next_block(14, spend=out[5], additional_coinbase_value=1)\n-        yield self.rejected()\n+        b14 = self.next_block(14, spend=out[5], additional_coinbase_value=1)\n+        self.sync_blocks([b12, b13, b14], False, 16, b'bad-cb-amount', reconnect=True)",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 226,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": 175525042,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yes - removed",
      "created_at": "2018-03-19T18:20:53Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175537883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175537883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 204,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175538493",
      "pull_request_review_id": 105083829,
      "id": 175538493,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzODQ5Mw==",
      "diff_hunk": "@@ -598,77 +577,78 @@ def get_tests(self):\n         self.tip = b46\n         assert 46 not in self.blocks\n         self.blocks[46] = b46\n-        yield self.rejected(RejectResult(16, b'bad-blk-length'))\n+        # s = ser_uint256(b46.hashMerkleRoot)",
      "path": "test/functional/feature_block.py",
      "position": null,
      "original_position": 509,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "06d512f11998d9b935edf8b032eb76e491cfb7cc",
      "in_reply_to_id": 175533248,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "removed",
      "created_at": "2018-03-19T18:22:39Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175538493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175538493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175541170",
      "pull_request_review_id": 105087015,
      "id": 175541170,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTU0MTE3MA==",
      "diff_hunk": "@@ -218,8 +219,12 @@ def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=N\n         time.sleep(0.05)\n \n     # Print the cause of the timeout\n-    assert_greater_than(attempts, attempt)\n-    assert_greater_than(timeout, time.time())\n+    predicate_source = inspect.getsourcelines(predicate)",
      "path": "test/functional/test_framework/util.py",
      "position": 26,
      "original_position": 26,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "1f7a8662cdf2c7775942e3abc90c3745c2adaecc",
      "in_reply_to_id": 175535906,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this provides useful information when the `wait_until()` fails.\r\n\r\nWithout this change:\r\n\r\n```\r\n2018-03-19T18:29:56.324000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"./feature_block.py\", line 502, in run_test\r\n    self.sync_blocks([b40], False, 16, b'bad-blk-sigops', reconnect=True)\r\n  File \"./feature_block.py\", line 1315, in sync_blocks\r\n    self.nodes[0].p2p.send_blocks_and_test(blocks, self.nodes[0], success=success, reject_code=reject_code, reject_reason=reject_reason, request_block=request_block, timeout=timeout)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/mininode.py\", line 553, in send_blocks_and_test\r\n    wait_until(lambda: self.reject_code_received == reject_code, lock=mininode_lock, timeout=1)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/util.py\", line 222, in wait_until\r\n    assert_greater_than(timeout, time.time())\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/util.py\", line 42, in assert_greater_than\r\n    raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\r\nAssertionError: 1521484196.279766 <= 1521484196.3246927\r\n```\r\n\r\nWith this change:\r\n\r\n```\r\n2018-03-19T18:27:45.353000Z TestFramework (INFO): Reject a block with too many P2SH sigops\r\n2018-03-19T18:27:48.557000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: (['            wait_until(lambda: self.reject_code_received == reject_code, lock=mininode_lock, timeout=1)\\n'], 553)\r\n2018-03-19T18:27:48.557000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"./feature_block.py\", line 502, in run_test\r\n    self.sync_blocks([b40], False, 16, b'bad-blk-sigops', reconnect=True)\r\n  File \"./feature_block.py\", line 1315, in sync_blocks\r\n    self.nodes[0].p2p.send_blocks_and_test(blocks, self.nodes[0], success=success, reject_code=reject_code, reject_reason=reject_reason, request_block=request_block, timeout=timeout)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/mininode.py\", line 553, in send_blocks_and_test\r\n    wait_until(lambda: self.reject_code_received == reject_code, lock=mininode_lock, timeout=1)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/util.py\", line 227, in wait_until\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate (['            wait_until(lambda: self.reject_code_received == reject_code, lock=mininode_lock, timeout=1)\\n'], 553) not true after 1 seconds\r\n```",
      "created_at": "2018-03-19T18:31:02Z",
      "updated_at": "2018-03-19T18:31:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175541170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175541170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177537490",
      "pull_request_review_id": 107426126,
      "id": 177537490,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzUzNzQ5MA==",
      "diff_hunk": "@@ -1133,161 +1063,259 @@ def update_block(block_number, new_transactions):\n         #    To get around this issue, we construct transactions which are not signed and which\n         #    spend to OP_TRUE.  If the standard-ness rules change, this test would need to be\n         #    updated.  (Perhaps to spend to a P2SH OP_TRUE script)\n-        #\n-        tip(76)\n-        block(77)\n-        tx77 = create_and_sign_tx(out[24].tx, out[24].n, 10*COIN)\n-        update_block(77, [tx77])\n-        yield accepted()\n-        save_spendable_output()\n-\n-        block(78)\n-        tx78 = create_tx(tx77, 0, 9*COIN)\n-        update_block(78, [tx78])\n-        yield accepted()\n-\n-        block(79)\n-        tx79 = create_tx(tx78, 0, 8*COIN)\n-        update_block(79, [tx79])\n-        yield accepted()\n+        self.log.info(\"Test transaction resurrection during a re-org\")\n+        self.move_tip(76)\n+        b77 = self.next_block(77)\n+        tx77 = self.create_and_sign_transaction(out[24].tx, out[24].n, 10 * COIN)\n+        b77 = self.update_block(77, [tx77])\n+        self.sync_blocks([b77], True)\n+        self.save_spendable_output()\n+\n+        b78 = self.next_block(78)\n+        tx78 = self.create_tx(tx77, 0, 9 * COIN)\n+        b78 = self.update_block(78, [tx78])\n+        self.sync_blocks([b78], True)\n+\n+        b79 = self.next_block(79)\n+        tx79 = self.create_tx(tx78, 0, 8 * COIN)\n+        b79 = self.update_block(79, [tx79])\n+        self.sync_blocks([b79], True)\n \n         # mempool should be empty\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n \n-        tip(77)\n-        block(80, spend=out[25])\n-        yield rejected()\n-        save_spendable_output()\n+        self.move_tip(77)\n+        b80 = self.next_block(80, spend=out[25])\n+        self.sync_blocks([b80], False, request_block=False)\n+        self.save_spendable_output()\n \n-        block(81, spend=out[26])\n-        yield rejected() # other chain is same length\n-        save_spendable_output()\n+        b81 = self.next_block(81, spend=out[26])\n+        self.sync_blocks([b81], False, request_block=False)  # other chain is same length\n+        self.save_spendable_output()\n \n-        block(82, spend=out[27])\n-        yield accepted()  # now this chain is longer, triggers re-org\n-        save_spendable_output()\n+        b82 = self.next_block(82, spend=out[27])\n+        self.sync_blocks([b82], True)  # now this chain is longer, triggers re-org\n+        self.save_spendable_output()\n \n         # now check that tx78 and tx79 have been put back into the peer's mempool\n         mempool = self.nodes[0].getrawmempool()\n         assert_equal(len(mempool), 2)\n         assert(tx78.hash in mempool)\n         assert(tx79.hash in mempool)\n \n-\n         # Test invalid opcodes in dead execution paths.\n         #\n         #  -> b81 (26) -> b82 (27) -> b83 (28)\n         #\n-        block(83)\n+        self.log.info(\"Accept a block with invalid opcodes in dead execution paths\")\n+        b83 = self.next_block(83)\n         op_codes = [OP_IF, OP_INVALIDOPCODE, OP_ELSE, OP_TRUE, OP_ENDIF]\n         script = CScript(op_codes)\n-        tx1 = create_and_sign_tx(out[28].tx, out[28].n, out[28].tx.vout[0].nValue, script)\n+        tx1 = self.create_and_sign_transaction(out[28].tx, out[28].n, out[28].tx.vout[0].nValue, script)\n \n-        tx2 = create_and_sign_tx(tx1, 0, 0, CScript([OP_TRUE]))\n+        tx2 = self.create_and_sign_transaction(tx1, 0, 0, CScript([OP_TRUE]))\n         tx2.vin[0].scriptSig = CScript([OP_FALSE])\n         tx2.rehash()\n \n-        update_block(83, [tx1, tx2])\n-        yield accepted()\n-        save_spendable_output()\n-\n+        b83 = self.update_block(83, [tx1, tx2])\n+        self.sync_blocks([b83], True)\n+        self.save_spendable_output()\n \n         # Reorg on/off blocks that have OP_RETURN in them (and try to spend them)\n         #\n         #  -> b81 (26) -> b82 (27) -> b83 (28) -> b84 (29) -> b87 (30) -> b88 (31)\n         #                                    \\-> b85 (29) -> b86 (30)            \\-> b89a (32)\n         #\n-        #\n-        block(84)\n-        tx1 = create_tx(out[29].tx, out[29].n, 0, CScript([OP_RETURN]))\n+        self.log.info(\"Test re-orging blocks with OP_RETURN in them\")\n+        b84 = self.next_block(84)\n+        tx1 = self.create_tx(out[29].tx, out[29].n, 0, CScript([OP_RETURN]))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.calc_sha256()\n         self.sign_tx(tx1, out[29].tx, out[29].n)\n         tx1.rehash()\n-        tx2 = create_tx(tx1, 1, 0, CScript([OP_RETURN]))\n+        tx2 = self.create_tx(tx1, 1, 0, CScript([OP_RETURN]))\n         tx2.vout.append(CTxOut(0, CScript([OP_RETURN])))\n-        tx3 = create_tx(tx1, 2, 0, CScript([OP_RETURN]))\n+        tx3 = self.create_tx(tx1, 2, 0, CScript([OP_RETURN]))\n         tx3.vout.append(CTxOut(0, CScript([OP_TRUE])))\n-        tx4 = create_tx(tx1, 3, 0, CScript([OP_TRUE]))\n+        tx4 = self.create_tx(tx1, 3, 0, CScript([OP_TRUE]))\n         tx4.vout.append(CTxOut(0, CScript([OP_RETURN])))\n-        tx5 = create_tx(tx1, 4, 0, CScript([OP_RETURN]))\n+        tx5 = self.create_tx(tx1, 4, 0, CScript([OP_RETURN]))\n \n-        update_block(84, [tx1,tx2,tx3,tx4,tx5])\n-        yield accepted()\n-        save_spendable_output()\n+        b84 = self.update_block(84, [tx1, tx2, tx3, tx4, tx5])\n+        self.sync_blocks([b84], True)\n+        self.save_spendable_output()\n \n-        tip(83)\n-        block(85, spend=out[29])\n-        yield rejected()\n+        self.move_tip(83)\n+        b85 = self.next_block(85, spend=out[29])\n+        self.sync_blocks([b85], False)  # other chain is same length\n \n-        block(86, spend=out[30])\n-        yield accepted()\n+        b86 = self.next_block(86, spend=out[30])\n+        self.sync_blocks([b86], True)\n \n-        tip(84)\n-        block(87, spend=out[30])\n-        yield rejected()\n-        save_spendable_output()\n+        self.move_tip(84)\n+        b87 = self.next_block(87, spend=out[30])\n+        self.sync_blocks([b87], False)  # other chain is same length\n+        self.save_spendable_output()\n \n-        block(88, spend=out[31])\n-        yield accepted()\n-        save_spendable_output()\n+        b88 = self.next_block(88, spend=out[31])\n+        self.sync_blocks([b88], True)\n+        self.save_spendable_output()\n \n         # trying to spend the OP_RETURN output is rejected\n-        block(\"89a\", spend=out[32])\n-        tx = create_tx(tx1, 0, 0, CScript([OP_TRUE]))\n-        update_block(\"89a\", [tx])\n-        yield rejected()\n-\n-\n-        #  Test re-org of a week's worth of blocks (1088 blocks)\n-        #  This test takes a minute or two and can be accomplished in memory\n-        #\n-        if self.options.runbarelyexpensive:\n-            tip(88)\n-            LARGE_REORG_SIZE = 1088\n-            test1 = TestInstance(sync_every_block=False)\n-            spend=out[32]\n-            for i in range(89, LARGE_REORG_SIZE + 89):\n-                b = block(i, spend)\n-                tx = CTransaction()\n-                script_length = MAX_BLOCK_BASE_SIZE - len(b.serialize()) - 69\n-                script_output = CScript([b'\\x00' * script_length])\n-                tx.vout.append(CTxOut(0, script_output))\n-                tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n-                b = update_block(i, [tx])\n-                assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n-                test1.blocks_and_transactions.append([self.tip, True])\n-                save_spendable_output()\n-                spend = get_spendable_output()\n-\n-            yield test1\n-            chain1_tip = i\n-\n-            # now create alt chain of same length\n-            tip(88)\n-            test2 = TestInstance(sync_every_block=False)\n-            for i in range(89, LARGE_REORG_SIZE + 89):\n-                block(\"alt\"+str(i))\n-                test2.blocks_and_transactions.append([self.tip, False])\n-            yield test2\n-\n-            # extend alt chain to trigger re-org\n-            block(\"alt\" + str(chain1_tip + 1))\n-            yield accepted()\n-\n-            # ... and re-org back to the first chain\n-            tip(chain1_tip)\n-            block(chain1_tip + 1)\n-            yield rejected()\n-            block(chain1_tip + 2)\n-            yield accepted()\n-\n-            chain1_tip += 2\n+        b89a = self.next_block(\"89a\", spend=out[32])\n+        tx = self.create_tx(tx1, 0, 0, CScript([OP_TRUE]))\n+        b89a = self.update_block(\"89a\", [tx])\n+        self.sync_blocks([b89a], False, 16, b'bad-txns-inputs-missingorspent', reconnect=True)\n+\n+        self.log.info(\"Test a re-org of one week's worth of blocks (1088 blocks)\")\n+\n+        self.move_tip(88)\n+        LARGE_REORG_SIZE = 1088\n+        blocks = []\n+        spend = out[32]\n+        for i in range(89, LARGE_REORG_SIZE + 89):\n+            b = self.next_block(i, spend)\n+            tx = CTransaction()\n+            script_length = MAX_BLOCK_BASE_SIZE - len(b.serialize()) - 69\n+            script_output = CScript([b'\\x00' * script_length])\n+            tx.vout.append(CTxOut(0, script_output))\n+            tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n+            b = self.update_block(i, [tx])\n+            assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n+            blocks.append(b)\n+            self.save_spendable_output()\n+            spend = self.get_spendable_output()\n+\n+        self.sync_blocks(blocks, True, timeout=180)\n+        chain1_tip = i\n+\n+        # now create alt chain of same length\n+        self.move_tip(88)\n+        blocks2 = []\n+        for i in range(89, LARGE_REORG_SIZE + 89):\n+            blocks2.append(self.next_block(\"alt\" + str(i)))\n+        self.sync_blocks(blocks2, False, request_block=False)\n+\n+        # extend alt chain to trigger re-org\n+        block = self.next_block(\"alt\" + str(chain1_tip + 1))\n+        self.sync_blocks([block], True, timeout=180)\n+\n+        # ... and re-org back to the first chain\n+        self.move_tip(chain1_tip)\n+        block = self.next_block(chain1_tip + 1)\n+        self.sync_blocks([block], False, request_block=False)\n+        block = self.next_block(chain1_tip + 2)\n+        self.sync_blocks([block], True, timeout=180)\n+\n+    # Helper methods\n+    ################\n+\n+    def add_transactions_to_block(self, block, tx_list):\n+        [tx.rehash() for tx in tx_list]\n+        block.vtx.extend(tx_list)\n+\n+    # this is a little handier to use than the version in blocktools.py\n+    def create_tx(self, spend_tx, n, value, script=CScript([OP_TRUE])):\n+        return create_transaction(spend_tx, n, b\"\", value, script)\n+\n+    # sign a transaction, using the key we know about\n+    # this signs input 0 in tx, which is assumed to be spending output n in spend_tx\n+    def sign_tx(self, tx, spend_tx, n):\n+        scriptPubKey = bytearray(spend_tx.vout[n].scriptPubKey)\n+        if (scriptPubKey[0] == OP_TRUE):  # an anyone-can-spend\n+            tx.vin[0].scriptSig = CScript()\n+            return\n+        (sighash, err) = SignatureHash(spend_tx.vout[n].scriptPubKey, tx, 0, SIGHASH_ALL)\n+        tx.vin[0].scriptSig = CScript([self.coinbase_key.sign(sighash) + bytes(bytearray([SIGHASH_ALL]))])\n+\n+    def create_and_sign_transaction(self, spend_tx, n, value, script=CScript([OP_TRUE])):\n+        tx = self.create_tx(spend_tx, n, value, script)\n+        self.sign_tx(tx, spend_tx, n)\n+        tx.rehash()\n+        return tx\n+\n+    def next_block(self, number, spend=None, additional_coinbase_value=0, script=CScript([OP_TRUE]), solve=True):\n+        if self.tip is None:\n+            base_block_hash = self.genesis_hash\n+            block_time = int(time.time()) + 1\n+        else:\n+            base_block_hash = self.tip.sha256\n+            block_time = self.tip.nTime + 1\n+        # First create the coinbase\n+        height = self.block_heights[base_block_hash] + 1\n+        coinbase = create_coinbase(height, self.coinbase_pubkey)\n+        coinbase.vout[0].nValue += additional_coinbase_value\n+        coinbase.rehash()\n+        if spend is None:\n+            block = create_block(base_block_hash, coinbase, block_time)\n+        else:\n+            coinbase.vout[0].nValue += spend.tx.vout[spend.n].nValue - 1  # all but one satoshi to fees\n+            coinbase.rehash()\n+            block = create_block(base_block_hash, coinbase, block_time)\n+            tx = create_transaction(spend.tx, spend.n, b\"\", 1, script)  # spend 1 satoshi\n+            self.sign_tx(tx, spend.tx, spend.n)\n+            self.add_transactions_to_block(block, [tx])\n+            block.hashMerkleRoot = block.calc_merkle_root()\n+        if solve:\n+            block.solve()\n+        self.tip = block\n+        self.block_heights[block.sha256] = height\n+        assert number not in self.blocks\n+        self.blocks[number] = block\n+        return block\n+\n+    # save the current tip so it can be spent by a later block\n+    def save_spendable_output(self):\n+        self.log.debug(\"saving spendable output %s\" % self.tip.vtx[0])\n+        self.spendable_outputs.append(self.tip)\n+\n+    # get an output that we previously marked as spendable\n+    def get_spendable_output(self):\n+        self.log.debug(\"getting spendable output %s\" % self.spendable_outputs[0].vtx[0])\n+        return PreviousSpendableOutput(self.spendable_outputs.pop(0).vtx[0], 0)\n+\n+    # move the tip back to a previous block\n+    def move_tip(self, number):\n+        self.tip = self.blocks[number]\n+\n+    # adds transactions to the block and updates state\n+    def update_block(self, block_number, new_transactions):\n+        block = self.blocks[block_number]\n+        self.add_transactions_to_block(block, new_transactions)\n+        old_sha256 = block.sha256\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.solve()\n+        # Update the internal state just like in next_block\n+        self.tip = block\n+        if block.sha256 != old_sha256:\n+            self.block_heights[block.sha256] = self.block_heights[old_sha256]\n+            del self.block_heights[old_sha256]\n+        self.blocks[block_number] = block\n+        return block\n+\n+    def reconnect_p2p(self):",
      "path": "test/functional/feature_block.py",
      "position": 1832,
      "original_position": 1832,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm pretty sure this functionality gets repeated in several other tests. If so, we should move this somewhere more general and consolidate usages later on.",
      "created_at": "2018-03-27T19:04:01Z",
      "updated_at": "2018-03-27T19:05:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r177537490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177537490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1299,
      "original_line": 1299,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177549532",
      "pull_request_review_id": 107440420,
      "id": 177549532,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzU0OTUzMg==",
      "diff_hunk": "@@ -1133,161 +1063,259 @@ def update_block(block_number, new_transactions):\n         #    To get around this issue, we construct transactions which are not signed and which\n         #    spend to OP_TRUE.  If the standard-ness rules change, this test would need to be\n         #    updated.  (Perhaps to spend to a P2SH OP_TRUE script)\n-        #\n-        tip(76)\n-        block(77)\n-        tx77 = create_and_sign_tx(out[24].tx, out[24].n, 10*COIN)\n-        update_block(77, [tx77])\n-        yield accepted()\n-        save_spendable_output()\n-\n-        block(78)\n-        tx78 = create_tx(tx77, 0, 9*COIN)\n-        update_block(78, [tx78])\n-        yield accepted()\n-\n-        block(79)\n-        tx79 = create_tx(tx78, 0, 8*COIN)\n-        update_block(79, [tx79])\n-        yield accepted()\n+        self.log.info(\"Test transaction resurrection during a re-org\")\n+        self.move_tip(76)\n+        b77 = self.next_block(77)\n+        tx77 = self.create_and_sign_transaction(out[24].tx, out[24].n, 10 * COIN)\n+        b77 = self.update_block(77, [tx77])\n+        self.sync_blocks([b77], True)\n+        self.save_spendable_output()\n+\n+        b78 = self.next_block(78)\n+        tx78 = self.create_tx(tx77, 0, 9 * COIN)\n+        b78 = self.update_block(78, [tx78])\n+        self.sync_blocks([b78], True)\n+\n+        b79 = self.next_block(79)\n+        tx79 = self.create_tx(tx78, 0, 8 * COIN)\n+        b79 = self.update_block(79, [tx79])\n+        self.sync_blocks([b79], True)\n \n         # mempool should be empty\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n \n-        tip(77)\n-        block(80, spend=out[25])\n-        yield rejected()\n-        save_spendable_output()\n+        self.move_tip(77)\n+        b80 = self.next_block(80, spend=out[25])\n+        self.sync_blocks([b80], False, request_block=False)\n+        self.save_spendable_output()\n \n-        block(81, spend=out[26])\n-        yield rejected() # other chain is same length\n-        save_spendable_output()\n+        b81 = self.next_block(81, spend=out[26])\n+        self.sync_blocks([b81], False, request_block=False)  # other chain is same length\n+        self.save_spendable_output()\n \n-        block(82, spend=out[27])\n-        yield accepted()  # now this chain is longer, triggers re-org\n-        save_spendable_output()\n+        b82 = self.next_block(82, spend=out[27])\n+        self.sync_blocks([b82], True)  # now this chain is longer, triggers re-org\n+        self.save_spendable_output()\n \n         # now check that tx78 and tx79 have been put back into the peer's mempool\n         mempool = self.nodes[0].getrawmempool()\n         assert_equal(len(mempool), 2)\n         assert(tx78.hash in mempool)\n         assert(tx79.hash in mempool)\n \n-\n         # Test invalid opcodes in dead execution paths.\n         #\n         #  -> b81 (26) -> b82 (27) -> b83 (28)\n         #\n-        block(83)\n+        self.log.info(\"Accept a block with invalid opcodes in dead execution paths\")\n+        b83 = self.next_block(83)\n         op_codes = [OP_IF, OP_INVALIDOPCODE, OP_ELSE, OP_TRUE, OP_ENDIF]\n         script = CScript(op_codes)\n-        tx1 = create_and_sign_tx(out[28].tx, out[28].n, out[28].tx.vout[0].nValue, script)\n+        tx1 = self.create_and_sign_transaction(out[28].tx, out[28].n, out[28].tx.vout[0].nValue, script)\n \n-        tx2 = create_and_sign_tx(tx1, 0, 0, CScript([OP_TRUE]))\n+        tx2 = self.create_and_sign_transaction(tx1, 0, 0, CScript([OP_TRUE]))\n         tx2.vin[0].scriptSig = CScript([OP_FALSE])\n         tx2.rehash()\n \n-        update_block(83, [tx1, tx2])\n-        yield accepted()\n-        save_spendable_output()\n-\n+        b83 = self.update_block(83, [tx1, tx2])\n+        self.sync_blocks([b83], True)\n+        self.save_spendable_output()\n \n         # Reorg on/off blocks that have OP_RETURN in them (and try to spend them)\n         #\n         #  -> b81 (26) -> b82 (27) -> b83 (28) -> b84 (29) -> b87 (30) -> b88 (31)\n         #                                    \\-> b85 (29) -> b86 (30)            \\-> b89a (32)\n         #\n-        #\n-        block(84)\n-        tx1 = create_tx(out[29].tx, out[29].n, 0, CScript([OP_RETURN]))\n+        self.log.info(\"Test re-orging blocks with OP_RETURN in them\")\n+        b84 = self.next_block(84)\n+        tx1 = self.create_tx(out[29].tx, out[29].n, 0, CScript([OP_RETURN]))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.calc_sha256()\n         self.sign_tx(tx1, out[29].tx, out[29].n)\n         tx1.rehash()\n-        tx2 = create_tx(tx1, 1, 0, CScript([OP_RETURN]))\n+        tx2 = self.create_tx(tx1, 1, 0, CScript([OP_RETURN]))\n         tx2.vout.append(CTxOut(0, CScript([OP_RETURN])))\n-        tx3 = create_tx(tx1, 2, 0, CScript([OP_RETURN]))\n+        tx3 = self.create_tx(tx1, 2, 0, CScript([OP_RETURN]))\n         tx3.vout.append(CTxOut(0, CScript([OP_TRUE])))\n-        tx4 = create_tx(tx1, 3, 0, CScript([OP_TRUE]))\n+        tx4 = self.create_tx(tx1, 3, 0, CScript([OP_TRUE]))\n         tx4.vout.append(CTxOut(0, CScript([OP_RETURN])))\n-        tx5 = create_tx(tx1, 4, 0, CScript([OP_RETURN]))\n+        tx5 = self.create_tx(tx1, 4, 0, CScript([OP_RETURN]))\n \n-        update_block(84, [tx1,tx2,tx3,tx4,tx5])\n-        yield accepted()\n-        save_spendable_output()\n+        b84 = self.update_block(84, [tx1, tx2, tx3, tx4, tx5])\n+        self.sync_blocks([b84], True)\n+        self.save_spendable_output()\n \n-        tip(83)\n-        block(85, spend=out[29])\n-        yield rejected()\n+        self.move_tip(83)\n+        b85 = self.next_block(85, spend=out[29])\n+        self.sync_blocks([b85], False)  # other chain is same length\n \n-        block(86, spend=out[30])\n-        yield accepted()\n+        b86 = self.next_block(86, spend=out[30])\n+        self.sync_blocks([b86], True)\n \n-        tip(84)\n-        block(87, spend=out[30])\n-        yield rejected()\n-        save_spendable_output()\n+        self.move_tip(84)\n+        b87 = self.next_block(87, spend=out[30])\n+        self.sync_blocks([b87], False)  # other chain is same length\n+        self.save_spendable_output()\n \n-        block(88, spend=out[31])\n-        yield accepted()\n-        save_spendable_output()\n+        b88 = self.next_block(88, spend=out[31])\n+        self.sync_blocks([b88], True)\n+        self.save_spendable_output()\n \n         # trying to spend the OP_RETURN output is rejected\n-        block(\"89a\", spend=out[32])\n-        tx = create_tx(tx1, 0, 0, CScript([OP_TRUE]))\n-        update_block(\"89a\", [tx])\n-        yield rejected()\n-\n-\n-        #  Test re-org of a week's worth of blocks (1088 blocks)\n-        #  This test takes a minute or two and can be accomplished in memory\n-        #\n-        if self.options.runbarelyexpensive:\n-            tip(88)\n-            LARGE_REORG_SIZE = 1088\n-            test1 = TestInstance(sync_every_block=False)\n-            spend=out[32]\n-            for i in range(89, LARGE_REORG_SIZE + 89):\n-                b = block(i, spend)\n-                tx = CTransaction()\n-                script_length = MAX_BLOCK_BASE_SIZE - len(b.serialize()) - 69\n-                script_output = CScript([b'\\x00' * script_length])\n-                tx.vout.append(CTxOut(0, script_output))\n-                tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n-                b = update_block(i, [tx])\n-                assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n-                test1.blocks_and_transactions.append([self.tip, True])\n-                save_spendable_output()\n-                spend = get_spendable_output()\n-\n-            yield test1\n-            chain1_tip = i\n-\n-            # now create alt chain of same length\n-            tip(88)\n-            test2 = TestInstance(sync_every_block=False)\n-            for i in range(89, LARGE_REORG_SIZE + 89):\n-                block(\"alt\"+str(i))\n-                test2.blocks_and_transactions.append([self.tip, False])\n-            yield test2\n-\n-            # extend alt chain to trigger re-org\n-            block(\"alt\" + str(chain1_tip + 1))\n-            yield accepted()\n-\n-            # ... and re-org back to the first chain\n-            tip(chain1_tip)\n-            block(chain1_tip + 1)\n-            yield rejected()\n-            block(chain1_tip + 2)\n-            yield accepted()\n-\n-            chain1_tip += 2\n+        b89a = self.next_block(\"89a\", spend=out[32])\n+        tx = self.create_tx(tx1, 0, 0, CScript([OP_TRUE]))\n+        b89a = self.update_block(\"89a\", [tx])\n+        self.sync_blocks([b89a], False, 16, b'bad-txns-inputs-missingorspent', reconnect=True)\n+\n+        self.log.info(\"Test a re-org of one week's worth of blocks (1088 blocks)\")\n+\n+        self.move_tip(88)\n+        LARGE_REORG_SIZE = 1088\n+        blocks = []\n+        spend = out[32]\n+        for i in range(89, LARGE_REORG_SIZE + 89):\n+            b = self.next_block(i, spend)\n+            tx = CTransaction()\n+            script_length = MAX_BLOCK_BASE_SIZE - len(b.serialize()) - 69\n+            script_output = CScript([b'\\x00' * script_length])\n+            tx.vout.append(CTxOut(0, script_output))\n+            tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n+            b = self.update_block(i, [tx])\n+            assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n+            blocks.append(b)\n+            self.save_spendable_output()\n+            spend = self.get_spendable_output()\n+\n+        self.sync_blocks(blocks, True, timeout=180)\n+        chain1_tip = i\n+\n+        # now create alt chain of same length\n+        self.move_tip(88)\n+        blocks2 = []\n+        for i in range(89, LARGE_REORG_SIZE + 89):\n+            blocks2.append(self.next_block(\"alt\" + str(i)))\n+        self.sync_blocks(blocks2, False, request_block=False)\n+\n+        # extend alt chain to trigger re-org\n+        block = self.next_block(\"alt\" + str(chain1_tip + 1))\n+        self.sync_blocks([block], True, timeout=180)\n+\n+        # ... and re-org back to the first chain\n+        self.move_tip(chain1_tip)\n+        block = self.next_block(chain1_tip + 1)\n+        self.sync_blocks([block], False, request_block=False)\n+        block = self.next_block(chain1_tip + 2)\n+        self.sync_blocks([block], True, timeout=180)\n+\n+    # Helper methods\n+    ################\n+\n+    def add_transactions_to_block(self, block, tx_list):\n+        [tx.rehash() for tx in tx_list]\n+        block.vtx.extend(tx_list)\n+\n+    # this is a little handier to use than the version in blocktools.py\n+    def create_tx(self, spend_tx, n, value, script=CScript([OP_TRUE])):\n+        return create_transaction(spend_tx, n, b\"\", value, script)\n+\n+    # sign a transaction, using the key we know about\n+    # this signs input 0 in tx, which is assumed to be spending output n in spend_tx\n+    def sign_tx(self, tx, spend_tx, n):\n+        scriptPubKey = bytearray(spend_tx.vout[n].scriptPubKey)\n+        if (scriptPubKey[0] == OP_TRUE):  # an anyone-can-spend\n+            tx.vin[0].scriptSig = CScript()\n+            return\n+        (sighash, err) = SignatureHash(spend_tx.vout[n].scriptPubKey, tx, 0, SIGHASH_ALL)\n+        tx.vin[0].scriptSig = CScript([self.coinbase_key.sign(sighash) + bytes(bytearray([SIGHASH_ALL]))])\n+\n+    def create_and_sign_transaction(self, spend_tx, n, value, script=CScript([OP_TRUE])):\n+        tx = self.create_tx(spend_tx, n, value, script)\n+        self.sign_tx(tx, spend_tx, n)\n+        tx.rehash()\n+        return tx\n+\n+    def next_block(self, number, spend=None, additional_coinbase_value=0, script=CScript([OP_TRUE]), solve=True):\n+        if self.tip is None:\n+            base_block_hash = self.genesis_hash\n+            block_time = int(time.time()) + 1\n+        else:\n+            base_block_hash = self.tip.sha256\n+            block_time = self.tip.nTime + 1\n+        # First create the coinbase\n+        height = self.block_heights[base_block_hash] + 1\n+        coinbase = create_coinbase(height, self.coinbase_pubkey)\n+        coinbase.vout[0].nValue += additional_coinbase_value\n+        coinbase.rehash()\n+        if spend is None:\n+            block = create_block(base_block_hash, coinbase, block_time)\n+        else:\n+            coinbase.vout[0].nValue += spend.tx.vout[spend.n].nValue - 1  # all but one satoshi to fees\n+            coinbase.rehash()\n+            block = create_block(base_block_hash, coinbase, block_time)\n+            tx = create_transaction(spend.tx, spend.n, b\"\", 1, script)  # spend 1 satoshi\n+            self.sign_tx(tx, spend.tx, spend.n)\n+            self.add_transactions_to_block(block, [tx])\n+            block.hashMerkleRoot = block.calc_merkle_root()\n+        if solve:\n+            block.solve()\n+        self.tip = block\n+        self.block_heights[block.sha256] = height\n+        assert number not in self.blocks\n+        self.blocks[number] = block\n+        return block\n+\n+    # save the current tip so it can be spent by a later block\n+    def save_spendable_output(self):\n+        self.log.debug(\"saving spendable output %s\" % self.tip.vtx[0])\n+        self.spendable_outputs.append(self.tip)\n+\n+    # get an output that we previously marked as spendable\n+    def get_spendable_output(self):\n+        self.log.debug(\"getting spendable output %s\" % self.spendable_outputs[0].vtx[0])\n+        return PreviousSpendableOutput(self.spendable_outputs.pop(0).vtx[0], 0)\n+\n+    # move the tip back to a previous block\n+    def move_tip(self, number):\n+        self.tip = self.blocks[number]\n+\n+    # adds transactions to the block and updates state\n+    def update_block(self, block_number, new_transactions):\n+        block = self.blocks[block_number]\n+        self.add_transactions_to_block(block, new_transactions)\n+        old_sha256 = block.sha256\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.solve()\n+        # Update the internal state just like in next_block\n+        self.tip = block\n+        if block.sha256 != old_sha256:\n+            self.block_heights[block.sha256] = self.block_heights[old_sha256]\n+            del self.block_heights[old_sha256]\n+        self.blocks[block_number] = block\n+        return block\n+\n+    def reconnect_p2p(self):",
      "path": "test/functional/feature_block.py",
      "position": 1832,
      "original_position": 1832,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "in_reply_to_id": 177537490,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but let's save that for a future PR.",
      "created_at": "2018-03-27T19:44:58Z",
      "updated_at": "2018-03-27T19:44:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r177549532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177549532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1299,
      "original_line": 1299,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177557271",
      "pull_request_review_id": 107449977,
      "id": 177557271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzU1NzI3MQ==",
      "diff_hunk": "@@ -1133,161 +1063,259 @@ def update_block(block_number, new_transactions):\n         #    To get around this issue, we construct transactions which are not signed and which\n         #    spend to OP_TRUE.  If the standard-ness rules change, this test would need to be\n         #    updated.  (Perhaps to spend to a P2SH OP_TRUE script)\n-        #\n-        tip(76)\n-        block(77)\n-        tx77 = create_and_sign_tx(out[24].tx, out[24].n, 10*COIN)\n-        update_block(77, [tx77])\n-        yield accepted()\n-        save_spendable_output()\n-\n-        block(78)\n-        tx78 = create_tx(tx77, 0, 9*COIN)\n-        update_block(78, [tx78])\n-        yield accepted()\n-\n-        block(79)\n-        tx79 = create_tx(tx78, 0, 8*COIN)\n-        update_block(79, [tx79])\n-        yield accepted()\n+        self.log.info(\"Test transaction resurrection during a re-org\")\n+        self.move_tip(76)\n+        b77 = self.next_block(77)\n+        tx77 = self.create_and_sign_transaction(out[24].tx, out[24].n, 10 * COIN)\n+        b77 = self.update_block(77, [tx77])\n+        self.sync_blocks([b77], True)\n+        self.save_spendable_output()\n+\n+        b78 = self.next_block(78)\n+        tx78 = self.create_tx(tx77, 0, 9 * COIN)\n+        b78 = self.update_block(78, [tx78])\n+        self.sync_blocks([b78], True)\n+\n+        b79 = self.next_block(79)\n+        tx79 = self.create_tx(tx78, 0, 8 * COIN)\n+        b79 = self.update_block(79, [tx79])\n+        self.sync_blocks([b79], True)\n \n         # mempool should be empty\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n \n-        tip(77)\n-        block(80, spend=out[25])\n-        yield rejected()\n-        save_spendable_output()\n+        self.move_tip(77)\n+        b80 = self.next_block(80, spend=out[25])\n+        self.sync_blocks([b80], False, request_block=False)\n+        self.save_spendable_output()\n \n-        block(81, spend=out[26])\n-        yield rejected() # other chain is same length\n-        save_spendable_output()\n+        b81 = self.next_block(81, spend=out[26])\n+        self.sync_blocks([b81], False, request_block=False)  # other chain is same length\n+        self.save_spendable_output()\n \n-        block(82, spend=out[27])\n-        yield accepted()  # now this chain is longer, triggers re-org\n-        save_spendable_output()\n+        b82 = self.next_block(82, spend=out[27])\n+        self.sync_blocks([b82], True)  # now this chain is longer, triggers re-org\n+        self.save_spendable_output()\n \n         # now check that tx78 and tx79 have been put back into the peer's mempool\n         mempool = self.nodes[0].getrawmempool()\n         assert_equal(len(mempool), 2)\n         assert(tx78.hash in mempool)\n         assert(tx79.hash in mempool)\n \n-\n         # Test invalid opcodes in dead execution paths.\n         #\n         #  -> b81 (26) -> b82 (27) -> b83 (28)\n         #\n-        block(83)\n+        self.log.info(\"Accept a block with invalid opcodes in dead execution paths\")\n+        b83 = self.next_block(83)\n         op_codes = [OP_IF, OP_INVALIDOPCODE, OP_ELSE, OP_TRUE, OP_ENDIF]\n         script = CScript(op_codes)\n-        tx1 = create_and_sign_tx(out[28].tx, out[28].n, out[28].tx.vout[0].nValue, script)\n+        tx1 = self.create_and_sign_transaction(out[28].tx, out[28].n, out[28].tx.vout[0].nValue, script)\n \n-        tx2 = create_and_sign_tx(tx1, 0, 0, CScript([OP_TRUE]))\n+        tx2 = self.create_and_sign_transaction(tx1, 0, 0, CScript([OP_TRUE]))\n         tx2.vin[0].scriptSig = CScript([OP_FALSE])\n         tx2.rehash()\n \n-        update_block(83, [tx1, tx2])\n-        yield accepted()\n-        save_spendable_output()\n-\n+        b83 = self.update_block(83, [tx1, tx2])\n+        self.sync_blocks([b83], True)\n+        self.save_spendable_output()\n \n         # Reorg on/off blocks that have OP_RETURN in them (and try to spend them)\n         #\n         #  -> b81 (26) -> b82 (27) -> b83 (28) -> b84 (29) -> b87 (30) -> b88 (31)\n         #                                    \\-> b85 (29) -> b86 (30)            \\-> b89a (32)\n         #\n-        #\n-        block(84)\n-        tx1 = create_tx(out[29].tx, out[29].n, 0, CScript([OP_RETURN]))\n+        self.log.info(\"Test re-orging blocks with OP_RETURN in them\")\n+        b84 = self.next_block(84)\n+        tx1 = self.create_tx(out[29].tx, out[29].n, 0, CScript([OP_RETURN]))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.vout.append(CTxOut(0, CScript([OP_TRUE])))\n         tx1.calc_sha256()\n         self.sign_tx(tx1, out[29].tx, out[29].n)\n         tx1.rehash()\n-        tx2 = create_tx(tx1, 1, 0, CScript([OP_RETURN]))\n+        tx2 = self.create_tx(tx1, 1, 0, CScript([OP_RETURN]))\n         tx2.vout.append(CTxOut(0, CScript([OP_RETURN])))\n-        tx3 = create_tx(tx1, 2, 0, CScript([OP_RETURN]))\n+        tx3 = self.create_tx(tx1, 2, 0, CScript([OP_RETURN]))\n         tx3.vout.append(CTxOut(0, CScript([OP_TRUE])))\n-        tx4 = create_tx(tx1, 3, 0, CScript([OP_TRUE]))\n+        tx4 = self.create_tx(tx1, 3, 0, CScript([OP_TRUE]))\n         tx4.vout.append(CTxOut(0, CScript([OP_RETURN])))\n-        tx5 = create_tx(tx1, 4, 0, CScript([OP_RETURN]))\n+        tx5 = self.create_tx(tx1, 4, 0, CScript([OP_RETURN]))\n \n-        update_block(84, [tx1,tx2,tx3,tx4,tx5])\n-        yield accepted()\n-        save_spendable_output()\n+        b84 = self.update_block(84, [tx1, tx2, tx3, tx4, tx5])\n+        self.sync_blocks([b84], True)\n+        self.save_spendable_output()\n \n-        tip(83)\n-        block(85, spend=out[29])\n-        yield rejected()\n+        self.move_tip(83)\n+        b85 = self.next_block(85, spend=out[29])\n+        self.sync_blocks([b85], False)  # other chain is same length\n \n-        block(86, spend=out[30])\n-        yield accepted()\n+        b86 = self.next_block(86, spend=out[30])\n+        self.sync_blocks([b86], True)\n \n-        tip(84)\n-        block(87, spend=out[30])\n-        yield rejected()\n-        save_spendable_output()\n+        self.move_tip(84)\n+        b87 = self.next_block(87, spend=out[30])\n+        self.sync_blocks([b87], False)  # other chain is same length\n+        self.save_spendable_output()\n \n-        block(88, spend=out[31])\n-        yield accepted()\n-        save_spendable_output()\n+        b88 = self.next_block(88, spend=out[31])\n+        self.sync_blocks([b88], True)\n+        self.save_spendable_output()\n \n         # trying to spend the OP_RETURN output is rejected\n-        block(\"89a\", spend=out[32])\n-        tx = create_tx(tx1, 0, 0, CScript([OP_TRUE]))\n-        update_block(\"89a\", [tx])\n-        yield rejected()\n-\n-\n-        #  Test re-org of a week's worth of blocks (1088 blocks)\n-        #  This test takes a minute or two and can be accomplished in memory\n-        #\n-        if self.options.runbarelyexpensive:\n-            tip(88)\n-            LARGE_REORG_SIZE = 1088\n-            test1 = TestInstance(sync_every_block=False)\n-            spend=out[32]\n-            for i in range(89, LARGE_REORG_SIZE + 89):\n-                b = block(i, spend)\n-                tx = CTransaction()\n-                script_length = MAX_BLOCK_BASE_SIZE - len(b.serialize()) - 69\n-                script_output = CScript([b'\\x00' * script_length])\n-                tx.vout.append(CTxOut(0, script_output))\n-                tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n-                b = update_block(i, [tx])\n-                assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n-                test1.blocks_and_transactions.append([self.tip, True])\n-                save_spendable_output()\n-                spend = get_spendable_output()\n-\n-            yield test1\n-            chain1_tip = i\n-\n-            # now create alt chain of same length\n-            tip(88)\n-            test2 = TestInstance(sync_every_block=False)\n-            for i in range(89, LARGE_REORG_SIZE + 89):\n-                block(\"alt\"+str(i))\n-                test2.blocks_and_transactions.append([self.tip, False])\n-            yield test2\n-\n-            # extend alt chain to trigger re-org\n-            block(\"alt\" + str(chain1_tip + 1))\n-            yield accepted()\n-\n-            # ... and re-org back to the first chain\n-            tip(chain1_tip)\n-            block(chain1_tip + 1)\n-            yield rejected()\n-            block(chain1_tip + 2)\n-            yield accepted()\n-\n-            chain1_tip += 2\n+        b89a = self.next_block(\"89a\", spend=out[32])\n+        tx = self.create_tx(tx1, 0, 0, CScript([OP_TRUE]))\n+        b89a = self.update_block(\"89a\", [tx])\n+        self.sync_blocks([b89a], False, 16, b'bad-txns-inputs-missingorspent', reconnect=True)\n+\n+        self.log.info(\"Test a re-org of one week's worth of blocks (1088 blocks)\")\n+\n+        self.move_tip(88)\n+        LARGE_REORG_SIZE = 1088\n+        blocks = []\n+        spend = out[32]\n+        for i in range(89, LARGE_REORG_SIZE + 89):\n+            b = self.next_block(i, spend)\n+            tx = CTransaction()\n+            script_length = MAX_BLOCK_BASE_SIZE - len(b.serialize()) - 69\n+            script_output = CScript([b'\\x00' * script_length])\n+            tx.vout.append(CTxOut(0, script_output))\n+            tx.vin.append(CTxIn(COutPoint(b.vtx[1].sha256, 0)))\n+            b = self.update_block(i, [tx])\n+            assert_equal(len(b.serialize()), MAX_BLOCK_BASE_SIZE)\n+            blocks.append(b)\n+            self.save_spendable_output()\n+            spend = self.get_spendable_output()\n+\n+        self.sync_blocks(blocks, True, timeout=180)\n+        chain1_tip = i\n+\n+        # now create alt chain of same length\n+        self.move_tip(88)\n+        blocks2 = []\n+        for i in range(89, LARGE_REORG_SIZE + 89):\n+            blocks2.append(self.next_block(\"alt\" + str(i)))\n+        self.sync_blocks(blocks2, False, request_block=False)\n+\n+        # extend alt chain to trigger re-org\n+        block = self.next_block(\"alt\" + str(chain1_tip + 1))\n+        self.sync_blocks([block], True, timeout=180)\n+\n+        # ... and re-org back to the first chain\n+        self.move_tip(chain1_tip)\n+        block = self.next_block(chain1_tip + 1)\n+        self.sync_blocks([block], False, request_block=False)\n+        block = self.next_block(chain1_tip + 2)\n+        self.sync_blocks([block], True, timeout=180)\n+\n+    # Helper methods\n+    ################\n+\n+    def add_transactions_to_block(self, block, tx_list):\n+        [tx.rehash() for tx in tx_list]\n+        block.vtx.extend(tx_list)\n+\n+    # this is a little handier to use than the version in blocktools.py\n+    def create_tx(self, spend_tx, n, value, script=CScript([OP_TRUE])):\n+        return create_transaction(spend_tx, n, b\"\", value, script)\n+\n+    # sign a transaction, using the key we know about\n+    # this signs input 0 in tx, which is assumed to be spending output n in spend_tx\n+    def sign_tx(self, tx, spend_tx, n):\n+        scriptPubKey = bytearray(spend_tx.vout[n].scriptPubKey)\n+        if (scriptPubKey[0] == OP_TRUE):  # an anyone-can-spend\n+            tx.vin[0].scriptSig = CScript()\n+            return\n+        (sighash, err) = SignatureHash(spend_tx.vout[n].scriptPubKey, tx, 0, SIGHASH_ALL)\n+        tx.vin[0].scriptSig = CScript([self.coinbase_key.sign(sighash) + bytes(bytearray([SIGHASH_ALL]))])\n+\n+    def create_and_sign_transaction(self, spend_tx, n, value, script=CScript([OP_TRUE])):\n+        tx = self.create_tx(spend_tx, n, value, script)\n+        self.sign_tx(tx, spend_tx, n)\n+        tx.rehash()\n+        return tx\n+\n+    def next_block(self, number, spend=None, additional_coinbase_value=0, script=CScript([OP_TRUE]), solve=True):\n+        if self.tip is None:\n+            base_block_hash = self.genesis_hash\n+            block_time = int(time.time()) + 1\n+        else:\n+            base_block_hash = self.tip.sha256\n+            block_time = self.tip.nTime + 1\n+        # First create the coinbase\n+        height = self.block_heights[base_block_hash] + 1\n+        coinbase = create_coinbase(height, self.coinbase_pubkey)\n+        coinbase.vout[0].nValue += additional_coinbase_value\n+        coinbase.rehash()\n+        if spend is None:\n+            block = create_block(base_block_hash, coinbase, block_time)\n+        else:\n+            coinbase.vout[0].nValue += spend.tx.vout[spend.n].nValue - 1  # all but one satoshi to fees\n+            coinbase.rehash()\n+            block = create_block(base_block_hash, coinbase, block_time)\n+            tx = create_transaction(spend.tx, spend.n, b\"\", 1, script)  # spend 1 satoshi\n+            self.sign_tx(tx, spend.tx, spend.n)\n+            self.add_transactions_to_block(block, [tx])\n+            block.hashMerkleRoot = block.calc_merkle_root()\n+        if solve:\n+            block.solve()\n+        self.tip = block\n+        self.block_heights[block.sha256] = height\n+        assert number not in self.blocks\n+        self.blocks[number] = block\n+        return block\n+\n+    # save the current tip so it can be spent by a later block\n+    def save_spendable_output(self):\n+        self.log.debug(\"saving spendable output %s\" % self.tip.vtx[0])\n+        self.spendable_outputs.append(self.tip)\n+\n+    # get an output that we previously marked as spendable\n+    def get_spendable_output(self):\n+        self.log.debug(\"getting spendable output %s\" % self.spendable_outputs[0].vtx[0])\n+        return PreviousSpendableOutput(self.spendable_outputs.pop(0).vtx[0], 0)\n+\n+    # move the tip back to a previous block\n+    def move_tip(self, number):\n+        self.tip = self.blocks[number]\n+\n+    # adds transactions to the block and updates state\n+    def update_block(self, block_number, new_transactions):\n+        block = self.blocks[block_number]\n+        self.add_transactions_to_block(block, new_transactions)\n+        old_sha256 = block.sha256\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.solve()\n+        # Update the internal state just like in next_block\n+        self.tip = block\n+        if block.sha256 != old_sha256:\n+            self.block_heights[block.sha256] = self.block_heights[old_sha256]\n+            del self.block_heights[old_sha256]\n+        self.blocks[block_number] = block\n+        return block\n+\n+    def reconnect_p2p(self):",
      "path": "test/functional/feature_block.py",
      "position": 1832,
      "original_position": 1832,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "in_reply_to_id": 177537490,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, definitely later.",
      "created_at": "2018-03-27T20:14:02Z",
      "updated_at": "2018-03-27T20:14:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r177557271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177557271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1299,
      "original_line": 1299,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187142427",
      "pull_request_review_id": 118863309,
      "id": 187142427,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE0MjQyNw==",
      "diff_hunk": "@@ -218,8 +219,12 @@ def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=N\n         time.sleep(0.05)\n \n     # Print the cause of the timeout\n-    assert_greater_than(attempts, attempt)\n-    assert_greater_than(timeout, time.time())\n+    predicate_source = inspect.getsourcelines(predicate)\n+    logger.error(\"wait_until() failed. Predicate: {}\".format(predicate_source))",
      "path": "test/functional/test_framework/util.py",
      "position": 27,
      "original_position": 27,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This results in a spurious error message when `wait_until` is used and failure is expected, for instance in the `p2p_segwit.py` test where we advertise a txid from a not-NODE_WITNESS peer and ensure that a subsequence announcement from a NODE_WITNESS peer does not result in a duplicate getdata (while the first request is outstanding).",
      "created_at": "2018-05-09T18:58:34Z",
      "updated_at": "2018-05-09T18:58:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r187142427",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187142427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 223,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187156756",
      "pull_request_review_id": 118880934,
      "id": 187156756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE1Njc1Ng==",
      "diff_hunk": "@@ -218,8 +219,12 @@ def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=N\n         time.sleep(0.05)\n \n     # Print the cause of the timeout\n-    assert_greater_than(attempts, attempt)\n-    assert_greater_than(timeout, time.time())\n+    predicate_source = inspect.getsourcelines(predicate)\n+    logger.error(\"wait_until() failed. Predicate: {}\".format(predicate_source))",
      "path": "test/functional/test_framework/util.py",
      "position": 27,
      "original_position": 27,
      "commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "original_commit_id": "265d7c44b1aae06aee93f745a865807732218a73",
      "in_reply_to_id": 187142427,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed here: #13205 ",
      "created_at": "2018-05-09T19:53:57Z",
      "updated_at": "2018-05-09T19:53:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11773#discussion_r187156756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187156756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 223,
      "original_line": 223,
      "side": "RIGHT"
    }
  ]
}