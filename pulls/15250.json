{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250",
    "id": 247542594,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ3NTQyNTk0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15250",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/15250.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/15250.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1435fabc19d2143187efb493cbe23225eaf851ae",
    "number": 15250,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Use RdSeed when available, and reduce RdRand load",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This introduces support for autodetecting and using the RdSeed instruction on x86/x86_64 systems.\r\n\r\nIn addition:\r\n* In SeedFast, only 64 bits of entropy are generated through RdRand (256 was relatively slow).\r\n* In SeedStartup, 256 bits of entropy are generated, using RdSeed (preferably) or RdRand (otherwise).\r\n",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
      "id": 3318051,
      "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
      "number": 35,
      "state": "closed",
      "title": "0.18.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 186,
      "created_at": "2018-05-03T15:34:54Z",
      "updated_at": "2020-03-17T18:30:07Z",
      "closed_at": "2019-05-03T02:51:38Z"
    },
    "created_at": "2019-01-25T02:43:54Z",
    "updated_at": "2022-10-30T19:10:37Z",
    "closed_at": "2019-02-18T09:57:44Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-02-18T09:57:44Z",
    "merge_commit_sha": "1435fabc19d2143187efb493cbe23225eaf851ae",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:201901_rdseed",
      "ref": "201901_rdseed",
      "sha": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2fbf6a57d282d80c128c910dd1fcdd0ee0542654",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 136,
    "deletions": 39,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 28,
    "comments": 15
  },
  "events": [
    {
      "event": "labeled",
      "id": 2096169584,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwOTYxNjk1ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096169584",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:44:53Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2096170098,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5NjE3MDA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096170098",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:45:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2096190821,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5NjE5MDgyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096190821",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T03:03:12Z"
    },
    {
      "event": "commented",
      "id": 457502955,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzUwMjk1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457502955",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T09:00:54Z",
      "updated_at": "2019-01-25T09:00:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "While you're changing `random.cpp`: isn't the `std::move` on L562 without any effect? Could be removed? ",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-457502955",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 457756126,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc1NjEyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457756126",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T22:34:10Z",
      "updated_at": "2019-01-25T22:34:10Z",
      "author_association": "MEMBER",
      "body": "@practicalswift `MixExtract` intentionally takes an rvalue reference, so that callers must either pass in a temporary, or use `std::move` explicitly (as the hasher object becomes useless after the call).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-457756126",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "mentioned",
      "id": 2098429401,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjA5ODQyOTQwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2098429401",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T22:34:10Z"
    },
    {
      "event": "subscribed",
      "id": 2098429402,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwOTg0Mjk0MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2098429402",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T22:34:10Z"
    },
    {
      "event": "reviewed",
      "id": 196776323,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk2Nzc2MzIz",
      "url": null,
      "actor": null,
      "commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#pullrequestreview-196776323",
      "submitted_at": "2019-01-26T04:55:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
    },
    {
      "event": "reviewed",
      "id": 196776590,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk2Nzc2NTkw",
      "url": null,
      "actor": null,
      "commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#pullrequestreview-196776590",
      "submitted_at": "2019-01-26T05:06:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
    },
    {
      "event": "reviewed",
      "id": 196776620,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk2Nzc2NjIw",
      "url": null,
      "actor": null,
      "commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#pullrequestreview-196776620",
      "submitted_at": "2019-01-26T05:08:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2098731386,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5ODczMTM4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2098731386",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-26T07:24:51Z"
    },
    {
      "event": "commented",
      "id": 457809977,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzgwOTk3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457809977",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-26T07:28:22Z",
      "updated_at": "2019-01-28T18:16:43Z",
      "author_association": "MEMBER",
      "body": "@gmaxwell Wow, I didn't know about those failure modes of RdRand and RdSeed. Rewrote things a bit to take that into account. RdRand is now retried up to 10 times (and ignored after that). RdSeed is retried indefinitely (with a pause in between). When using RdRand for 256-bit seeding, it's invoked 1024 times and XORed to produce each 64 bit group.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-457809977",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "mentioned",
      "id": 2098732390,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjA5ODczMjM5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2098732390",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-26T07:28:22Z"
    },
    {
      "event": "subscribed",
      "id": 2098732391,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwOTg3MzIzOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2098732391",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-26T07:28:22Z"
    },
    {
      "event": "commented",
      "id": 458183513,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODE4MzUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458183513",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-28T15:47:50Z",
      "updated_at": "2019-01-28T15:47:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-458183513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "reviewed",
      "id": 198635722,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk4NjM1NzIy",
      "url": null,
      "actor": null,
      "commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Apologies if any of the above is particularly naive. :P",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#pullrequestreview-198635722",
      "submitted_at": "2019-01-31T17:04:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
    },
    {
      "event": "mentioned",
      "id": 2114537196,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjExNDUzNzE5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2114537196",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-03T22:25:27Z"
    },
    {
      "event": "subscribed",
      "id": 2114537197,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMTQ1MzcxOTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2114537197",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-03T22:25:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2114538669,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjExNDUzODY2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2114538669",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-03T22:28:11Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDM1ZmFiYzE5ZDIxNDMxODdlZmI0OTNjYmUyMzIyNWVhZjg1MWFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1435fabc19d2143187efb493cbe23225eaf851ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1435fabc19d2143187efb493cbe23225eaf851ae",
      "tree": {
        "sha": "618b087accfdca7c0d5e9f7a3eeda51ce5c8b1f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/618b087accfdca7c0d5e9f7a3eeda51ce5c8b1f9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72bd4ab867e3be0d8410403d9641c08288d343e3",
          "sha": "72bd4ab867e3be0d8410403d9641c08288d343e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72bd4ab867e3be0d8410403d9641c08288d343e3"
        }
      ],
      "message": "Use RdSeed when available, and reduce RdRand load\n\nThis introduces support for autodetecting and using the RdSeed instruction.\n\nIn addition:\n* In SeedFast, only 64 bits of entropy are generated through RdRand (256 was relatively slow).\n* In SeedStartup, 256 bits of entropy are generated, using RdSeed (preferably) or RdRand (otherwise).",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-02-04T01:34:26Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-01-25T02:40:02Z"
      },
      "sha": "1435fabc19d2143187efb493cbe23225eaf851ae"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2114627614,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjExNDYyNzYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2114627614",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-04T01:34:40Z"
    },
    {
      "event": "commented",
      "id": 461266838,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI2NjgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461266838",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T02:29:27Z",
      "updated_at": "2019-02-07T02:29:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-461266838",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 461268568,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI2ODU2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461268568",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T02:39:50Z",
      "updated_at": "2019-02-07T02:39:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Aside, we might want to consider this one a bug fix, since technically we weren't using rdrand quite correctly before.  OTOH, the use of rdrand was entirely non-critical... sooo...",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-461268568",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "milestoned",
      "id": 2124071876,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDIxMjQwNzE4NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2124071876",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T13:37:07Z",
      "milestone": {
        "title": "0.18.0"
      }
    },
    {
      "event": "commented",
      "id": 462740431,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjc0MDQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462740431",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-12T12:26:47Z",
      "updated_at": "2019-02-12T12:26:47Z",
      "author_association": "MEMBER",
      "body": "So to be clear: this doesn't result in a CPU with broken and/or backdoored `RDRAND` or `RDSEED` instruction to generate vulberable private keys?",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-462740431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 462816434,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjgxNjQzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462816434",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-12T15:57:32Z",
      "updated_at": "2019-02-12T15:57:32Z",
      "author_association": "MEMBER",
      "body": "@laanwj Not trivially, at least. The output of the rdrand/rdseed is mixed with other entropy using SHA512 to produce output and the new state.\n\nIn theory a backdoored CPU could try to infer what variable is going to store entropy, and try to control that directly. ",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-462816434",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "mentioned",
      "id": 2134137891,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEzNDEzNzg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2134137891",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-12T15:57:32Z"
    },
    {
      "event": "subscribed",
      "id": 2134137893,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMzQxMzc4OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2134137893",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-12T15:57:32Z"
    },
    {
      "event": "commented",
      "id": 462837153,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjgzNzE1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462837153",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-12T16:46:26Z",
      "updated_at": "2019-02-12T16:46:26Z",
      "author_association": "MEMBER",
      "body": "Thanks!\r\n\r\n> In theory a backdoored CPU could try to infer what variable is going to store entropy, and try to control that directly.\r\n\r\nSure—I meant when say, only those instructions were made to return a fixed value, not anything more advanced/complex. Like a bugdoor with plausible deniability.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-462837153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 463305751,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzMwNTc1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463305751",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-13T18:10:41Z",
      "updated_at": "2019-02-13T18:21:06Z",
      "author_association": "MEMBER",
      "body": "Code review utACK 1435fabc19d2143187efb493cbe23225eaf851ae\r\nI have no hardware to be able to test this on.\r\n(if you do, `/proc/cpuinfo` will show the `rdrand` and/or `rdseed` under `flags`)",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-463305751",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 463338406,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzMzODQwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463338406",
      "actor": {
        "login": "JustinTArthur",
        "id": 577312,
        "node_id": "MDQ6VXNlcjU3NzMxMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/577312?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JustinTArthur",
        "html_url": "https://github.com/JustinTArthur",
        "followers_url": "https://api.github.com/users/JustinTArthur/followers",
        "following_url": "https://api.github.com/users/JustinTArthur/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JustinTArthur/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JustinTArthur/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JustinTArthur/subscriptions",
        "organizations_url": "https://api.github.com/users/JustinTArthur/orgs",
        "repos_url": "https://api.github.com/users/JustinTArthur/repos",
        "events_url": "https://api.github.com/users/JustinTArthur/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JustinTArthur/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-13T19:39:39Z",
      "updated_at": "2019-02-13T19:39:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 1435fab on macOS x86_64 on Intel Core i7-7920HQ CPU @ 3.10GHz (has RDRAND & RDSEED).\r\n\r\n> `2019-02-13T19:22:30Z Using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation`\r\n> `2019-02-13T19:22:30Z Using RdSeed as additional entropy source`\r\n> `2019-02-13T19:22:30Z Using RdRand as an additional entropy source`\r\n\r\nFunctional and unit tests pass.",
      "user": {
        "login": "JustinTArthur",
        "id": 577312,
        "node_id": "MDQ6VXNlcjU3NzMxMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/577312?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JustinTArthur",
        "html_url": "https://github.com/JustinTArthur",
        "followers_url": "https://api.github.com/users/JustinTArthur/followers",
        "following_url": "https://api.github.com/users/JustinTArthur/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JustinTArthur/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JustinTArthur/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JustinTArthur/subscriptions",
        "organizations_url": "https://api.github.com/users/JustinTArthur/orgs",
        "repos_url": "https://api.github.com/users/JustinTArthur/repos",
        "events_url": "https://api.github.com/users/JustinTArthur/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JustinTArthur/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-463338406",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 463357488,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzM1NzQ4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463357488",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-13T20:33:24Z",
      "updated_at": "2019-02-13T20:33:24Z",
      "author_association": "MEMBER",
      "body": "Tested on a system with RdRand but no RdSeed; tests pass, `bitcoind` runs fine, and reports only \"Using RdRand as an additional entropy source\".",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-463357488",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "commented",
      "id": 463473843,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQ3Mzg0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463473843",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:29:17Z",
      "updated_at": "2019-02-14T03:29:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested on a system with no rdrand/rdseed, and it didn't catch fire. does @luke-jr  maybe have a 32-bit system with rdrand/rdseed?",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-463473843",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "mentioned",
      "id": 2138562582,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEzODU2MjU4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2138562582",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:29:17Z"
    },
    {
      "event": "subscribed",
      "id": 2138562584,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMzg1NjI1ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2138562584",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:29:17Z"
    },
    {
      "event": "commented",
      "id": 463475107,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQ3NTEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463475107",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:35:53Z",
      "updated_at": "2019-02-14T03:35:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj  To expand on Pieter's response.  Our mixing construction is designed to be secure against adversarial inputs generated by an attacker that can also inspect the entire process state unless the attacker can attack SHA512 in a very serious way (e.g. construct a suffix to a message being hashed that causes a specific hash value).\r\n\r\nThere are various standards for combining entropy sources that just xor the sources. The construction we're using is obviously stronger than those. If we had just xored the state then a malicious rdrand could inspect and return the current state (perhaps xored with a constant) in order to override it, and even plausibly do so as a bugdoor (e.g. oops we accidentally failed to update the register).  I just mention this to point out that what we're doing is stronger than something other people think is acceptable... ",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-463475107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "mentioned",
      "id": 2138570015,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEzODU3MDAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2138570015",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:35:53Z"
    },
    {
      "event": "subscribed",
      "id": 2138570016,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMzg1NzAwMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2138570016",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:35:53Z"
    },
    {
      "event": "commented",
      "id": 463808142,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgwODE0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463808142",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T21:37:15Z",
      "updated_at": "2019-02-14T21:37:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gmaxwell \r\n`\r\nLinux debian 4.9.0-8-686-pae #1 SMP Debian 4.9.130-2 (2018-10-27) i686 GNU/Linux\r\n2019-02-14T21:30:29Z Using RdSeed as additional entropy source\r\n2019-02-14T21:30:29Z Using RdRand as an additional entropy source\r\n`",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#issuecomment-463808142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15250"
    },
    {
      "event": "mentioned",
      "id": 2140941498,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0MDk0MTQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2140941498",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T21:37:15Z"
    },
    {
      "event": "subscribed",
      "id": 2140941499,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDA5NDE0OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2140941499",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T21:37:15Z"
    },
    {
      "event": "merged",
      "id": 2145781222,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjE0NTc4MTIyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2145781222",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1435fabc19d2143187efb493cbe23225eaf851ae",
      "created_at": "2019-02-18T09:57:44Z"
    },
    {
      "event": "closed",
      "id": 2145781227,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjE0NTc4MTIyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2145781227",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-18T09:57:44Z"
    },
    {
      "event": "referenced",
      "id": 2145781498,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxNDU3ODE0OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2145781498",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "29e82e460e19818b420e7169ac8ed5248d6d0af9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29e82e460e19818b420e7169ac8ed5248d6d0af9",
      "created_at": "2019-02-18T09:57:50Z"
    },
    {
      "event": "referenced",
      "id": 4596237256,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1OTYyMzcyNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4596237256",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "93f43f0f81f06ba017db8378fe1bbbfec01f7d1f",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/93f43f0f81f06ba017db8378fe1bbbfec01f7d1f",
      "created_at": "2021-04-14T23:12:20Z"
    },
    {
      "event": "referenced",
      "id": 5300425544,
      "node_id": "REFE_lADOABII584YBQT4zwAAAAE77hNI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5300425544",
      "actor": {
        "login": "ogabrielides",
        "id": 234844,
        "node_id": "MDQ6VXNlcjIzNDg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/234844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ogabrielides",
        "html_url": "https://github.com/ogabrielides",
        "followers_url": "https://api.github.com/users/ogabrielides/followers",
        "following_url": "https://api.github.com/users/ogabrielides/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ogabrielides/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ogabrielides/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ogabrielides/subscriptions",
        "organizations_url": "https://api.github.com/users/ogabrielides/orgs",
        "repos_url": "https://api.github.com/users/ogabrielides/repos",
        "events_url": "https://api.github.com/users/ogabrielides/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ogabrielides/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cd73bf32976829d0a0b00b2d58605c240333c364",
      "commit_url": "https://api.github.com/repos/ogabrielides/dash/commits/cd73bf32976829d0a0b00b2d58605c240333c364",
      "created_at": "2021-09-14T15:22:32Z"
    },
    {
      "event": "referenced",
      "id": 5304285955,
      "node_id": "REFE_lADOABII584YBQT4zwAAAAE8KPsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5304285955",
      "actor": {
        "login": "ogabrielides",
        "id": 234844,
        "node_id": "MDQ6VXNlcjIzNDg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/234844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ogabrielides",
        "html_url": "https://github.com/ogabrielides",
        "followers_url": "https://api.github.com/users/ogabrielides/followers",
        "following_url": "https://api.github.com/users/ogabrielides/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ogabrielides/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ogabrielides/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ogabrielides/subscriptions",
        "organizations_url": "https://api.github.com/users/ogabrielides/orgs",
        "repos_url": "https://api.github.com/users/ogabrielides/repos",
        "events_url": "https://api.github.com/users/ogabrielides/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ogabrielides/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "454e89b2e8fc64473f52dc0711c4af8362263cb8",
      "commit_url": "https://api.github.com/repos/ogabrielides/dash/commits/454e89b2e8fc64473f52dc0711c4af8362263cb8",
      "created_at": "2021-09-15T08:27:58Z"
    },
    {
      "event": "referenced",
      "id": 5304310570,
      "node_id": "REFE_lADOABII584YBQT4zwAAAAE8KVsq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5304310570",
      "actor": {
        "login": "ogabrielides",
        "id": 234844,
        "node_id": "MDQ6VXNlcjIzNDg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/234844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ogabrielides",
        "html_url": "https://github.com/ogabrielides",
        "followers_url": "https://api.github.com/users/ogabrielides/followers",
        "following_url": "https://api.github.com/users/ogabrielides/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ogabrielides/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ogabrielides/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ogabrielides/subscriptions",
        "organizations_url": "https://api.github.com/users/ogabrielides/orgs",
        "repos_url": "https://api.github.com/users/ogabrielides/repos",
        "events_url": "https://api.github.com/users/ogabrielides/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ogabrielides/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df7ec9004db4a2491a7a441dcb5cb1cc6a2c88e5",
      "commit_url": "https://api.github.com/repos/ogabrielides/dash/commits/df7ec9004db4a2491a7a441dcb5cb1cc6a2c88e5",
      "created_at": "2021-09-15T08:32:10Z"
    },
    {
      "event": "referenced",
      "id": 5311656408,
      "node_id": "REFE_lADOABII584YBQT4zwAAAAE8mXHY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5311656408",
      "actor": {
        "login": "ogabrielides",
        "id": 234844,
        "node_id": "MDQ6VXNlcjIzNDg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/234844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ogabrielides",
        "html_url": "https://github.com/ogabrielides",
        "followers_url": "https://api.github.com/users/ogabrielides/followers",
        "following_url": "https://api.github.com/users/ogabrielides/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ogabrielides/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ogabrielides/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ogabrielides/subscriptions",
        "organizations_url": "https://api.github.com/users/ogabrielides/orgs",
        "repos_url": "https://api.github.com/users/ogabrielides/repos",
        "events_url": "https://api.github.com/users/ogabrielides/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ogabrielides/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5167cbe911c3a666a5a7502c71990ee3a38c6bca",
      "commit_url": "https://api.github.com/repos/ogabrielides/dash/commits/5167cbe911c3a666a5a7502c71990ee3a38c6bca",
      "created_at": "2021-09-16T10:35:11Z"
    },
    {
      "event": "referenced",
      "id": 5315551008,
      "node_id": "REFE_lADOABII584YBQT4zwAAAAE81N8g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5315551008",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0cb3dd5b8768ef156b2f5a4a40cfe308d37cffb5",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/0cb3dd5b8768ef156b2f5a4a40cfe308d37cffb5",
      "created_at": "2021-09-16T22:56:35Z"
    },
    {
      "event": "referenced",
      "id": 6610949253,
      "node_id": "REFE_lADOABII584YBQT4zwAAAAGKCxSF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6610949253",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d9a10dfe57a71860709c522444f5b2f9bfe062c3",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/d9a10dfe57a71860709c522444f5b2f9bfe062c3",
      "created_at": "2022-05-15T06:50:29Z"
    },
    {
      "event": "locked",
      "id": 7699633161,
      "node_id": "LOE_lADOABII584YBQT4zwAAAAHK7xQJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7699633161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T19:10:37Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251188313",
      "pull_request_review_id": 196776323,
      "id": 251188313,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTE4ODMxMw==",
      "diff_hunk": "@@ -78,25 +78,84 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }\n     }\n }\n \n static void ReportHardwareRand()\n {\n-    if (rdrand_supported) {\n-        // This must be done in a separate function, as HWRandInit() may be indirectly called\n-        // from global constructors, before logging is initialized.\n+    // This must be done in a separate function, as HWRandInit() may be indirectly called\n+    // from global constructors, before logging is initialized.\n+    if (g_rdseed_supported) {\n+        LogPrintf(\"Using RdSeed and RdRand as additional entropy sources\\n\");\n+    } else if (g_rdrand_supported) {\n         LogPrintf(\"Using RdRand as an additional entropy source\\n\");\n     }\n }\n \n+/** Read 64 bits of entropy using rdrand.\n+ *\n+ * Must only be called when RdRand is supported.\n+ */\n+static uint64_t GetRdRand() noexcept\n+{\n+    uint8_t ok;\n+#ifdef __i386__\n+    uint32_t r1, r2;\n+    __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0, 0x0f, 0xc7, 0xf2; setc %2\" : \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\"); // rdrand %eax; rdrand %edx\n+    assert(ok);\n+    return (((uint64_t)r2) << 32) | r1;\n+#else",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "in_reply_to_id": null,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I feel like this and the one below should be guarded by #if defined(__x86_64__) || defined(__amd64__)  ... I think we'd like to prefer x86_64 asm in the output, even if we're not going to call it. :P",
      "created_at": "2019-01-26T04:55:30Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r251188313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251188313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251188552",
      "pull_request_review_id": 196776590,
      "id": 251188552,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTE4ODU1Mg==",
      "diff_hunk": "@@ -107,36 +166,37 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool GetHardwareRand64(unsigned char* ent8) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        WriteLE64(ent8, out);\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool GetHardwareRand256(unsigned char* ent32) noexcept {\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    // When we want 256 bits of entropy, prefer RdSeed over RdRand, as it's\n+    // guaranteed to produce independent randomness on every call. RdRand\n+    // output is generated using an RNG seeded by the actual entropy, which does\n+    // not guarantee (information theoretically) independent results.\n+    if (g_rdseed_supported) {\n+        uint64_t out1 = GetRdSeed(), out2 = GetRdSeed(), out3 = GetRdSeed(), out4 = GetRdSeed();\n+        WriteLE64(ent32, out1);\n+        WriteLE64(ent32 + 8, out2);\n+        WriteLE64(ent32 + 16, out3);\n+        WriteLE64(ent32 + 24, out4);\n+        return true;\n+    }\n+    if (g_rdrand_supported) {\n+        uint64_t out1 = GetRdRand(), out2 = GetRdRand(), out3 = GetRdRand(), out4 = GetRdRand();\n+        WriteLE64(ent32, out1);\n+        WriteLE64(ent32 + 8, out2);\n+        WriteLE64(ent32 + 16, out3);\n+        WriteLE64(ent32 + 24, out4);\n         return true;",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 154,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "in_reply_to_id": null,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe we should ignore it for the less critical runtime use, but pedantically: \r\n\r\n\"After invoking the RDRAND instruction, the caller must examine the carry flag (CF) to determine whether a random value was available at the time the RDRAND instruction was executed. As Table 3 shows, a value of 1 indicates that a random value was available and placed in the destination register provided in the invocation. A value of 0 indicates that a random value was not available. In current architectures the destination register will also be zeroed as a side effect of this condition.\" ... \"It is recommended that applications attempt 10 retries in a tight loop in the unlikely event that the RDRAND instruction does not return a random number. This number is based on a binomial probability argument: given the design margins of the DRNG, the odds of ten failures in a row are astronomically small and would in fact be an indication of a larger CPU issue.\"\r\n\r\nThis one might also want to consider:\r\n\r\n\"There are two approaches to structuring RDRAND invocations such that DRBG reseeding can be guaranteed:\r\n\r\n    Iteratively execute RDRAND beyond the DRBG upper bound by executing more than 1022 64-bit RDRANDs\"",
      "created_at": "2019-01-26T05:06:57Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r251188552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251188552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251188580",
      "pull_request_review_id": 196776620,
      "id": 251188580,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTE4ODU4MA==",
      "diff_hunk": "@@ -107,36 +166,37 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool GetHardwareRand64(unsigned char* ent8) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        WriteLE64(ent8, out);\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool GetHardwareRand256(unsigned char* ent32) noexcept {\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    // When we want 256 bits of entropy, prefer RdSeed over RdRand, as it's\n+    // guaranteed to produce independent randomness on every call. RdRand\n+    // output is generated using an RNG seeded by the actual entropy, which does\n+    // not guarantee (information theoretically) independent results.\n+    if (g_rdseed_supported) {\n+        uint64_t out1 = GetRdSeed(), out2 = GetRdSeed(), out3 = GetRdSeed(), out4 = GetRdSeed();\n+        WriteLE64(ent32, out1);\n+        WriteLE64(ent32 + 8, out2);\n+        WriteLE64(ent32 + 16, out3);\n+        WriteLE64(ent32 + 24, out4);\n+        return true;",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 146,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "in_reply_to_id": null,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"After invoking the RDSEED instruction, the caller must examine the carry flag (CF) to determine whether a random seed was available at the time the RDSEED instruction was executed. As shown in Table 5, a value of 1 indicates that a random seed was available and placed in the destination register provided in the invocation.\" \"Unlike the RDRAND instruction, the seed values come directly from the entropy conditioner, and it is possible for callers to invoke RDSEED faster than those values are generated. This means that applications must be designed robustly and be prepared for calls to RDSEED to fail because seeds are not available (CF=0).\r\n\r\nIf only one thread is calling RDSEED infrequently, it is very unlikely that a random seed will not be available. Only during periods of heavy demand, such as when one thread is calling RDSEED in rapid succession or multiple threads are calling RDSEED simultaneously, are underflows likely to occur. Because the RDSEED instruction does not have a fairness mechanism built into it, however, there are no guarantees as to how often a thread should retry the instruction, or how many retries might be needed, in order to obtain a random seed. In practice, this depends on the number of hardware threads on the CPU and how aggressively they are calling RDSEED.\" \"5.3.1.1 Synchronous applications\r\n\r\nIf the application is not latency-sensitive, then it can simply retry the RDSEED instruction indefinitely, though it is recommended that a PAUSE instruction be placed in the retry loop. In the worst-case scenario, where multiple threads are invoking RDSEED continually, the delays can be long, but the longer the delay, the more likely (with an exponentially increasing probability) that the instruction will return a result.\"",
      "created_at": "2019-01-26T05:08:38Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r251188580",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251188580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251191210",
      "pull_request_review_id": 196779611,
      "id": 251191210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTE5MTIxMA==",
      "diff_hunk": "@@ -78,25 +78,84 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }\n     }\n }\n \n static void ReportHardwareRand()\n {\n-    if (rdrand_supported) {\n-        // This must be done in a separate function, as HWRandInit() may be indirectly called\n-        // from global constructors, before logging is initialized.\n+    // This must be done in a separate function, as HWRandInit() may be indirectly called\n+    // from global constructors, before logging is initialized.\n+    if (g_rdseed_supported) {\n+        LogPrintf(\"Using RdSeed and RdRand as additional entropy sources\\n\");\n+    } else if (g_rdrand_supported) {\n         LogPrintf(\"Using RdRand as an additional entropy source\\n\");\n     }\n }\n \n+/** Read 64 bits of entropy using rdrand.\n+ *\n+ * Must only be called when RdRand is supported.\n+ */\n+static uint64_t GetRdRand() noexcept\n+{\n+    uint8_t ok;\n+#ifdef __i386__\n+    uint32_t r1, r2;\n+    __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0, 0x0f, 0xc7, 0xf2; setc %2\" : \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\"); // rdrand %eax; rdrand %edx\n+    assert(ok);\n+    return (((uint64_t)r2) << 32) | r1;\n+#else",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "in_reply_to_id": 251188313,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-26T07:25:14Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r251191210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251191210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251191212",
      "pull_request_review_id": 196779614,
      "id": 251191212,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTE5MTIxMg==",
      "diff_hunk": "@@ -107,36 +166,37 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool GetHardwareRand64(unsigned char* ent8) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        WriteLE64(ent8, out);\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool GetHardwareRand256(unsigned char* ent32) noexcept {\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    // When we want 256 bits of entropy, prefer RdSeed over RdRand, as it's\n+    // guaranteed to produce independent randomness on every call. RdRand\n+    // output is generated using an RNG seeded by the actual entropy, which does\n+    // not guarantee (information theoretically) independent results.\n+    if (g_rdseed_supported) {\n+        uint64_t out1 = GetRdSeed(), out2 = GetRdSeed(), out3 = GetRdSeed(), out4 = GetRdSeed();\n+        WriteLE64(ent32, out1);\n+        WriteLE64(ent32 + 8, out2);\n+        WriteLE64(ent32 + 16, out3);\n+        WriteLE64(ent32 + 24, out4);\n+        return true;\n+    }\n+    if (g_rdrand_supported) {\n+        uint64_t out1 = GetRdRand(), out2 = GetRdRand(), out3 = GetRdRand(), out4 = GetRdRand();\n+        WriteLE64(ent32, out1);\n+        WriteLE64(ent32 + 8, out2);\n+        WriteLE64(ent32 + 16, out3);\n+        WriteLE64(ent32 + 24, out4);\n         return true;",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 154,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "in_reply_to_id": 251188552,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-26T07:25:23Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r251191212",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251191212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251191232",
      "pull_request_review_id": 196779637,
      "id": 251191232,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTE5MTIzMg==",
      "diff_hunk": "@@ -107,36 +166,37 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool GetHardwareRand64(unsigned char* ent8) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        WriteLE64(ent8, out);\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool GetHardwareRand256(unsigned char* ent32) noexcept {\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    // When we want 256 bits of entropy, prefer RdSeed over RdRand, as it's\n+    // guaranteed to produce independent randomness on every call. RdRand\n+    // output is generated using an RNG seeded by the actual entropy, which does\n+    // not guarantee (information theoretically) independent results.\n+    if (g_rdseed_supported) {\n+        uint64_t out1 = GetRdSeed(), out2 = GetRdSeed(), out3 = GetRdSeed(), out4 = GetRdSeed();\n+        WriteLE64(ent32, out1);\n+        WriteLE64(ent32 + 8, out2);\n+        WriteLE64(ent32 + 16, out3);\n+        WriteLE64(ent32 + 24, out4);\n+        return true;",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 146,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "83ebab177bc7d194c18eb7401107d6a8c7d08423",
      "in_reply_to_id": 251188580,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-26T07:26:34Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r251191232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251191232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252701628",
      "pull_request_review_id": 198635722,
      "id": 252701628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjcwMTYyOA==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: whitespace",
      "created_at": "2019-01-31T15:01:20Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252701628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252701628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252730526",
      "pull_request_review_id": 198635722,
      "id": 252730526,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjczMDUyNg==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)",
      "path": "src/random.cpp",
      "position": 15,
      "original_position": 10,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I'm mistaken, but I think we can use `__get_cpuid` here, e.g.:\r\nhttps://github.com/linuxkit/linuxkit/blob/c5b3f24de6ba2238c5465025960f16920a731124/pkg/rngd/cmd/rngd/rng_linux_amd64.go#L11-L23\r\n\r\nIf not, how about a comment ala, or extracting a common method: https://github.com/bitcoin/bitcoin/blob/4d661baf1aca4226d1c4ec89fe7e44c1f93f04da/src/crypto/sha256.cpp#L552",
      "created_at": "2019-01-31T16:07:10Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252730526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252730526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252731598",
      "pull_request_review_id": 198635722,
      "id": 252731598,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjczMTU5OA==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;",
      "path": "src/random.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe `static_assert` against `cpuid.h`'s definition of `bit_RDRND`, `bit_RDSEED` if available?",
      "created_at": "2019-01-31T16:09:39Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252731598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252731598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252738092",
      "pull_request_review_id": 198635722,
      "id": 252738092,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjczODA5Mg==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wasn't able to find a source for this: is RDSEED always and everywhere absent if RDRAND is absent? Seems relatively harmless to not make the tests dependent on one another. https://software.intel.com/en-us/articles/intel-digital-random-number-generator-drng-software-implementation-guide#inpage-nav-6-1",
      "created_at": "2019-01-31T16:24:45Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252738092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252738092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252738850",
      "pull_request_review_id": 198635722,
      "id": 252738850,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjczODg1MA==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        hasher.Write((const unsigned char*)&out, sizeof(out));\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool SeedHardwareSlow(CSHA512& hasher) noexcept {\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    // When we want 256 bits of entropy, prefer RdSeed over RdRand, as it's\n+    // guaranteed to produce independent randomness on every call.\n+    if (g_rdseed_supported) {\n+        for (int i = 0; i < 4; ++i) {\n+            uint64_t out = GetRdSeed();\n+            hasher.Write((const unsigned char*)&out, sizeof(out));\n+        }\n+        return true;\n+    }\n+    // When falling back to RdRand, XOR the result of 1024 results.\n+    // This guarantees a reseeding occurs between each.\n+    if (g_rdrand_supported) {",
      "path": "src/random.cpp",
      "position": 184,
      "original_position": 175,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is always applied when the `g_rdseed_supported` case is, given the dependent detection logic. `else if`?",
      "created_at": "2019-01-31T16:26:26Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252738850",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252738850"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252751670",
      "pull_request_review_id": 198635722,
      "id": 252751670,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc1MTY3MA==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }\n     }\n }\n \n static void ReportHardwareRand()\n {\n-    if (rdrand_supported) {\n-        // This must be done in a separate function, as HWRandInit() may be indirectly called\n-        // from global constructors, before logging is initialized.\n+    // This must be done in a separate function, as HWRandInit() may be indirectly called\n+    // from global constructors, before logging is initialized.\n+    if (g_rdseed_supported) {\n+        LogPrintf(\"Using RdSeed and RdRand as additional entropy sources\\n\");\n+    } else if (g_rdrand_supported) {\n         LogPrintf(\"Using RdRand as an additional entropy source\\n\");\n     }\n }\n \n+/** Read 64 bits of entropy using rdrand.\n+ *\n+ * Must only be called when RdRand is supported.\n+ */\n+static uint64_t GetRdRand() noexcept\n+{\n+    // RdRand may very rarely fail. Invoke it up to 10 times in a loop to reduce this risk.\n+#ifdef __i386__\n+    uint8_t ok;\n+    uint32_t r1, r2;\n+    for (int i = 0; i < 10; ++i) {\n+        __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r1), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n+        if (ok) break;\n+    }\n+    for (int i = 0; i < 10; ++i) {\n+        __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r2), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n+        if (ok) break;\n+    }\n+    return (((uint64_t)r2) << 32) | r1;",
      "path": "src/random.cpp",
      "position": 73,
      "original_position": 66,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If you put two 64-bit values with additive prediction resistance togehter, the prediction resistance of the resulting value is only 65 bits (264 + 264 = 265).\r\nhttps://software.intel.com/en-us/blogs/2012/11/17/the-difference-between-rdrand-and-rdseed\r\n\r\nAssume this is addressed via the XOR rounds?",
      "created_at": "2019-01-31T16:55:47Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252751670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252751670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252753330",
      "pull_request_review_id": 198635722,
      "id": 252753330,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc1MzMzMA==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        hasher.Write((const unsigned char*)&out, sizeof(out));\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool SeedHardwareSlow(CSHA512& hasher) noexcept {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Returns `bool` that no one reacts to. Drop or log? ",
      "created_at": "2019-01-31T16:59:51Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252753330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252753330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252753406",
      "pull_request_review_id": 198635722,
      "id": 252753406,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc1MzQwNg==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Returns `bool` that no one reacts to. Drop or log?",
      "created_at": "2019-01-31T17:00:02Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r252753406",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252753406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253244146",
      "pull_request_review_id": 199323652,
      "id": 253244146,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzI0NDE0Ng==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }\n     }\n }\n \n static void ReportHardwareRand()\n {\n-    if (rdrand_supported) {\n-        // This must be done in a separate function, as HWRandInit() may be indirectly called\n-        // from global constructors, before logging is initialized.\n+    // This must be done in a separate function, as HWRandInit() may be indirectly called\n+    // from global constructors, before logging is initialized.\n+    if (g_rdseed_supported) {\n+        LogPrintf(\"Using RdSeed and RdRand as additional entropy sources\\n\");\n+    } else if (g_rdrand_supported) {\n         LogPrintf(\"Using RdRand as an additional entropy source\\n\");\n     }\n }\n \n+/** Read 64 bits of entropy using rdrand.\n+ *\n+ * Must only be called when RdRand is supported.\n+ */\n+static uint64_t GetRdRand() noexcept\n+{\n+    // RdRand may very rarely fail. Invoke it up to 10 times in a loop to reduce this risk.\n+#ifdef __i386__\n+    uint8_t ok;\n+    uint32_t r1, r2;\n+    for (int i = 0; i < 10; ++i) {\n+        __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r1), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n+        if (ok) break;\n+    }\n+    for (int i = 0; i < 10; ++i) {\n+        __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r2), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n+        if (ok) break;\n+    }\n+    return (((uint64_t)r2) << 32) | r1;",
      "path": "src/random.cpp",
      "position": 73,
      "original_position": 66,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252751670,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Keep reading: rdrand is guaranteed to be reseeded at least every 1022 calls, see the documentation that I provided in earlier comments.",
      "created_at": "2019-02-02T01:01:11Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253244146",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253244146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253244449",
      "pull_request_review_id": 199324026,
      "id": 253244449,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzI0NDQ0OQ==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        hasher.Write((const unsigned char*)&out, sizeof(out));\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool SeedHardwareSlow(CSHA512& hasher) noexcept {\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+    // When we want 256 bits of entropy, prefer RdSeed over RdRand, as it's\n+    // guaranteed to produce independent randomness on every call.\n+    if (g_rdseed_supported) {\n+        for (int i = 0; i < 4; ++i) {\n+            uint64_t out = GetRdSeed();\n+            hasher.Write((const unsigned char*)&out, sizeof(out));\n+        }\n+        return true;\n+    }\n+    // When falling back to RdRand, XOR the result of 1024 results.\n+    // This guarantees a reseeding occurs between each.\n+    if (g_rdrand_supported) {",
      "path": "src/random.cpp",
      "position": 184,
      "original_position": 175,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252738850,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The prior block unconditionally returns if its entered, so it is not applied if rdseed is supported (and shouldn't be.)",
      "created_at": "2019-02-02T01:04:08Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253244449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253244449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253312226",
      "pull_request_review_id": 199397616,
      "id": 253312226,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMxMjIyNg==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        hasher.Write((const unsigned char*)&out, sizeof(out));\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool SeedHardwareSlow(CSHA512& hasher) noexcept {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252753330,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If returning `bool` then please consider `NODISCARD`.",
      "created_at": "2019-02-03T17:56:45Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253312226",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253312226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253312235",
      "pull_request_review_id": 199397624,
      "id": 253312235,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMxMjIzNQ==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252753406,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here: if returning `bool` then please consider `NODISCARD`.",
      "created_at": "2019-02-03T17:56:55Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253312235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253312235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322279",
      "pull_request_review_id": 199408247,
      "id": 253322279,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjI3OQ==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252701628,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Where?",
      "created_at": "2019-02-03T22:16:42Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322358",
      "pull_request_review_id": 199408342,
      "id": 253322358,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjM1OA==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)",
      "path": "src/random.cpp",
      "position": 15,
      "original_position": 10,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252730526,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, we need subleafs to detect rdseed, so __get_cpuid won't work.",
      "created_at": "2019-02-03T22:19:00Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322640",
      "pull_request_review_id": 199408631,
      "id": 253322640,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjY0MA==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }\n     }\n }\n \n static void ReportHardwareRand()\n {\n-    if (rdrand_supported) {\n-        // This must be done in a separate function, as HWRandInit() may be indirectly called\n-        // from global constructors, before logging is initialized.\n+    // This must be done in a separate function, as HWRandInit() may be indirectly called\n+    // from global constructors, before logging is initialized.\n+    if (g_rdseed_supported) {\n+        LogPrintf(\"Using RdSeed and RdRand as additional entropy sources\\n\");\n+    } else if (g_rdrand_supported) {\n         LogPrintf(\"Using RdRand as an additional entropy source\\n\");\n     }\n }\n \n+/** Read 64 bits of entropy using rdrand.\n+ *\n+ * Must only be called when RdRand is supported.\n+ */\n+static uint64_t GetRdRand() noexcept\n+{\n+    // RdRand may very rarely fail. Invoke it up to 10 times in a loop to reduce this risk.\n+#ifdef __i386__\n+    uint8_t ok;\n+    uint32_t r1, r2;\n+    for (int i = 0; i < 10; ++i) {\n+        __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r1), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n+        if (ok) break;\n+    }\n+    for (int i = 0; i < 10; ++i) {\n+        __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r2), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n+        if (ok) break;\n+    }\n+    return (((uint64_t)r2) << 32) | r1;",
      "path": "src/random.cpp",
      "position": 73,
      "original_position": 66,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252751670,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@Empact Nothing is being added together here (it's concatenated, which doesn't suffer from the same problem). Also, this function is only trying to produce a 64-bit value.",
      "created_at": "2019-02-03T22:25:27Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322806",
      "pull_request_review_id": 199408808,
      "id": 253322806,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjgwNg==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252753406,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed. `bool` is gone.",
      "created_at": "2019-02-03T22:28:25Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322806",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322817",
      "pull_request_review_id": 199408817,
      "id": 253322817,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjgxNw==",
      "diff_hunk": "@@ -107,36 +194,36 @@ static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n #endif\n \n-static bool GetHardwareRand(unsigned char* ent32) noexcept {\n+static bool SeedHardwareFast(CSHA512& hasher) noexcept {\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-    if (rdrand_supported) {\n-        uint8_t ok;\n-        // Not all assemblers support the rdrand instruction, write it in hex.\n-#ifdef __i386__\n-        for (int iter = 0; iter < 4; ++iter) {\n-            uint32_t r1, r2;\n-            __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0;\" // rdrand %eax\n-                              \".byte 0x0f, 0xc7, 0xf2;\" // rdrand %edx\n-                              \"setc %2\" :\n-                              \"=a\"(r1), \"=d\"(r2), \"=q\"(ok) :: \"cc\");\n-            if (!ok) return false;\n-            WriteLE32(ent32 + 8 * iter, r1);\n-            WriteLE32(ent32 + 8 * iter + 4, r2);\n-        }\n-#else\n-        uint64_t r1, r2, r3, r4;\n-        __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0, \" // rdrand %rax\n-                                \"0x48, 0x0f, 0xc7, 0xf3, \" // rdrand %rbx\n-                                \"0x48, 0x0f, 0xc7, 0xf1, \" // rdrand %rcx\n-                                \"0x48, 0x0f, 0xc7, 0xf2; \" // rdrand %rdx\n-                          \"setc %4\" :\n-                          \"=a\"(r1), \"=b\"(r2), \"=c\"(r3), \"=d\"(r4), \"=q\"(ok) :: \"cc\");\n-        if (!ok) return false;\n-        WriteLE64(ent32, r1);\n-        WriteLE64(ent32 + 8, r2);\n-        WriteLE64(ent32 + 16, r3);\n-        WriteLE64(ent32 + 24, r4);\n+    if (g_rdrand_supported) {\n+        uint64_t out = GetRdRand();\n+        hasher.Write((const unsigned char*)&out, sizeof(out));\n+        return true;\n+    }\n #endif\n+    return false;\n+}\n+\n+static bool SeedHardwareSlow(CSHA512& hasher) noexcept {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252753330,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, removed the bool.",
      "created_at": "2019-02-03T22:28:37Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322842",
      "pull_request_review_id": 199408845,
      "id": 253322842,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjg0Mg==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n static void InitHardwareRand()\n {\n     uint32_t eax, ebx, ecx, edx;\n-    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & CPUID_F1_ECX_RDRAND)) {\n-        rdrand_supported = true;\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n+    if (ecx & CPUID_F1_ECX_RDRAND) {\n+        g_rdrand_supported = true;\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n+        if (ebx & CPUID_F7_EBX_RDSEED) {\n+            g_rdseed_supported = true;\n+        }",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252738092,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, made them independent.",
      "created_at": "2019-02-03T22:28:59Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322845",
      "pull_request_review_id": 199408849,
      "id": 253322845,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjg0NQ==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;",
      "path": "src/random.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252731598,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-02-03T22:29:05Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322848",
      "pull_request_review_id": 199408852,
      "id": 253322848,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjg0OA==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)",
      "path": "src/random.cpp",
      "position": 15,
      "original_position": 10,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252730526,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment.",
      "created_at": "2019-02-03T22:29:13Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253322848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253324675",
      "pull_request_review_id": 199410793,
      "id": 253324675,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyNDY3NQ==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252701628,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Line 91 is indented 2 spaces instead of 4. :P",
      "created_at": "2019-02-03T23:08:14Z",
      "updated_at": "2019-02-04T01:34:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253324675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253324675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253332103",
      "pull_request_review_id": 199419364,
      "id": 253332103,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMzMjEwMw==",
      "diff_hunk": "@@ -78,25 +78,112 @@ static inline int64_t GetPerformanceCounter() noexcept\n }\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-static bool rdrand_supported = false;\n+static bool g_rdrand_supported = false;\n+static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n+static constexpr uint32_t CPUID_F7_EBX_RDSEED = 0x00040000;\n+\n+static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "1435fabc19d2143187efb493cbe23225eaf851ae",
      "original_commit_id": "673964328fc2a09cfd9d14ca59c8b37ffa49620c",
      "in_reply_to_id": 252701628,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh! Fixed.",
      "created_at": "2019-02-04T01:34:53Z",
      "updated_at": "2019-02-04T01:34:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15250#discussion_r253332103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253332103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15250"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    }
  ]
}