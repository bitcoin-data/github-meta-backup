{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468",
    "id": 395351838,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzUxODM4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18468",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18468.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18468.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/26acc8dd9b512f220c1facdba2c5de7976d3c258",
    "number": 18468,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Span improvements",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This improves our Span class by making it closer to the C++20 `std::span` one:\r\n* ~~Support conversion between compatible Spans (e.g. `Span<char>` to `Span<const char>`).~~ (done in #18591)\r\n* Make the size type `std::size_t` rather than `std::ptrdiff_t` (the C++20 one underwent the same change).\r\n* Support construction of Spans directly from arrays, `std::string`s, `std::array`s, `std::vector`s, `prevector`s, ... (for all but arrays, this only works for const containers to prevent surprises).\r\n\r\nAnd then make use of those improvements in various call sites.\r\n\r\nI realize the template magic used looks scary, but it's only needed to make overload resultion make the right choices. Note that the operations done on values are all extremely simple: no casts, explicit conversions, or warning-silencing constructions. That should hopefully make it simpler to review.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-03-30T00:51:02Z",
    "updated_at": "2022-02-15T10:34:30Z",
    "closed_at": "2020-06-18T12:13:33Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-06-18T12:13:33Z",
    "merge_commit_sha": "b8740d6737b49229101fbce909ca3917929185b4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:202003_conv_span",
      "ref": "202003_conv_span",
      "sha": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "35ed88f187c9bc7eedc3a1cf12193e0fbf222057",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 104,
    "deletions": 44,
    "changed_files": 6,
    "commits": 5,
    "review_comments": 36,
    "comments": 26
  },
  "events": [
    {
      "event": "labeled",
      "id": 3176602762,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxNzY2MDI3NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176602762",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T01:52:13Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "labeled",
      "id": 3176602763,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxNzY2MDI3NjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176602763",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T01:52:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3176649691,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3NjY0OTY5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176649691",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T02:26:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3176654882,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3NjY1NDg4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176654882",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T02:29:23Z"
    },
    {
      "event": "commented",
      "id": 605752932,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTc1MjkzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605752932",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T02:43:17Z",
      "updated_at": "2020-06-10T21:53:29Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-605752932",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3176686223,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3NjY4NjIyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176686223",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T02:48:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3176858110,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3Njg1ODExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176858110",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T04:40:59Z"
    },
    {
      "event": "commented",
      "id": 605780145,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTc4MDE0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605780145",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T04:48:24Z",
      "updated_at": "2020-03-30T21:28:22Z",
      "author_association": "MEMBER",
      "body": "Here is one caveat that may not be obvious: whenever you have some iterator/pointer/object that stores objects of type `B` (which supertype `A`), it should *not* be possible to construct a `Span<A>` for it, despite `B*` being implicitly convertible to `A*`. The reason is that `A` and `B` may have different sizes, so pointer arithmetic in one may not correspond to the right operations in the other.\r\n\r\nThis is implemented - here and in the C++20 `std::span` - by checking that *arrays of* `B` can be converted to *arrays of* `A`.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-605780145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3177666031,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3NzY2NjAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3177666031",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T09:17:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3179795323,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3OTc5NTMyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3179795323",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T17:55:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3179845053,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3OTg0NTA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3179845053",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T18:08:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3180566689,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE4MDU2NjY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180566689",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T21:27:30Z"
    },
    {
      "event": "reviewed",
      "id": 387236075,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjM2MDc1",
      "url": null,
      "actor": null,
      "commit_id": "6bc07845c57765940bd2af242166e154c939738b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-387236075",
      "submitted_at": "2020-04-03T13:08:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "referenced",
      "id": 3288351771,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyODgzNTE3NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3288351771",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "35ef3c15ef8263b79c6e8f002ceab270f08cd5a5",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35ef3c15ef8263b79c6e8f002ceab270f08cd5a5",
      "created_at": "2020-04-30T09:17:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3294041767,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5NDA0MTc2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3294041767",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T18:28:05Z"
    },
    {
      "event": "commented",
      "id": 622505998,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjUwNTk5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622505998",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T18:28:21Z",
      "updated_at": "2020-05-01T18:28:21Z",
      "author_association": "MEMBER",
      "body": "Rebased after #18591 (which included a commit from this PR).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622505998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 622650104,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjY1MDEwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622650104",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T01:36:38Z",
      "updated_at": "2020-05-02T01:36:38Z",
      "author_association": "MEMBER",
      "body": "I was trying to MakeSpan on a prevector today and I realized I needed this PR. Concept ACK. will test and ACK soon.",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622650104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "reviewed",
      "id": 404509767,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTA5NzY3",
      "url": null,
      "actor": null,
      "commit_id": "bc32062d4081eb6f9d2d198861bc255e3cd33d38",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-404509767",
      "submitted_at": "2020-05-02T08:11:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "commented",
      "id": 622846597,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjg0NjU5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622846597",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T08:12:06Z",
      "updated_at": "2020-05-02T08:12:06Z",
      "author_association": "MEMBER",
      "body": "Seems to be working well on a branch I'm testing. one spooky thing I ran into was:\r\n\r\n```c++\r\nstatic std::vector<unsigned char> RandomData()\r\n{\r\n    uint256 r = InsecureRand256();\r\n    return std::vector<unsigned char>(r.begin(), r.end());\r\n}\r\n\r\nauto d = MakeSpan(RandomData());\r\nrb1.insert(d)\r\nBOOST_CHECK(rb1.contains(d));\r\n```\r\n\r\n```\r\nRunning 12 test cases...\r\ntest/bloom_tests.cpp(519): error: in \"bloom_tests/rolling_bloom\": check nHits == 6 has failed [3 != 6]\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n[201] jb55@monad> ./src/test/test_bitcoin -t bloom_tests                                                                                                                                                     ~/dev/github/bitcoin/bitcoin\r\nRunning 12 test cases...\r\ntest/bloom_tests.cpp(519): error: in \"bloom_tests/rolling_bloom\": check nHits == 6 has failed [3 != 6]\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n[201] jb55@monad> ./src/test/test_bitcoin -t bloom_tests                                                                                                                                                     ~/dev/github/bitcoin/bitcoin\r\nRunning 12 test cases...\r\ntest/bloom_tests.cpp(519): error: in \"bloom_tests/rolling_bloom\": check nHits == 6 has failed [2 != 6]\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n[201] jb55@monad> ./src/test/test_bitcoin -t bloom_tests                                                                                                                                                     ~/dev/github/bitcoin/bitcoin\r\nRunning 12 test cases...\r\ntest/bloom_tests.cpp(519): error: in \"bloom_tests/rolling_bloom\": check nHits == 6 has failed [7 != 6]\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n[201] jb55@monad>                                                                                                                                                                                            ~/dev/github/bitcoin/bitcoin\r\n[201] jb55@monad> ./src/test/test_bitcoin -t bloom_tests                                                                                                                                                     ~/dev/github/bitcoin/bitcoin\r\nRunning 12 test cases...\r\ntest/bloom_tests.cpp(519): error: in \"bloom_tests/rolling_bloom\": check nHits == 6 has failed [4 != 6]\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n\r\nbut this works fine:\r\n\r\n```c++\r\nstd::vector<unsigned char> d = RandomData();\r\nrb1.insert(MakeSpan(d));\r\nBOOST_CHECK(rb1.contains(MakeSpan(d)));\r\n```\r\n\r\nsome weird rvalue voodoo going on?",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622846597",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 622899783,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjg5OTc4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622899783",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T08:53:33Z",
      "updated_at": "2020-05-02T08:53:33Z",
      "author_association": "NONE",
      "body": " I may be wrong, but i think in your first example, the return value of `RandomData()` is destructed immediately.\r\n\r\n```c++\r\nauto d = MakeSpan(RandomData());\r\n// d contains dangling pointers by this line.\r\nrb1.insert(d)\r\nBOOST_CHECK(rb1.contains(d));\r\n```\r\n\r\nMakeSpan takes a [universal reference](https://channel9.msdn.com/Shows/Going+Deep/Cpp-and-Beyond-2012-Scott-Meyers-Universal-References-in-Cpp11) (`V&&`) in this PR.\r\n\r\nbecause the return value of RandomData() is an Rvalue, it goes out of scope on the first line and therefore is destructed immediately.",
      "user": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622899783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 622914063,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjkxNDA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622914063",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T09:04:48Z",
      "updated_at": "2020-05-02T09:04:48Z",
      "author_association": "MEMBER",
      "body": "@aminroosta I understand some of those words. thanks!",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622914063",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3295147462,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5NTE0NzQ2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3295147462",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T09:04:48Z"
    },
    {
      "event": "subscribed",
      "id": 3295147463,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTUxNDc0NjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3295147463",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T09:04:48Z"
    },
    {
      "event": "reviewed",
      "id": 404520352,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTIwMzUy",
      "url": null,
      "actor": null,
      "commit_id": "bc32062d4081eb6f9d2d198861bc255e3cd33d38",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-404520352",
      "submitted_at": "2020-05-02T11:23:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "commented",
      "id": 622986496,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjk4NjQ5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622986496",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T17:20:46Z",
      "updated_at": "2020-05-02T17:20:46Z",
      "author_association": "MEMBER",
      "body": "Yes, exactly what @aminroosta said.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-622986496",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3296438767,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5NjQzODc2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296438767",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T17:20:46Z"
    },
    {
      "event": "subscribed",
      "id": 3296438769,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTY0Mzg3Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296438769",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T17:20:46Z"
    },
    {
      "event": "referenced",
      "id": 3296779625,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTY3Nzk2MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296779625",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c3bc34f50a97a289bdd8180ee033434f4e9c8032",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/c3bc34f50a97a289bdd8180ee033434f4e9c8032",
      "created_at": "2020-05-02T20:18:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3296907469,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5NjkwNzQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296907469",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:40:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3296909394,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5NjkwOTM5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296909394",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:44:03Z"
    },
    {
      "event": "commented",
      "id": 623030711,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzAzMDcxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623030711",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:51:16Z",
      "updated_at": "2020-05-02T23:54:49Z",
      "author_association": "MEMBER",
      "body": "@jb55 @aminroosta Ok, interesting. I guess the reasoning is that an `std::span` should really be thought of a a \"reference + size\" thing. You can't pass a temporary to a function that takes a non-const lvalue reference (because it would be surprising to make modifications to an input that's going to be discarded) - similarly you shouldn't be able to pass a temporary to a function that takes a mutable `std::span`.\r\n\r\nI've made changes to this PR to implement the same behaviour - both in the constructor and in `MakeSpan`. You can construct mutable `Span`s from lvalue references, but if you pass in a temporary you can only create immutable Spans.\r\n\r\nNone of this really addresses the lifetime issue that @jb55 encountered. If you construct a Span from a temporary, you better make sure the Span doesn't outlive the object pointed to. This is similar to the follow code, which compiles fine, but is UB:\r\n\r\n```c++\r\nconst char& chr = std::string(\"blup\")[0];\r\nputchar(chr);\r\n```\r\n\r\nA string is constructed in the first line, and destroyed when the statement ends. This means `chr` is now a reference to a non-existing object.\r\n\r\nThe same thing is possible with `Span` (and with C++20 `std::span`, I just checked):\r\n\r\n```c++\r\nstd::span<const char> sp{std::string(\"blup\")};\r\nputchar(sp[0]);\r\n```\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-623030711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3296913016,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5NjkxMzAxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296913016",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:51:16Z"
    },
    {
      "event": "subscribed",
      "id": 3296913017,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTY5MTMwMTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296913017",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:51:16Z"
    },
    {
      "event": "mentioned",
      "id": 3296913019,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5NjkxMzAxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296913019",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:51:16Z"
    },
    {
      "event": "subscribed",
      "id": 3296913021,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTY5MTMwMjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3296913021",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T23:51:16Z"
    },
    {
      "event": "reviewed",
      "id": 404638949,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjM4OTQ5",
      "url": null,
      "actor": null,
      "commit_id": "88817d05a73f7b5cd5d7b07d628c88294edc9c5f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> None of this really addresses the lifetime issue that @jb55 encountered\r\n\r\nand this is completely fine of course, I'm not expecting any more from the language than what makes sense.",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-404638949",
      "submitted_at": "2020-05-03T17:13:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "commented",
      "id": 623191588,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzE5MTU4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623191588",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:20:07Z",
      "updated_at": "2020-05-03T22:20:07Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. I'm curious why span constructors aren't declared `explicit` - I'm aware `std::span` doesn't have them - since this is the project implementation and \"should\" follow #11112.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-623191588",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 623194442,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzE5NDQ0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623194442",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:39:36Z",
      "updated_at": "2020-05-03T22:44:15Z",
      "author_association": "MEMBER",
      "body": "@promag That would partially defeat the purpose, in my view. With std::span/Span, the point is that you can write a single function that accepts a span as input, and it will automatically work with whatever continuous container you pass it. This is safe as spans are restricted in features to be a strict subset of those containers.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-623194442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3297911782,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5NzkxMTc4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3297911782",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:39:36Z"
    },
    {
      "event": "subscribed",
      "id": 3297911784,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTc5MTE3ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3297911784",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:39:36Z"
    },
    {
      "event": "commented",
      "id": 623195515,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzE5NTUxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623195515",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:46:52Z",
      "updated_at": "2020-05-03T22:46:52Z",
      "author_association": "MEMBER",
      "body": "@sipa right, I see you have edited your comment. Don't get me wrong, I like/prefer this way.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-623195515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3297917401,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5NzkxNzQwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3297917401",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:46:52Z"
    },
    {
      "event": "subscribed",
      "id": 3297917402,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTc5MTc0MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3297917402",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:46:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3305423693,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwNTQyMzY5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3305423693",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-05T18:12:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3305516314,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwNTUxNjMxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3305516314",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-05T18:39:02Z"
    },
    {
      "event": "commented",
      "id": 624235722,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDIzNTcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624235722",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-05T18:42:01Z",
      "updated_at": "2020-05-05T18:42:01Z",
      "author_association": "MEMBER",
      "body": "I added a workaround that seems necessary on CentOS 7 (GCC 4.8.5). It seems that when both a function `template<typename T> F(T&)` and `template<typename T> F(T&&)` are present, passing an lvalue rerence is treated as ambiguous there (other compilers correctly prefer the explicitly lvalue reference first version over the universal reference in the second).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-624235722",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3305971743,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwNTk3MTc0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3305971743",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-05T20:52:00Z"
    },
    {
      "event": "labeled",
      "id": 3321402826,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzMjE0MDI4MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3321402826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T06:11:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjc5MGExMTQ3YWQ5YTVmZTA2OTg3ZDg0YjZjZDcxZjkxY2JlYzRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f790a1147ad9a5fe06987d84b6cd71f91cbec4b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f790a1147ad9a5fe06987d84b6cd71f91cbec4b",
      "tree": {
        "sha": "320deb12f1d446ca83369d16e4083e1c6b249fe5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/320deb12f1d446ca83369d16e4083e1c6b249fe5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8da1e43b63cb36759eeb1fcfd6768163265c44e2",
          "sha": "8da1e43b63cb36759eeb1fcfd6768163265c44e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8da1e43b63cb36759eeb1fcfd6768163265c44e2"
        }
      ],
      "message": "Make Span size type unsigned\n\nThis matches a change in the C++20 std::span proposal.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-05-12T21:12:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-03-29T23:31:03Z"
      },
      "sha": "1f790a1147ad9a5fe06987d84b6cd71f91cbec4b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjNkMzhmYzA2MWQ4NDgyZTY4Y2QzMzVhNDVjOWNkOGJiNjZhNDc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb3d38fc061d8482e68cd335a45c9cd8bb66a475",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bb3d38fc061d8482e68cd335a45c9cd8bb66a475",
      "tree": {
        "sha": "e267d5d97f68f8b0a73035c4ff913a4cd30b709a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e267d5d97f68f8b0a73035c4ff913a4cd30b709a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f790a1147ad9a5fe06987d84b6cd71f91cbec4b",
          "sha": "1f790a1147ad9a5fe06987d84b6cd71f91cbec4b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f790a1147ad9a5fe06987d84b6cd71f91cbec4b"
        }
      ],
      "message": "Make pointer-based Span construction safer\n\nThis prevents constructing a Span<A> given two pointers into an array\nof B (where B is a subclass of A), at least without explicit cast to\npointers to A.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-05-12T21:12:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-03-29T23:58:04Z"
      },
      "sha": "bb3d38fc061d8482e68cd335a45c9cd8bb66a475"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjMwM2ExNmQxMTRiMWU5NGM2Y2YwZTRjNWRiNTM4OWRmYTE5N2Y2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab303a16d114b1e94c6cf0e4c5db5389dfa197f6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab303a16d114b1e94c6cf0e4c5db5389dfa197f6",
      "tree": {
        "sha": "804c4048b8e5061d4e4e6c19d8f8b095ac882025",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/804c4048b8e5061d4e4e6c19d8f8b095ac882025"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb3d38fc061d8482e68cd335a45c9cd8bb66a475",
          "sha": "bb3d38fc061d8482e68cd335a45c9cd8bb66a475",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb3d38fc061d8482e68cd335a45c9cd8bb66a475"
        }
      ],
      "message": "Add Span constructors for arrays and vectors",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-05-12T21:12:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-03-30T00:29:01Z"
      },
      "sha": "ab303a16d114b1e94c6cf0e4c5db5389dfa197f6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjc2YWVhZGZhMGU0M2RjYWFjY2M0NzIwNjIzY2RmZTBiZWVkNTI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "tree": {
        "sha": "f68ed37715bddfefb1b8df1595bd91b307b32903",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f68ed37715bddfefb1b8df1595bd91b307b32903"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab303a16d114b1e94c6cf0e4c5db5389dfa197f6",
          "sha": "ab303a16d114b1e94c6cf0e4c5db5389dfa197f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab303a16d114b1e94c6cf0e4c5db5389dfa197f6"
        }
      ],
      "message": "Simplify usage of Span in several places",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-05-12T21:19:40Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-03-30T00:42:38Z"
      },
      "sha": "2676aeadfa0e43dcaaccc4720623cdfe0beed528"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3329410615,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyOTQxMDYxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3329410615",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-12T21:33:00Z"
    },
    {
      "event": "unlabeled",
      "id": 3329470352,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzMyOTQ3MDM1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3329470352",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-12T21:53:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 629568997,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU2ODk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629568997",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:29:49Z",
      "updated_at": "2020-05-16T01:29:49Z",
      "author_association": "MEMBER",
      "body": "```\r\n-----BEGIN OPENTIMESTAMPS MESSAGE-----\r\n\r\n- -----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nTested ACK 1f790a1147ad9a5fe06987d84b6cd71f91cbec4b \r\n- -----BEGIN PGP SIGNATURE-----\r\n\r\niHUEARYIAB0WIQTgLT/U60WFpjUxwdDhv8uQof96HAUCXr8/HwAKCRDhv8uQof96\r\nHHdWAP4oLAWAFyl89rmXCkOLhabnQH0eA1WuQLms9sGQ/0ZuIAEA95NqgBdDXeNy\r\nLNZONShuQyUhND7sV3DFtdnwlMdwRAM=\r\n=eezA\r\n- -----END PGP SIGNATURE-----\r\n\r\n-----BEGIN OPENTIMESTAMPS PROOF-----\r\n\r\nAE9wZW5UaW1lc3RhbXBzAABQcm9vZgC/ieLohOiSlAEI0+kRFDp/91K3axlWimkSIh1Ka2PWppGJ\r\nYtXOXy0HOKPwEIew6IYLhpu8/iYXzfmu8MQI//AQCDnqvzdSHC6NHfUc3YlXSAjxBF6/PznwCGCt\r\nodmwhfKvAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHkuY29t//AQJIfp\r\nXbaf4HUvxkjGLaBeyQjxIK2eTRPWo7iFMz9KJAhAEQj++q+aDKHrMrU2g1OTU56WCPEEXr8/OPAI\r\n3EyoLhEfdiQAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\r\ncy5vcmfwEPLW6m0gMqdiEIgYvoB9QnYI8CA+Yd5Y9xkgXBCvNi5d4UBONxjC+nGVWiUTf+sCVk4O\r\nmAjxBF6/PznwCCCCbb6MkeJlAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVy\r\nbml0eXdhbGwuY29t\r\n-----END OPENTIMESTAMPS PROOF-----\r\n```\r\n[otsclear](https://git.sr.ht/~jb55/ots-tools/tree/master/otsclear) `xclip -o | otsclear -v | gpg --verify`",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-629568997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 629570690,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU3MDY5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629570690",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:44:24Z",
      "updated_at": "2020-05-16T01:44:24Z",
      "author_association": "MEMBER",
      "body": "@jb55 Which key did you use to sign this? I'm seeing `E02D3FD4EB4585A63531C1D0E1BFCB90A1FF7A1C` which doesn't seem to match the one I have for you `1514A56A573AADFCA0EBFF908FB01059E7960F33` (from your website).\r\n",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-629570690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3343104697,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM0MzEwNDY5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3343104697",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:44:24Z"
    },
    {
      "event": "subscribed",
      "id": 3343104698,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzNDMxMDQ2OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3343104698",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:44:24Z"
    },
    {
      "event": "commented",
      "id": 629571454,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU3MTQ1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629571454",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:51:38Z",
      "updated_at": "2020-05-16T01:53:31Z",
      "author_association": "MEMBER",
      "body": "thanks for verifying :) @fanquake https://jb55.com/s/8f099795a120ae13.txt ",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-629571454",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3343109824,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM0MzEwOTgyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3343109824",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:51:39Z"
    },
    {
      "event": "subscribed",
      "id": 3343109826,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzNDMxMDk4MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3343109826",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T01:51:39Z"
    },
    {
      "event": "reviewed",
      "id": 413048410,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQ4NDEw",
      "url": null,
      "actor": null,
      "commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-413048410",
      "submitted_at": "2020-05-16T05:07:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "reviewed",
      "id": 413048814,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQ4ODE0",
      "url": null,
      "actor": null,
      "commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-413048814",
      "submitted_at": "2020-05-16T05:15:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "added_to_project",
      "id": 3384238180,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzMzg0MjM4MTgw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3384238180",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-28T19:08:19Z",
      "project_card": {
        "id": 39100949,
        "url": "https://api.github.com/projects/columns/cards/39100949",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "unlabeled",
      "id": 3388581248,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzM4ODU4MTI0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3388581248",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-29T19:43:00Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 3390579973,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzOTA1Nzk5NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390579973",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T12:48:16Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "unlabeled",
      "id": 3390580042,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzM5MDU4MDA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390580042",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T12:48:22Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "commented",
      "id": 638976042,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzODk3NjA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638976042",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T16:48:05Z",
      "updated_at": "2020-06-18T11:44:28Z",
      "author_association": "MEMBER",
      "body": "~~Code review ACK 2676aeadfa0e43dcaaccc4720623cdfe0beed528~~\r\nCode review ACK 26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-638976042",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 639016510,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTAxNjUxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639016510",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T18:06:35Z",
      "updated_at": "2020-06-04T18:06:35Z",
      "author_association": "MEMBER",
      "body": "Added a commit that adds a bunch of asserts that are enabled on `-DDEBUG`.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-639016510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 639187198,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTE4NzE5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639187198",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-05T00:22:12Z",
      "updated_at": "2020-06-05T00:22:12Z",
      "author_association": "MEMBER",
      "body": "Code review ACK https://github.com/bitcoin/bitcoin/pull/18468/commits/3d9ef83776f831a1f077674c16807391ec5f5d57",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-639187198",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 639310657,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTMxMDY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639310657",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-05T07:33:00Z",
      "updated_at": "2020-06-05T07:33:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-639310657",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "reviewed",
      "id": 429296749,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Mjk2NzQ5",
      "url": null,
      "actor": null,
      "commit_id": "3d9ef83776f831a1f077674c16807391ec5f5d57",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 3d9ef83776f831a1f077674c16807391ec5f5d57.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-429296749",
      "submitted_at": "2020-06-11T21:45:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmFjYzhkZDliNTEyZjIyMGMxZmFjZGJhMmM1ZGU3OTc2ZDNjMjU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "tree": {
        "sha": "4c4d4a8ec5b2260604cbacaecf9d6d92f2f9edf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c4d4a8ec5b2260604cbacaecf9d6d92f2f9edf0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2676aeadfa0e43dcaaccc4720623cdfe0beed528",
          "sha": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2676aeadfa0e43dcaaccc4720623cdfe0beed528"
        }
      ],
      "message": "Add sanity check asserts to span when -DDEBUG",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-06-17T22:10:50Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-06-04T17:46:52Z"
      },
      "sha": "26acc8dd9b512f220c1facdba2c5de7976d3c258"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3455603138,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NTYwMzEzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3455603138",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T22:12:34Z"
    },
    {
      "event": "reviewed",
      "id": 432839992,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODM5OTky",
      "url": null,
      "actor": null,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 26acc8dd9b512f220c1facdba2c5de7976d3c258.\r\n\r\nOnly changes are the new macro `ASSERT_IF_DEBUG` and replaced `assert` with `ASSERT_IF_DEBUG` (good catch).",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-432839992",
      "submitted_at": "2020-06-17T23:20:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "removed_from_project",
      "id": 3457823227,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzQ1NzgyMzIyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3457823227",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-18T12:12:54Z",
      "project_card": {
        "id": 39100949,
        "url": "https://api.github.com/projects/columns/cards/39100949",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "merged",
      "id": 3457825591,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzQ1NzgyNTU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3457825591",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b8740d6737b49229101fbce909ca3917929185b4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8740d6737b49229101fbce909ca3917929185b4",
      "created_at": "2020-06-18T12:13:33Z"
    },
    {
      "event": "closed",
      "id": 3457825614,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQ1NzgyNTYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3457825614",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-18T12:13:33Z"
    },
    {
      "event": "reviewed",
      "id": 434283400,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjgzNDAw",
      "url": null,
      "actor": null,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-434283400",
      "submitted_at": "2020-06-19T18:54:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "reviewed",
      "id": 435000821,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MDAwODIx",
      "url": null,
      "actor": null,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Customary Concept ACK. I am no way qualified enough to critique this PR. But as it is merged and is an upcoming review club topic, I guess it's ok to ask my noob questions here for educational purposes.\r\n\r\nCompiled without issue, All tests passing. Performed fuzzing of `span` and `spanparser` untill no new coverage path in 6 hours. No bugs reported.\r\n\r\nThe following are some basic questions I had while reviewing the PR.     ",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-435000821",
      "submitted_at": "2020-06-23T06:35:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "commented",
      "id": 648539738,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODUzOTczOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648539738",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:11:45Z",
      "updated_at": "2020-06-24T02:11:45Z",
      "author_association": "MEMBER",
      "body": "@jb55 @theuni I've opened https://github.com/bitcoin/bitcoin/pull/19367 to document some of the pitfalls you mentioned in comments above.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-648539738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3475477058,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3NTQ3NzA1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475477058",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:11:45Z"
    },
    {
      "event": "subscribed",
      "id": 3475477061,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzU0NzcwNjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475477061",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:11:45Z"
    },
    {
      "event": "mentioned",
      "id": 3475477062,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3NTQ3NzA2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475477062",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:11:45Z"
    },
    {
      "event": "subscribed",
      "id": 3475477063,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzU0NzcwNjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3475477063",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T02:11:46Z"
    },
    {
      "event": "commented",
      "id": 648756399,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODc1NjM5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648756399",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T11:11:12Z",
      "updated_at": "2020-06-24T11:11:12Z",
      "author_association": "MEMBER",
      "body": "post-merge code review ACK",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-648756399",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "reviewed",
      "id": 436712850,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NzEyODUw",
      "url": null,
      "actor": null,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-436712850",
      "submitted_at": "2020-06-24T15:51:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "reviewed",
      "id": 436797786,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2Nzk3Nzg2",
      "url": null,
      "actor": null,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-436797786",
      "submitted_at": "2020-06-24T16:09:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "commented",
      "id": 648946546,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk0NjU0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648946546",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T17:05:39Z",
      "updated_at": "2020-06-24T17:23:03Z",
      "author_association": "MEMBER",
      "body": "Continuing the discussion from here: https://github.com/bitcoin/bitcoin/pull/19367/files#r445025361 because I don't know where else to stick it.\r\n\r\nI believe that adding clang's lifetimebound attribute points out a valid issue here:\r\n```\r\nutil/spanparsing.cpp:46:28: warning: temporary whose address is used as value of local variable 'ret' will be destroyed at the end of the full-expression [-Wdangling]\r\n    Span<const char> ret = sp.first(it - sp.begin());\r\n```\r\n\r\nExpr's return value depends on the span that was passed in (sp), which may have been a temporary. In that case, I believe the span that's returned is now referencing invalid memory.\r\n\r\nEdit: On second thought, I suppose that's somewhat obvious behavior here and not really a bug. It would be really easy to miss in review, though :(\r\n\r\nEdit2: It does point out a dangerous pattern, though: I think any function which returns a span as a result of modifying a different input span is potentially susceptible to this issue?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-648946546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 648987266,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk4NzI2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648987266",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T18:21:43Z",
      "updated_at": "2020-06-24T18:21:43Z",
      "author_association": "MEMBER",
      "body": "Should any function that returns a subspan of the passed-in span be declared with non-const argument? Would that prevent temporaries from being passed in? Or is there a better way to do that?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-648987266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "commented",
      "id": 649094742,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTA5NDc0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649094742",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T21:57:31Z",
      "updated_at": "2020-06-24T22:25:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "@theuni \r\n\r\n> It would be really easy to miss in review, though :(\r\n\r\nAgreed! It is very easy to get things wrong when reasoning about lifetime issues. This is really subtle topic filled with gotchas.\r\n\r\nThe introduction of `std::span` and `std::string_view` will bring a new golden age of use-after-frees/returns to C++ :)\r\n\r\nPersonally I'm not convinced that it is a good idea to use `std::span` or `std::string_view` as anything other than parameter types in the general case (there are exceptions obviously, but the security/stability vs performance trade-off should be considered in such cases).\r\n\r\nAs a rule of thumb: if the median reviewer has to think more than five seconds to answer \"no\" to the question \"might there be a life-time issue hiding in this use of `std::{span,string_view}`?\" then it is likely not a good idea to use them :)\r\n\r\nSomewhat related: [\"std::string_view encourages use-after-free; the Core Guidelines Checker doesn't complain\"](https://github.com/isocpp/CppCoreGuidelines/issues/1038)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-649094742",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3479544182,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3OTU0NDE4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3479544182",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T21:57:31Z"
    },
    {
      "event": "subscribed",
      "id": 3479544185,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Nzk1NDQxODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3479544185",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T21:57:31Z"
    },
    {
      "event": "reviewed",
      "id": 437646330,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NjQ2MzMw",
      "url": null,
      "actor": null,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks @sipa, this PR led me to learn more about Span and C++20 `std::span` via these resources, among the online ones:\r\n\r\n1. C++ std:span: https://en.cppreference.com/w/cpp/container/span\r\n\r\n2. Yesterday's Review Club notes/questions/meeting log: https://bitcoincore.reviews/18468\r\n\r\n3. The C++ Core Guidelines site seems to be a source of interesting recommendations on when, why, and how to use std::span: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines. It suggests using `std::span` in a fair number of places/reasons, among others:\r\n- expressing intent\r\n- improved code readability and tool support\r\n- avoiding range errors and array decay to a pointer (losing its size, opening the opportunity for range errors; using span preserves size information)\r\n- going further, avoiding passing arrays as a single pointer, as (pointer, size)-style interfaces are error-prone and a plain pointer (to array) must rely on some convention to allow the callee to determine the size\r\n- potentially doing more at compile time vs run time\r\n- potentially checking/catching run time errors earlier in the code\r\n- abstraction for encapsulating messy constructs, rather than spreading them throughout the code\r\n- reducing the number of function arguments, e.g. from pointer + size to a bounds-checked span representing a range\r\n- `span<T>` or a `span_p<T>` ideal for designating half-open sequences, as informal/non-explicit ranges are a source of errors\r\n- helpful for using abstract classes as interfaces when complete separation of interface and implementation is needed\r\n\r\nThis PR debug-builds cleanly with gcc and clang, and the fuzzers build and run.\r\n\r\nACK 26acc8dd9b512f220c1facdba2c5de7976d3c258 (AFAICT), modulo the various follow-ups suggested above.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#pullrequestreview-437646330",
      "submitted_at": "2020-06-25T16:09:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
    },
    {
      "event": "commented",
      "id": 649679286,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTY3OTI4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649679286",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T16:37:31Z",
      "updated_at": "2020-06-25T16:37:31Z",
      "author_association": "MEMBER",
      "body": "> MakeSpan takes a [universal reference](https://channel9.msdn.com/Shows/Going+Deep/Cpp-and-Beyond-2012-Scott-Meyers-Universal-References-in-Cpp11) (`V&&`) in this PR.\r\n\r\n@aminroosta Thank you -- I found your link (and the [downloadable presentation slides](https://onedrive.live.com/redir?resid=F1B8FF18A2AEC5C5!1062&page=Download)) really informative.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-649679286",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18468"
    },
    {
      "event": "mentioned",
      "id": 3483229309,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ4MzIyOTMwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3483229309",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T16:37:31Z"
    },
    {
      "event": "subscribed",
      "id": 3483229312,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0ODMyMjkzMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3483229312",
      "actor": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-25T16:37:31Z"
    },
    {
      "event": "referenced",
      "id": 3492670840,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0OTI2NzA4NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3492670840",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fb87f6d168c45acd36d3c2b55b0647f3959c7a76",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb87f6d168c45acd36d3c2b55b0647f3959c7a76",
      "created_at": "2020-06-29T13:18:45Z"
    },
    {
      "event": "referenced",
      "id": 3520897978,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MjA4OTc5Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3520897978",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fe4d13dfc7ed46c23e04c5b72b6bbb7b7be58a2f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/fe4d13dfc7ed46c23e04c5b72b6bbb7b7be58a2f",
      "created_at": "2020-07-07T15:01:59Z"
    },
    {
      "event": "referenced",
      "id": 3616443666,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MTY0NDM2NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616443666",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "34eb2362581d4d8f0bfd3baa12ba750afaf85c62",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34eb2362581d4d8f0bfd3baa12ba750afaf85c62",
      "created_at": "2020-08-03T15:28:09Z"
    },
    {
      "event": "referenced",
      "id": 3621772460,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MjE3NzI0NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3621772460",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "49ec455bbfe56cfeb8ffcb11d9774e543703a9fd",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/49ec455bbfe56cfeb8ffcb11d9774e543703a9fd",
      "created_at": "2020-08-04T19:48:57Z"
    },
    {
      "event": "referenced",
      "id": 4277676727,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyNzc2NzY3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4277676727",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6588bd8ef048f723fb323417bec7eaa189787486",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/6588bd8ef048f723fb323417bec7eaa189787486",
      "created_at": "2021-02-02T07:30:39Z"
    },
    {
      "event": "referenced",
      "id": 4433638277,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM2MzgyNzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433638277",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a9ddf632f0d23a753dbea06c6b390c8720d1f98",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8a9ddf632f0d23a753dbea06c6b390c8720d1f98",
      "created_at": "2021-03-10T05:46:54Z"
    },
    {
      "event": "referenced",
      "id": 4433638279,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM2MzgyNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433638279",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "de92bf69ae8759153eebff24cc459da5f97c042a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/de92bf69ae8759153eebff24cc459da5f97c042a",
      "created_at": "2021-03-10T05:46:54Z"
    },
    {
      "event": "referenced",
      "id": 4433638283,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM2MzgyODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433638283",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "109cda6f3669eb1d6aff06aac4c95fc497db93a2",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/109cda6f3669eb1d6aff06aac4c95fc497db93a2",
      "created_at": "2021-03-10T05:46:54Z"
    },
    {
      "event": "referenced",
      "id": 4433638288,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM2MzgyODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433638288",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fee97e666895b6a599b6dc4ef5b382d39742ac42",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/fee97e666895b6a599b6dc4ef5b382d39742ac42",
      "created_at": "2021-03-10T05:46:54Z"
    },
    {
      "event": "referenced",
      "id": 4493816302,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTM4MTYzMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4493816302",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c8642a4d3a55cee9c019952a1213cbf06e2a42e7",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/c8642a4d3a55cee9c019952a1213cbf06e2a42e7",
      "created_at": "2021-03-23T04:22:00Z"
    },
    {
      "event": "referenced",
      "id": 4493816311,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTM4MTYzMTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4493816311",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8f2ad9fccc895de9bc4e2b6c418baea2ac5057e8",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8f2ad9fccc895de9bc4e2b6c418baea2ac5057e8",
      "created_at": "2021-03-23T04:22:00Z"
    },
    {
      "event": "referenced",
      "id": 4493816322,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTM4MTYzMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4493816322",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4a38f734e129e9f91c56941dde08e152e6dbacac",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/4a38f734e129e9f91c56941dde08e152e6dbacac",
      "created_at": "2021-03-23T04:22:00Z"
    },
    {
      "event": "referenced",
      "id": 4493816331,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTM4MTYzMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4493816331",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "602d18c4d9ef97e18e47bdb5e638b6d293c02546",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/602d18c4d9ef97e18e47bdb5e638b6d293c02546",
      "created_at": "2021-03-23T04:22:00Z"
    },
    {
      "event": "referenced",
      "id": 4495806620,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTU4MDY2MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4495806620",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d0c12147a85ce682c0eb9b8998c4277254b84ed4",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d0c12147a85ce682c0eb9b8998c4277254b84ed4",
      "created_at": "2021-03-23T12:21:35Z"
    },
    {
      "event": "referenced",
      "id": 4495806627,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTU4MDY2Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4495806627",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "08fb58aa435474a233a5816a1ac2e325ca915224",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/08fb58aa435474a233a5816a1ac2e325ca915224",
      "created_at": "2021-03-23T12:21:35Z"
    },
    {
      "event": "referenced",
      "id": 4495806631,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTU4MDY2MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4495806631",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "077c56dcf4c624ad019beafecab3ec26d413242c",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/077c56dcf4c624ad019beafecab3ec26d413242c",
      "created_at": "2021-03-23T12:21:35Z"
    },
    {
      "event": "referenced",
      "id": 4495806636,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTU4MDY2MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4495806636",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6066590bba4113a2a9b3eb6587a62bb2cb87087a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/6066590bba4113a2a9b3eb6587a62bb2cb87087a",
      "created_at": "2021-03-23T12:21:35Z"
    },
    {
      "event": "referenced",
      "id": 4609046349,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MDkwNDYzNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4609046349",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c3f29f09dbb76944703ce17dd691b378cac48a3a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/c3f29f09dbb76944703ce17dd691b378cac48a3a",
      "created_at": "2021-04-18T12:58:25Z"
    },
    {
      "event": "referenced",
      "id": 4637261973,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MzcyNjE5NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4637261973",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ec2eec0ccdef0ea574ccd0358fe687f32ca2d244",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/ec2eec0ccdef0ea574ccd0358fe687f32ca2d244",
      "created_at": "2021-04-23T14:32:58Z"
    },
    {
      "event": "referenced",
      "id": 4651105144,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NTExMDUxNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4651105144",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bf01ed7881436bb0b126aa5443703aecb4b5cdc8",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/bf01ed7881436bb0b126aa5443703aecb4b5cdc8",
      "created_at": "2021-04-27T14:10:30Z"
    },
    {
      "event": "referenced",
      "id": 5050721292,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwNTA3MjEyOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5050721292",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "56f10aaa5199398f04233e6a29f5580fbb9e5fba",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/56f10aaa5199398f04233e6a29f5580fbb9e5fba",
      "created_at": "2021-07-21T14:42:28Z"
    },
    {
      "event": "referenced",
      "id": 5141021331,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDEwMjEzMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5141021331",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "created_at": "2021-08-11T10:09:46Z"
    },
    {
      "event": "locked",
      "id": 6073812129,
      "node_id": "LOE_lADOABII584jKY5nzwAAAAFqBwSh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073812129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:34:30Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402990362",
      "pull_request_review_id": 387236075,
      "id": 402990362,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5MDM2Mg==",
      "diff_hunk": "@@ -18,34 +18,85 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}\n+\n+    /** Construct a span from a begin and end pointer.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, T* end) noexcept : m_data(begin), m_size(end - begin) {}\n+\n+    /** Implicit conversion of spans between compatible types.\n+     *\n+     *  Specifically, if a pointer to an array of type O can be implicitly converted to a pointer to an array of type\n+     *  C, then permit implicit conversion of Span<O> to Span<C>. This matches the behavior of the corresponding\n+     *  C++20 std::span constructor.\n+     *\n+     *  For example this means that a Span<T> can be converted into a Span<const T>.\n+     */\n+    template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n+\n+    /** Default copy constructor. */\n+    constexpr Span(const Span&) noexcept = default;\n+\n+    /** Default assignment operator. */\n+    Span& operator=(const Span& other) noexcept = default;\n+\n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}\n+\n+    /** Construct a Span for objects with .data() and .size() (std::string, std::array, std::vector, ...).\n+     *\n+     * This implements a subset of the functionality provided by the C++20 std::span range-based constructor.\n+     *\n+     * To prevent surprises, this constructor is restricted to const containers. Use MakeSpan to construct\n+     * a span for mutable ones.\n+     */\n+    template <typename V, typename std::enable_if<std::is_convertible<typename std::remove_pointer<decltype(std::declval<const V&>().data())>::type (*)[], C (*)[]>::value && std::is_convertible<decltype(std::declval<const V&>().size()), std::size_t>::value, int>::type = 0>\n+    constexpr Span(const V& v) noexcept : m_data(v.data()), m_size(v.size()) {}",
      "path": "src/span.h",
      "position": null,
      "original_position": 57,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "6bc07845c57765940bd2af242166e154c939738b",
      "in_reply_to_id": null,
      "user": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will cover the generic copy constructor as well, because `Span<O>` has both `.data()` & `.size()` methods.\r\n```c++\r\n    template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\r\n    constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\r\n```",
      "created_at": "2020-04-03T13:05:19Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r402990362",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402990362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403428718",
      "pull_request_review_id": 387670264,
      "id": 403428718,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyODcxOA==",
      "diff_hunk": "@@ -18,34 +18,85 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}\n+\n+    /** Construct a span from a begin and end pointer.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, T* end) noexcept : m_data(begin), m_size(end - begin) {}\n+\n+    /** Implicit conversion of spans between compatible types.\n+     *\n+     *  Specifically, if a pointer to an array of type O can be implicitly converted to a pointer to an array of type\n+     *  C, then permit implicit conversion of Span<O> to Span<C>. This matches the behavior of the corresponding\n+     *  C++20 std::span constructor.\n+     *\n+     *  For example this means that a Span<T> can be converted into a Span<const T>.\n+     */\n+    template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n+\n+    /** Default copy constructor. */\n+    constexpr Span(const Span&) noexcept = default;\n+\n+    /** Default assignment operator. */\n+    Span& operator=(const Span& other) noexcept = default;\n+\n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}\n+\n+    /** Construct a Span for objects with .data() and .size() (std::string, std::array, std::vector, ...).\n+     *\n+     * This implements a subset of the functionality provided by the C++20 std::span range-based constructor.\n+     *\n+     * To prevent surprises, this constructor is restricted to const containers. Use MakeSpan to construct\n+     * a span for mutable ones.\n+     */\n+    template <typename V, typename std::enable_if<std::is_convertible<typename std::remove_pointer<decltype(std::declval<const V&>().data())>::type (*)[], C (*)[]>::value && std::is_convertible<decltype(std::declval<const V&>().size()), std::size_t>::value, int>::type = 0>\n+    constexpr Span(const V& v) noexcept : m_data(v.data()), m_size(v.size()) {}",
      "path": "src/span.h",
      "position": null,
      "original_position": 57,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "6bc07845c57765940bd2af242166e154c939738b",
      "in_reply_to_id": 402990362,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's true, though the specification and common other span implementations still have a default copy constructor too - I don't know why.",
      "created_at": "2020-04-04T05:34:08Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r403428718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403428718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418929147",
      "pull_request_review_id": 404509767,
      "id": 418929147,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyOTE0Nw==",
      "diff_hunk": "@@ -32,7 +32,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     }\n \n     std::string another_str = fuzzed_data_provider.ConsumeBytesAsString(32);\n-    const Span<const char> another_span = MakeSpan(another_str);\n+    const Span<const char> another_span{str};",
      "path": "src/test/fuzz/span.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "bc32062d4081eb6f9d2d198861bc255e3cd33d38",
      "in_reply_to_id": null,
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "copy paste typo? shouldn't this be:\r\n```suggestion\r\n    const Span<const char> another_span{another_str};\r\n```",
      "created_at": "2020-05-02T08:10:32Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r418929147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418929147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418946459",
      "pull_request_review_id": 404520352,
      "id": 418946459,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk0NjQ1OQ==",
      "diff_hunk": "@@ -73,11 +105,8 @@ class Span\n  *\n  * std::span will have a constructor that implements this functionality directly.\n  */\n-template<typename A, int N>\n-constexpr Span<A> MakeSpan(A (&a)[N]) { return Span<A>(a, N); }\n-\n template<typename V>\n-constexpr Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSpan(V& v) { return Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }\n+constexpr auto MakeSpan(V&& v) -> Span<typename std::remove_pointer<decltype(v.data())>::type> { return Span<typename std::remove_pointer<decltype(v.data())>::type>(v.data(), v.size()); }",
      "path": "src/span.h",
      "position": null,
      "original_position": 89,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "bc32062d4081eb6f9d2d198861bc255e3cd33d38",
      "in_reply_to_id": null,
      "user": {
        "login": "aminroosta",
        "id": 2920178,
        "node_id": "MDQ6VXNlcjI5MjAxNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2920178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aminroosta",
        "html_url": "https://github.com/aminroosta",
        "followers_url": "https://api.github.com/users/aminroosta/followers",
        "following_url": "https://api.github.com/users/aminroosta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aminroosta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aminroosta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aminroosta/subscriptions",
        "organizations_url": "https://api.github.com/users/aminroosta/orgs",
        "repos_url": "https://api.github.com/users/aminroosta/repos",
        "events_url": "https://api.github.com/users/aminroosta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aminroosta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa @jb55 I think passing any rvalue/temporary here will result in dangling pointers.\r\n\r\nI did check the docs and the [c++ 20 span](https://en.cppreference.com/w/cpp/container/span/span) has a ctor that takes `R&&` ...\r\n\r\n```c++\r\ntemplate <class R>\r\nconstexpr span(R&& r);\r\n```\r\nhowever It says R must model [borrowed_range](https://en.cppreference.com/w/cpp/ranges/borrowed_range). \r\nIn other words R must be a non owning view (like basic_string_view, span, ref_view ...).\r\n```\r\nThe behavior is undefined if R does not actually model contiguous_range and\r\nsized_range or if R does not model borrowed_range while element_type is non-const.\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n```suggestion\r\nconstexpr auto MakeSpan(V& v) -> Span<typename std::remove_pointer<decltype(v.data())>::type> { return Span<typename std::remove_pointer<decltype(v.data())>::type>(v.data(), v.size()); }\r\n```",
      "created_at": "2020-05-02T11:23:27Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r418946459",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418946459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419022378",
      "pull_request_review_id": 404568814,
      "id": 419022378,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyMjM3OA==",
      "diff_hunk": "@@ -32,7 +32,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     }\n \n     std::string another_str = fuzzed_data_provider.ConsumeBytesAsString(32);\n-    const Span<const char> another_span = MakeSpan(another_str);\n+    const Span<const char> another_span{str};",
      "path": "src/test/fuzz/span.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "bc32062d4081eb6f9d2d198861bc255e3cd33d38",
      "in_reply_to_id": 418929147,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed!",
      "created_at": "2020-05-02T23:44:29Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r419022378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419022378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419023328",
      "pull_request_review_id": 404569327,
      "id": 419023328,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyMzMyOA==",
      "diff_hunk": "@@ -73,11 +105,8 @@ class Span\n  *\n  * std::span will have a constructor that implements this functionality directly.\n  */\n-template<typename A, int N>\n-constexpr Span<A> MakeSpan(A (&a)[N]) { return Span<A>(a, N); }\n-\n template<typename V>\n-constexpr Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSpan(V& v) { return Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }\n+constexpr auto MakeSpan(V&& v) -> Span<typename std::remove_pointer<decltype(v.data())>::type> { return Span<typename std::remove_pointer<decltype(v.data())>::type>(v.data(), v.size()); }",
      "path": "src/span.h",
      "position": null,
      "original_position": 89,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "bc32062d4081eb6f9d2d198861bc255e3cd33d38",
      "in_reply_to_id": 418946459,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've made some changes, and commented below.",
      "created_at": "2020-05-02T23:55:42Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r419023328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419023328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419132291",
      "pull_request_review_id": 404638949,
      "id": 419132291,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzMjI5MQ==",
      "diff_hunk": "@@ -32,7 +32,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     }\n \n     std::string another_str = fuzzed_data_provider.ConsumeBytesAsString(32);\n-    const Span<const char> another_span = MakeSpan(another_str);\n+    const Span<const char> another_span{another_ptr};",
      "path": "src/test/fuzz/span.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "88817d05a73f7b5cd5d7b07d628c88294edc9c5f",
      "in_reply_to_id": null,
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const Span<const char> another_span{another_str};\r\n```\r\n:sweat_smile: ",
      "created_at": "2020-05-03T17:13:21Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r419132291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419132291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426119379",
      "pull_request_review_id": 413048410,
      "id": 426119379,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExOTM3OQ==",
      "diff_hunk": "@@ -1098,7 +1098,7 @@ std::string GetDescriptorChecksum(const std::string& descriptor)\n {\n     std::string ret;\n     std::string error;\n-    Span<const char> sp(descriptor.data(), descriptor.size());\n+    Span<const char> sp{descriptor};",
      "path": "src/script/descriptor.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could pass `descriptor` directly to `CheckChecksum`",
      "created_at": "2020-05-16T05:07:15Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r426119379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426119379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1101,
      "original_line": 1101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426119873",
      "pull_request_review_id": 413048814,
      "id": 426119873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExOTg3Mw==",
      "diff_hunk": "@@ -18,12 +18,26 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}\n+\n+    /** Construct a span from a begin and end pointer.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, T* end) noexcept : m_data(begin), m_size(end - begin) {}",
      "path": "src/span.h",
      "position": null,
      "original_position": 26,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: should we assert or otherwise check against end < data here?",
      "created_at": "2020-05-16T05:15:30Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r426119873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426119873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431422379",
      "pull_request_review_id": 419583093,
      "id": 431422379,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyMjM3OQ==",
      "diff_hunk": "@@ -18,12 +18,26 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}\n+\n+    /** Construct a span from a begin and end pointer.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, T* end) noexcept : m_data(begin), m_size(end - begin) {}",
      "path": "src/span.h",
      "position": null,
      "original_position": 26,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "in_reply_to_id": 426119873,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd rather not. This is an extremely lightweight object, so adding any kind of runtime checking may have significant performance impact.",
      "created_at": "2020-05-27T20:28:36Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r431422379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431422379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431432959",
      "pull_request_review_id": 419596627,
      "id": 431432959,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzMjk1OQ==",
      "diff_hunk": "@@ -1098,7 +1098,7 @@ std::string GetDescriptorChecksum(const std::string& descriptor)\n {\n     std::string ret;\n     std::string error;\n-    Span<const char> sp(descriptor.data(), descriptor.size());\n+    Span<const char> sp{descriptor};",
      "path": "src/script/descriptor.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "in_reply_to_id": 426119379,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That doesn't work; `CheckChecksum` needs a reference to a mutable `Span<const char>` (it's an input/output argument). You can't bind a temporary to that.",
      "created_at": "2020-05-27T20:48:54Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r431432959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431432959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1101,
      "original_line": 1101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435402480",
      "pull_request_review_id": 424640989,
      "id": 435402480,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwMjQ4MA==",
      "diff_hunk": "@@ -18,12 +18,26 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}\n+\n+    /** Construct a span from a begin and end pointer.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, T* end) noexcept : m_data(begin), m_size(end - begin) {}",
      "path": "src/span.h",
      "position": null,
      "original_position": 26,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "in_reply_to_id": 426119873,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could add the check only if `#ifdef DEBUG`. Then at least these kind of out of bounds issues will be flagged in debug builds. No strong opinion though.",
      "created_at": "2020-06-04T16:47:48Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r435402480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435402480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435476137",
      "pull_request_review_id": 424733434,
      "id": 435476137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ3NjEzNw==",
      "diff_hunk": "@@ -18,12 +18,26 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}\n+\n+    /** Construct a span from a begin and end pointer.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, T* end) noexcept : m_data(begin), m_size(end - begin) {}",
      "path": "src/span.h",
      "position": null,
      "original_position": 26,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "2676aeadfa0e43dcaaccc4720623cdfe0beed528",
      "in_reply_to_id": 426119873,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, done.",
      "created_at": "2020-06-04T18:44:56Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r435476137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435476137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439076706",
      "pull_request_review_id": 429296749,
      "id": 439076706,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3NjcwNg==",
      "diff_hunk": "@@ -10,6 +10,12 @@\n #include <algorithm>\n #include <assert.h>\n \n+#ifdef DEBUG\n+#define CONSTEXPR_IF_NOT_DEBUG\n+#else",
      "path": "src/span.h",
      "position": 7,
      "original_position": 6,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "3d9ef83776f831a1f077674c16807391ec5f5d57",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3d9ef83776f831a1f077674c16807391ec5f5d57\r\n\r\n#define ASSERT_IF_DEBUG ?",
      "created_at": "2020-06-11T21:20:24Z",
      "updated_at": "2020-06-17T22:12:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r439076706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439076706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441862983",
      "pull_request_review_id": 432813658,
      "id": 441862983,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2Mjk4Mw==",
      "diff_hunk": "@@ -10,6 +10,12 @@\n #include <algorithm>\n #include <assert.h>\n \n+#ifdef DEBUG\n+#define CONSTEXPR_IF_NOT_DEBUG\n+#else",
      "path": "src/span.h",
      "position": 7,
      "original_position": 6,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "3d9ef83776f831a1f077674c16807391ec5f5d57",
      "in_reply_to_id": 439076706,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, done!",
      "created_at": "2020-06-17T22:13:01Z",
      "updated_at": "2020-06-17T22:13:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r441862983",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441862983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442998211",
      "pull_request_review_id": 434283400,
      "id": 442998211,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk5ODIxMQ==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;\n \n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}",
      "path": "src/span.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you help me understand the lifetime of a temporary here? It seems like you'd want this to be lvalue only.\r\nFor example, this works and passes undefined/memory sanitizer checks, but I don't understand why:\r\n```c++\r\nSpan<const char> foo(\"bar\");\r\nprintf(\"foo: %s\\n\", foo.data());\r\n```\r\nI would have expected the lifetime of the literal to end after the constructor, but the memory appears to remain valid afterwards.",
      "created_at": "2020-06-19T18:54:58Z",
      "updated_at": "2020-06-19T18:54:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r442998211",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442998211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443000807",
      "pull_request_review_id": 434286580,
      "id": 443000807,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAwMDgwNw==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;\n \n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}",
      "path": "src/span.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 442998211,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good question, but not the right example. String literals have static lifetime in C++, so in this specific case there is no problem.\r\n\r\nHowever, there are pitfalls around constructing a Span from a temporary, see https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-623030711 for more discussion. It's an inherent problem with objects that store references unfortunately, and present in `std::span` as well.",
      "created_at": "2020-06-19T19:01:29Z",
      "updated_at": "2020-06-19T19:01:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443000807",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443000807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443616796",
      "pull_request_review_id": 435000821,
      "id": 443616796,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxNjc5Ng==",
      "diff_hunk": "@@ -1522,7 +1522,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n {\n     CScript scriptPubKey;\n-    Span<const valtype> stack = MakeSpan(witness.stack);\n+    Span<const valtype> stack{witness.stack};",
      "path": "src/script/interpreter.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Which modification in `span.h` exactly is allowing us to use list initialization? \r\n",
      "created_at": "2020-06-22T14:50:36Z",
      "updated_at": "2020-06-23T06:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443616796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443616796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1525,
      "original_line": 1525,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443616961",
      "pull_request_review_id": 435000821,
      "id": 443616961,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxNjk2MQ==",
      "diff_hunk": "@@ -10,6 +10,14 @@\n #include <algorithm>\n #include <assert.h>\n \n+#ifdef DEBUG\n+#define CONSTEXPR_IF_NOT_DEBUG\n+#define ASSERT_IF_DEBUG(x) assert((x))\n+#else\n+#define CONSTEXPR_IF_NOT_DEBUG constexpr\n+#define ASSERT_IF_DEBUG(x)\n+#endif",
      "path": "src/span.h",
      "position": 10,
      "original_position": 10,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seemed fairly new to me. Here's what I understood so far. Depending upon the context (weather DEBUG or not) we want to evaluate some of the methods differently. In non-debug mode we want them to be `constexpr` whereas in debug mode we want them to evaluate at run time. Thus we are defining some debug specific declaration here.\r\nIs that correct understanding, and can you add if there's something more to it? ",
      "created_at": "2020-06-22T14:50:48Z",
      "updated_at": "2020-06-23T06:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443616961",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443616961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": 13,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443618892",
      "pull_request_review_id": 435000821,
      "id": 443618892,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxODg5Mg==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;\n \n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}\n+\n+    /** Construct a Span for objects with .data() and .size() (std::string, std::array, std::vector, ...).\n+     *\n+     * This implements a subset of the functionality provided by the C++20 std::span range-based constructor.\n+     *\n+     * To prevent surprises, only Spans for constant value types are supported when passing in temporaries.",
      "path": "src/span.h",
      "position": 60,
      "original_position": 60,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you elaborate a little more on this specific restriction? I read your comment on [#18648(comment)](https://github.com/bitcoin/bitcoin/pull/18468#issuecomment-623030711) but was wondering what if we want to cast a span from an rvalue reference then modify its values for whatever reason? Is it something not possible or an inherently stupid thing to do?  ",
      "created_at": "2020-06-22T14:53:25Z",
      "updated_at": "2020-06-23T06:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443618892",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443618892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443624418",
      "pull_request_review_id": 435000821,
      "id": 443624418,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyNDQxOA==",
      "diff_hunk": "@@ -65,26 +131,20 @@ class Span\n     template <typename O> friend class Span;\n };\n \n-/** Create a span to a container exposing data() and size().\n- *\n- * This correctly deals with constness: the returned Span's element type will be\n- * whatever data() returns a pointer to. If either the passed container is const,\n- * or its element type is const, the resulting span will have a const element type.\n- *\n- * std::span will have a constructor that implements this functionality directly.\n- */\n-template<typename A, int N>\n-constexpr Span<A> MakeSpan(A (&a)[N]) { return Span<A>(a, N); }\n-\n-template<typename V>\n-constexpr Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSpan(V& v) { return Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }\n+// MakeSpan helps constructing a Span of the right type automatically.\n+/** MakeSpan for arrays: */\n+template <typename A, int N> Span<A> constexpr MakeSpan(A (&a)[N]) { return Span<A>(a, N); }\n+/** MakeSpan for temporaries / rvalue references, only supporting const output. */\n+template <typename V> constexpr auto MakeSpan(V&& v) -> typename std::enable_if<!std::is_lvalue_reference<V>::value, Span<const typename std::remove_pointer<decltype(v.data())>::type>>::type { return std::forward<V>(v); }\n+/** MakeSpan for (lvalue) references, supporting mutable output. */\n+template <typename V> constexpr auto MakeSpan(V& v) -> Span<typename std::remove_pointer<decltype(v.data())>::type> { return v; }",
      "path": "src/span.h",
      "position": 140,
      "original_position": 140,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain why we are not returning `Span<V>(v.data(), v.size())` or something like that here? More precisely, I am confused about how `V v` value is being automatically cast into a span?",
      "created_at": "2020-06-22T15:00:49Z",
      "updated_at": "2020-06-23T06:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443624418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443624418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 140,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443631402",
      "pull_request_review_id": 435000821,
      "id": 443631402,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMTQwMg==",
      "diff_hunk": "@@ -10,6 +10,14 @@\n #include <algorithm>\n #include <assert.h>\n \n+#ifdef DEBUG\n+#define CONSTEXPR_IF_NOT_DEBUG\n+#define ASSERT_IF_DEBUG(x) assert((x))\n+#else\n+#define CONSTEXPR_IF_NOT_DEBUG constexpr\n+#define ASSERT_IF_DEBUG(x)",
      "path": "src/span.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why don't we want assertions to happen in non-debug mode?",
      "created_at": "2020-06-22T15:10:43Z",
      "updated_at": "2020-06-23T06:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443631402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443631402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443636758",
      "pull_request_review_id": 435000821,
      "id": 443636758,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzNjc1OA==",
      "diff_hunk": "@@ -18,12 +26,29 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}",
      "path": "src/span.h",
      "position": 33,
      "original_position": 33,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was wild learning curve. If I try to translate this in English it sounds like:\r\nIf a `T` type pointer array is convertible into a `C` type pointer array, then only use this constructor.\r\nDoes that sound correct? \r\nThen my question is if I pass in the `T` at the time of construction, how does the compiler know about the `C` in order to evaluate the above statement?     ",
      "created_at": "2020-06-22T15:18:35Z",
      "updated_at": "2020-06-23T06:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r443636758",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443636758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": 39,
      "original_start_line": 39,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444604838",
      "pull_request_review_id": 436276860,
      "id": 444604838,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNDgzOA==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;\n \n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}",
      "path": "src/span.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 442998211,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Follow-up: https://github.com/bitcoin/bitcoin/pull/19367",
      "created_at": "2020-06-24T02:10:52Z",
      "updated_at": "2020-06-24T02:10:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444604838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444604838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444606254",
      "pull_request_review_id": 436278495,
      "id": 444606254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNjI1NA==",
      "diff_hunk": "@@ -1522,7 +1522,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n {\n     CScript scriptPubKey;\n-    Span<const valtype> stack = MakeSpan(witness.stack);\n+    Span<const valtype> stack{witness.stack};",
      "path": "src/script/interpreter.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 443616796,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is not list initialization, but value initialization (see https://en.cppreference.com/w/cpp/language/value_initialization). In short, `Type{arg1, arg2}` is the preferred way in >=C++11 to invoke a type's constructor.\r\n\r\nIn this case, it's effectively calling `Span<const valtype>(witness.stack)`.",
      "created_at": "2020-06-24T02:16:06Z",
      "updated_at": "2020-06-24T02:38:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444606254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444606254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1525,
      "original_line": 1525,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444607841",
      "pull_request_review_id": 436280339,
      "id": 444607841,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwNzg0MQ==",
      "diff_hunk": "@@ -10,6 +10,14 @@\n #include <algorithm>\n #include <assert.h>\n \n+#ifdef DEBUG\n+#define CONSTEXPR_IF_NOT_DEBUG\n+#define ASSERT_IF_DEBUG(x) assert((x))\n+#else\n+#define CONSTEXPR_IF_NOT_DEBUG constexpr\n+#define ASSERT_IF_DEBUG(x)\n+#endif",
      "path": "src/span.h",
      "position": 10,
      "original_position": 10,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 443616961,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that `constexpr` for a function does not mean that the function will necessarily always be (entirely) evaluated at compile time; only that at least for some inputs, parts of the function can be evaluated at compile time (C++20 adds a `consteval` keyword for things that are guaranteed to be evaluated at compile time).\r\n\r\nThe problem is that (in C++11) we can't mark functions `constexpr` if they contain an `assert()`, as such functions are restricted to consisting of a single return statement. So we're forced to make the `constexpr` keyword condition on not being in DEBUG mode.",
      "created_at": "2020-06-24T02:21:52Z",
      "updated_at": "2020-06-24T02:22:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444607841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444607841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": 13,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444608256",
      "pull_request_review_id": 436280747,
      "id": 444608256,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwODI1Ng==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;\n \n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}\n+\n+    /** Construct a Span for objects with .data() and .size() (std::string, std::array, std::vector, ...).\n+     *\n+     * This implements a subset of the functionality provided by the C++20 std::span range-based constructor.\n+     *\n+     * To prevent surprises, only Spans for constant value types are supported when passing in temporaries.",
      "path": "src/span.h",
      "position": 60,
      "original_position": 60,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 443618892,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've documented this here: https://github.com/bitcoin/bitcoin/pull/19367/files#diff-9f772f6f8808fe74c65228b3a74a07c2R62-R79\r\n\r\nDoes that explain?",
      "created_at": "2020-06-24T02:23:10Z",
      "updated_at": "2020-06-24T02:23:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444608256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444608256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444610007",
      "pull_request_review_id": 436282778,
      "id": 444610007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxMDAwNw==",
      "diff_hunk": "@@ -65,26 +131,20 @@ class Span\n     template <typename O> friend class Span;\n };\n \n-/** Create a span to a container exposing data() and size().\n- *\n- * This correctly deals with constness: the returned Span's element type will be\n- * whatever data() returns a pointer to. If either the passed container is const,\n- * or its element type is const, the resulting span will have a const element type.\n- *\n- * std::span will have a constructor that implements this functionality directly.\n- */\n-template<typename A, int N>\n-constexpr Span<A> MakeSpan(A (&a)[N]) { return Span<A>(a, N); }\n-\n-template<typename V>\n-constexpr Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSpan(V& v) { return Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }\n+// MakeSpan helps constructing a Span of the right type automatically.\n+/** MakeSpan for arrays: */\n+template <typename A, int N> Span<A> constexpr MakeSpan(A (&a)[N]) { return Span<A>(a, N); }\n+/** MakeSpan for temporaries / rvalue references, only supporting const output. */\n+template <typename V> constexpr auto MakeSpan(V&& v) -> typename std::enable_if<!std::is_lvalue_reference<V>::value, Span<const typename std::remove_pointer<decltype(v.data())>::type>>::type { return std::forward<V>(v); }\n+/** MakeSpan for (lvalue) references, supporting mutable output. */\n+template <typename V> constexpr auto MakeSpan(V& v) -> Span<typename std::remove_pointer<decltype(v.data())>::type> { return v; }",
      "path": "src/span.h",
      "position": 140,
      "original_position": 140,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 443624418,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's converting the argument to the return type, so this is effectively evaluating `Span<typename std::remove_pointer<decltype(v.data())>::type>(v)`. As `Span` has a constructor for converting from any data type that exposes a proper `size()` and `data()` member function (the range-like object constructor), so that's what is invoked here.\r\n\r\nThe reason for not calling the pointer/size constructor instead (which could have been written as `return {v.data(), v.size()};` btw), is that this would potentially bypass the protections that are already implemented for the range-like object constructor.\r\n\r\n`MakeSpan`'s only purpose is automatic inference of a Span's type to construct, this way of implementing things guarantees it is not doing anything more than that (it doesn't change what can be constructed; it only lets you write `MakeSpan(...)` instead of `Span<...>(...)`).",
      "created_at": "2020-06-24T02:29:55Z",
      "updated_at": "2020-06-24T02:29:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444610007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444610007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 140,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444610618",
      "pull_request_review_id": 436283490,
      "id": 444610618,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxMDYxOA==",
      "diff_hunk": "@@ -10,6 +10,14 @@\n #include <algorithm>\n #include <assert.h>\n \n+#ifdef DEBUG\n+#define CONSTEXPR_IF_NOT_DEBUG\n+#define ASSERT_IF_DEBUG(x) assert((x))\n+#else\n+#define CONSTEXPR_IF_NOT_DEBUG constexpr\n+#define ASSERT_IF_DEBUG(x)",
      "path": "src/span.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 443631402,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Performance.\r\n\r\n`Span` is an extreme lightweight object, which I imagine we'll use in very tight loops or other performance critical situations. In normal production code these asserts would be an unreasonable burden. But at the same time, it's nice to be able to verify in tests that these properties hold, so they're enabled in DEBUG mode.\r\n\r\n",
      "created_at": "2020-06-24T02:32:16Z",
      "updated_at": "2020-06-24T02:42:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444610618",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444610618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444611936",
      "pull_request_review_id": 436285014,
      "id": 444611936,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxMTkzNg==",
      "diff_hunk": "@@ -18,12 +26,29 @@ template<typename C>\n class Span\n {\n     C* m_data;\n-    std::ptrdiff_t m_size;\n+    std::size_t m_size;\n \n public:\n     constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n-    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n-    constexpr Span(C* data, C* end) noexcept : m_data(data), m_size(end - data) {}\n+\n+    /** Construct a span from a begin pointer and a size.\n+     *\n+     * This implements a subset of the iterator-based std::span constructor in C++20,\n+     * which is hard to implement without std::address_of.\n+     */\n+    template <typename T, typename std::enable_if<std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>\n+    constexpr Span(T* begin, std::size_t size) noexcept : m_data(begin), m_size(size) {}",
      "path": "src/span.h",
      "position": 33,
      "original_position": 33,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 443636758,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At least in C++11, because you're telling it what `C` is, perhaps without knowing it.\r\n\r\nYou could invoke this constructor like this:\r\n\r\n```c++\r\nint arr[5] = {1, 2, 3, 4, 5};\r\nSpan<const int> sp{&arr[1], 3};\r\n```\r\n\r\nWhich is actually a conversion, as `&arr[1]` has type `T`=`int`, but `C`=`const int`.\r\n\r\nIn other contexts, `C` may be set implicitly. For example:\r\n\r\n```c++\r\nvoid Foo(Span<const int> arg);\r\n...\r\nint arr[5] = {1, 2, 3, 4, 5};\r\nFoo({&arr[1], 3});\r\n```\r\n\r\nwhere `C` is again `const int`, but it's implied by the argument type of the called function.",
      "created_at": "2020-06-24T02:37:42Z",
      "updated_at": "2020-06-24T06:31:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444611936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444611936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": 39,
      "original_start_line": 39,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444943525",
      "pull_request_review_id": 436712850,
      "id": 444943525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MzUyNQ==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;\n \n+    /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n+    template <int N>\n+    constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}\n+\n+    /** Construct a Span for objects with .data() and .size() (std::string, std::array, std::vector, ...).\n+     *\n+     * This implements a subset of the functionality provided by the C++20 std::span range-based constructor.\n+     *\n+     * To prevent surprises, only Spans for constant value types are supported when passing in temporaries.\n+     * Note that this restriction does not exist when converting arrays or other Spans (see above).\n+     */\n+    template <typename V, typename std::enable_if<(std::is_const<C>::value || std::is_lvalue_reference<V>::value) && std::is_convertible<typename std::remove_pointer<decltype(std::declval<V&>().data())>::type (*)[], C (*)[]>::value && std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, int>::type = 0>\n+    constexpr Span(V&& v) noexcept : m_data(v.data()), m_size(v.size()) {}\n+\n     constexpr C* data() const noexcept { return m_data; }\n     constexpr C* begin() const noexcept { return m_data; }\n     constexpr C* end() const noexcept { return m_data + m_size; }\n-    constexpr C& front() const noexcept { return m_data[0]; }\n-    constexpr C& back() const noexcept { return m_data[m_size - 1]; }\n-    constexpr std::ptrdiff_t size() const noexcept { return m_size; }\n-    constexpr C& operator[](std::ptrdiff_t pos) const noexcept { return m_data[pos]; }\n-\n-    constexpr Span<C> subspan(std::ptrdiff_t offset) const noexcept { return Span<C>(m_data + offset, m_size - offset); }\n-    constexpr Span<C> subspan(std::ptrdiff_t offset, std::ptrdiff_t count) const noexcept { return Span<C>(m_data + offset, count); }\n-    constexpr Span<C> first(std::ptrdiff_t count) const noexcept { return Span<C>(m_data, count); }\n-    constexpr Span<C> last(std::ptrdiff_t count) const noexcept { return Span<C>(m_data + m_size - count, count); }\n+    CONSTEXPR_IF_NOT_DEBUG C& front() const noexcept\n+    {\n+        ASSERT_IF_DEBUG(size() > 0);\n+        return m_data[0];\n+    }\n+    CONSTEXPR_IF_NOT_DEBUG C& back() const noexcept\n+    {\n+        ASSERT_IF_DEBUG(size() > 0);\n+        return m_data[m_size - 1];\n+    }\n+    constexpr std::size_t size() const noexcept { return m_size; }",
      "path": "src/span.h",
      "position": 88,
      "original_position": 88,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The casts in spanparsing.cpp can now be removed:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/util/spanparsing.cpp#L16\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/util/spanparsing.cpp#L25",
      "created_at": "2020-06-24T14:38:38Z",
      "updated_at": "2020-06-24T15:51:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r444943525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444943525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445008787",
      "pull_request_review_id": 436797786,
      "id": 445008787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwODc4Nw==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm pretty sure that these default declarations are unnecessary, since they'll be generated by default anyway.\r\n\r\nThe only place I'm aware of needing to declare default ctors/assignment operators is when you're using a unique_ptr for an incomplete type, and you need to declare them in the header file and define them (as default) in the implementation file (eg when using a unique_ptr for a pimpl).\r\n\r\nThey may be other situations where declaring default ctors/assiment operators is necessary, but I don't think this is one of them.",
      "created_at": "2020-06-24T16:09:32Z",
      "updated_at": "2020-06-24T16:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r445008787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445008787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445655300",
      "pull_request_review_id": 437623055,
      "id": 445655300,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY1NTMwMA==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 445008787,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm pretty sure that these default declarations are unnecessary, since they'll be generated by default anyway.\r\n\r\nBuilt, tested, and fuzzed this PR and #19326 with the default copy constructor and assignment operator in `span.h` both removed and yes, AFAICT it seems fine.\r\n",
      "created_at": "2020-06-25T15:42:59Z",
      "updated_at": "2020-06-25T15:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r445655300",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445655300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445667901",
      "pull_request_review_id": 437639671,
      "id": 445667901,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY2NzkwMQ==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 445008787,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe the default declarations aren't actually a no-op here and may be considered harmful as default move ctor/assignment is disabled when a copy/assignment oper are provided.\r\n\r\nSee [here under  Implicitly-declared move constructor for reference](https://en.cppreference.com/w/cpp/language/move_constructor). From a quick local test, it seems that even declaring a ```= default``` constructor/assignment operator is enough to disable the implicit moves. Please correct me if I'm wrong on that, though!\r\n\r\nSo as a side-effect, removing these (thus implicitly creating the move ctor) is enough to eliminate the ```lifetimebound``` false-positives reported [here](https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445025361).\r\n\r\n+1 for removing them unless there was a reason for disabling those moves.",
      "created_at": "2020-06-25T16:01:34Z",
      "updated_at": "2020-06-25T16:01:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r445667901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445667901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445676920",
      "pull_request_review_id": 437651131,
      "id": 445676920,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY3NjkyMA==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 445008787,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> it seems that even declaring a = default constructor/assignment operator is enough to disable the implicit moves.\r\n\r\nFascinating! I didn't know that.\r\n\r\n> +1 for removing them unless there was a reason for disabling those moves.\r\n\r\nIf this is the case, presumably it'd be better to explicitly delete those move ctor/assigments than rely on this behavior.\r\n",
      "created_at": "2020-06-25T16:15:00Z",
      "updated_at": "2020-06-25T16:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r445676920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445676920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445682882",
      "pull_request_review_id": 437658680,
      "id": 445682882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY4Mjg4Mg==",
      "diff_hunk": "@@ -42,18 +67,59 @@ class Span\n     /** Default assignment operator. */\n     Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "original_commit_id": "26acc8dd9b512f220c1facdba2c5de7976d3c258",
      "in_reply_to_id": 445008787,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > it seems that even declaring a = default constructor/assignment operator is enough to disable the implicit moves.\r\n> \r\n> Fascinating! I didn't know that.\r\n\r\nPlease double-check me on this! I'm assuming that based on my testing with lifetimebound, but I haven't managed to track down a definitive answer.",
      "created_at": "2020-06-25T16:24:01Z",
      "updated_at": "2020-06-25T16:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18468#discussion_r445682882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445682882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18468"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    }
  ]
}