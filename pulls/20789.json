{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789",
    "id": 546237819,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjM3ODE5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20789",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20789.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20789.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
    "number": 20789,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "fuzz: Rework strong and weak net enum fuzzing",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The fuzz tests have several problems:\r\n* The array passed to the fuzz engine to pick `net_permission_flags` is outdated\r\n* The process_message* targets has the service flags as well as connection type hardcoded, limiting potential coverage\r\n* The service flags deserialization from the fuzz engine doesn't allow for easy \"exact matches\". The fuzz engine has to explore a 64-bit space to hit an \"exact match\" (only one bit set)\r\n\r\n\r\nFix all issues in the commits in this pull",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-12-28T21:05:36Z",
    "updated_at": "2022-08-16T17:02:13Z",
    "closed_at": "2021-01-07T16:05:51Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-01-07T16:05:51Z",
    "merge_commit_sha": "3a6acd1772100d71de45355381d0d6ccf1320748",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2012-fuzzRefactor",
      "ref": "2012-fuzzRefactor",
      "sha": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6f97172b4296395f93648c86ea4c9fc519bcb488",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 62,
    "deletions": 27,
    "changed_files": 7,
    "commits": 5,
    "review_comments": 10,
    "comments": 14
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 4153070287,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE1MzA3MDI4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4153070287",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-28T21:07:58Z"
    },
    {
      "event": "commented",
      "id": 751865486,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTg2NTQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751865486",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-28T21:11:44Z",
      "updated_at": "2020-12-28T21:11:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nNice improvements!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-751865486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "labeled",
      "id": 4153247195,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNTMyNDcxOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4153247195",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-28T23:08:01Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 751904213,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTkwNDIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751904213",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-29T00:24:41Z",
      "updated_at": "2021-01-04T06:02:44Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20828 (fuzz: Introduce CallOneOf helper to replace switch-case by MarcoFalke)\n* #20729 (p2p: standardize on outbound-{full, block}-relay connection type naming by jonatack)\n* #20228 (addrman: Make addrman a top-level component by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-751904213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "reviewed",
      "id": 560068445,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMDY4NDQ1",
      "url": null,
      "actor": null,
      "commit_id": "fa9ab9a8c8aef98cbddf5efd7dd49d940db00275",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fa9ab9a8c\r\n\r\nThe chance of 5 random commits to all start with the same two letters is `0.00000002%` :eyes: :open_mouth:",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#pullrequestreview-560068445",
      "submitted_at": "2020-12-30T14:40:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4159655251,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE1OTY1NTI1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4159655251",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T13:11:06Z"
    },
    {
      "event": "commented",
      "id": 752955379,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjk1NTM3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752955379",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T13:11:51Z",
      "updated_at": "2020-12-31T13:11:51Z",
      "author_association": "MEMBER",
      "body": "Force pushed to fix a bug. Should be trivial to re-ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-752955379",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "reviewed",
      "id": 560351181,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzUxMTgx",
      "url": null,
      "actor": null,
      "commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fa",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#pullrequestreview-560351181",
      "submitted_at": "2020-12-31T13:33:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
    },
    {
      "event": "commented",
      "id": 752961937,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjk2MTkzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752961937",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T13:43:57Z",
      "updated_at": "2020-12-31T17:41:17Z",
      "author_association": "MEMBER",
      "body": "\r\n## Benchmarks\r\n\r\nThe goal is to benchmark the complexity of finding a strong and weak match of an enum type.\r\nStrong match means the fuzz engine finds an exact value match. (built-in `operator==` for integers)\r\nWeak match means the fuzz engine finds a matching flag. (built-in `operator&` for integers)\r\n\r\nTo reproduce:\r\n\r\n* For all benchmarks `clang version 11.0.0` without sanitizers is used.\r\n* Only the fuzz target `process_message_inv` is used.\r\n* `-use_value_profile=1` is set at runtime.\r\n* All patches are on top of this pull request.\r\n\r\n### Strong (scoped) enum class\r\n\r\nWhile C++ doesn't restrict how scoped enum classes are used, in our code base, scoped enum classes avoid `operator&`, so this benchmark only considers an exact match.\r\n\r\n\r\n<details><summary>diffs</summary>\r\n\r\n\r\n\r\n\r\nThe following diff was used for \"kMaxValue\":\r\n\r\n```diff\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 6316c73eee..a4930b229c 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -178,6 +178,7 @@ enum class ConnectionType {\r\n      * AddrMan is empty.\r\n      */\r\n     ADDR_FETCH,\r\n+    kMaxValue=ADDR_FETCH,\r\n };\r\n \r\n class NetEventsInterface;\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..964d4e1899 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!pfrom.IsFeelerConn());\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex 465452c394..9e345d0c73 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -307,7 +307,7 @@ auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<N\r\n     const uint64_t local_host_nonce = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\r\n     const CAddress addr_bind = ConsumeAddress(fuzzed_data_provider);\r\n     const std::string addr_name = fuzzed_data_provider.ConsumeRandomLengthString(64);\r\n-    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray(ALL_CONNECTION_TYPES);\r\n+    const ConnectionType conn_type = fuzzed_data_provider.ConsumeEnum<ConnectionType>();\r\n     const bool inbound_onion = fuzzed_data_provider.ConsumeBool();\r\n     if constexpr (ReturnUniquePtr) {\r\n         return std::make_unique<CNode>(node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion);\r\n```\r\n\r\nThe following diff was used for \"ArrayEnum\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..964d4e1899 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!pfrom.IsFeelerConn());\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\n```\r\n\r\n\r\n</details>\r\n\r\n\r\n\r\n| kMaxValue (`ConsumeEnum`) | ArrayEnum (`PickValueInArray`) |\r\n|-----------------------------------------------|-----------------------------------------------------|\r\n|                 ![fdp_enum](https://user-images.githubusercontent.com/6399679/103412565-05c5b800-4b76-11eb-9149-e347d8b4b6bc.png)                              |                        ![fdp_arr](https://user-images.githubusercontent.com/6399679/103412563-03635e00-4b76-11eb-9333-37056f7215a5.png)                             |\r\n\r\nNo difference should be observed because both calls to the fuzz engine are compiled down to the same `ConsumeIntegralInRange`. Given the limited experimental data, this seems to hold in practice.\r\n\r\n### Weak enum\r\n\r\n#### Weak match (`operator&`)\r\n\r\n<details><summary>diffs</summary>\r\n\r\nDiff for \"kMaxValue\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..2acd336c1b 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!(pfrom.GetLocalServices() & NODE_NETWORK_LIMITED));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex 8af34f58bd..ae863b13d0 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -287,6 +287,7 @@ enum ServiceFlags : uint64_t {\r\n     // serving the last 288 (2 day) blocks\r\n     // See BIP159 for details on how this is implemented.\r\n     NODE_NETWORK_LIMITED = (1 << 10),\r\n+    kMaxValue=NODE_NETWORK_LIMITED,\r\n \r\n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\r\n     // isn't getting used, or one not being used much, and notify the\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex 465452c394..7f9a72b585 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -299,7 +299,7 @@ template <bool ReturnUniquePtr = false>\r\n auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\r\n {\r\n     const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\r\n-    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\r\n+    const ServiceFlags local_services = fuzzed_data_provider.ConsumeEnum<ServiceFlags>();\r\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\r\n     const SOCKET socket = INVALID_SOCKET;\r\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\r\n```\r\n\r\n\r\nDiff for \"ArrayEnum\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..2acd336c1b 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!(pfrom.GetLocalServices() & NODE_NETWORK_LIMITED));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n| kMaxValue (`ConsumeEnum`) | ArrayEnum (`ConsumeWeakEnum`) |\r\n|-----------------------------------------------|-----------------------------------------------------|\r\n|                  ![fdp_enum_weak_match](https://user-images.githubusercontent.com/6399679/103414412-21cd5780-4b7e-11eb-91a5-ae2fde40d14a.png)                         |                    ![our_weak_weak_match](https://user-images.githubusercontent.com/6399679/103414414-242fb180-4b7e-11eb-9812-d5fa890a87bf.png)                      |\r\n\r\n#### Exact match (`operator==`)\r\n\r\n\r\n<details><summary>diffs</summary>\r\n\r\nDiff used for \"kMaxValue\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..be2a9fac3d 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!(pfrom.GetLocalServices() == NODE_NETWORK_LIMITED));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex 8af34f58bd..ae863b13d0 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -287,6 +287,7 @@ enum ServiceFlags : uint64_t {\r\n     // serving the last 288 (2 day) blocks\r\n     // See BIP159 for details on how this is implemented.\r\n     NODE_NETWORK_LIMITED = (1 << 10),\r\n+    kMaxValue=NODE_NETWORK_LIMITED,\r\n \r\n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\r\n     // isn't getting used, or one not being used much, and notify the\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex 465452c394..7f9a72b585 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -299,7 +299,7 @@ template <bool ReturnUniquePtr = false>\r\n auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\r\n {\r\n     const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\r\n-    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\r\n+    const ServiceFlags local_services = fuzzed_data_provider.ConsumeEnum<ServiceFlags>();\r\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\r\n     const SOCKET socket = INVALID_SOCKET;\r\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\r\n```\r\n\r\n\r\nDiff used for \"ArrayEnum\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..be2a9fac3d 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!(pfrom.GetLocalServices() == NODE_NETWORK_LIMITED));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n| kMaxValue (`ConsumeEnum`) | ArrayEnum (`ConsumeWeakEnum`) |\r\n|-----------------------------------------------|-----------------------------------------------------|\r\n|               ![fdp_enum_exact_match](https://user-images.githubusercontent.com/6399679/103416486-4c6fde00-4b87-11eb-898f-5020d32ce7cb.png)                      |              ![our_weak_exact_match](https://user-images.githubusercontent.com/6399679/103416483-48dc5700-4b87-11eb-97bb-0fd9f692fdf1.png)                 |\r\n\r\n\r\n\r\n### Double weak match (low bits)\r\n\r\n<details><summary>diffs</summary>\r\n\r\nDiff for \"kMaxValue\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..8946a750a8 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!HasAllDesirableServiceFlags(pfrom.GetLocalServices()));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex 8af34f58bd..ae863b13d0 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -287,6 +287,7 @@ enum ServiceFlags : uint64_t {\r\n     // serving the last 288 (2 day) blocks\r\n     // See BIP159 for details on how this is implemented.\r\n     NODE_NETWORK_LIMITED = (1 << 10),\r\n+    kMaxValue=NODE_NETWORK_LIMITED,\r\n \r\n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\r\n     // isn't getting used, or one not being used much, and notify the\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex 465452c394..7f9a72b585 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -299,7 +299,7 @@ template <bool ReturnUniquePtr = false>\r\n auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\r\n {\r\n     const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\r\n-    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\r\n+    const ServiceFlags local_services = fuzzed_data_provider.ConsumeEnum<ServiceFlags>();\r\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\r\n     const SOCKET socket = INVALID_SOCKET;\r\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\r\n```\r\n\r\nDiff for ArrayEnum:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..8946a750a8 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    assert(!HasAllDesirableServiceFlags(pfrom.GetLocalServices()));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n| kMaxValue (`ConsumeEnum`) | ArrayEnum (`ConsumeWeakEnum`) |\r\n|-----------------------------------------------|-----------------------------------------------------|\r\n|                   ![fdp_enum_double](https://user-images.githubusercontent.com/6399679/103417023-57c40900-4b89-11eb-860a-c4e27e5133a3.png)                                      |                    ![our_enum_double](https://user-images.githubusercontent.com/6399679/103417020-55fa4580-4b89-11eb-8df9-69344d5209a0.png)                                                       |\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Double weak match (high bits)\r\n\r\n<details><summary>diffs</summary>\r\n\r\nDiff for \"kMaxValue\":\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..d0e0167746 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    constexpr auto crash_target = NODE_NETWORK_LIMITED | NODE_WITNESS;\r\n+                    assert(!((pfrom.GetLocalServices() & crash_target) == crash_target));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex 8af34f58bd..ae863b13d0 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -287,6 +287,7 @@ enum ServiceFlags : uint64_t {\r\n     // serving the last 288 (2 day) blocks\r\n     // See BIP159 for details on how this is implemented.\r\n     NODE_NETWORK_LIMITED = (1 << 10),\r\n+    kMaxValue=NODE_NETWORK_LIMITED,\r\n \r\n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\r\n     // isn't getting used, or one not being used much, and notify the\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex 465452c394..7f9a72b585 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -299,7 +299,7 @@ template <bool ReturnUniquePtr = false>\r\n auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\r\n {\r\n     const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\r\n-    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\r\n+    const ServiceFlags local_services = fuzzed_data_provider.ConsumeEnum<ServiceFlags>();\r\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\r\n     const SOCKET socket = INVALID_SOCKET;\r\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\r\n```\r\n\r\nDiff for ArrayEnum:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c5ea2dc85f..e8c6b00ad7 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2702,6 +2702,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                     return;\r\n                 } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n+                    constexpr auto crash_target = NODE_NETWORK_LIMITED | NODE_WITNESS;\r\n+                    assert(!(pfrom.GetLocalServices()&crash_target==crash_target));\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"Unknown inv type \\\"%s\\\" received from peer=%d\\n\", inv.ToString(), pfrom.GetId());\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n| kMaxValue (`ConsumeEnum`) | ArrayEnum (`ConsumeWeakEnum`) |\r\n|-----------------------------------------------|-----------------------------------------------------|\r\n|      n/a  (aborted without any crash after 5.2*10^6 iterations)                                  |          ![our_enum_double_high](https://user-images.githubusercontent.com/6399679/103420479-ba240600-4b97-11eb-818a-975c354d5966.png)                                                  |\r\n\r\n\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-752961937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "commented",
      "id": 752996682,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjk5NjY4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752996682",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T16:12:58Z",
      "updated_at": "2020-12-31T16:12:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "cr ACK fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb\r\n\r\nThanks for providing benchmarks!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-752996682",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "commented",
      "id": 753014492,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzAxNDQ5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753014492",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T17:44:59Z",
      "updated_at": "2020-12-31T17:44:59Z",
      "author_association": "MEMBER",
      "body": "@vasild btw for the merge script to pick up your ack, you'll have to provide at least the first 6 chars of the git hash ;)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753014492",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "mentioned",
      "id": 4160029162,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2MDAyOTE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4160029162",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T17:44:59Z"
    },
    {
      "event": "subscribed",
      "id": 4160029164,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjAwMjkxNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4160029164",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T17:44:59Z"
    },
    {
      "event": "reviewed",
      "id": 560542082,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTQyMDgy",
      "url": null,
      "actor": null,
      "commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#pullrequestreview-560542082",
      "submitted_at": "2020-12-31T19:57:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4160874948,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MDg3NDk0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4160874948",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T11:10:35Z"
    },
    {
      "event": "commented",
      "id": 753313056,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzMxMzA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753313056",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T12:54:16Z",
      "updated_at": "2021-01-01T12:54:16Z",
      "author_association": "MEMBER",
      "body": "ACK fac2b6c58ee0bd1efa7a1531af3b882b451c920b\r\n\r\nBoth fadbf6a83 and fac2b6c58 compile fine with clang 12.0.0.\r\n\r\n@MarcoFalke so you were lucky enough to get 15 straight commit ids all starting with `fa`. I guess you have to have 16777216 times more ~CPU~luck in order to make a commit with arbitrary contents that starts with `fac2b6c5` :-D\r\n\r\nHappy New Year! :tada: ",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753313056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "mentioned",
      "id": 4160935220,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2MDkzNTIyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4160935220",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T12:54:16Z"
    },
    {
      "event": "subscribed",
      "id": 4160935221,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjA5MzUyMjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4160935221",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T12:54:16Z"
    },
    {
      "event": "commented",
      "id": 753409562,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQwOTU2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753409562",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T00:31:24Z",
      "updated_at": "2021-01-02T00:31:24Z",
      "author_association": "MEMBER",
      "body": "ACK fac2b6c58ee0bd1efa7a1531af3b882b451c920b\r\n\r\nCode looks good to me, built locally and did some testing, as in the benchmarks.\r\n\r\nAs for the worse performance of kMaxValue, I think calling this a \"bug\" that should be reported is too hard: `FuzzedDataProvider::ConsumeEnum()` does have a disclaimer \"The enum must start at 0 and be contiguous\" so it's just not designed for bitmasks such as `enum ServiceFlags`. Also, considering that all `ConsumeEnum()` does is to call `ConsumeIntegralInRange` between `0` and `kMaxValue`, it is clear that `NODE_NETWORK_LIMITED | NODE_WITNESS`, which is` >  kMaxValue` in the benchmark  \"Double weak match (high bits)\" can't possibly ever hit.\r\n\r\n\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753409562",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "commented",
      "id": 753448236,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ0ODIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753448236",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T08:41:03Z",
      "updated_at": "2021-01-02T08:41:03Z",
      "author_association": "MEMBER",
      "body": "Oh, this is missing from the documentation in the declaration: https://github.com/bitcoin/bitcoin/blob/e75f91eae3936269b40b4bfdfe540d5526270936/src/test/fuzz/FuzzedDataProvider.h#L70-L71\r\n\r\nIt is only mentioned in the implementation: \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e75f91eae3936269b40b4bfdfe540d5526270936/src/test/fuzz/FuzzedDataProvider.h#L291-L298",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753448236",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "labeled",
      "id": 4161576711,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNjE1NzY3MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161576711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T09:09:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4161577913,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MTU3NzkxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161577913",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T09:12:03Z"
    },
    {
      "event": "commented",
      "id": 753450647,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ1MDY0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753450647",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T09:12:49Z",
      "updated_at": "2021-01-02T09:12:49Z",
      "author_association": "MEMBER",
      "body": "Rebased due to trivial conflict in adjacent line",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753450647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "commented",
      "id": 753451261,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ1MTI2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753451261",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T09:20:17Z",
      "updated_at": "2021-01-02T09:20:17Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, first read-through looks very good.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753451261",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "mentioned",
      "id": 4161632834,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2MTYzMjgzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161632834",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T11:09:20Z"
    },
    {
      "event": "subscribed",
      "id": 4161632835,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjE2MzI4MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161632835",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T11:09:20Z"
    },
    {
      "event": "unlabeled",
      "id": 4161645806,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDE2MTY0NTgwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161645806",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T11:36:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 4161706503,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNjE3MDY1MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161706503",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T13:32:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTEyMWYwNThmZGM1ZjA5ZGQxMTY3ODQ4MGY1NTEyNDZjYjNjNWUy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa121f058fdc5f09dd11678480f551246cb3c5e2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa121f058fdc5f09dd11678480f551246cb3c5e2",
      "tree": {
        "sha": "30d6e4a49289af36598152a1cf319f8d94cf2663",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30d6e4a49289af36598152a1cf319f8d94cf2663"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 30d6e4a49289af36598152a1cf319f8d94cf2663\nparent 6f97172b4296395f93648c86ea4c9fc519bcb488\nauthor MarcoFalke <falke.marco@gmail.com> 1609188799 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609596321 +0100\n\nfuzz: Use ConsumeNode in process_messages target\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgKGQv+PxZz3wszTVXH1/Clkboe1PF9VH34Rtm6iGq9YoiP+x/Ki9GSJhaP3/xP\nwLWTFRQF+RaCZr94GrmPu+ISWJhlBJlOQ9W9b4s1wb6ae8nyDk0lEgenKy6InkSj\naHc3UZNmWMUz4yBfd1EVr1qrsJLPQFduv1B+gqXK/EC1JR7zuy3TroKZTpZ3plu6\ncf3vXT+Rw5ihwwkUQDB2QA8S2gLWOjjos6d+zR+/vp6vJn/q61HN2IPTCB+R9xQO\ndRWTBTDnlUL1HQVDzYJ39nRLAAHmes1najaR4JCKW4K8PAX8Ihb3mi6snd34hE/d\ny51uB5by8yhucaKaMJQv0UwBiXk7ZSgAsGWvBs4uz2TVgINtapqQ+pNg9jVJ3hGx\nB9YreVZ6PLUxEhSx3aFQB3IHKEa6B1hDVxYPHg2Rbh1Uw/lzd/9NjHdZxHA1OUTV\nX9pEKP//XVTuWywHGyEWDVn0Pe2V7aFokwEnUSO1SeAMcn5JdaTVT6oqe/GZlg2i\n1+lPGwYL\n=mPQ/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f97172b4296395f93648c86ea4c9fc519bcb488",
          "sha": "6f97172b4296395f93648c86ea4c9fc519bcb488",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6f97172b4296395f93648c86ea4c9fc519bcb488"
        }
      ],
      "message": "fuzz: Use ConsumeNode in process_messages target",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T14:05:21Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-28T20:53:19Z"
      },
      "sha": "fa121f058fdc5f09dd11678480f551246cb3c5e2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQyZGEyZDU0MjRjMGFlY2NmYWU0YjQ5ZmRlMmJlYTMzMGI2M2Rj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa42da2d5424c0aeccfae4b49fde2bea330b63dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa42da2d5424c0aeccfae4b49fde2bea330b63dc",
      "tree": {
        "sha": "879476467c68fb4ec7324dc1ecaf37a0d4cbd039",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/879476467c68fb4ec7324dc1ecaf37a0d4cbd039"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 879476467c68fb4ec7324dc1ecaf37a0d4cbd039\nparent fa121f058fdc5f09dd11678480f551246cb3c5e2\nauthor MarcoFalke <falke.marco@gmail.com> 1609188760 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609596324 +0100\n\nfuzz: Use ConsumeNode in process_message target\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjuhAv+PLKlRv1nvwE7EaijFj736d/cqIE9To6TMEpw0ikKQOGOgeXa0IOo3Aev\nCan2QLBKgQREOiP0qJkW0WdvlzIKANvnV6NKjOsnN6og5p1s/UQf83kukvhtyszW\n7z8NJ3Gh+FBXe7+46hXJQ83UmjkhmsUHDNLaLWX8jEmde2AmOUUScR6yxkMRhb9p\nlnOUo5bPKyIlXqY17iblK9ECGDtbn0xbAlf+NOS9sYeG9MeDsAePIKOBgGVW3tDL\nXHItb+DVAcIECz9DNteoPyYL43ZimpSgTDmAJQ/OpikD2Hq6BEbHGcZPbkTGC1ug\nFpP0fIMOJyXwcpCYlLwtb5jbU2V5VHN66KqclgxO9KMLOyqpDFbHhDRkNN8yCX3W\nurJU/S9Zy0hkpjEKMhf8HMvhME86B12URJLKgHYQcKMgmubH4Ul/Oi+4ydzCQLQs\nId7Rkh76pIZnUtQSEc9CYlTB11fiGXIOhZ6VlyMyY0zAij+yfsybnTibS1J0Fs1s\nPQSsJij2\n=vkCr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa121f058fdc5f09dd11678480f551246cb3c5e2",
          "sha": "fa121f058fdc5f09dd11678480f551246cb3c5e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa121f058fdc5f09dd11678480f551246cb3c5e2"
        }
      ],
      "message": "fuzz: Use ConsumeNode in process_message target",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T14:05:24Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-28T20:52:40Z"
      },
      "sha": "fa42da2d5424c0aeccfae4b49fde2bea330b63dc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFlZjk0MzRjMTllMzY0MzMyMmVlNDQyYzI0MGMxNjZhZjVhZGJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faaef9434c19e3643322ee442c240c166af5adbd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faaef9434c19e3643322ee442c240c166af5adbd",
      "tree": {
        "sha": "57b83f64d35d1c4258109cf901847385cfd463be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57b83f64d35d1c4258109cf901847385cfd463be"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 57b83f64d35d1c4258109cf901847385cfd463be\nparent fa42da2d5424c0aeccfae4b49fde2bea330b63dc\nauthor MarcoFalke <falke.marco@gmail.com> 1609187493 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609596396 +0100\n\nfuzz: [refactor] Extract ALL_CONNECTION_TYPES constant\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhv8wwAldX+37fapC9ehdgp59y51GZUXDTLiTv8kd4D8evy0kt0/Oj9SM638jSh\nmiOxrbpTHfOW0/3jYg8pcXtRNUA9UqDOGkYWvGEb2vsNhUlpwH1QqbmX5E/vCxi+\nMrbd5etT1eameEC0aXqIyVBEZGJYydCBEJW1BetIq8TdeUA/z/7+3tdK2F72fmDW\nqrPeBbaNwXhyYTQYsKcx7DzgHO9JA7uYZNrVFyG2GsQ1fZ2ZO2U2nI1OSw+m+jbv\nYiYATM+bYycaN4JpP2dyfBg6CH6DGB+mPta6ksCoESQDas1sctj0STTcweGtSt+C\n8+Gysfdf9DoSLUg6PsS9qoNSKoBXHornRPhur899KHLrBe0nRN28782LHtiSmV9q\nsCrZAufMVbRtDV9I7OHg0FYzFbFU8MykILKUj9pxtZeLEpGYEbmGgAsJ+IboBnzN\nMu14pKeUJAFaW4Lef9fT6+LNUt+JZjxhXzlBzhuTQ6wtEHaX1GuFhXNSZS/l6gpa\nwb6clxeL\n=hxXZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa42da2d5424c0aeccfae4b49fde2bea330b63dc",
          "sha": "fa42da2d5424c0aeccfae4b49fde2bea330b63dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa42da2d5424c0aeccfae4b49fde2bea330b63dc"
        }
      ],
      "message": "fuzz: [refactor] Extract ALL_CONNECTION_TYPES constant",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T14:06:36Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-28T20:31:33Z"
      },
      "sha": "faaef9434c19e3643322ee442c240c166af5adbd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk5NDliOTE0MTRlZTBkYTM3NmEzMjJjZWUzMmJhNGUzOTg5ZDhj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9949b91414ee0da376a322cee32ba4e3989d8c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9949b91414ee0da376a322cee32ba4e3989d8c",
      "tree": {
        "sha": "10cf748ce8c83c85d6a8f6fc490c42754055fe83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10cf748ce8c83c85d6a8f6fc490c42754055fe83"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 10cf748ce8c83c85d6a8f6fc490c42754055fe83\nparent faaef9434c19e3643322ee442c240c166af5adbd\nauthor MarcoFalke <falke.marco@gmail.com> 1609189080 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609596427 +0100\n\nfuzz: Add ConsumeWeakEnum helper, Extract ALL_NET_PERMISSION_FLAGS\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhsygv/aXeVBNHrPJdQTUQR2u/eepMrjIgs2yGu/lTGnUz6GNfwKmwoFiTD2BzE\n1UTzM6Gqd5UHAonhrn6Ulxbyo6sQqOoA6D8axZ6z5V809l9lDIZV/wHQfiDWegz5\no9+YABoLbW8IQegyonpWBV1rC62tz4Le8xSS+TcMV0wD4dI9ll2tPK+jUShXCrdb\ns0FD6xJwGrboMGg18IdrTlh6F11bK/g09e+7TV/S6NPExDJKs1kmyhQNEzzZavDJ\nwovpaHJ/3ht8HBiUEcHl2T/7Ot87oWfCP8Ba4/YVR3vroplvr3fc8htNxuqNo8sM\nvs2qfa17F4qMSF+V/ywRP/XRq5enFKf8MylkLFiaOOYd+0l+uur+RTV4Y48gmGPT\nuy9dHVRWTL0Xw8OOg6qpK5YjmEem93+Fdlj2DGpmWm9jKTSsAsIopesW1Rpmu5HX\nfzU3dDZXATQTo4bF/3e2KsPb7C5y+Cf/9eQEylrG/OrVvps4FpvYr0uJNqhSOogd\nc3wf35+r\n=QZ8o\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faaef9434c19e3643322ee442c240c166af5adbd",
          "sha": "faaef9434c19e3643322ee442c240c166af5adbd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faaef9434c19e3643322ee442c240c166af5adbd"
        }
      ],
      "message": "fuzz: Add ConsumeWeakEnum helper, Extract ALL_NET_PERMISSION_FLAGS",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T14:07:07Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-28T20:58:00Z"
      },
      "sha": "fa9949b91414ee0da376a322cee32ba4e3989d8c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWVlNDNiYzQ4ZWE3ZmJhY2QzYzVlM2YwNzZmMDFmMDQ3NDRhZGI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "tree": {
        "sha": "618c197ac3f3199925d01bb1cf7e56fbe07d8ca0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/618c197ac3f3199925d01bb1cf7e56fbe07d8ca0"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 618c197ac3f3199925d01bb1cf7e56fbe07d8ca0\nparent fa9949b91414ee0da376a322cee32ba4e3989d8c\nauthor MarcoFalke <falke.marco@gmail.com> 1609578879 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609596449 +0100\n\nfuzz: Use ConsumeWeakEnum for ServiceFlags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjLTQv/amhBTcJWgqD9emB/ltTpQZ9Kb6pEteZjN6VEJDYOeD4xCkGaZKtaGi+U\nwOueujMt56JW6My4u7MOVm1J+BeiDT9vqWLvyWa+XT9mRCRf7M0dAsCu+wQQQdjT\n1RgqP5V1tfjJjyFQl9VTYg70pi29Bkeky+ZcSYVMhPAH0Z/BMPcYtb6Lc8vkRUnM\nGX7ZMhIpelTtUQclyCPF2iG3XXeT15uoBaQsVUi8WDxgruj95gQuBE3RnRCkdrS8\nUczitlQKU1MOMKPgcuhZaqOg8Zix75NtROfVK6hazrhj+ZmNFEUgX0wOEn8pYo1a\nY1s6ChEajg/fN04iSs0ZA5rfSvluolGk/naSUeFB5M7JCJgpL74OsjmrRg9pKpCg\nC0p/MqC0wCxTDX4Z3+bJ0E+bbZaEclyRwSZ2V3AH6N218IYCvydZ3krsRZwY+eUw\nJfy8fF8w6iUC0MSkHHnbK4ehYAVZnP3JOaD7J697Dso+M4ZZT+C7nj1RLvHmUKN3\nQZSDq2iu\n=5v0Z\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9949b91414ee0da376a322cee32ba4e3989d8c",
          "sha": "fa9949b91414ee0da376a322cee32ba4e3989d8c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9949b91414ee0da376a322cee32ba4e3989d8c"
        }
      ],
      "message": "fuzz: Use ConsumeWeakEnum for ServiceFlags",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T14:07:29Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T09:14:39Z"
      },
      "sha": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4161726452,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MTcyNjQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161726452",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T14:08:06Z"
    },
    {
      "event": "commented",
      "id": 753478362,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ3ODM2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753478362",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T14:12:41Z",
      "updated_at": "2021-01-02T14:12:41Z",
      "author_association": "MEMBER",
      "body": "Rebased after removal of my_starting_height",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-753478362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "unlabeled",
      "id": 4161785828,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDE2MTc4NTgyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161785828",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T15:46:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 755957920,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTk1NzkyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755957920",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T08:11:03Z",
      "updated_at": "2021-01-07T08:11:03Z",
      "author_association": "MEMBER",
      "body": "Btw, should be (relatively) easy to re-ACK :pray: ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-755957920",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "commented",
      "id": 756200898,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjIwMDg5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756200898",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T15:51:34Z",
      "updated_at": "2021-01-07T15:51:34Z",
      "author_association": "MEMBER",
      "body": "ACK eeee43bc48ea7fbacd3c5e3f076f01f04744adb8 after rebase.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-756200898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20789"
    },
    {
      "event": "merged",
      "id": 4180559468,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDE4MDU1OTQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180559468",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a6acd1772100d71de45355381d0d6ccf1320748",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a6acd1772100d71de45355381d0d6ccf1320748",
      "created_at": "2021-01-07T16:05:51Z"
    },
    {
      "event": "closed",
      "id": 4180559480,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDE4MDU1OTQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180559480",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T16:05:51Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4180577606,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0MTgwNTc3NjA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180577606",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T16:10:03Z"
    },
    {
      "event": "referenced",
      "id": 4181262943,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxODEyNjI5NDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4181262943",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fffe61afb7c151eafb483e804ea2a4764c77b6ce",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/fffe61afb7c151eafb483e804ea2a4764c77b6ce",
      "created_at": "2021-01-07T19:01:55Z"
    },
    {
      "event": "locked",
      "id": 7199003557,
      "node_id": "LOE_lADOABII584uOoOAzwAAAAGtGBOl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199003557",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:02:13Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550212069",
      "pull_request_review_id": 560068445,
      "id": 550212069,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxMjA2OQ==",
      "diff_hunk": "@@ -30,4 +30,35 @@ struct ConnmanTestMsg : public CConnman {\n     bool ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const;\n };\n \n+constexpr ServiceFlags ALL_SERVICE_FLAGS[]{\n+    NODE_NONE,\n+    NODE_NETWORK,\n+    NODE_BLOOM,\n+    NODE_WITNESS,\n+    NODE_COMPACT_FILTERS,\n+    NODE_NETWORK_LIMITED,\n+};",
      "path": "src/test/util/net.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fa9ab9a8c8aef98cbddf5efd7dd49d940db00275",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if it is possible to get a warning if a new enum value is added, but this array is forgotten to be updated? I think not :/",
      "created_at": "2020-12-30T14:25:53Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550212069",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550212069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": 33,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550433436",
      "pull_request_review_id": 560298518,
      "id": 550433436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMzQzNg==",
      "diff_hunk": "@@ -30,4 +30,35 @@ struct ConnmanTestMsg : public CConnman {\n     bool ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const;\n };\n \n+constexpr ServiceFlags ALL_SERVICE_FLAGS[]{\n+    NODE_NONE,\n+    NODE_NETWORK,\n+    NODE_BLOOM,\n+    NODE_WITNESS,\n+    NODE_COMPACT_FILTERS,\n+    NODE_NETWORK_LIMITED,\n+};",
      "path": "src/test/util/net.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fa9ab9a8c8aef98cbddf5efd7dd49d940db00275",
      "in_reply_to_id": 550212069,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is ok as it is, and I am just wondering if this can be improved wrt minimizing the chance of the actual enum and the \"all\" arrays going out of sync over time. Maybe one of the below would help:\r\n\r\no Add a comment next to the enum definition \"don't forget to update `ALL_...` in `src/test/util/net.h` if you change this enum\".\r\n\r\no Define the array immediately below the enum itself.\r\n\r\n<details>\r\n<summary>o Define both in one struct</summary>\r\n\r\n```cpp\r\nstruct Color\r\n{\r\n    enum E : uint8_t {\r\n        RED,\r\n        GREEN,\r\n        BLUE,\r\n    };\r\n\r\n    static constexpr E all[]{\r\n        RED,\r\n        GREEN,\r\n        BLUE,\r\n    };\r\n};\r\n\r\n...\r\n    std::cout << Color::BLUE << std::endl;\r\n\r\n    for (auto& c : Color::all) {\r\n        std::cout << c << std::endl;\r\n    }\r\n```\r\n</details>",
      "created_at": "2020-12-31T08:58:35Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550433436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550433436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": 33,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550438456",
      "pull_request_review_id": 560304307,
      "id": 550438456,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzODQ1Ng==",
      "diff_hunk": "@@ -30,4 +30,35 @@ struct ConnmanTestMsg : public CConnman {\n     bool ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const;\n };\n \n+constexpr ServiceFlags ALL_SERVICE_FLAGS[]{\n+    NODE_NONE,\n+    NODE_NETWORK,\n+    NODE_BLOOM,\n+    NODE_WITNESS,\n+    NODE_COMPACT_FILTERS,\n+    NODE_NETWORK_LIMITED,\n+};",
      "path": "src/test/util/net.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fa9ab9a8c8aef98cbddf5efd7dd49d940db00275",
      "in_reply_to_id": 550212069,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps we could start using [`kMaxValue` as in the Chromium project](https://www.chromium.org/developers/coding-style/chromium-style-checker-errors). That way we could ​assert that the last element of the `ALL_*` array is equal to the `enum`'s `kMaxValue`.\r\n\r\nAnother benefit from using `kMaxValue` is that we could start using `FuzzedDataProvider::ConsumeEnum` when fuzzing.",
      "created_at": "2020-12-31T09:23:44Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550438456",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550438456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": 33,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550475166",
      "pull_request_review_id": 560342078,
      "id": 550475166,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3NTE2Ng==",
      "diff_hunk": "@@ -30,4 +30,35 @@ struct ConnmanTestMsg : public CConnman {\n     bool ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const;\n };\n \n+constexpr ServiceFlags ALL_SERVICE_FLAGS[]{\n+    NODE_NONE,\n+    NODE_NETWORK,\n+    NODE_BLOOM,\n+    NODE_WITNESS,\n+    NODE_COMPACT_FILTERS,\n+    NODE_NETWORK_LIMITED,\n+};",
      "path": "src/test/util/net.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fa9ab9a8c8aef98cbddf5efd7dd49d940db00275",
      "in_reply_to_id": 550212069,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, that is another way. `enum Network` uses this. It only works as long as enum values are left at their defaults:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f1f26b8d5baec4a45a3a9ba0440cd4eff7af8407/src/netaddress.h#L38\r\n\r\nand also the dummy \"max\" value has to be explicitly handled in `switch` without `default:`\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f1f26b8d5baec4a45a3a9ba0440cd4eff7af8407/src/netaddress.cpp#L145-L146",
      "created_at": "2020-12-31T12:39:51Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550475166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550475166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": 33,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550484056",
      "pull_request_review_id": 560351181,
      "id": 550484056,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NDA1Ng==",
      "diff_hunk": "@@ -63,13 +64,15 @@ void fuzz_target(const std::vector<uint8_t>& buffer, const std::string& LIMIT_TO\n     }\n     const bool jump_out_of_ibd{fuzzed_data_provider.ConsumeBool()};\n     if (jump_out_of_ibd) chainstate.JumpOutOfIbd();\n-    CDataStream random_bytes_data_stream{fuzzed_data_provider.ConsumeRemainingBytes<unsigned char>(), SER_NETWORK, PROTOCOL_VERSION};\n-    CNode& p2p_node = *MakeUnique<CNode>(0, ServiceFlags(NODE_NETWORK | NODE_WITNESS | NODE_BLOOM), 0, INVALID_SOCKET, CAddress{CService{in_addr{0x0100007f}, 7777}, NODE_NETWORK}, 0, 0, CAddress{}, std::string{}, ConnectionType::OUTBOUND_FULL_RELAY).release();\n+    CNode& p2p_node = *ConsumeNodeAsUniquePtr(fuzzed_data_provider).release();\n     p2p_node.fSuccessfullyConnected = true;\n     p2p_node.nVersion = PROTOCOL_VERSION;\n     p2p_node.SetCommonVersion(PROTOCOL_VERSION);\n     connman.AddTestNode(p2p_node);\n     g_setup->m_node.peerman->InitializeNode(&p2p_node);\n+\n+    // fuzzed_data_provider is fully consumed after this call, don't use it",
      "path": "src/test/fuzz/process_message.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What happens if we attempt to consume more bytes after `ConsumeRemainingBytes()`? Apparently CI was green. Should we `abort()` if that happens?",
      "created_at": "2020-12-31T13:32:38Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550484056",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550484056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550484742",
      "pull_request_review_id": 560351881,
      "id": 550484742,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NDc0Mg==",
      "diff_hunk": "@@ -63,13 +64,15 @@ void fuzz_target(const std::vector<uint8_t>& buffer, const std::string& LIMIT_TO\n     }\n     const bool jump_out_of_ibd{fuzzed_data_provider.ConsumeBool()};\n     if (jump_out_of_ibd) chainstate.JumpOutOfIbd();\n-    CDataStream random_bytes_data_stream{fuzzed_data_provider.ConsumeRemainingBytes<unsigned char>(), SER_NETWORK, PROTOCOL_VERSION};\n-    CNode& p2p_node = *MakeUnique<CNode>(0, ServiceFlags(NODE_NETWORK | NODE_WITNESS | NODE_BLOOM), 0, INVALID_SOCKET, CAddress{CService{in_addr{0x0100007f}, 7777}, NODE_NETWORK}, 0, 0, CAddress{}, std::string{}, ConnectionType::OUTBOUND_FULL_RELAY).release();\n+    CNode& p2p_node = *ConsumeNodeAsUniquePtr(fuzzed_data_provider).release();\n     p2p_node.fSuccessfullyConnected = true;\n     p2p_node.nVersion = PROTOCOL_VERSION;\n     p2p_node.SetCommonVersion(PROTOCOL_VERSION);\n     connman.AddTestNode(p2p_node);\n     g_setup->m_node.peerman->InitializeNode(&p2p_node);\n+\n+    // fuzzed_data_provider is fully consumed after this call, don't use it",
      "path": "src/test/fuzz/process_message.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "in_reply_to_id": 550484056,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This happens in normal operation when the fuzz engine starts with an empty byte vector or when existing inputs are trimmed, so it can't be detected by CI.",
      "created_at": "2020-12-31T13:36:35Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550484742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550484742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550592732",
      "pull_request_review_id": 560525075,
      "id": 550592732,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDU5MjczMg==",
      "diff_hunk": "@@ -30,4 +30,35 @@ struct ConnmanTestMsg : public CConnman {\n     bool ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const;\n };\n \n+constexpr ServiceFlags ALL_SERVICE_FLAGS[]{\n+    NODE_NONE,\n+    NODE_NETWORK,\n+    NODE_BLOOM,\n+    NODE_WITNESS,\n+    NODE_COMPACT_FILTERS,\n+    NODE_NETWORK_LIMITED,\n+};",
      "path": "src/test/util/net.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fa9ab9a8c8aef98cbddf5efd7dd49d940db00275",
      "in_reply_to_id": 550212069,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For strong enums, I was thinking about a macro `ENUM_CLASS_ALL` that writes the `enum class` and `std::array` that holds all enum types of that class. Thus, we could keep using `PickValueInArray` for strong enums. `FuzzedDataProvider::ConsumeEnum` is an alternative for strong enums that does exactly the same from the perspective of the fuzz engine.\r\n\r\nFor weak enums, `ConsumeWeakEnum` is probably the best bet. I tried `kMaxValue` and it performed strictly worse in all scenarios, in one it was unable to find a crash at all. And it can't possibly work for 64-bit enums. Someone should report those bugs to google. See also the benchmark: https://github.com/bitcoin/bitcoin/pull/20789#issuecomment-752961937",
      "created_at": "2020-12-31T17:43:38Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550592732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550592732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": 33,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550682304",
      "pull_request_review_id": 560542082,
      "id": 550682304,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4MjMwNA==",
      "diff_hunk": "@@ -283,24 +292,30 @@ inline CService ConsumeService(FuzzedDataProvider& fuzzed_data_provider) noexcep\n \n inline CAddress ConsumeAddress(FuzzedDataProvider& fuzzed_data_provider) noexcept\n {\n-    return {ConsumeService(fuzzed_data_provider), static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()), fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    return {ConsumeService(fuzzed_data_provider), ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS), fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n }\n \n-inline CNode ConsumeNode(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+template <bool ReturnUniquePtr = false>\n+auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\n {\n-    const NodeId node_id = fuzzed_data_provider.ConsumeIntegral<NodeId>();\n-    const ServiceFlags local_services = static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n+    const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\n+    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\n     const SOCKET socket = INVALID_SOCKET;\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\n     const uint64_t keyed_net_group = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n     const uint64_t local_host_nonce = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n     const CAddress addr_bind = ConsumeAddress(fuzzed_data_provider);\n     const std::string addr_name = fuzzed_data_provider.ConsumeRandomLengthString(64);\n-    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray({ConnectionType::INBOUND, ConnectionType::OUTBOUND_FULL_RELAY, ConnectionType::MANUAL, ConnectionType::FEELER, ConnectionType::BLOCK_RELAY, ConnectionType::ADDR_FETCH});\n+    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray(ALL_CONNECTION_TYPES);\n     const bool inbound_onion = fuzzed_data_provider.ConsumeBool();\n-    return {node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n+    if constexpr (ReturnUniquePtr) {\n+        return std::make_unique<CNode>(node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion);\n+    } else {\n+        return CNode{node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n+    }\n }\n+std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = nullopt) { return ConsumeNode<true>(fdp, node_id_in); }",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 56,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Trying to build this with clang I get linker errors (`multiple definition of ConsumeNodeAsUniquePtr(FuzzedDataProvider&, std::optional<long> const&)`). \r\nI think that adding an `inline` to  `ConsumeNodeAsUniquePtr()` would fix this.",
      "created_at": "2020-12-31T19:57:37Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550682304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550682304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550760251",
      "pull_request_review_id": 560583455,
      "id": 550760251,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2MDI1MQ==",
      "diff_hunk": "@@ -283,24 +292,30 @@ inline CService ConsumeService(FuzzedDataProvider& fuzzed_data_provider) noexcep\n \n inline CAddress ConsumeAddress(FuzzedDataProvider& fuzzed_data_provider) noexcept\n {\n-    return {ConsumeService(fuzzed_data_provider), static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()), fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    return {ConsumeService(fuzzed_data_provider), ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS), fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n }\n \n-inline CNode ConsumeNode(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+template <bool ReturnUniquePtr = false>\n+auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\n {\n-    const NodeId node_id = fuzzed_data_provider.ConsumeIntegral<NodeId>();\n-    const ServiceFlags local_services = static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n+    const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\n+    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\n     const SOCKET socket = INVALID_SOCKET;\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\n     const uint64_t keyed_net_group = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n     const uint64_t local_host_nonce = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n     const CAddress addr_bind = ConsumeAddress(fuzzed_data_provider);\n     const std::string addr_name = fuzzed_data_provider.ConsumeRandomLengthString(64);\n-    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray({ConnectionType::INBOUND, ConnectionType::OUTBOUND_FULL_RELAY, ConnectionType::MANUAL, ConnectionType::FEELER, ConnectionType::BLOCK_RELAY, ConnectionType::ADDR_FETCH});\n+    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray(ALL_CONNECTION_TYPES);\n     const bool inbound_onion = fuzzed_data_provider.ConsumeBool();\n-    return {node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n+    if constexpr (ReturnUniquePtr) {\n+        return std::make_unique<CNode>(node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion);\n+    } else {\n+        return CNode{node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n+    }\n }\n+std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = nullopt) { return ConsumeNode<true>(fdp, node_id_in); }",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 56,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "in_reply_to_id": 550682304,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed. Not sure why I can't reproduce locally. Are you using the macOS clang?",
      "created_at": "2021-01-01T11:40:57Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550760251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550760251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550767540",
      "pull_request_review_id": 560586763,
      "id": 550767540,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NzU0MA==",
      "diff_hunk": "@@ -283,24 +292,30 @@ inline CService ConsumeService(FuzzedDataProvider& fuzzed_data_provider) noexcep\n \n inline CAddress ConsumeAddress(FuzzedDataProvider& fuzzed_data_provider) noexcept\n {\n-    return {ConsumeService(fuzzed_data_provider), static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()), fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    return {ConsumeService(fuzzed_data_provider), ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS), fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n }\n \n-inline CNode ConsumeNode(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+template <bool ReturnUniquePtr = false>\n+auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\n {\n-    const NodeId node_id = fuzzed_data_provider.ConsumeIntegral<NodeId>();\n-    const ServiceFlags local_services = static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n+    const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\n+    const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n     const int my_starting_height = fuzzed_data_provider.ConsumeIntegral<int>();\n     const SOCKET socket = INVALID_SOCKET;\n     const CAddress address = ConsumeAddress(fuzzed_data_provider);\n     const uint64_t keyed_net_group = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n     const uint64_t local_host_nonce = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n     const CAddress addr_bind = ConsumeAddress(fuzzed_data_provider);\n     const std::string addr_name = fuzzed_data_provider.ConsumeRandomLengthString(64);\n-    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray({ConnectionType::INBOUND, ConnectionType::OUTBOUND_FULL_RELAY, ConnectionType::MANUAL, ConnectionType::FEELER, ConnectionType::BLOCK_RELAY, ConnectionType::ADDR_FETCH});\n+    const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray(ALL_CONNECTION_TYPES);\n     const bool inbound_onion = fuzzed_data_provider.ConsumeBool();\n-    return {node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n+    if constexpr (ReturnUniquePtr) {\n+        return std::make_unique<CNode>(node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion);\n+    } else {\n+        return CNode{node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n+    }\n }\n+std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = nullopt) { return ConsumeNode<true>(fdp, node_id_in); }",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 56,
      "commit_id": "eeee43bc48ea7fbacd3c5e3f076f01f04744adb8",
      "original_commit_id": "fadbf6a83040b7a8b9f91e27b61adfaf4c5df3fb",
      "in_reply_to_id": 550682304,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am using clang version 6.0.0-1ubuntu2",
      "created_at": "2021-01-01T13:14:01Z",
      "updated_at": "2021-01-02T14:08:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20789#discussion_r550767540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550767540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20789"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    }
  ]
}