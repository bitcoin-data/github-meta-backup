{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738",
    "id": 128707068,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4NzA3MDY4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10738",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/10738.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/10738.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
    "number": 10738,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: drop custom CNode refcounting in favor of smart pointers",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a more involved version of #10697, which instead completely gets rid of our nasty AddRef() and Release() in favor of automatic lifetime management.\r\n\r\nSpecial care must be taken, though, to only delete CNodes from a single thread, and to control which thread that is. Eventually, this should move to the message processing thread, so that it's not possible to hit cs_main from the main network thread.\r\n\r\nIn order to do this safely, this PR introduces 2 new generic smart pointer types: strong_ptr and decay_ptr. They provide a functionality that I've wanted for a long time: the ability to safely decay a shared_ptr to a unique_ptr. That sounds somewhat nonsensical at first, but it's useful to be able to make copies of a pointer for a while, stop, wait until only one remains, then delete with guaranteed safety.\r\n\r\nPlease read shared_ptr.h and check out the tests before groaning. I think this is a very cool (and completely safe) pattern.\r\n\r\nThis functionality could potentially be accomplished with a shared_ptr and polling ptr.unique(), but that's inherently racy because a new copy could be created simultaneously. Even moving to a local instance and calling .unique() on that one is not safe, as a weak_ptr could be upgraded simultaneously.\r\n\r\nInstead, a strong_ptr is created which acts like a unique_ptr but allows shared_ptrs to be \"loaned\" out. Once a strong_ptr is moved into a decay_ptr, the strong_ptr is reset and no new loans may be created. The decay_ptr tracks the lifetime of the loaned copies, and knows whether or not they have all expired. This can be queried, with no race concerns, with decay_ptr::decay().\r\n\r\nAdditionally, if the loaned shared_ptrs for some reason outlive the strong_ptr/decay_ptr, they are safely deleted once the last loaned shared_ptr expires. So there is no risk of leaks.\r\n\r\nIn order to make review easier, these changes were made in a few stages:\r\n1. Where possible, make functions agnostic to the type of pointer being used\r\n2. Switch to shared_ptr but keep existing refcounting on top\r\n3. Switch to strong_ptr\r\n4. Drop existing refcounting and now-unnecessary locking.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-07-04T00:00:45Z",
    "updated_at": "2021-12-16T14:11:46Z",
    "closed_at": "2018-11-08T23:20:47Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "e26d2bc9e9d564916ec3eba665efa11bd7128af1",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "theuni:shared_ptr_cnode",
      "ref": "shared_ptr_cnode",
      "sha": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 10302141,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwMjE0MQ==",
        "name": "bitcoin",
        "full_name": "theuni/bitcoin",
        "owner": {
          "login": "theuni",
          "id": 417043,
          "node_id": "MDQ6VXNlcjQxNzA0Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theuni",
          "html_url": "https://github.com/theuni",
          "followers_url": "https://api.github.com/users/theuni/followers",
          "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
          "organizations_url": "https://api.github.com/users/theuni/orgs",
          "repos_url": "https://api.github.com/users/theuni/repos",
          "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theuni/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/theuni/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theuni/bitcoin",
        "archive_url": "https://api.github.com/repos/theuni/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theuni/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theuni/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theuni/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theuni/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theuni/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theuni/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theuni/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theuni/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theuni/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theuni/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theuni/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theuni/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theuni/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theuni/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theuni/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theuni/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theuni/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theuni/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theuni/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theuni/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theuni/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theuni/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theuni/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theuni/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theuni/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theuni/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theuni/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theuni/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theuni/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theuni/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theuni/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theuni/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theuni/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theuni/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theuni/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theuni/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theuni/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theuni/bitcoin/hooks",
        "svn_url": "https://github.com/theuni/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 221845,
        "default_branch": "trivial-next",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T21:44:11Z",
        "created_at": "2013-05-26T18:55:06Z",
        "updated_at": "2022-01-12T04:42:12Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "efae3663a772169f9ef5172d76f938e0bb02eca4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T22:16:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 584,
    "deletions": 224,
    "changed_files": 6,
    "commits": 9,
    "review_comments": 9,
    "comments": 5
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMWRiZDg0ZWZlYmE4MDM0MzdiYzk3NTA3Mjg4Y2RlMzdmNjQwZmIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1dbd84efeba803437bc97507288cde37f640fb1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e1dbd84efeba803437bc97507288cde37f640fb1",
      "tree": {
        "sha": "050f3ce55d57fb7803a536fb8bf849b227d8fbe5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/050f3ce55d57fb7803a536fb8bf849b227d8fbe5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7397af9d314dd01ca3699efbe6eec68f62a6ef2b",
          "sha": "7397af9d314dd01ca3699efbe6eec68f62a6ef2b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7397af9d314dd01ca3699efbe6eec68f62a6ef2b"
        }
      ],
      "message": "net: replace specific FindNodes with a generic one\n\nOnce FindNode returns a shared_ptr, it becomes much more useful.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:06Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-29T23:38:30Z"
      },
      "sha": "e1dbd84efeba803437bc97507288cde37f640fb1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODMyNjM0YjFkMjk0OWQ5ODllOTY5ZjczOTgyZGE1ZGFmODg1NjY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e832634b1d2949d989e969f73982da5daf885668",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e832634b1d2949d989e969f73982da5daf885668",
      "tree": {
        "sha": "e9b86bc4917a97b0fd1e5140f2b00f181725586d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9b86bc4917a97b0fd1e5140f2b00f181725586d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1dbd84efeba803437bc97507288cde37f640fb1",
          "sha": "e1dbd84efeba803437bc97507288cde37f640fb1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e1dbd84efeba803437bc97507288cde37f640fb1"
        }
      ],
      "message": "net: use range-based-for in a few places\n\nNo need to mess with iterators",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:06Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T21:35:53Z"
      },
      "sha": "e832634b1d2949d989e969f73982da5daf885668"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWNkOTZhMTczNGIyZGVjZTBmMGExMjg1OTRjMTViMjFlMjYwMGM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59cd96a1734b2dece0f0a128594c15b21e2600c4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/59cd96a1734b2dece0f0a128594c15b21e2600c4",
      "tree": {
        "sha": "93d53a19f2435cc58f0c0f27c31b053963b18c3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93d53a19f2435cc58f0c0f27c31b053963b18c3e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e832634b1d2949d989e969f73982da5daf885668",
          "sha": "e832634b1d2949d989e969f73982da5daf885668",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e832634b1d2949d989e969f73982da5daf885668"
        }
      ],
      "message": "net: turn CNodes into shared_ptrs\n\nNote that this is an interim commit for easier review; it is strictly worse\nthan bare pointers.\n\nThe actual benefits will come in the next commits. The main one being that we\ncan drop our clunky (and unsafe) refcounting.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:06Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-29T22:53:58Z"
      },
      "sha": "59cd96a1734b2dece0f0a128594c15b21e2600c4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDcyMGFhYTYyNmQzODY2ZWUzNjY0ZjFjZTljM2Q2NTQ4MTFlNDE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d720aaa626d3866ee3664f1ce9c3d654811e418",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d720aaa626d3866ee3664f1ce9c3d654811e418",
      "tree": {
        "sha": "598897fbcfaac6144cdf077312533294e4c0e2b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/598897fbcfaac6144cdf077312533294e4c0e2b9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59cd96a1734b2dece0f0a128594c15b21e2600c4",
          "sha": "59cd96a1734b2dece0f0a128594c15b21e2600c4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/59cd96a1734b2dece0f0a128594c15b21e2600c4"
        }
      ],
      "message": "net: add strong_ptr and decay_ptr\n\nSee strong_ptr.h for more details.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:06Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-30T22:26:07Z"
      },
      "sha": "2d720aaa626d3866ee3664f1ce9c3d654811e418"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTdiYzk5YzU3ZTJhODRlYTk0NTI5ZGM4NjdmY2MyNmQwOTMyMjZh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/457bc99c57e2a84ea94529dc867fcc26d093226a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/457bc99c57e2a84ea94529dc867fcc26d093226a",
      "tree": {
        "sha": "0aee1469a03e6770bdb28cf1fbf801d033520c65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0aee1469a03e6770bdb28cf1fbf801d033520c65"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d720aaa626d3866ee3664f1ce9c3d654811e418",
          "sha": "2d720aaa626d3866ee3664f1ce9c3d654811e418",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d720aaa626d3866ee3664f1ce9c3d654811e418"
        }
      ],
      "message": "net: switch CNode to strong_ptr/decay_ptr\n\nIt's necessary to control which thread deletes CNodes, because net_processing\nrequires notification so that it may clean up its resources as well.\n\nMore generally we need assurance that, when deleting a CNode, there's nothing\nelse attempting to access it.\n\nshared_ptr and decay_ptr enable us to do this safely. vNodes now holds\nstrong_ptrs rather than shared_ptrs, and moves them to a container of\ndecay_ptrs once disconnected. At that point, we can wait until there are no\nremaining users before deletion.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:06Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-30T00:25:54Z"
      },
      "sha": "457bc99c57e2a84ea94529dc867fcc26d093226a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzE3OTQ4ZjY3ODdiMmZkYTRjMTFlYzJmMDkxMzY4OTgxNDdkZjA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8317948f6787b2fda4c11ec2f09136898147df07",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8317948f6787b2fda4c11ec2f09136898147df07",
      "tree": {
        "sha": "fa230b120a8412420fdc6e372a8d81023e3f43ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa230b120a8412420fdc6e372a8d81023e3f43ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/457bc99c57e2a84ea94529dc867fcc26d093226a",
          "sha": "457bc99c57e2a84ea94529dc867fcc26d093226a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/457bc99c57e2a84ea94529dc867fcc26d093226a"
        }
      ],
      "message": "net: remove CNode's refcounting in favor of strong_ptr",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:06Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-30T00:30:13Z"
      },
      "sha": "8317948f6787b2fda4c11ec2f09136898147df07"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmQxYTU1MmQyMGVjZjI0Nzg5YjFmZGI4MWQwODBkMTc3MDM3Mjc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afd1a552d20ecf24789b1fdb81d080d177037275",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/afd1a552d20ecf24789b1fdb81d080d177037275",
      "tree": {
        "sha": "deafa18228b738e37d19ab32a08a3e20a03b6ac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/deafa18228b738e37d19ab32a08a3e20a03b6ac2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8317948f6787b2fda4c11ec2f09136898147df07",
          "sha": "8317948f6787b2fda4c11ec2f09136898147df07",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8317948f6787b2fda4c11ec2f09136898147df07"
        }
      ],
      "message": "net: create GetNodesCopy and use it in a few places",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:07Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-30T20:07:00Z"
      },
      "sha": "afd1a552d20ecf24789b1fdb81d080d177037275"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmQzMWQ3NzA2NGMyMTg1YzVhZmUzMjMwMDVmYmNiYTc2ZmVjYTYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afd31d77064c2185c5afe323005fbcba76feca61",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/afd31d77064c2185c5afe323005fbcba76feca61",
      "tree": {
        "sha": "26eda8037616ac13790a720c4fa4c7b1a5591f05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26eda8037616ac13790a720c4fa4c7b1a5591f05"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afd1a552d20ecf24789b1fdb81d080d177037275",
          "sha": "afd1a552d20ecf24789b1fdb81d080d177037275",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/afd1a552d20ecf24789b1fdb81d080d177037275"
        }
      ],
      "message": "net: clean up vNodes usage in the socket handler\n\n- Make a single, quick copy at the top of the loop\n- Disconnect outside of the lock",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-03T23:13:07Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-30T00:58:48Z"
      },
      "sha": "afd31d77064c2185c5afe323005fbcba76feca61"
    },
    {
      "event": "commented",
      "id": 312751966,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjc1MTk2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312751966",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-04T00:03:22Z",
      "updated_at": "2017-07-04T00:03:22Z",
      "author_association": "MEMBER",
      "body": "Note that https://github.com/bitcoin/bitcoin/pull/10697#issuecomment-311811754 applies here as well.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-312751966",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738"
    },
    {
      "event": "commented",
      "id": 312755338,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjc1NTMzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312755338",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-04T00:45:45Z",
      "updated_at": "2017-07-04T00:45:45Z",
      "author_association": "MEMBER",
      "body": "Test failure looks unrelated and matches another one here: https://travis-ci.org/bitcoin/bitcoin/jobs/248773151. Kicking off a new build.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-312755338",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1148817513,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE0ODgxNzUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1148817513",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-04T00:46:11Z"
    },
    {
      "event": "labeled",
      "id": 1148817631,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDExNDg4MTc2MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1148817631",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-04T00:46:29Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGM2NzFhMjIwNDZjNmMwOWE2ZGUyYjFkMzhlOWUyZmEzOTIwNjI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "tree": {
        "sha": "2bc2fd4e01002235b93465da64050ba04fdb0a69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bc2fd4e01002235b93465da64050ba04fdb0a69"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afd31d77064c2185c5afe323005fbcba76feca61",
          "sha": "afd31d77064c2185c5afe323005fbcba76feca61",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/afd31d77064c2185c5afe323005fbcba76feca61"
        }
      ],
      "message": "net: drop some cs_vNodes locks\n\nThese are all unnecessary now that a shared_ptr is held.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-07-04T00:46:31Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-06-30T00:46:07Z"
      },
      "sha": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628"
    },
    {
      "event": "commented",
      "id": 324287323,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDI4NzMyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324287323",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-23T10:22:45Z",
      "updated_at": "2017-08-23T10:22:45Z",
      "author_association": "MEMBER",
      "body": "Needs rebase.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-324287323",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738"
    },
    {
      "event": "assigned",
      "id": 1217551032,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQxMjE3NTUxMDMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1217551032",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-23T10:22:51Z",
      "assignee": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "added_to_project",
      "id": 1356752778,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxMzU2NzUyNzc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1356752778",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-24T08:39:04Z",
      "project_card": {
        "id": 5834419,
        "url": "https://api.github.com/projects/columns/cards/5834419",
        "project_id": 49573,
        "project_url": "https://api.github.com/projects/49573",
        "column_name": "In progress"
      }
    },
    {
      "event": "reviewed",
      "id": 84866659,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODQ4NjY2NTk=",
      "url": null,
      "actor": null,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#pullrequestreview-84866659",
      "submitted_at": "2017-12-20T19:09:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
    },
    {
      "event": "reviewed",
      "id": 94360577,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTQzNjA1Nzc=",
      "url": null,
      "actor": null,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK.\r\nI was able to review everything except some of the C++11 magic in strong.h (commit 2d720aaa626d3866ee3664f1ce9c3d654811e418), but the tests for that look convincing to me. In my opinion this is a big improvement from how things are currently handled.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#pullrequestreview-94360577",
      "submitted_at": "2018-02-06T14:44:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
    },
    {
      "event": "commented",
      "id": 364663457,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDY2MzQ1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/364663457",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-10T15:36:43Z",
      "updated_at": "2018-02-10T15:36:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "The title sounds great because is not \"reinventing the wheel\" like our own ref_count data structure.\r\nBut strong_pointer feels like reinventing the wheel again...",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-364663457",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738"
    },
    {
      "event": "unassigned",
      "id": 1591798582,
      "node_id": "MDE1OlVuYXNzaWduZWRFdmVudDE1OTE3OTg1ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1591798582",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-24T14:40:40Z",
      "assignee": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 1665121809,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2NjUxMjE4MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1665121809",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-06T02:47:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 437192700,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE5MjcwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437192700",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-08T23:20:46Z",
      "updated_at": "2018-11-08T23:20:46Z",
      "author_association": "MEMBER",
      "body": "<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#issuecomment-437192700",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10738"
    },
    {
      "event": "labeled",
      "id": 1955669511,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5NTU2Njk1MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1955669511",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-08T23:20:46Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "closed",
      "id": 1955669548,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTk1NTY2OTU0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1955669548",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-08T23:20:47Z"
    },
    {
      "event": "moved_columns_in_project",
      "id": 2156221760,
      "node_id": "MDI2Ok1vdmVkQ29sdW1uc0luUHJvamVjdEV2ZW50MjE1NjIyMTc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2156221760",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-21T21:19:46Z",
      "project_card": {
        "id": 5834419,
        "url": "https://api.github.com/projects/columns/cards/5834419",
        "project_id": 49573,
        "project_url": "https://api.github.com/projects/49573",
        "column_name": "Backlog",
        "previous_column_name": "In progress"
      }
    },
    {
      "event": "unlabeled",
      "id": 2741497804,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc0MTQ5NzgwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2741497804",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-24T16:51:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "locked",
      "id": 5778622309,
      "node_id": "LOE_lADOABII584OUm-azwAAAAFYbsdl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778622309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:11:46Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158109825",
      "pull_request_review_id": 84866659,
      "id": 158109825,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODEwOTgyNQ==",
      "diff_hunk": "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {",
      "path": "src/strong_ptr.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand how make_strong/strong_ptr/decay_ptr provide any benefit in this example. Why wouldn't you just use regular shared pointers, and write this loop as `while (str.use_count() > 1)`?",
      "created_at": "2017-12-20T19:09:07Z",
      "updated_at": "2017-12-20T19:09:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r158109825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158109825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158149046",
      "pull_request_review_id": 84912959,
      "id": 158149046,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODE0OTA0Ng==",
      "diff_hunk": "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {",
      "path": "src/strong_ptr.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "in_reply_to_id": 158109825,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a weak_ptr can be created from a shared_ptr without bumping its refcount. That weak_ptr can ```lock()``` in a separate thread just after checking use_count() here. ```shared_ptr.unique()``` (```shared_ptr.use_count() == 1```) was deprecated in c++17 for that reason.\r\n\r\nOnce moved to a decay_ptr, ```decayed()``` is a trustworthy ```unique()```.",
      "created_at": "2017-12-20T22:07:55Z",
      "updated_at": "2017-12-20T22:07:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r158149046",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158149046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166312833",
      "pull_request_review_id": 94358094,
      "id": 166312833,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjMxMjgzMw==",
      "diff_hunk": "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {",
      "path": "src/strong_ptr.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "in_reply_to_id": 158109825,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is a particularly good example, as it encourages busy waiting :-) But for the application in our net code it's a clever solution.",
      "created_at": "2018-02-06T14:19:34Z",
      "updated_at": "2018-02-06T14:19:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r166312833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166312833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166316663",
      "pull_request_review_id": 94360577,
      "id": 166316663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjMxNjY2Mw==",
      "diff_hunk": "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {\n+                // wait here\n+                continue;\n+            }\n+            // dec is guaranteed to be unique here. Its memory will be freed\n+            // when it goes out of scope.\n+            return 0;\n+        }\n+*/\n+\n+template <typename T>\n+class decay_ptr;\n+\n+template <typename T>\n+class strong_ptr\n+{\n+    struct shared_deleter {\n+        void operator()(T* /* unused */) const {}\n+        const std::shared_ptr<void> m_data;\n+    };\n+\n+    friend class decay_ptr<T>;\n+\n+    template <typename U, typename... Args>\n+    friend strong_ptr<U> make_strong(Args&&... args);\n+\n+    template <typename U>\n+    explicit strong_ptr(std::shared_ptr<U>&& rhs) : m_data{std::move(rhs)}\n+    {\n+    }\n+\n+public:\n+    using element_type = T;\n+\n+    constexpr strong_ptr() : strong_ptr(nullptr) {}\n+\n+    constexpr strong_ptr(std::nullptr_t) : m_shared{nullptr} {}\n+\n+    template <typename U>\n+    explicit strong_ptr(U* ptr) : m_data(ptr)\n+    {\n+    }\n+\n+    template <typename Deleter>\n+    strong_ptr(std::nullptr_t ptr, Deleter deleter) : m_data{ptr, std::move(deleter)}\n+    {\n+    }\n+\n+    template <typename U, typename Deleter>\n+    strong_ptr(U* ptr, Deleter deleter) : m_data{ptr, std::move(deleter)}\n+    {\n+    }\n+\n+    template <typename U, typename Deleter>\n+    strong_ptr(std::unique_ptr<U, Deleter>&& rhs) : m_data{std::move(rhs)}\n+    {\n+    }\n+\n+    template <typename U>\n+    strong_ptr(strong_ptr<U>&& rhs) : m_data{std::move(rhs.m_data)}, m_shared{std::move(rhs.m_shared)}\n+    {\n+    }\n+\n+    strong_ptr(strong_ptr&& rhs) noexcept : m_data{std::move(rhs.m_data)}, m_shared{std::move(rhs.m_shared)} {}\n+\n+    ~strong_ptr() = default;\n+\n+    strong_ptr(const strong_ptr& rhs) = delete;\n+    strong_ptr& operator=(const strong_ptr& rhs) = delete;\n+\n+    strong_ptr& operator=(strong_ptr&& rhs) noexcept\n+    {\n+        m_data = std::move(rhs.m_data);\n+        m_shared = std::move(rhs.m_shared);\n+        return *this;\n+    }\n+\n+    template <typename U>\n+    strong_ptr& operator=(strong_ptr<U>&& rhs)\n+    {\n+        m_data = std::move(rhs.m_data);\n+        m_shared = std::move(rhs.m_shared);\n+        return *this;\n+    }\n+\n+    template <typename U>\n+    strong_ptr& operator=(U* rhs)\n+    {\n+        reset(rhs);\n+        return *this;\n+    }\n+\n+    template <typename U, typename Deleter>\n+    strong_ptr& operator=(std::unique_ptr<U, Deleter>&& rhs)\n+    {\n+        m_data = std::move(rhs);\n+        m_shared.reset(nullptr, shared_deleter{m_data});\n+        return *this;\n+    }\n+\n+    void reset()\n+    {\n+        m_data.reset();\n+        m_shared.reset();\n+    }\n+    void reset(std::nullptr_t)",
      "path": "src/strong_ptr.h",
      "position": 156,
      "original_position": 156,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the advantage of having a specific overload for nullptr_t?",
      "created_at": "2018-02-06T14:26:13Z",
      "updated_at": "2018-02-06T14:44:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r166316663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166316663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166320184",
      "pull_request_review_id": 94360577,
      "id": 166320184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjMyMDE4NA==",
      "diff_hunk": "@@ -333,6 +328,19 @@ class CConnman\n     // Whether the node should be passed out in ForEach* callbacks\n     static bool NodeFullyConnected(const CNode* pnode);\n \n+    template <typename Callable>",
      "path": "src/net.h",
      "position": null,
      "original_position": 16,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "e1dbd84efeba803437bc97507288cde37f640fb1",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice! I like how this cleans up the searching functions. Maybe add a comment (for doxygen) that this returns the first (arbitrary) node that matches a certain predicate, or `nullptr` otherwise.",
      "created_at": "2018-02-06T14:31:53Z",
      "updated_at": "2018-02-06T14:44:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r166320184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166320184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166323055",
      "pull_request_review_id": 94360577,
      "id": 166323055,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjMyMzA1NQ==",
      "diff_hunk": "@@ -329,6 +329,19 @@ class CConnman\n     // Whether the node should be passed out in ForEach* callbacks\n     static bool NodeFullyConnected(const CNode* pnode);\n \n+    std::vector<std::shared_ptr<CNode>> GetNodesCopy() const",
      "path": "src/net.h",
      "position": 85,
      "original_position": 40,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "afd1a552d20ecf24789b1fdb81d080d177037275",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Creating a copy - increasing all refcounts in the process, just to drop them again at the end of the function - feels like a lot of overhead, how many lock operations does that take internally? Can we somehow benchmark that this is more efficient than holding cs_vnodes for the entire time? (or at least, not much slower, not all the cases are performance critical and it does clean up the code)",
      "created_at": "2018-02-06T14:40:56Z",
      "updated_at": "2018-02-06T14:44:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r166323055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166323055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 328,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167354695",
      "pull_request_review_id": 95573235,
      "id": 167354695,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzM1NDY5NQ==",
      "diff_hunk": "@@ -329,6 +329,19 @@ class CConnman\n     // Whether the node should be passed out in ForEach* callbacks\n     static bool NodeFullyConnected(const CNode* pnode);\n \n+    std::vector<std::shared_ptr<CNode>> GetNodesCopy() const",
      "path": "src/net.h",
      "position": 85,
      "original_position": 40,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "afd1a552d20ecf24789b1fdb81d080d177037275",
      "in_reply_to_id": 166323055,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Performance isn't the intention, this was done in order to avoid keeping cs_vNodes locked during the ForEachNode callbacks. Though I agree and also really dislike the overhead.",
      "created_at": "2018-02-09T21:49:03Z",
      "updated_at": "2018-02-09T21:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r167354695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167354695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 328,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167358024",
      "pull_request_review_id": 95577203,
      "id": 167358024,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzM1ODAyNA==",
      "diff_hunk": "@@ -0,0 +1,317 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_STRONGPTR_H\n+#define BITCOIN_STRONGPTR_H\n+\n+#include <memory>\n+\n+/*\n+    strong_ptr and decay_ptr create a safe use pattern for moving shared_ptrs\n+    to a unique_ptr.\n+\n+    While any such pattern would usually make no sense, it can be made to work\n+    with a new type that holds an extra reference (strong_ptr), and one that\n+    observes the lifetime of extra references (decay_ptr).\n+\n+    The process is:\n+        1. Create a strong_ptr like any typical smart pointer. It cannot be\n+            copied, but it can \"loan out\" shared_ptrs using\n+            strong_ptr::get_shared().\n+        2. Use the \"loaned\" shared_ptrs as usual, and use the strong_ptr as\n+            though it were a unique_ptr.\n+        3. When it's time to coalesce, move the strong_ptr into a decay_ptr.\n+        4. Query the status with decay_ptr::decayed().\n+\n+    Once moved into a decay_ptr, the original strong_ptr is reset, and the\n+    decay_ptr is unable to loan out any new shared_ptrs. Once the decay_ptr has\n+    decayed, it behaves just like a unique_ptr.\n+\n+    If a loaned shared_ptr outlives the strong_ptr that owns it, the lifetime\n+    is extended until the last copy is deleted. This is accomplished by\n+    creating a shared_ptr to represent the lifetime of the strong_ptr, and\n+    storing a copy of it in the loaned shared_ptr's deleter.\n+\n+    Thus, strong_ptr and decay_ptr ensure that allocated memory is always freed.\n+\n+    Here's a quick example of their use:\n+\n+        void func(std::shared_ptr<int>)\n+        {\n+            // Some long-lived operation\n+        }\n+\n+        int main()\n+        {\n+            strong_ptr<int> str(make_strong<int>(100));\n+            std::thread(func, str.get_shared());\n+            decay_ptr<int> dec(std::move(strong));\n+            // The original strong_ptr is now reset\n+            while (!dec.decayed()) {\n+                // wait here\n+                continue;\n+            }\n+            // dec is guaranteed to be unique here. Its memory will be freed\n+            // when it goes out of scope.\n+            return 0;\n+        }\n+*/\n+\n+template <typename T>\n+class decay_ptr;\n+\n+template <typename T>\n+class strong_ptr\n+{\n+    struct shared_deleter {\n+        void operator()(T* /* unused */) const {}\n+        const std::shared_ptr<void> m_data;\n+    };\n+\n+    friend class decay_ptr<T>;\n+\n+    template <typename U, typename... Args>\n+    friend strong_ptr<U> make_strong(Args&&... args);\n+\n+    template <typename U>\n+    explicit strong_ptr(std::shared_ptr<U>&& rhs) : m_data{std::move(rhs)}\n+    {\n+    }\n+\n+public:\n+    using element_type = T;\n+\n+    constexpr strong_ptr() : strong_ptr(nullptr) {}\n+\n+    constexpr strong_ptr(std::nullptr_t) : m_shared{nullptr} {}\n+\n+    template <typename U>\n+    explicit strong_ptr(U* ptr) : m_data(ptr)\n+    {\n+    }\n+\n+    template <typename Deleter>\n+    strong_ptr(std::nullptr_t ptr, Deleter deleter) : m_data{ptr, std::move(deleter)}\n+    {\n+    }\n+\n+    template <typename U, typename Deleter>\n+    strong_ptr(U* ptr, Deleter deleter) : m_data{ptr, std::move(deleter)}\n+    {\n+    }\n+\n+    template <typename U, typename Deleter>\n+    strong_ptr(std::unique_ptr<U, Deleter>&& rhs) : m_data{std::move(rhs)}\n+    {\n+    }\n+\n+    template <typename U>\n+    strong_ptr(strong_ptr<U>&& rhs) : m_data{std::move(rhs.m_data)}, m_shared{std::move(rhs.m_shared)}\n+    {\n+    }\n+\n+    strong_ptr(strong_ptr&& rhs) noexcept : m_data{std::move(rhs.m_data)}, m_shared{std::move(rhs.m_shared)} {}\n+\n+    ~strong_ptr() = default;\n+\n+    strong_ptr(const strong_ptr& rhs) = delete;\n+    strong_ptr& operator=(const strong_ptr& rhs) = delete;\n+\n+    strong_ptr& operator=(strong_ptr&& rhs) noexcept\n+    {\n+        m_data = std::move(rhs.m_data);\n+        m_shared = std::move(rhs.m_shared);\n+        return *this;\n+    }\n+\n+    template <typename U>\n+    strong_ptr& operator=(strong_ptr<U>&& rhs)\n+    {\n+        m_data = std::move(rhs.m_data);\n+        m_shared = std::move(rhs.m_shared);\n+        return *this;\n+    }\n+\n+    template <typename U>\n+    strong_ptr& operator=(U* rhs)\n+    {\n+        reset(rhs);\n+        return *this;\n+    }\n+\n+    template <typename U, typename Deleter>\n+    strong_ptr& operator=(std::unique_ptr<U, Deleter>&& rhs)\n+    {\n+        m_data = std::move(rhs);\n+        m_shared.reset(nullptr, shared_deleter{m_data});\n+        return *this;\n+    }\n+\n+    void reset()\n+    {\n+        m_data.reset();\n+        m_shared.reset();\n+    }\n+    void reset(std::nullptr_t)",
      "path": "src/strong_ptr.h",
      "position": 156,
      "original_position": 156,
      "commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "original_commit_id": "6dc671a22046c6c09a6de2b1d38e9e2fa3920628",
      "in_reply_to_id": 166316663,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Heh, I have no idea why I added that. Will remove.",
      "created_at": "2018-02-09T22:04:04Z",
      "updated_at": "2018-02-09T22:04:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10738#discussion_r167358024",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167358024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10738"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    }
  ]
}