{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
    "id": 16286012,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYyODYwMTI=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4225",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/4225.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/4225.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/65f78a111ff52c2212cc0a423662e7a41d1206dd",
    "number": 4225,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Qt: Add GUI view of peer information. #4133",
    "user": {
      "login": "ashleyholman",
      "id": 549484,
      "node_id": "MDQ6VXNlcjU0OTQ4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashleyholman",
      "html_url": "https://github.com/ashleyholman",
      "followers_url": "https://api.github.com/users/ashleyholman/followers",
      "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
      "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
      "repos_url": "https://api.github.com/users/ashleyholman/repos",
      "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Here is my code which adds a \"Peers\" tab to the debug window.\n\nThe peers table lists just a few columns of detail, and then when you click on a peer it shows all of the detail.  It updates every second while the debug window is open (by doing a full scan of vNodes), and also handles the case where the selected peer gets disconnected.\n\nIf you have any suggestions on which columns should appear in the table, or how to format some of the values, I'm happy to implement them.  I just chose to show Address, Subversion, and Height in the table for now.  The advantage of including fields in the table is that they are sortable, so I guess the table should contain those properties which users are most likely to want to sort by.\n\nThere's a fair bit of code here, so take your time with the review.\n\nThanks.\n",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2014-05-23T17:47:46Z",
    "updated_at": "2021-09-08T10:34:58Z",
    "closed_at": "2014-06-03T09:14:04Z",
    "mergeable_state": "unknown",
    "merged_at": "2014-06-03T09:14:04Z",
    "merge_commit_sha": "d51a816c1a3c0aa9b8839a10966969f9c0ea80fa",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ashleyholman:gui_peers",
      "ref": "gui_peers",
      "sha": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 12082456,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA4MjQ1Ng==",
        "name": "bitcoin",
        "full_name": "ashleyholman/bitcoin",
        "owner": {
          "login": "ashleyholman",
          "id": 549484,
          "node_id": "MDQ6VXNlcjU0OTQ4NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ashleyholman",
          "html_url": "https://github.com/ashleyholman",
          "followers_url": "https://api.github.com/users/ashleyholman/followers",
          "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
          "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
          "repos_url": "https://api.github.com/users/ashleyholman/repos",
          "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ashleyholman/bitcoin",
        "description": "My bitcoin branches",
        "fork": true,
        "url": "https://api.github.com/repos/ashleyholman/bitcoin",
        "archive_url": "https://api.github.com/repos/ashleyholman/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ashleyholman/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ashleyholman/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ashleyholman/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ashleyholman/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ashleyholman/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ashleyholman/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ashleyholman/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ashleyholman/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ashleyholman/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ashleyholman/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ashleyholman/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ashleyholman/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ashleyholman/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ashleyholman/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ashleyholman/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ashleyholman/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ashleyholman/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ashleyholman/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ashleyholman/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ashleyholman/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ashleyholman/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ashleyholman/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ashleyholman/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ashleyholman/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ashleyholman/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ashleyholman/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ashleyholman/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ashleyholman/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ashleyholman/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ashleyholman/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ashleyholman/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ashleyholman/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ashleyholman/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ashleyholman/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ashleyholman/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ashleyholman/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ashleyholman/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ashleyholman/bitcoin/hooks",
        "svn_url": "https://github.com/ashleyholman/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 50124,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2015-07-11T10:30:13Z",
        "created_at": "2013-08-13T13:27:13Z",
        "updated_at": "2018-08-21T18:58:39Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "522a8fa3777486725f06d6bbf5694b9cd32cbcce",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 870,
    "deletions": 12,
    "changed_files": 10,
    "commits": 1,
    "review_comments": 26,
    "comments": 23
  },
  "events": [
    {
      "event": "commented",
      "id": 44044817,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDQ0ODE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44044817",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-23T18:29:10Z",
      "updated_at": "2014-05-23T18:29:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "![github4133](https://cloud.githubusercontent.com/assets/549484/3070325/1f30688c-e2a8-11e3-8781-d0b54764991e.png)\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44044817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44045185,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDQ1MTg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44045185",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-23T18:31:56Z",
      "updated_at": "2014-05-23T18:31:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Relates to issue #4133 \n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44045185",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44078483,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc4NDgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44078483",
      "actor": {
        "login": "wtogami",
        "id": 93665,
        "node_id": "MDQ6VXNlcjkzNjY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wtogami",
        "html_url": "https://github.com/wtogami",
        "followers_url": "https://api.github.com/users/wtogami/followers",
        "following_url": "https://api.github.com/users/wtogami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wtogami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wtogami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
        "organizations_url": "https://api.github.com/users/wtogami/orgs",
        "repos_url": "https://api.github.com/users/wtogami/repos",
        "events_url": "https://api.github.com/users/wtogami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wtogami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T05:38:04Z",
      "updated_at": "2014-05-24T05:38:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Would it be complicated to add a 'Disconnect' and 'Ban' option?  Either buttons or right-click menu?\n",
      "user": {
        "login": "wtogami",
        "id": 93665,
        "node_id": "MDQ6VXNlcjkzNjY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wtogami",
        "html_url": "https://github.com/wtogami",
        "followers_url": "https://api.github.com/users/wtogami/followers",
        "following_url": "https://api.github.com/users/wtogami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wtogami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wtogami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
        "organizations_url": "https://api.github.com/users/wtogami/orgs",
        "repos_url": "https://api.github.com/users/wtogami/repos",
        "events_url": "https://api.github.com/users/wtogami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wtogami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44078483",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44078933,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc4OTMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44078933",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T06:07:09Z",
      "updated_at": "2014-05-24T06:07:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "@wtogami I think I'd be able to do that.  I imagine that such a function should be also added as an RPC call to keep the CLI and GUI capabilities the same?\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44078933",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "mentioned",
      "id": 124478473,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI0NDc4NDcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/124478473",
      "actor": {
        "login": "wtogami",
        "id": 93665,
        "node_id": "MDQ6VXNlcjkzNjY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wtogami",
        "html_url": "https://github.com/wtogami",
        "followers_url": "https://api.github.com/users/wtogami/followers",
        "following_url": "https://api.github.com/users/wtogami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wtogami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wtogami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
        "organizations_url": "https://api.github.com/users/wtogami/orgs",
        "repos_url": "https://api.github.com/users/wtogami/repos",
        "events_url": "https://api.github.com/users/wtogami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wtogami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T06:07:09Z"
    },
    {
      "event": "subscribed",
      "id": 124478474,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNDQ3ODQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/124478474",
      "actor": {
        "login": "wtogami",
        "id": 93665,
        "node_id": "MDQ6VXNlcjkzNjY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wtogami",
        "html_url": "https://github.com/wtogami",
        "followers_url": "https://api.github.com/users/wtogami/followers",
        "following_url": "https://api.github.com/users/wtogami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wtogami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wtogami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
        "organizations_url": "https://api.github.com/users/wtogami/orgs",
        "repos_url": "https://api.github.com/users/wtogami/repos",
        "events_url": "https://api.github.com/users/wtogami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wtogami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T06:07:09Z"
    },
    {
      "event": "commented",
      "id": 44079189,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc5MTg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44079189",
      "actor": {
        "login": "wtogami",
        "id": 93665,
        "node_id": "MDQ6VXNlcjkzNjY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wtogami",
        "html_url": "https://github.com/wtogami",
        "followers_url": "https://api.github.com/users/wtogami/followers",
        "following_url": "https://api.github.com/users/wtogami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wtogami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wtogami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
        "organizations_url": "https://api.github.com/users/wtogami/orgs",
        "repos_url": "https://api.github.com/users/wtogami/repos",
        "events_url": "https://api.github.com/users/wtogami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wtogami/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T06:24:48Z",
      "updated_at": "2014-05-24T06:24:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "RPC too sounds like a great idea.  Would be helpful in debugging certain things.\n\nbannode, unbannode, disconnectnode?\n\nThe parameter could be a domain name but in the case of banning it's resolved and only the IP address is stored.\n\nFor Tor nodes I'm not sure how to handle it.  You can't ban but disconnect would be possible.\n",
      "user": {
        "login": "wtogami",
        "id": 93665,
        "node_id": "MDQ6VXNlcjkzNjY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wtogami",
        "html_url": "https://github.com/wtogami",
        "followers_url": "https://api.github.com/users/wtogami/followers",
        "following_url": "https://api.github.com/users/wtogami/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wtogami/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wtogami/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
        "organizations_url": "https://api.github.com/users/wtogami/orgs",
        "repos_url": "https://api.github.com/users/wtogami/repos",
        "events_url": "https://api.github.com/users/wtogami/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wtogami/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44079189",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNTQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNTc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNjE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNjM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNjU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNjg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 44081742,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgxNzQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44081742",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T08:55:14Z",
      "updated_at": "2014-05-24T08:55:14Z",
      "author_association": "NONE",
      "body": "Pretty cool addition :), nice job!\n",
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44081742",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44082300,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgyMzAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082300",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T09:27:21Z",
      "updated_at": "2014-05-24T09:30:25Z",
      "author_association": "MEMBER",
      "body": "Looks very good!\n\nI think adding Disconnect/Ban functionality would be useful, but let's not do it in this pull request. That functionality would indeed also have to be available on RPC (and the core) first, and that's orthogonal to this nice GUI improvement. Let's aim to merge this first.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082300",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44082461,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgyNDYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082461",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T09:36:49Z",
      "updated_at": "2014-05-24T09:37:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "What's the process on pushing additional patches in response to feedback?  If I push an amended commit, it's hard for you to see what changed.  But if I commit new patches on top, the history will be a bit ugly when merged.\n\nI guess I could make new commits on top for now, and then squash it later once it's ready for merge?\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082461",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44082492,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgyNDky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082492",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T09:38:14Z",
      "updated_at": "2014-05-24T09:38:14Z",
      "author_association": "NONE",
      "body": "@ashleyholman For such a \"big\" patch it's nice to add commits until you got core dev ACKs and can then squash into one.\n",
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082492",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "mentioned",
      "id": 124489601,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI0NDg5NjAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/124489601",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T09:38:14Z"
    },
    {
      "event": "subscribed",
      "id": 124489602,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNDQ4OTYwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/124489602",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T09:38:14Z"
    },
    {
      "event": "commented",
      "id": 44083193,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgzMTkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083193",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T10:16:51Z",
      "updated_at": "2014-05-24T10:16:51Z",
      "author_association": "MEMBER",
      "body": "Pings aren't sent automatically (yet), so the pingtime will be zero unless you explicitly request pings (using the `ping` RPC command).\n\nIf you run together with #2784, you'll pretty much always see ping times.\n\nBy the way, I think ping times (in that case) are more useful to show on the main screen table than startingheight (as that can be very outdated information).\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44083193",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44086808,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg2ODA4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44086808",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-24T13:16:25Z",
      "updated_at": "2014-05-24T13:16:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Here is what it's like with #2784 merged and the Height column replaced with Ping.\n\n![guipeersping](https://cloud.githubusercontent.com/assets/549484/3074563/694ee9f0-e345-11e3-8fba-1793df99b5e9.png)\n\nI've pushed this to my gui_peers_ping branch, but won't include it in this pull unless #2784 is getting merged.\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44086808",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44138813,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM4ODEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44138813",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-25T16:23:47Z",
      "updated_at": "2014-05-25T16:23:47Z",
      "author_association": "MEMBER",
      "body": "I did a bit of testing with this applied, works well for me; a few nits:\n- 'Ban Score' shows as 'Unavailable' for many peers. This seems confusing. It may be better to just report '0' here if the data structure for this isn't created yet.\n- When enlarging the debug window vertically, the line distance between the information entries increases. This looks a bit weird, but I suppose it's a matter of taste. I usually prefer adding a stretch at the end to avoid this.\n- Services: Maybe show the flags expanded as text here, so [NODE_]NETWORK instead of '1'. Although this leaves the question of how to show unknown service bits, maybe UNKNOWN[bit].\n- I think translators will have problems translating the word 'Subversion'. Maybe 'Sub-version'? Or just 'Version'?\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44138813",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44139038,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM5MDM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44139038",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-25T16:29:18Z",
      "updated_at": "2014-05-25T16:29:18Z",
      "author_association": "MEMBER",
      "body": "BIP14 repurposed strSubVer as \"user agent\".\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44139038",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44150459,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUwNDU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44150459",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-26T00:52:53Z",
      "updated_at": "2014-05-26T00:52:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "The ban score being \"Unavailable\" is because there's an extra lock required to get that info.  The rest of the stats require cs_vNodes, but getting the nMisbehaviour requires cs_main.  When TRY_LOCK on cs_main fails, I show \"Unavailable\".  I could show it as 0, but then when it eventually succeeds on the lock, the value will change.  If you click on another peer and then click back on the same peer, it would say 0 again until it can refetch the nMisbehaviour, because I'm only caching nMisbehaviour for the currently selected node.\n\nAs for how to make this meaningful to the user, perhaps I could just leave it blank if it can't be accessed.  Or, it could say \"fetching...\" or something like that until it gets the value?\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44150459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44150837,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUwODM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44150837",
      "actor": {
        "login": "leofidus",
        "id": 4348296,
        "node_id": "MDQ6VXNlcjQzNDgyOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4348296?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leofidus",
        "html_url": "https://github.com/leofidus",
        "followers_url": "https://api.github.com/users/leofidus/followers",
        "following_url": "https://api.github.com/users/leofidus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/leofidus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/leofidus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/leofidus/subscriptions",
        "organizations_url": "https://api.github.com/users/leofidus/orgs",
        "repos_url": "https://api.github.com/users/leofidus/repos",
        "events_url": "https://api.github.com/users/leofidus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/leofidus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-26T01:08:58Z",
      "updated_at": "2014-05-26T01:08:58Z",
      "author_association": "NONE",
      "body": "displaying \"fetching...\" and periodically trying to get the information sounds like a good solution.\n",
      "user": {
        "login": "leofidus",
        "id": 4348296,
        "node_id": "MDQ6VXNlcjQzNDgyOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4348296?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leofidus",
        "html_url": "https://github.com/leofidus",
        "followers_url": "https://api.github.com/users/leofidus/followers",
        "following_url": "https://api.github.com/users/leofidus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/leofidus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/leofidus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/leofidus/subscriptions",
        "organizations_url": "https://api.github.com/users/leofidus/orgs",
        "repos_url": "https://api.github.com/users/leofidus/repos",
        "events_url": "https://api.github.com/users/leofidus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/leofidus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44150837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44152389,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUyMzg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44152389",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-26T02:05:38Z",
      "updated_at": "2014-05-26T02:05:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed an update:\n- Change \"Unavailable\" to \"Fetching...\" when nMisbehaviour can't be read.  If you wait some seconds, you should eventually see the ban score.  It's worse when the lock is busy, such as when synchronising your chain.\n- Added a stretch element to fix up the vertical resize behaviour\n- The \"Services\" field is now formatted verbosely, eg. \"NETWORK & UNKNOWN[2] & ...\" (only scans the last 8 bits for now, as its probably overkill to check all 64 when they're not standardised yet).\n- Renamed \"Subversion\" to \"User Agent\"\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44152389",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44162747,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTYyNzQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44162747",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-26T07:07:21Z",
      "updated_at": "2014-05-26T07:07:21Z",
      "author_association": "MEMBER",
      "body": "@ashleyholman seems like good choices to me\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44162747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "mentioned",
      "id": 124695233,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI0Njk1MjMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/124695233",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-26T07:07:21Z"
    },
    {
      "event": "subscribed",
      "id": 124695234,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNDY5NTIzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/124695234",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-26T07:07:21Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNzI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "mentioned",
      "id": 126682719,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI2NjgyNzE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/126682719",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-31T05:58:10Z"
    },
    {
      "event": "subscribed",
      "id": 126682720,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNjY4MjcyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/126682720",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-31T05:58:10Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNzU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 44842493,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODQyNDkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44842493",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T14:20:43Z",
      "updated_at": "2014-06-02T14:20:43Z",
      "author_association": "MEMBER",
      "body": "ACK. will merge after squash\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44842493",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44850115,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODUwMTE1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44850115",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T15:17:03Z",
      "updated_at": "2014-06-02T15:17:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj There you go.  I avoided rebasing so that my squash can be easily diff'd against the last reviewed commit.  It merges cleanly to master though.\n\nIn regards to signing, should I be doing that, or is that only needed for mainline commits (ie. your merge commit)?  I don't have a PGP identity on any key servers at the moment, but it's something I've been wanting to get set up with.\n",
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44850115",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "mentioned",
      "id": 127070503,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI3MDcwNTAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127070503",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T15:17:03Z"
    },
    {
      "event": "subscribed",
      "id": 127070504,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNzA3MDUwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127070504",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T15:17:03Z"
    },
    {
      "event": "commented",
      "id": 44856729,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU2NzI5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44856729",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T16:05:53Z",
      "updated_at": "2014-06-02T16:05:53Z",
      "author_association": "MEMBER",
      "body": "@ashleyholman Thanks\n\nRe: signing, I always sign the merge commits, but I think it's useful if contributors sign their uppermost commit as well, so that people can check that it's really the contributor's code that was merged and not something manipulated by a compromised github (for example). Once you have a key set up, you can sign your last commit with:\n\n``` bash\ngit commit --amend --gpg-sign[=<keyid>]\n```\n\nThen just push to github as normal.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44856729",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "mentioned",
      "id": 127094986,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI3MDk0OTg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127094986",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T16:05:53Z"
    },
    {
      "event": "subscribed",
      "id": 127094987,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNzA5NDk4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127094987",
      "actor": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T16:05:53Z"
    },
    {
      "event": "commented",
      "id": 44858541,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU4NTQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44858541",
      "actor": {
        "login": "Azulan",
        "id": 895029,
        "node_id": "MDQ6VXNlcjg5NTAyOQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/895029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Azulan",
        "html_url": "https://github.com/Azulan",
        "followers_url": "https://api.github.com/users/Azulan/followers",
        "following_url": "https://api.github.com/users/Azulan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Azulan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Azulan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Azulan/subscriptions",
        "organizations_url": "https://api.github.com/users/Azulan/orgs",
        "repos_url": "https://api.github.com/users/Azulan/repos",
        "events_url": "https://api.github.com/users/Azulan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Azulan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T16:20:53Z",
      "updated_at": "2014-06-02T16:20:53Z",
      "author_association": "NONE",
      "body": "Tested with ipv6?\n",
      "user": {
        "login": "Azulan",
        "id": 895029,
        "node_id": "MDQ6VXNlcjg5NTAyOQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/895029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Azulan",
        "html_url": "https://github.com/Azulan",
        "followers_url": "https://api.github.com/users/Azulan/followers",
        "following_url": "https://api.github.com/users/Azulan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Azulan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Azulan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Azulan/subscriptions",
        "organizations_url": "https://api.github.com/users/Azulan/orgs",
        "repos_url": "https://api.github.com/users/Azulan/repos",
        "events_url": "https://api.github.com/users/Azulan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Azulan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44858541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "commented",
      "id": 44884405,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODg0NDA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44884405",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T20:07:31Z",
      "updated_at": "2014-06-02T20:07:31Z",
      "author_association": "MEMBER",
      "body": "@Azulan Yes, if you could test with ipv6 that'd be helpful\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44884405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "mentioned",
      "id": 127192966,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI3MTkyOTY2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127192966",
      "actor": {
        "login": "Azulan",
        "id": 895029,
        "node_id": "MDQ6VXNlcjg5NTAyOQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/895029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Azulan",
        "html_url": "https://github.com/Azulan",
        "followers_url": "https://api.github.com/users/Azulan/followers",
        "following_url": "https://api.github.com/users/Azulan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Azulan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Azulan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Azulan/subscriptions",
        "organizations_url": "https://api.github.com/users/Azulan/orgs",
        "repos_url": "https://api.github.com/users/Azulan/repos",
        "events_url": "https://api.github.com/users/Azulan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Azulan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T20:07:31Z"
    },
    {
      "event": "subscribed",
      "id": 127192967,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNzE5Mjk2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127192967",
      "actor": {
        "login": "Azulan",
        "id": 895029,
        "node_id": "MDQ6VXNlcjg5NTAyOQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/895029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Azulan",
        "html_url": "https://github.com/Azulan",
        "followers_url": "https://api.github.com/users/Azulan/followers",
        "following_url": "https://api.github.com/users/Azulan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Azulan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Azulan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Azulan/subscriptions",
        "organizations_url": "https://api.github.com/users/Azulan/orgs",
        "repos_url": "https://api.github.com/users/Azulan/repos",
        "events_url": "https://api.github.com/users/Azulan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Azulan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-02T20:07:31Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWY3OGExMTFmZjUyYzIyMTJjYzBhNDIzNjYyZTdhNDFkMTIwNmRk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "tree": {
        "sha": "e3f986034d79e48a13986e1a144a0f7b2a879a7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3f986034d79e48a13986e1a144a0f7b2a879a7f"
      },
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "payload": "tree e3f986034d79e48a13986e1a144a0f7b2a879a7f\nparent 9d97e83bf677ce595c6b2dc5d6805c2fcb1bc05b\nauthor Ashley Holman <dscvlt@gmail.com> 1400864999 -0500\ncommitter Ashley Holman <dscvlt@gmail.com> 1401782854 +0930\n\nQt: Add GUI view of peer information. #4133\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG/MacGPG2 v2.0.20 (Darwin)\n\niQGcBAABAgAGBQJTjYJJAAoJEDVfPwlxLasyTvAMAK0d+C8Ite5MzzeK0SAvcz9Q\nlJG97+EoNaF0RlrC+V3wTIRENZvqXmFBxt5QTi+R/+1iHwOsLy2mwVGqaE0gM7gR\nwBd4DiVLy/gu2d/BiZQ/eItTQZZyT1l18wYyc0jXc7RUoXDIGJ970rqd4mdVZjme\nSW4ZYY8rtSXFkkaZbj/WlfavBzuzxcQ7spp+JiTgDjwFVbtkADwGTEi3nPWOF3zu\n4pB1utCpMQiEbEXPOlKbTmM8nwNJ/tIBq4rO+5aGVQ++E4qWQj4sWCnyrmah/Tv2\nYi77P+Ww1Md+A3inXi+eQEwrTA0N5/he8uyUDZ9igMIatse7/1BIeV6FELy+AeMU\nos1pZABYyJaukG9mwpiYtFCh1QqSNL1aEgbVuRjhJAxe/UmJ00ITYX0HBo0EPHoI\nax7XC0S0L/3Q/8Kf9Zal3m/ABomntxuk09ncEtpKcPP6+HILFemHSxzEhSxiPQ6j\n7UXfDeMh7hX7tXbPGhgAm8JR10mM4vD/nqS1F8LskA==\n=dztm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d97e83bf677ce595c6b2dc5d6805c2fcb1bc05b",
          "sha": "9d97e83bf677ce595c6b2dc5d6805c2fcb1bc05b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9d97e83bf677ce595c6b2dc5d6805c2fcb1bc05b"
        }
      ],
      "message": "Qt: Add GUI view of peer information. #4133",
      "committer": {
        "name": "Ashley Holman",
        "email": "dscvlt@gmail.com",
        "date": "2014-06-03T08:07:34Z"
      },
      "author": {
        "name": "Ashley Holman",
        "email": "dscvlt@gmail.com",
        "date": "2014-05-23T17:09:59Z"
      },
      "sha": "65f78a111ff52c2212cc0a423662e7a41d1206dd"
    },
    {
      "event": "commented",
      "id": 44938883,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTM4ODgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44938883",
      "actor": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T08:44:45Z",
      "updated_at": "2014-06-03T08:44:45Z",
      "author_association": "NONE",
      "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/65f78a111ff52c2212cc0a423662e7a41d1206dd for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "user": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44938883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4225"
    },
    {
      "event": "merged",
      "id": 127381713,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTI3MzgxNzEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127381713",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at": "2014-06-03T09:14:04Z"
    },
    {
      "event": "closed",
      "id": 127381716,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTI3MzgxNzE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127381716",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T09:14:04Z"
    },
    {
      "event": "referenced",
      "id": 127381722,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNzM4MTcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127381722",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4c097f9669a28420da74b159a4d61e509da80d33",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c097f9669a28420da74b159a4d61e509da80d33",
      "created_at": "2014-06-03T09:14:05Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTMyODcwNzg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "mentioned",
      "id": 127431163,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI3NDMxMTYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127431163",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T11:52:10Z"
    },
    {
      "event": "subscribed",
      "id": 127431164,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNzQzMTE2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127431164",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T11:52:10Z"
    },
    {
      "event": "mentioned",
      "id": 127434531,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI3NDM0NTMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127434531",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T12:04:00Z"
    },
    {
      "event": "subscribed",
      "id": 127434532,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNzQzNDUzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127434532",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T12:04:00Z"
    },
    {
      "event": "mentioned",
      "id": 127530260,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI3NTMwMjYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127530260",
      "actor": {
        "login": "leofidus",
        "id": 4348296,
        "node_id": "MDQ6VXNlcjQzNDgyOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4348296?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leofidus",
        "html_url": "https://github.com/leofidus",
        "followers_url": "https://api.github.com/users/leofidus/followers",
        "following_url": "https://api.github.com/users/leofidus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/leofidus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/leofidus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/leofidus/subscriptions",
        "organizations_url": "https://api.github.com/users/leofidus/orgs",
        "repos_url": "https://api.github.com/users/leofidus/repos",
        "events_url": "https://api.github.com/users/leofidus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/leofidus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T15:44:08Z"
    },
    {
      "event": "subscribed",
      "id": 127530261,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNzUzMDI2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/127530261",
      "actor": {
        "login": "leofidus",
        "id": 4348296,
        "node_id": "MDQ6VXNlcjQzNDgyOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4348296?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leofidus",
        "html_url": "https://github.com/leofidus",
        "followers_url": "https://api.github.com/users/leofidus/followers",
        "following_url": "https://api.github.com/users/leofidus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/leofidus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/leofidus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/leofidus/subscriptions",
        "organizations_url": "https://api.github.com/users/leofidus/orgs",
        "repos_url": "https://api.github.com/users/leofidus/repos",
        "events_url": "https://api.github.com/users/leofidus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/leofidus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-03T15:44:08Z"
    },
    {
      "event": "locked",
      "id": 5271414821,
      "node_id": "LOE_lADOABII584CCcyhzwAAAAE6M2gl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271414821",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:34:58Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025379",
      "pull_request_review_id": null,
      "id": 13025379,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Mzc5",
      "diff_hunk": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "path": "src/qt/clientmodel.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Can you keep alphabetical ordering (where possible) of includes, classes etc. throughout your pull please :). Talking about just the file headers (header of .h and .cpp)...\n",
      "created_at": "2014-05-24T08:32:42Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025379",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025385",
      "pull_request_review_id": null,
      "id": 13025385,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Mzg1",
      "diff_hunk": "@@ -750,4 +750,24 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)",
      "path": "src/qt/guiutil.cpp",
      "position": 12,
      "original_position": 4,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't there such a function somewhere already or could we use this in other places? Seems like a common task.\n",
      "created_at": "2014-05-24T08:35:07Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025385",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 754,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025390",
      "pull_request_review_id": null,
      "id": 13025390,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Mzkw",
      "diff_hunk": "@@ -750,4 +750,24 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)\n+{\n+    QString str;\n+    int days = secs / 86400;\n+    int hours = (secs % 86400) / 3600;\n+    int mins = (secs % 3600) / 60;\n+    int seconds = secs % 60;\n+\n+    if (days)\n+        str.append(QString(QObject::tr(\"%1 d \")).arg(days));",
      "path": "src/qt/guiutil.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you remove the space after the unit, this often causes trouble during translation, if there is a space at the end.\n",
      "created_at": "2014-05-24T08:37:50Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025390",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025421",
      "pull_request_review_id": null,
      "id": 13025421,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NDIx",
      "diff_hunk": "@@ -6,7 +6,10 @@\n #include \"ui_rpcconsole.h\"\n \n #include \"clientmodel.h\"\n+#include \"peertablemodel.h\"\n #include \"guiutil.h\"\n+#include \"main.h\"",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Add a newline after guiutil.h as main and util are core headers.\n",
      "created_at": "2014-05-24T08:51:14Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025421",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025424",
      "pull_request_review_id": null,
      "id": 13025424,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NDI0",
      "diff_hunk": "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(QString(\"%1\").arg(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(stats->dPingTime));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ping time is not seconds IMHO, or?\n",
      "created_at": "2014-05-24T08:53:15Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025424",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025427",
      "pull_request_review_id": null,
      "id": 13025427,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NDI3",
      "diff_hunk": "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 176,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Can you exclude HTML tags from translations please.\n",
      "created_at": "2014-05-24T08:53:51Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025427",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025539",
      "pull_request_review_id": null,
      "id": 13025539,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NTM5",
      "diff_hunk": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "path": "src/qt/clientmodel.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the part about alphabetical ordering mentioned anywhere in the coding style guides? If not, it should be, as otherwise it's not realistic to expect people to do it.\n",
      "created_at": "2014-05-24T09:28:31Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025633",
      "pull_request_review_id": null,
      "id": 13025633,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NjMz",
      "diff_hunk": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "path": "src/qt/clientmodel.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Most likely it's not, but I remeber a big cleanup pull by someone and we liked it :).\n",
      "created_at": "2014-05-24T09:30:26Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025633",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025728",
      "pull_request_review_id": null,
      "id": 13025728,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NzI4",
      "diff_hunk": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "path": "src/qt/clientmodel.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should hopefully be fixed in my new commit.  Note that I have followed the format of some of the other .cpp files where they include their own .h first on a separate line, then group the others alphabetically.\n",
      "created_at": "2014-05-24T10:01:53Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025734",
      "pull_request_review_id": null,
      "id": 13025734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NzM0",
      "diff_hunk": "@@ -750,4 +750,24 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)",
      "path": "src/qt/guiutil.cpp",
      "position": 12,
      "original_position": 4,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "RPCConsole::setTrafficGraphRange() had similar code which I replaced with this new util function.  There is similar code in BitcoinGUI::setNumBlocks() but it formats the string differently and uses less precision.\n",
      "created_at": "2014-05-24T10:04:26Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025734",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 754,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025756",
      "pull_request_review_id": null,
      "id": 13025756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NzU2",
      "diff_hunk": "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(QString(\"%1\").arg(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(stats->dPingTime));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wasn't able to test this because I'm yet to come across a peer that has a non-zero dPingTime.  I'm not sure why this is, as I thought most nodes should support that by now.  It gets calculated like this: (((double)nPingUsecTime) / 1e6), so I interpreted that to mean its the number of seconds as a floating point.\n",
      "created_at": "2014-05-24T10:11:59Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025756",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025775",
      "pull_request_review_id": null,
      "id": 13025775,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Nzc1",
      "diff_hunk": "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(QString(\"%1\").arg(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(stats->dPingTime));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "dPingTime is in seconds, indeed.\n",
      "created_at": "2014-05-24T10:19:16Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13119124",
      "pull_request_review_id": null,
      "id": 13119124,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTE5MTI0",
      "diff_hunk": "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 191,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a specific reason to collect the ban score here, instead of in PeerTableModel's refreshPeers()? To me it seems like this would be the responsibility of the model, not the view.\n",
      "created_at": "2014-05-28T07:51:56Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13119124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13119124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 626,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176329",
      "pull_request_review_id": null,
      "id": 13176329,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTc2MzI5",
      "diff_hunk": "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 191,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently the state stats, which contains the ban score, is only being retrieved for the one peer thats selected (if one is selected).  The model is not aware of which one is selected, so refreshPeers() would have to get the CStateStats for every peer and store them as it does with the CNodeStats records, which I will happily do if that's cleaner.  The return type of PeerTableModel::getNodeStats() would need to change in that case, so that it returns both the CNodeStats and CNodeStateStats.  How would I best define a type for that?\n",
      "created_at": "2014-05-29T11:03:01Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 626,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176387",
      "pull_request_review_id": null,
      "id": 13176387,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTc2Mzg3",
      "diff_hunk": "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 191,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could pass two references instead of using the one return type?\n",
      "created_at": "2014-05-29T11:06:00Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176387",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 626,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13227585",
      "pull_request_review_id": null,
      "id": 13227585,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjI3NTg1",
      "diff_hunk": "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 191,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think retrieving all the data is refreshPeers is cleanest. You could define a data structure for the model that contains both a CNodeStats and a CNodeStateStats or use a std::pair if lazy :) \n\nUnless you think this has a large impact on performance, but I don't think so, it is only a little bit extra data that gets copied.\n\nAlternatively: add a function getNodeStateStats(id) to the PeerTableModel that retrieves this data and returns a CNodeStateStats, then just move the code and call it from here. All the code to access core data structures happens from the model then, and that's good enough for me.\n",
      "created_at": "2014-05-30T13:10:26Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13227585",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13227585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 626,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13259591",
      "pull_request_review_id": null,
      "id": 13259591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjU5NTkx",
      "diff_hunk": "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 191,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@laanwj: my latest patch moves it into refreshPeers()\n",
      "created_at": "2014-05-31T05:58:10Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13259591",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13259591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 626,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265616",
      "pull_request_review_id": null,
      "id": 13265616,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjY1NjE2",
      "diff_hunk": "@@ -492,3 +508,158 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStats.statestats.nMisbehavior = -1;\n+\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodestats.nodeid = stats->nodestats.nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeCombinedStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodestats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodestats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodestats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nodestats.nLastSend);\n+        if (detailNodeStats.nodestats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nLastRecv);\n+        if (detailNodeStats.nodestats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)\n+{\n+    CNodeStats stats = combinedStats->nodestats;\n+\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nodestats.nLastSend = stats.nLastSend;\n+    detailNodeStats.nodestats.nLastRecv = stats.nLastRecv;\n+    detailNodeStats.nodestats.nTimeConnected = stats.nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats.addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats.nServices));\n+    ui->peerLastSend->setText(stats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats.nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats.nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats.nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats.nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats.nTimeConnected));\n+    ui->peerPingTime->setText(stats.dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats.dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats.nVersion));\n+    ui->peerSubversion->setText(QString(stats.cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats.nStartingHeight));\n+    ui->peerSyncNode->setText(stats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score\n+    CNodeStateStats statestats = combinedStats->statestats;\n+    if (statestats.nMisbehavior >= 0)\n+    {\n+        LogPrintf(\"UPDATING CACHE COS WE GOT A NEW BAN SCORE\\n\");",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 196,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "cf4196479371f7df9eb1f6924502a02c08eabb0d",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This must be a debugging leftover? :)\n",
      "created_at": "2014-06-01T08:05:07Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265616",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265632",
      "pull_request_review_id": null,
      "id": 13265632,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjY1NjMy",
      "diff_hunk": "@@ -492,3 +508,158 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStats.statestats.nMisbehavior = -1;\n+\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodestats.nodeid = stats->nodestats.nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeCombinedStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodestats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodestats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodestats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nodestats.nLastSend);\n+        if (detailNodeStats.nodestats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nLastRecv);\n+        if (detailNodeStats.nodestats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)\n+{\n+    CNodeStats stats = combinedStats->nodestats;\n+\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nodestats.nLastSend = stats.nLastSend;\n+    detailNodeStats.nodestats.nLastRecv = stats.nLastRecv;\n+    detailNodeStats.nodestats.nTimeConnected = stats.nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats.addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats.nServices));\n+    ui->peerLastSend->setText(stats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats.nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats.nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats.nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats.nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats.nTimeConnected));\n+    ui->peerPingTime->setText(stats.dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats.dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats.nVersion));\n+    ui->peerSubversion->setText(QString(stats.cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats.nStartingHeight));\n+    ui->peerSyncNode->setText(stats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score\n+    CNodeStateStats statestats = combinedStats->statestats;\n+    if (statestats.nMisbehavior >= 0)\n+    {\n+        LogPrintf(\"UPDATING CACHE COS WE GOT A NEW BAN SCORE\\n\");",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 196,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "cf4196479371f7df9eb1f6924502a02c08eabb0d",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Haha, oops.  Pushed a new commit to remove that.  I will squash all these patches into one commit and sign it once it's ready for merge.\n",
      "created_at": "2014-06-01T08:11:25Z",
      "updated_at": "2014-06-03T08:08:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265632",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13329189",
      "pull_request_review_id": null,
      "id": 13329189,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzI5MTg5",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What are these?\n",
      "created_at": "2014-06-03T11:25:11Z",
      "updated_at": "2014-06-03T11:25:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13329189",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13329189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330027",
      "pull_request_review_id": null,
      "id": 13330027,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwMDI3",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@Diapolo Which lines specifically?  Github is highlighting a lot there so I can't tell which parts you mean.\n",
      "created_at": "2014-06-03T11:52:10Z",
      "updated_at": "2014-06-03T11:52:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330112",
      "pull_request_review_id": null,
      "id": 13330112,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwMTEy",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Exactly that line `/*@}*/` and at the beginning of the comment :).\n",
      "created_at": "2014-06-03T11:55:19Z",
      "updated_at": "2014-06-03T11:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330112",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330414",
      "pull_request_review_id": null,
      "id": 13330414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwNDE0",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@diapolo A doxygen grouping comment\nEdit: see http://www.stack.nl/~dimitri/doxygen/manual/grouping.html\n",
      "created_at": "2014-06-03T12:04:00Z",
      "updated_at": "2014-06-03T12:04:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330423",
      "pull_request_review_id": null,
      "id": 13330423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwNDIz",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ashleyholman",
        "id": 549484,
        "node_id": "MDQ6VXNlcjU0OTQ4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ashleyholman",
        "html_url": "https://github.com/ashleyholman",
        "followers_url": "https://api.github.com/users/ashleyholman/followers",
        "following_url": "https://api.github.com/users/ashleyholman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ashleyholman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ashleyholman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
        "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
        "repos_url": "https://api.github.com/users/ashleyholman/repos",
        "events_url": "https://api.github.com/users/ashleyholman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, I'm not sure what the deal is with those, but they are in the other model code that I based this on.\n\n<pre>$ git grep -F '/*@}*/'\nsrc/qt/addresstablemodel.h:    /*@}*/\nsrc/qt/peertablemodel.h:    /*@}*/\nsrc/qt/recentrequeststablemodel.h:    /*@}*/</pre>\n",
      "created_at": "2014-06-03T12:04:18Z",
      "updated_at": "2014-06-03T12:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330423",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13339669",
      "pull_request_review_id": null,
      "id": 13339669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzM5NjY5",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "leofidus",
        "id": 4348296,
        "node_id": "MDQ6VXNlcjQzNDgyOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4348296?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/leofidus",
        "html_url": "https://github.com/leofidus",
        "followers_url": "https://api.github.com/users/leofidus/followers",
        "following_url": "https://api.github.com/users/leofidus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/leofidus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/leofidus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/leofidus/subscriptions",
        "organizations_url": "https://api.github.com/users/leofidus/orgs",
        "repos_url": "https://api.github.com/users/leofidus/repos",
        "events_url": "https://api.github.com/users/leofidus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/leofidus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the `@name` puts a descriptive name to all the code enclosed between `@{` and `@}` in the doxygen documentation. But I think it has to be `/**@}*/` to be correctly recognized.\n",
      "created_at": "2014-06-03T15:13:49Z",
      "updated_at": "2014-06-03T15:13:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13339669",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13339669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13341590",
      "pull_request_review_id": null,
      "id": 13341590,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzQxNTkw",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "path": "src/qt/peertablemodel.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_commit_id": "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@leofidus  It appears to work see https://dev.visucore.com/bitcoin/doxygen/class_peer_table_model.html, under Public Member Functions.\n",
      "created_at": "2014-06-03T15:44:08Z",
      "updated_at": "2014-06-03T15:44:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13341590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13341590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}