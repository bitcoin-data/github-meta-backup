{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836",
    "id": 271169972,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcxMTY5OTcy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15836",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/15836.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/15836.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b94292a7cb18f0ea482ec62c08d1050c77de04b2",
    "number": 15836,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add feerate histogram to getmempoolinfo",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This follows the approach of adding statistical information to Bitcoin Core that would otherwise be inefficient to calculate outside of the codebase.\r\n\r\nAdds an optional feerate histogram to `getmempoolinfo`.\r\n\r\nThe concept and code is heavily inspired by the stats @jhoenicke  runs (https://github.com/jhoenicke/mempool).\r\n\r\nIf someone has a good idea how to make the feerate-groups dynamic but also semi-constant for similar fee environments, please comment.\r\n\r\nIf this is feature we'd like to have in master (concept ACKs), I'd continue this with writing tests.\r\n\r\nA simple plot of the data is [here](https://bitcointools.jonasschnelli.ch/mempool-histogram/).\r\nRPC output sample is [here](https://gist.github.com/jonasschnelli/f5b8a701375c280b65842f44e4f6c046).",
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-04-17T06:16:01Z",
    "updated_at": "2022-08-18T18:33:10Z",
    "closed_at": "2021-08-18T07:51:25Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "5b5695dfebf8a6518946bd1bca7390922625680f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jonasschnelli:2019/04/feeinfo",
      "ref": "2019/04/feeinfo",
      "sha": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 9264454,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjY0NDU0",
        "name": "bitcoin",
        "full_name": "jonasschnelli/bitcoin",
        "owner": {
          "login": "jonasschnelli",
          "id": 178464,
          "node_id": "MDQ6VXNlcjE3ODQ2NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasschnelli",
          "html_url": "https://github.com/jonasschnelli",
          "followers_url": "https://api.github.com/users/jonasschnelli/followers",
          "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
          "repos_url": "https://api.github.com/users/jonasschnelli/repos",
          "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasschnelli/bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/jonasschnelli/bitcoin",
        "archive_url": "https://api.github.com/repos/jonasschnelli/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasschnelli/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasschnelli/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasschnelli/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jonasschnelli/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasschnelli/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasschnelli/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasschnelli/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasschnelli/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jonasschnelli/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jonasschnelli/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasschnelli/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasschnelli/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasschnelli/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasschnelli/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasschnelli/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jonasschnelli/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasschnelli/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/hooks",
        "svn_url": "https://github.com/jonasschnelli/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 194164,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-08-07T18:33:53Z",
        "created_at": "2013-04-06T18:21:51Z",
        "updated_at": "2023-05-19T06:34:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "459baa1756b7f2d10d261daa0d0f5f4b91cef21f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1225,
    "deletions": 8,
    "changed_files": 8,
    "commits": 2,
    "review_comments": 24,
    "comments": 13
  },
  "events": [
    {
      "event": "labeled",
      "id": 2281694009,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyODE2OTQwMDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2281694009",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-17T06:16:01Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 2281694010,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyODE2OTQwMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2281694010",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-17T06:16:01Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "mentioned",
      "id": 2281694048,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjI4MTY5NDA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2281694048",
      "actor": {
        "login": "jhoenicke",
        "id": 897826,
        "node_id": "MDQ6VXNlcjg5NzgyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jhoenicke",
        "html_url": "https://github.com/jhoenicke",
        "followers_url": "https://api.github.com/users/jhoenicke/followers",
        "following_url": "https://api.github.com/users/jhoenicke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jhoenicke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jhoenicke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
        "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
        "repos_url": "https://api.github.com/users/jhoenicke/repos",
        "events_url": "https://api.github.com/users/jhoenicke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-17T06:16:03Z"
    },
    {
      "event": "subscribed",
      "id": 2281694050,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyODE2OTQwNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2281694050",
      "actor": {
        "login": "jhoenicke",
        "id": 897826,
        "node_id": "MDQ6VXNlcjg5NzgyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jhoenicke",
        "html_url": "https://github.com/jhoenicke",
        "followers_url": "https://api.github.com/users/jhoenicke/followers",
        "following_url": "https://api.github.com/users/jhoenicke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jhoenicke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jhoenicke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
        "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
        "repos_url": "https://api.github.com/users/jhoenicke/repos",
        "events_url": "https://api.github.com/users/jhoenicke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-17T06:16:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2281833283,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjI4MTgzMzI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2281833283",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-17T07:28:25Z"
    },
    {
      "event": "reviewed",
      "id": 227749976,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzQ5OTc2",
      "url": null,
      "actor": null,
      "commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nI think that out-of-the-box we can expose some stats like this.\r\n\r\nI think it may be useful to include the current timestamp in the response - some client can just run a cron script to call `getmempoolinfo` and store it (without changing the JSON response).",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-227749976",
      "submitted_at": "2019-04-17T13:34:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "reviewed",
      "id": 227759760,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzU5NzYw",
      "url": null,
      "actor": null,
      "commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-227759760",
      "submitted_at": "2019-04-17T13:40:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "reviewed",
      "id": 227780197,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzgwMTk3",
      "url": null,
      "actor": null,
      "commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Useful addition :+1: . Tested RPC output and help man output. Agree with @promag on the current timestamp. Perhaps go with a name-based argument e.g. `fee_histogram=true` from the start?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-227780197",
      "submitted_at": "2019-04-17T14:18:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "commented",
      "id": 484552109,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDU1MjEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484552109",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-18T15:14:45Z",
      "updated_at": "2019-11-23T01:54:21Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17564](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17564.html) (rpc: Use mempool from node context instead of global by MarcoFalke)\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-484552109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "reviewed",
      "id": 228506896,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4NTA2ODk2",
      "url": null,
      "actor": null,
      "commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-228506896",
      "submitted_at": "2019-04-18T21:07:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "reviewed",
      "id": 228507367,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4NTA3MzY3",
      "url": null,
      "actor": null,
      "commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-228507367",
      "submitted_at": "2019-04-18T21:08:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2296314484,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjI5NjMxNDQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2296314484",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-24T07:54:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2331057326,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjMzMTA1NzMyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2331057326",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-09T18:18:04Z"
    },
    {
      "event": "commented",
      "id": 492409851,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQwOTg1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492409851",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-14T21:06:39Z",
      "updated_at": "2019-05-14T21:06:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK / tACK 9ef932513f0c606d019524983a238def3a300810",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-492409851",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "commented",
      "id": 499886548,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTg4NjU0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499886548",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-07T13:34:04Z",
      "updated_at": "2019-06-07T13:34:16Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. This gives me a new warning on build:\r\n```\r\n/home/user/src/bitcoin/src/rpc/blockchain.cpp:1550:9: warning: acquiring mutex 'pool.cs' that is already held [-Wthread-safety-analysis]\r\n        LOCK(pool.cs);\r\n        ^\r\n/home/user/src/bitcoin/src/sync.h:182:42: note: expanded from macro 'LOCK'\r\n#define LOCK(cs) DebugLock<decltype(cs)> PASTE2(criticalblock, __COUNTER__)(cs, #cs, __FILE__, __LINE__)\r\n                                         ^\r\n/home/user/src/bitcoin/src/sync.h:180:22: note: expanded from macro 'PASTE2'\r\n#define PASTE2(x, y) PASTE(x, y)\r\n                     ^\r\n/home/user/src/bitcoin/src/sync.h:179:21: note: expanded from macro 'PASTE'\r\n#define PASTE(x, y) x ## y\r\n                    ^\r\n<scratch space>:138:1: note: expanded from here\r\ncriticalblock23\r\n^\r\n1 warning generated.\r\n```",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-499886548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "labeled",
      "id": 2470947247,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI0NzA5NDcyNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2470947247",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-09T23:41:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2488821052,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQ4ODgyMTA1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2488821052",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-17T09:40:46Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTczNjM1ODM1ZGYyMmU3MTE5Y2E2MDY0M2QzOGJmNmVkMTgxMjQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e573635835df22e7119ca60643d38bf6ed181247",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e573635835df22e7119ca60643d38bf6ed181247",
      "tree": {
        "sha": "927b8559d8d92402b994a30b1b079460e3bdaaff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/927b8559d8d92402b994a30b1b079460e3bdaaff"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 927b8559d8d92402b994a30b1b079460e3bdaaff\nparent 459baa1756b7f2d10d261daa0d0f5f4b91cef21f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1555412159 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1563356516 +0200\n\nAdd option to return fee histogram in getmempoolinfo\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl0u7WUACgkQHrd2uwPH\nki3dUA/9FDql6BxMW56cuXd2WCkfpRtgnR107JwM5t6uV067VjcVzqph6DCt6cho\nNrXBAzd6iaO0BIeUQ5rxMjXMHNbDGLZW6B/sQiF8H4i6KM1q+0DBMBdfC3FqX4bP\nz0SnCKSMHuxYafUHYtlV6j+LQwxTRHYinEhY6XTna65tArXqWosMH6LLFXsPuskX\nU+efjh8QUr7FTQxp//ejisp0BLJYL4XyDJNGkLSY1sTDzIhFBT0sDvRkGylfuDQX\n5dYoA3/SuqnrlK0U/GD6ZXjmFjDtdg4ROn/8CyvC7WU4U7h0ALkdQfqiJePDYDpR\nF1XsLw0LzLYorgk/Uf+8SyJb1q+n1NqUTay1etmIkVQXVPVo4C2tZZWX644SFA7D\nSasKH0uFr6NmWAKs30usRiIPpsB0FsrPB1JvGrdgM9Z3Td0legqL5ukAXZUWgMTD\nu1FROaJLWN1aHHgKXW9yG0prLKVzRl7CxFUKUu+MD4MFYLeWmfdbZjPHEyEUarTq\n8CYf2ipe70jL9P3axj+6krS5t/WwuSpn4dIlIamHL5IIXTzCkomUPOlbSTCUTRPE\n7Bm4/7TFMuyICmOcezcIFEVMMOxc91/aUSycMmCM6b9toogbvGiTVeiWa5emhcuz\n8AUdqOLovXBrBJC+98F/VQBdKL00FfyqTYX1kYPDS9eL8VkzBPU=\n=1S3O\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459baa1756b7f2d10d261daa0d0f5f4b91cef21f",
          "sha": "459baa1756b7f2d10d261daa0d0f5f4b91cef21f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/459baa1756b7f2d10d261daa0d0f5f4b91cef21f"
        }
      ],
      "message": "Add option to return fee histogram in getmempoolinfo",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-07-17T09:41:56Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-04-16T10:55:59Z"
      },
      "sha": "e573635835df22e7119ca60643d38bf6ed181247"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTQyOTJhN2NiMThmMGVhNDgyZWM2MmMwOGQxMDUwYzc3ZGUwNGIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "tree": {
        "sha": "adfbd84d6304d75068508aea25975b52f84f6f93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adfbd84d6304d75068508aea25975b52f84f6f93"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree adfbd84d6304d75068508aea25975b52f84f6f93\nparent e573635835df22e7119ca60643d38bf6ed181247\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1555412362 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1563356522 +0200\n\nAdd mempool/fee_histogram option to rest API\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl0u7WoACgkQHrd2uwPH\nki2KPBAApWiJMbARJJGpN/shVvfedz21j74p+fxrv8lnBU/k6KNreDv+jOI1nNHY\nb2Q5MkjDtSXDdkXHx2VWBg4amSAZ9koVZtDywZwNyARcIe+ieXghhvYKj9eY2e+8\nNEOVJKNSxDdANdBUKRgI/qDFHwXVqkAKyO/V8k00NJf+yCs0SzkXkeJ/yw/WFSLS\ncQ3T1swvRqH6nEmjMkIIm+bMdaotHZP88MnAJCIzq2nOA+CbwSfpVH+HU1bb94gD\nM9RWjQlShqAmomWfVZt8KbMmVliGm6qcxxfe5CBLeu9DbyVV1XP247bTXZYIp83V\nPJZXUs8NEdoCBTdGMJGCgEs7xc4ghGzOt+JMoOgaTepdgc87OkcTUq6qMJFwHGNk\nZh37nTpz2nrMokKWp+XbmltCS23FLMqR/8xOVAAQsUMhWJFNVhpIdOWn6FV2Q8QF\n78kvnjBFUGpoI7jlmZoqDCmkW08zMcZgFc3BiBNVj38Z+7TUVOUaK8LQ5F9CgyLY\nRCqO8NqrEuHdvp/pj9tmtsJOcvsryae8o32KhRq8UvvAiDpJP/ESS5xzHZAx2ut1\n8hDSU0nYbFqnhm3xZv3eoRuS+fFLCXMXm1avTNTUZq+PkSVTxg2Vw0eVmFCY47Ik\nCYgVXzNpX2zsQN1TD/aU8TJh0WKKBNJIwZCnPzR8Duy9OXWivkU=\n=BWT+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e573635835df22e7119ca60643d38bf6ed181247",
          "sha": "e573635835df22e7119ca60643d38bf6ed181247",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e573635835df22e7119ca60643d38bf6ed181247"
        }
      ],
      "message": "Add mempool/fee_histogram option to rest API",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-07-17T09:42:02Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-04-16T10:59:22Z"
      },
      "sha": "b94292a7cb18f0ea482ec62c08d1050c77de04b2"
    },
    {
      "event": "commented",
      "id": 512182997,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE4Mjk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512182997",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-17T09:43:45Z",
      "updated_at": "2019-07-17T09:43:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed the lock issue.\r\nRebased.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-512182997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2488830450,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQ4ODgzMDQ1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2488830450",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-17T09:44:02Z"
    },
    {
      "event": "unlabeled",
      "id": 2488951018,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjQ4ODk1MTAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2488951018",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-17T10:28:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 262934461,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjYyOTM0NDYx",
      "url": null,
      "actor": null,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks good, here's a test for your consideration ~~2509daf8061c307d965e53f27518998bd54770f8~~ 0b6ba66238c377116bc6c21e19cffbf1b6dfc788.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-262934461",
      "submitted_at": "2019-07-17T11:19:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "labeled",
      "id": 2673041117,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI2NzMwNDExMTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2673041117",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-09-30T12:22:31Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "labeled",
      "id": 2887632012,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4ODc2MzIwMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2887632012",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-16T21:54:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 566261646,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjI2MTY0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566261646",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-16T21:54:53Z",
      "updated_at": "2019-12-16T21:54:53Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-566261646",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "reviewed",
      "id": 427626459,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NjI2NDU5",
      "url": null,
      "actor": null,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-427626459",
      "submitted_at": "2020-06-10T00:07:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "commented",
      "id": 707016447,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzAxNjQ0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707016447",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-12T09:55:46Z",
      "updated_at": "2020-10-12T09:55:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, it would be super useful",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-707016447",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "reviewed",
      "id": 536073777,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDczNzc3",
      "url": null,
      "actor": null,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. This would be useful.\r\n\r\nI tested the rpc, help man output and created a plot for the output from my node: [mempool.png](https://user-images.githubusercontent.com/8077169/99908069-a061ea00-2ce0-11eb-89e4-2f21b1f3375e.png)\r\nIf anyone else wants to try this i used this script: https://gist.github.com/dergoegge/ec73e0de2d858d2e75bf31a6a7b3e6b2\r\n\r\n@jonasschnelli I also rebased this for you here: https://github.com/dergoegge/bitcoin/tree/histogram_rebase",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-536073777",
      "submitted_at": "2020-11-22T15:41:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "commented",
      "id": 763030901,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzAzMDkwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/763030901",
      "actor": {
        "login": "shesek",
        "id": 877904,
        "node_id": "MDQ6VXNlcjg3NzkwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shesek",
        "html_url": "https://github.com/shesek",
        "followers_url": "https://api.github.com/users/shesek/followers",
        "following_url": "https://api.github.com/users/shesek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/shesek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/shesek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
        "organizations_url": "https://api.github.com/users/shesek/orgs",
        "repos_url": "https://api.github.com/users/shesek/repos",
        "events_url": "https://api.github.com/users/shesek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/shesek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-19T18:20:49Z",
      "updated_at": "2021-01-19T18:23:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, I will be using this if available for both [bwt](https://github.com/bwt-dev/bwt) and [esplora/electrs](https://github.com/blockstream/esplora). Electrum Personal Server can [also benefit from it](https://github.com/chris-belcher/electrum-personal-server/issues/96).",
      "user": {
        "login": "shesek",
        "id": 877904,
        "node_id": "MDQ6VXNlcjg3NzkwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shesek",
        "html_url": "https://github.com/shesek",
        "followers_url": "https://api.github.com/users/shesek/followers",
        "following_url": "https://api.github.com/users/shesek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/shesek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/shesek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
        "organizations_url": "https://api.github.com/users/shesek/orgs",
        "repos_url": "https://api.github.com/users/shesek/repos",
        "events_url": "https://api.github.com/users/shesek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/shesek/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-763030901",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "commented",
      "id": 792070533,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjA3MDUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792070533",
      "actor": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T21:57:14Z",
      "updated_at": "2021-03-12T14:37:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jonasschnelli This https://github.com/kiminuo/bitcoin/tree/feature/2021-03-Feerate-histogram is an attempt to do the rebase work and apply a few review comments:\r\n\r\n**Applied review comments**\r\n\r\n* https://github.com/bitcoin/bitcoin/pull/15836#discussion_r304327165 - \"Remove these files and maybe update .gitignore?\"\r\n* https://github.com/bitcoin/bitcoin/pull/15836#discussion_r304346834 - \"This must be before the above line (order is important) otherwise `rest_mempool_info_with_fee_histogram` is never called.\"\r\n* https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-499886548 - \"This gives me a new warning on build: [...]\" This is already addressed, I believe.\r\n* https://github.com/bitcoin/bitcoin/pull/15836#discussion_r588927756 - Simplify `if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {`\r\n* https://github.com/bitcoin/bitcoin/commit/0b6ba66238c377116bc6c21e19cffbf1b6dfc788 - Test proposed by @promag\r\n\r\n**Test commands**\r\n\r\n```bash\r\n$ ./bitcoin-cli -testnet getmempoolinfo true # To test the new behavior\r\n```\r\n\r\n```bash\r\n$ test/functional/test_runner.py mempool_fee_histogram.py # To run the new test\r\n```\r\n\r\n```bash\r\n$ ./bitcoin-cli -testnet help getmempoolinfo # bitcoind has to run for this command to succeed :(\r\ngetmempoolinfo ( with_fee_histogram )\r\n\r\nReturns details on the active state of the TX memory pool.\r\n\r\nArguments:\r\n1. with_fee_histogram    (boolean, optional, default=false) True for including the fee histogram in the response\r\n\r\nResult:\r\n{                            (json object)\r\n  \"loaded\" : true|false,     (boolean) True if the mempool is fully loaded\r\n  \"size\" : n,                (numeric) Current tx count\r\n  \"bytes\" : n,               (numeric) Sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size because witness data is discounted\r\n  \"usage\" : n,               (numeric) Total memory usage for the mempool\r\n  \"total_fee\" : n,           (numeric) Total fees for the mempool in BTC, ignoring modified fees through prioritizetransaction\r\n  \"maxmempool\" : n,          (numeric) Maximum memory usage for the mempool\r\n  \"mempoolminfee\" : n,       (numeric) Minimum fee rate in BTC/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\r\n  \"minrelaytxfee\" : n,       (numeric) Current minimum relay fee for transactions\r\n  \"unbroadcastcount\" : n,    (numeric) Current number of transactions that haven't passed initial broadcast yet\r\n  \"fee_histogram\" : {        (json object)\r\n    \"<feerate-group>\" : {    (json object) Object per feerate group\r\n      \"sizes\" : n,           (numeric) Cumulated size of all transactions in feerate group\r\n      \"count\" : n,           (numeric) Amount of transactions in feerate group\r\n      \"fees\" : n,            (numeric) Cumulated fee of all transactions in feerate group\r\n      \"from_feerate\" : n,    (numeric) Group contains transaction with feerates equal or greater than this value\r\n      \"to_feerate\" : n       (numeric) Group contains transaction with feerates less than than this value\r\n    },\r\n    \"total_fees\" : n         (numeric) Total available fees in mempool\r\n  }\r\n}\r\n\r\nExamples:\r\n> bitcoin-cli getmempoolinfo\r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getmempoolinfo\", \"params\": []}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n```\r\n\r\n**Output on testnet (2021-03-07)**\r\n\r\n```bash\r\n./bitcoin-cli -testnet getmempoolinfo true\r\n```\r\n\r\n<details>\r\n  <summary>JSON output</summary>\r\n\r\n  ```json\r\n    {\r\n      \"loaded\": true,\r\n      \"size\": 73,\r\n      \"bytes\": 19620,\r\n      \"usage\": 108816,\r\n      \"total_fee\": 0.00833952,\r\n      \"maxmempool\": 300000000,\r\n      \"mempoolminfee\": 0.00001000,\r\n      \"minrelaytxfee\": 0.00001000,\r\n      \"unbroadcastcount\": 0,\r\n      \"fee_histogram\": {\r\n        \"1\": {\r\n          \"sizes\": 6615,\r\n          \"count\": 38,\r\n          \"fees\": 7817,\r\n          \"from_feerate\": 1,\r\n          \"to_feerate\": 2\r\n        },\r\n        \"2\": {\r\n          \"sizes\": 1553,\r\n          \"count\": 5,\r\n          \"fees\": 3852,\r\n          \"from_feerate\": 2,\r\n          \"to_feerate\": 3\r\n        },\r\n        \"3\": {\r\n          \"sizes\": 251,\r\n          \"count\": 2,\r\n          \"fees\": 784,\r\n          \"from_feerate\": 3,\r\n          \"to_feerate\": 4\r\n        },\r\n        \"4\": {\r\n          \"sizes\": 285,\r\n          \"count\": 2,\r\n          \"fees\": 1356,\r\n          \"from_feerate\": 4,\r\n          \"to_feerate\": 5\r\n        },\r\n        \"5\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 5,\r\n          \"to_feerate\": 6\r\n        },\r\n        \"6\": {\r\n          \"sizes\": 166,\r\n          \"count\": 1,\r\n          \"fees\": 1130,\r\n          \"from_feerate\": 6,\r\n          \"to_feerate\": 7\r\n        },\r\n        \"7\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 7,\r\n          \"to_feerate\": 8\r\n        },\r\n        \"8\": {\r\n          \"sizes\": 225,\r\n          \"count\": 1,\r\n          \"fees\": 2000,\r\n          \"from_feerate\": 8,\r\n          \"to_feerate\": 10\r\n        },\r\n        \"10\": {\r\n          \"sizes\": 168,\r\n          \"count\": 1,\r\n          \"fees\": 1808,\r\n          \"from_feerate\": 10,\r\n          \"to_feerate\": 12\r\n        },\r\n        \"12\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 12,\r\n          \"to_feerate\": 14\r\n        },\r\n        \"14\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 14,\r\n          \"to_feerate\": 17\r\n        },\r\n        \"17\": {\r\n          \"sizes\": 1581,\r\n          \"count\": 1,\r\n          \"fees\": 31200,\r\n          \"from_feerate\": 17,\r\n          \"to_feerate\": 20\r\n        },\r\n        \"20\": {\r\n          \"sizes\": 332,\r\n          \"count\": 2,\r\n          \"fees\": 8040,\r\n          \"from_feerate\": 20,\r\n          \"to_feerate\": 25\r\n        },\r\n        \"25\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 25,\r\n          \"to_feerate\": 30\r\n        },\r\n        \"30\": {\r\n          \"sizes\": 2037,\r\n          \"count\": 4,\r\n          \"fees\": 64410,\r\n          \"from_feerate\": 30,\r\n          \"to_feerate\": 40\r\n        },\r\n        \"40\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 40,\r\n          \"to_feerate\": 50\r\n        },\r\n        \"50\": {\r\n          \"sizes\": 2768,\r\n          \"count\": 4,\r\n          \"fees\": 143913,\r\n          \"from_feerate\": 50,\r\n          \"to_feerate\": 60\r\n        },\r\n        \"60\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 60,\r\n          \"to_feerate\": 70\r\n        },\r\n        \"70\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 70,\r\n          \"to_feerate\": 80\r\n        },\r\n        \"80\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 80,\r\n          \"to_feerate\": 100\r\n        },\r\n        \"100\": {\r\n          \"sizes\": 1079,\r\n          \"count\": 7,\r\n          \"fees\": 110042,\r\n          \"from_feerate\": 100,\r\n          \"to_feerate\": 120\r\n        },\r\n        \"120\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 120,\r\n          \"to_feerate\": 140\r\n        },\r\n        \"140\": {\r\n          \"sizes\": 1998,\r\n          \"count\": 3,\r\n          \"fees\": 300000,\r\n          \"from_feerate\": 140,\r\n          \"to_feerate\": 170\r\n        },\r\n        \"170\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 170,\r\n          \"to_feerate\": 200\r\n        },\r\n        \"200\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 200,\r\n          \"to_feerate\": 250\r\n        },\r\n        \"250\": {\r\n          \"sizes\": 371,\r\n          \"count\": 1,\r\n          \"fees\": 100000,\r\n          \"from_feerate\": 250,\r\n          \"to_feerate\": 300\r\n        },\r\n        \"300\": {\r\n          \"sizes\": 191,\r\n          \"count\": 1,\r\n          \"fees\": 57600,\r\n          \"from_feerate\": 300,\r\n          \"to_feerate\": 400\r\n        },\r\n        \"400\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 400,\r\n          \"to_feerate\": 500\r\n        },\r\n        \"500\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 500,\r\n          \"to_feerate\": 600\r\n        },\r\n        \"600\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 600,\r\n          \"to_feerate\": 700\r\n        },\r\n        \"700\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 700,\r\n          \"to_feerate\": 800\r\n        },\r\n        \"800\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 800,\r\n          \"to_feerate\": 1000\r\n        },\r\n        \"1000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 1000,\r\n          \"to_feerate\": 1200\r\n        },\r\n        \"1200\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 1200,\r\n          \"to_feerate\": 1400\r\n        },\r\n        \"1400\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 1400,\r\n          \"to_feerate\": 1700\r\n        },\r\n        \"1700\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 1700,\r\n          \"to_feerate\": 2000\r\n        },\r\n        \"2000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 2000,\r\n          \"to_feerate\": 2500\r\n        },\r\n        \"2500\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 2500,\r\n          \"to_feerate\": 3000\r\n        },\r\n        \"3000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 3000,\r\n          \"to_feerate\": 4000\r\n        },\r\n        \"4000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 4000,\r\n          \"to_feerate\": 5000\r\n        },\r\n        \"5000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 5000,\r\n          \"to_feerate\": 6000\r\n        },\r\n        \"6000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 6000,\r\n          \"to_feerate\": 7000\r\n        },\r\n        \"7000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 7000,\r\n          \"to_feerate\": 8000\r\n        },\r\n        \"8000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 8000,\r\n          \"to_feerate\": 10000\r\n        },\r\n        \"10000\": {\r\n          \"sizes\": 0,\r\n          \"count\": 0,\r\n          \"fees\": 0,\r\n          \"from_feerate\": 10000,\r\n          \"to_feerate\": 9223372036854775807\r\n        },\r\n        \"total_fees\": 833952\r\n      }\r\n    }\r\n  ```\r\n</details>",
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-792070533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "mentioned",
      "id": 4417325424,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQxNzMyNTQyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417325424",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T21:57:14Z"
    },
    {
      "event": "subscribed",
      "id": 4417325426,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MTczMjU0MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417325426",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T21:57:14Z"
    },
    {
      "event": "mentioned",
      "id": 4417325428,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQxNzMyNTQyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417325428",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T21:57:15Z"
    },
    {
      "event": "subscribed",
      "id": 4417325429,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MTczMjU0Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417325429",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T21:57:15Z"
    },
    {
      "event": "commented",
      "id": 797543170,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzU0MzE3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797543170",
      "actor": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-12T14:58:36Z",
      "updated_at": "2021-03-12T14:58:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have forked this PR: #21422 and I'm willing to continue working on that.",
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-797543170",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "reviewed",
      "id": 629382235,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI5MzgyMjM1",
      "url": null,
      "actor": null,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#pullrequestreview-629382235",
      "submitted_at": "2021-04-06T20:29:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
    },
    {
      "event": "commented",
      "id": 819572017,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTU3MjAxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819572017",
      "actor": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-14T14:41:39Z",
      "updated_at": "2021-04-14T14:41:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm chasing \"concept ACK\"s for the reborn version of this PR - namely #21422. \r\n\r\nAny other feedback is welcome, I have time to do modifications if needed to increase the chance of getting the PR to be merged.",
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-819572017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "commented",
      "id": 822054599,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjA1NDU5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822054599",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-18T20:20:06Z",
      "updated_at": "2021-04-18T20:20:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jonasschnelli the simple plot example doesn't display (seems the website is down).",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-822054599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "mentioned",
      "id": 4609491294,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwOTQ5MTI5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4609491294",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-18T20:20:06Z"
    },
    {
      "event": "subscribed",
      "id": 4609491295,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDk0OTEyOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4609491295",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-18T20:20:06Z"
    },
    {
      "event": "commented",
      "id": 822055018,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjA1NTAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822055018",
      "actor": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-18T20:23:12Z",
      "updated_at": "2021-04-18T20:23:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "@rebroad The link redirects to https://bitcoin.jonasschnelli.ch/mempool-histogram/ but there is a bug (missing slash). Anyway, there are no data at the moment.",
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-822055018",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "mentioned",
      "id": 4609494063,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwOTQ5NDA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4609494063",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-18T20:23:12Z"
    },
    {
      "event": "subscribed",
      "id": 4609494064,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDk0OTQwNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4609494064",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-18T20:23:12Z"
    },
    {
      "event": "commented",
      "id": 900899200,
      "node_id": "IC_kwDOABII5841sqGA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/900899200",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-18T07:51:25Z",
      "updated_at": "2021-08-18T07:51:25Z",
      "author_association": "MEMBER",
      "body": "Closing this, given it's been taken over in #21422.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#issuecomment-900899200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15836"
    },
    {
      "event": "closed",
      "id": 5173133945,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTE3MzEzMzk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5173133945",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-18T07:51:25Z"
    },
    {
      "event": "locked",
      "id": 7216592844,
      "node_id": "LOE_lADOABII584Z3_yRzwAAAAGuJHfM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7216592844",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:33:10Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276238077",
      "pull_request_review_id": 227749976,
      "id": 276238077,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjIzODA3Nw==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+        CAmount total_fees = 0; //track total amount of available fees in mempool\n+        UniValue info(UniValue::VOBJ);\n+        for (size_t i = 0; i < feelimits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", feelimits[i]);\n+            info_sub.pushKV(\"to_feerate\", i == feelimits.size() - 1 ? std::numeric_limits<int64_t>::max() : feelimits[i + 1]);\n+            total_fees += fees[i];\n+            info.pushKV(std::to_string(feelimits[i]), info_sub);\n+        }\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static UniValue getmempoolinfo(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 0)\n+    if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n             RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    {\"with_fee_histogram\", RPCArg::Type::BOOL, /* default */ \"false\", \"True for including the fee histogram in the response\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": 79,
      "original_position": 83,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Instead of this parameter, it could have `fee_histogram_bins` (that defaults to `[]` which means no histogram is included in the response). This would replace the above `feelimits` and also avoids breaking clients implementation.",
      "created_at": "2019-04-17T13:24:14Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276238077",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276238077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1558,
      "original_line": 1558,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276239167",
      "pull_request_review_id": 227749976,
      "id": 276239167,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjIzOTE2Nw==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe we should move this up (done in #15474).",
      "created_at": "2019-04-17T13:26:29Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276239167",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276239167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276239801",
      "pull_request_review_id": 227749976,
      "id": 276239801,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjIzOTgwMQ==",
      "diff_hunk": "@@ -629,7 +639,8 @@ static const struct {\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n       {\"/rest/chaininfo\", rest_chaininfo},\n-      {\"/rest/mempool/info\", rest_mempool_info},\n+      {\"/rest/mempool/info\", rest_mempool_info_basic},\n+      {\"/rest/mempool/info/with_fee_histogram\", rest_mempool_info_with_fee_histogram},",
      "path": "src/rest.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can't we just start to use query parameters?",
      "created_at": "2019-04-17T13:27:48Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276239801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276239801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 644,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276246250",
      "pull_request_review_id": 227759760,
      "id": 276246250,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjI0NjI1MA==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Correct me if I'm wrong but if `feelimits` is sorted then `&& (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])` is not necessary.",
      "created_at": "2019-04-17T13:40:36Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276246250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276246250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1526,
      "original_line": 1526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276246713",
      "pull_request_review_id": 227760339,
      "id": 276246713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjI0NjcxMw==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276246250,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Beside, it could avoid linear search by using `std::find`.",
      "created_at": "2019-04-17T13:41:36Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276246713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276246713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1526,
      "original_line": 1526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276262032",
      "pull_request_review_id": 227780197,
      "id": 276262032,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjI2MjAzMg==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be efficient to memoize `feelimits.size() - 1` ? (if the compiler doesn't optimize it automatically, my C++ is rusty)",
      "created_at": "2019-04-17T14:13:04Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276262032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276262032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1526,
      "original_line": 1526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276263273",
      "pull_request_review_id": 227780197,
      "id": 276263273,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjI2MzI3Mw==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276262032,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If `&& (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])` can be removed, the dependency on `feelimits` being sorted would need a regression test.",
      "created_at": "2019-04-17T14:15:32Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276263273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276263273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1526,
      "original_line": 1526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276296561",
      "pull_request_review_id": 227824069,
      "id": 276296561,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjI5NjU2MQ==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276239167,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That pull was merged, please rebase and remove this lock.",
      "created_at": "2019-04-17T15:18:52Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276296561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276296561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276298339",
      "pull_request_review_id": 227826416,
      "id": 276298339,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjI5ODMzOQ==",
      "diff_hunk": "@@ -629,7 +639,8 @@ static const struct {\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n       {\"/rest/chaininfo\", rest_chaininfo},\n-      {\"/rest/mempool/info\", rest_mempool_info},\n+      {\"/rest/mempool/info\", rest_mempool_info_basic},\n+      {\"/rest/mempool/info/with_fee_histogram\", rest_mempool_info_with_fee_histogram},",
      "path": "src/rest.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276239801,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would eventually be better but not scope of this PR (following the current scheme).",
      "created_at": "2019-04-17T15:22:32Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276298339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276298339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 644,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276792640",
      "pull_request_review_id": 228453396,
      "id": 276792640,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njc5MjY0MA==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276262032,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Would it be efficient to memoize `feelimits.size() - 1` ? (if the compiler doesn't optimize it automatically, my C++ is rusty)\r\n\r\nIt shouldn't impact performance either way.",
      "created_at": "2019-04-18T18:57:20Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276792640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276792640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1526,
      "original_line": 1526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276834438",
      "pull_request_review_id": 228506896,
      "id": 276834438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjgzNDQzOA==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe move this directly into `getmempoolinfo`? Or another helper?",
      "created_at": "2019-04-18T21:07:29Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276834438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276834438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1493,
      "original_line": 1493,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276834809",
      "pull_request_review_id": 228507367,
      "id": 276834809,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjgzNDgwOQ==",
      "diff_hunk": "@@ -1522,7 +1593,10 @@ static UniValue getmempoolinfo(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n-    return MempoolInfoToJSON(::mempool);\n+    bool with_fee_histogram = false;\n+    if (!request.params[0].isNull())\n+        with_fee_histogram = request.params[0].get_bool();",
      "path": "src/rpc/blockchain.cpp",
      "position": 109,
      "original_position": 113,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: braces or single line",
      "created_at": "2019-04-18T21:08:42Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r276834809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276834809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1590,
      "original_line": 1590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277994666",
      "pull_request_review_id": 229947357,
      "id": 277994666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Nzk5NDY2Ng==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276834438,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought about another call, but extending `mempoolinfo` with an option for \"more data\" seems to be most allied with other calls where one can get more extended infos on option.",
      "created_at": "2019-04-24T07:50:14Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r277994666",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277994666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1493,
      "original_line": 1493,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277996292",
      "pull_request_review_id": 229949335,
      "id": 277996292,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Nzk5NjI5Mg==",
      "diff_hunk": "@@ -1522,7 +1593,10 @@ static UniValue getmempoolinfo(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n-    return MempoolInfoToJSON(::mempool);\n+    bool with_fee_histogram = false;\n+    if (!request.params[0].isNull())\n+        with_fee_histogram = request.params[0].get_bool();",
      "path": "src/rpc/blockchain.cpp",
      "position": 109,
      "original_position": 113,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276834809,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2019-04-24T07:54:44Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r277996292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277996292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1590,
      "original_line": 1590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278028394",
      "pull_request_review_id": 229988191,
      "id": 278028394,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODAyODM5NA==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276834438,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I mean just have the code outside this function. The RPC would then call both `MempoolInfoToJSON` and also `JSONMempoolInfoAddHistogram` (or whatever this code gets called)",
      "created_at": "2019-04-24T09:13:17Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r278028394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278028394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1493,
      "original_line": 1493,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291592001",
      "pull_request_review_id": 247094801,
      "id": 291592001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTU5MjAwMQ==",
      "diff_hunk": "@@ -629,7 +639,8 @@ static const struct {\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n       {\"/rest/chaininfo\", rest_chaininfo},\n-      {\"/rest/mempool/info\", rest_mempool_info},\n+      {\"/rest/mempool/info\", rest_mempool_info_basic},\n+      {\"/rest/mempool/info/with_fee_histogram\", rest_mempool_info_with_fee_histogram},",
      "path": "src/rest.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276239801,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Still voting against query parameters. With REST the general preference seems to be to turn parameters into URL segments, and query parameters tend to be avoided because they look ugly and are hard to remember.",
      "created_at": "2019-06-07T13:29:22Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r291592001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291592001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 644,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291598239",
      "pull_request_review_id": 247102876,
      "id": 291598239,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTU5ODIzOQ==",
      "diff_hunk": "@@ -629,7 +639,8 @@ static const struct {\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n       {\"/rest/chaininfo\", rest_chaininfo},\n-      {\"/rest/mempool/info\", rest_mempool_info},\n+      {\"/rest/mempool/info\", rest_mempool_info_basic},\n+      {\"/rest/mempool/info/with_fee_histogram\", rest_mempool_info_with_fee_histogram},",
      "path": "src/rest.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276239801,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think there's a \"standard\" here but with REST usually the URL path identifies a resource, a collection of resources, or an action - the verb is also relevant. But parameters are usually set in the URL query, order independent and can be optional. I also think this is more flexible, for instance, you could support `...?verbose=true` in all endpoints (just an example).",
      "created_at": "2019-06-07T13:44:21Z",
      "updated_at": "2019-07-17T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r291598239",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291598239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 644,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304327165",
      "pull_request_review_id": 262934461,
      "id": 304327165,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDMyNzE2NQ==",
      "diff_hunk": "@@ -0,0 +1,2 @@\n+// Add predefined macros for your project here. For example:",
      "path": "Bitcoin-Qt.config",
      "position": 1,
      "original_position": 1,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove these files and maybe update .gitignore?",
      "created_at": "2019-07-17T10:22:07Z",
      "updated_at": "2019-07-17T11:19:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r304327165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304327165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304346834",
      "pull_request_review_id": 262934461,
      "id": 304346834,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDM0NjgzNA==",
      "diff_hunk": "@@ -629,7 +639,8 @@ static const struct {\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n       {\"/rest/chaininfo\", rest_chaininfo},\n-      {\"/rest/mempool/info\", rest_mempool_info},\n+      {\"/rest/mempool/info\", rest_mempool_info_basic},\n+      {\"/rest/mempool/info/with_fee_histogram\", rest_mempool_info_with_fee_histogram},",
      "path": "src/rest.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276239801,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This must be before the above line (order is important) otherwise `rest_mempool_info_with_fee_histogram ` is never called.",
      "created_at": "2019-07-17T11:15:43Z",
      "updated_at": "2019-07-17T12:29:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r304346834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304346834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 644,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437788703",
      "pull_request_review_id": 427626459,
      "id": 437788703,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4ODcwMw==",
      "diff_hunk": "@@ -1490,14 +1490,73 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+        CAmount total_fees = 0; //track total amount of available fees in mempool\n+        UniValue info(UniValue::VOBJ);\n+        for (size_t i = 0; i < feelimits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", feelimits[i]);\n+            info_sub.pushKV(\"to_feerate\", i == feelimits.size() - 1 ? std::numeric_limits<int64_t>::max() : feelimits[i + 1]);\n+            total_fees += fees[i];\n+            info.pushKV(std::to_string(feelimits[i]), info_sub);",
      "path": "src/rpc/blockchain.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should change this to use `ToString`",
      "created_at": "2020-06-10T00:07:08Z",
      "updated_at": "2020-06-10T00:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r437788703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437788703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1544,
      "original_line": 1544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528352743",
      "pull_request_review_id": 536073777,
      "id": 528352743,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM1Mjc0Mw==",
      "diff_hunk": "@@ -1490,14 +1490,73 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+        CAmount total_fees = 0; //track total amount of available fees in mempool\n+        UniValue info(UniValue::VOBJ);",
      "path": "src/rpc/blockchain.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "JSON objects are unordered collections, so maybe using an array for \"fee_histogram\" would make more sense since it would always stay sorted.",
      "created_at": "2020-11-22T15:40:40Z",
      "updated_at": "2020-11-22T15:41:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r528352743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528352743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1535,
      "original_line": 1535,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588933214",
      "pull_request_review_id": 605789123,
      "id": 588933214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODkzMzIxNA==",
      "diff_hunk": "@@ -1496,16 +1496,76 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        LOCK(pool.cs);\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "80fbf80099e8ab36da9e2df31c12a9e411abadae",
      "in_reply_to_id": 276246250,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Correct me if I'm wrong but if `feelimits` is sorted then `&& (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])` is not necessary.\r\n\r\nYes, but then then for loop on line 1532 should be in reverse order: `for (int i = feelimits.size() - 1; i >= 0; i--) {`",
      "created_at": "2021-03-06T21:28:06Z",
      "updated_at": "2021-03-06T21:34:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r588933214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588933214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1526,
      "original_line": 1526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608159325",
      "pull_request_review_id": 629382235,
      "id": 608159325,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODE1OTMyNQ==",
      "diff_hunk": "@@ -1490,14 +1490,73 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+        CAmount total_fees = 0; //track total amount of available fees in mempool\n+        UniValue info(UniValue::VOBJ);\n+        for (size_t i = 0; i < feelimits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);",
      "path": "src/rpc/blockchain.cpp",
      "position": 58,
      "original_position": 58,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "in_reply_to_id": null,
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "what is sizes? I've noticed that when adding up all the sizes when the mempool is full, that the number doesn't stay fixed as I would have expected when the mempool is full - so it's not the number of bytes used in memory to store the tx - so, what is it?",
      "created_at": "2021-04-06T20:29:47Z",
      "updated_at": "2021-04-06T20:29:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r608159325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608159325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1538,
      "original_line": 1538,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608680611",
      "pull_request_review_id": 630042696,
      "id": 608680611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODY4MDYxMQ==",
      "diff_hunk": "@@ -1490,14 +1490,73 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+        CAmount total_fees = 0; //track total amount of available fees in mempool\n+        UniValue info(UniValue::VOBJ);\n+        for (size_t i = 0; i < feelimits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);",
      "path": "src/rpc/blockchain.cpp",
      "position": 58,
      "original_position": 58,
      "commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "original_commit_id": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "in_reply_to_id": 608159325,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So the histogram is based on fee rates intervals. The histogram is modeled using three vectors:\r\n\r\n```cpp\r\n        std::vector<uint64_t> sizes(feelimits.size(), 0);\r\n        std::vector<uint64_t> count(feelimits.size(), 0);\r\n        std::vector<uint64_t> fees(feelimits.size(), 0);\r\n```\r\n\r\nwhere `sizes[0]` represents cumulative size of txs belonging to the first fee rate interval `[1, 2)`, `sizes[1]` represents  cumulative size of txs belonging to the second fee rate interval `[2, 3)`, etc.\r\n\r\n[Line 1527](https://github.com/bitcoin/bitcoin/pull/15836/files#diff-decae4be02fb8a47ab4557fe74a9cb853bdfa3ec0fa1b515c0a1e5de91f4ad0bR1527) shows that we add `size` to `sizes[i]` where `size` is defined as `int size = (int)e.GetTxSize();` which is defined as:\r\n\r\n```cpp\r\nsize_t CTxMemPoolEntry::GetTxSize() const\r\n{\r\n    return GetVirtualTransactionSize(nTxWeight, sigOpCost);\r\n}\r\n```\r\n\r\nWhat is virtual size of a transaction? This is explained here: https://bitcoin.stackexchange.com/questions/92689/how-is-the-size-of-a-bitcoin-transaction-calculated.\r\n\r\nHTH!\r\n\r\npromo: You may have a look at #21422 too. :)",
      "created_at": "2021-04-07T13:58:32Z",
      "updated_at": "2021-04-07T13:58:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15836#discussion_r608680611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608680611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15836"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1538,
      "original_line": 1538,
      "side": "RIGHT"
    }
  ]
}