{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858",
    "id": 272085685,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcyMDg1Njg1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15858",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/15858.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/15858.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/faac5a8ff6c9966daa880bc8c02951fea804589d",
    "number": 15858,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Faster tests with topological mempool rpc sync ðŸš€",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Most of the tests spend time waiting for the poisson tx send to timeout. However, tests that don't test p2p behaviour, don't need to.\r\n\r\nSpeed them up by syncing transactions over rpc.\r\n\r\nOverall, the tests run three times as fast for me now:\r\n\r\n* Before:\r\n\r\n```\r\nALL                                   | âœ“ Passed  | 1395 s (accumulated) \r\nRuntime: 368 s\r\n```\r\n\r\n* After:\r\n\r\n```\r\nALL                                   | âœ“ Passed  | 940 s (accumulated) \r\nRuntime: 120 s\r\n```",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-04-19T20:25:12Z",
    "updated_at": "2021-12-16T13:57:35Z",
    "closed_at": "2019-04-30T20:15:16Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "f1a09a2985a51d04ebd406f6f96024777ffd5296",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:1904-qaSync",
      "ref": "1904-qaSync",
      "sha": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "08bd21a3bda9f621948c535e951880d7e318caa5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 66,
    "deletions": 4,
    "changed_files": 14,
    "commits": 2,
    "review_comments": 17,
    "comments": 10
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQyNmVkNWZhNWJmOWZjMGNmNjBlODRhMTM1ZTdkMDNjOTM0MDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "tree": {
        "sha": "b921d9f524bca836a5a86b7c4b2ce80fe830af1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b921d9f524bca836a5a86b7c4b2ce80fe830af1c"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree b921d9f524bca836a5a86b7c4b2ce80fe830af1c\nparent b6a5583c4f9becbccc4cfb1fb93d190a45cb27ea\nauthor MarcoFalke <falke.marco@gmail.com> 1554746781 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1555705451 -0400\n\ntest: Use RPC mempool sync to speed up tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgmyAv9FDIPt1poFFQZyrB8MfFMmPnARyxEi8Bcxsix3MS0qUsrsfjbOIB1IaSw\nh3ZUHAk0DrC+733TqIzsPwWHDkaeMzBfjCdf0R9AsiDtQUC+sFIcEj9qlFmv9GHK\n1Xor+6mcPwdrltMUK0hr56PtT/t3g4S7TlX6bSe7Tuvm0bX7j8lF4tqAB6PHmN51\n8oHGOciLOiUOQ239cPRH2IGMoovlw38XL3F9B0ECiz4WhUT0e92Zf2y0lQq+xvMA\neYL/PuiTdS+Fnhwhjo2h47MH7/xxWjyjEwy3sfQfGs/RRgJ8anoY+7rJSUjm34/X\noo7IhfbfPiu894lo/prq9jv0+bRCEIxj5Pizm0HI/JzGGlXlBIu9E3IBecsUQcMx\nW1S9z8plHsVhwRl3OutRio+Y0j2YBIY/+OHolscOK/XqOX2b/yR4Qfmk8YGrqa+7\nQ3ZqsRMbydhIKUgyYcDUvnwJA0EjDk+h5DWWlHgPtZDHs7afJIjL4nS4HN7WFg2z\nEi1Nee4c\n=1zv0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6a5583c4f9becbccc4cfb1fb93d190a45cb27ea",
          "sha": "b6a5583c4f9becbccc4cfb1fb93d190a45cb27ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b6a5583c4f9becbccc4cfb1fb93d190a45cb27ea"
        }
      ],
      "message": "test: Use RPC mempool sync to speed up tests",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-19T20:24:11Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-08T18:06:21Z"
      },
      "sha": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000"
    },
    {
      "event": "commented",
      "id": 485007223,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTAwNzIyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485007223",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-19T20:33:13Z",
      "updated_at": "2019-04-19T20:33:13Z",
      "author_association": "MEMBER",
      "body": "Nice! This has been on my list for a long time. Thanks for doing it!\r\n\r\nðŸš€ concept ACK ",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-485007223",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "labeled",
      "id": 2289125980,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyODkxMjU5ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2289125980",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-19T22:38:54Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 485107509,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTEwNzUwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485107509",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-20T12:20:05Z",
      "updated_at": "2019-04-20T12:20:05Z",
      "author_association": "MEMBER",
      "body": "This is an impressive improvement in speed!\r\nACK fad26ed5fa5bf9fc0cf60e84a135e7d03c934000\r\n\r\na test here:\r\n```\r\nALL                                   | âœ“ Passed  | 1788 s (accumulated)\r\nRuntime: 472 s\r\n```\r\n```\r\nALL                                   | âœ“ Passed  | 1516 s (accumulated)\r\nRuntime: 388 s\r\n```",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-485107509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "reviewed",
      "id": 228929644,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4OTI5NjQ0",
      "url": null,
      "actor": null,
      "commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#pullrequestreview-228929644",
      "submitted_at": "2019-04-21T23:28:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
    },
    {
      "event": "reviewed",
      "id": 229002026,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI5MDAyMDI2",
      "url": null,
      "actor": null,
      "commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Consider describing this argument's purpose and use in the `sync_mempools` function docstring, in `example_test.py`, and possibly in `rpc_deprecated.py`.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#pullrequestreview-229002026",
      "submitted_at": "2019-04-22T09:12:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
    },
    {
      "event": "commented",
      "id": 485407600,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTQwNzYwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485407600",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T12:35:19Z",
      "updated_at": "2019-04-22T12:35:19Z",
      "author_association": "MEMBER",
      "body": "Added a commit to extend the docstring, as requested by @promag and @jonatack",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-485407600",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "mentioned",
      "id": 2291179503,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjI5MTE3OTUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2291179503",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T12:35:19Z"
    },
    {
      "event": "subscribed",
      "id": 2291179504,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyOTExNzk1MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2291179504",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T12:35:19Z"
    },
    {
      "event": "mentioned",
      "id": 2291179506,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjI5MTE3OTUwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2291179506",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T12:35:19Z"
    },
    {
      "event": "subscribed",
      "id": 2291179507,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyOTExNzk1MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2291179507",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T12:35:19Z"
    },
    {
      "event": "reviewed",
      "id": 229212744,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI5MjEyNzQ0",
      "url": null,
      "actor": null,
      "commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#pullrequestreview-229212744",
      "submitted_at": "2019-04-22T19:41:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFjNWE4ZmY2Yzk5NjZkYWE4ODBiYzhjMDI5NTFmZWE4MDQ1ODlk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faac5a8ff6c9966daa880bc8c02951fea804589d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faac5a8ff6c9966daa880bc8c02951fea804589d",
      "tree": {
        "sha": "bd90020cb18f50b2367cf8884cb0fbbf2b892496",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd90020cb18f50b2367cf8884cb0fbbf2b892496"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree bd90020cb18f50b2367cf8884cb0fbbf2b892496\nparent fad26ed5fa5bf9fc0cf60e84a135e7d03c934000\nauthor MarcoFalke <falke.marco@gmail.com> 1555936890 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1555963965 -0400\n\ntest: Add documentation to sync_mempools::use_rpc_sync\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhPvAv/Z6I+BTHKBQW8r0R4ECrkCHDqbfPn5cwPLehHYseROTsi5v9wrk+vOhMI\n4W81dnL6hSpUZfQjanrAQ1d+43iZrnpPDeFkfIAux40OiRK0JAF7eAidsukKrRKm\nYEQokRcfx6Oh/JF0auoIqGOgtY9X4LSUxtB6LQrPCy1EkSA9MFY561Y4SDAU0WB8\n8SUM9HoO5fUynRxT4dsF8ic2b2bEkslxso8dFPmMvcd/E4mhLN4zEvfw2err2lnt\nHdxwuVHiRIkRg0urC3VrHiUde91uHcF6Y1RIeO4iWW5/fkDkMcw6CeD2mCDnUiqR\n0IwGSC4rpUgb2hrIvVsjadfW6wKNdwh+BmKjV4slziK/U0qH15QaNd/cmklkcbqU\nxRjirzHJiorlGjTDOPJ95OHs0IntK1X2JmOVd4OFKRa+a4kFmXGvxNWRXF5PFkeY\nxCqk8/wVn3BuIH0EdLn5c3VLW7qTbA7L2ufU9TyHewaiTIvwVPBUpBMYQH2siWTd\nLcImbEvb\n=gXU9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
          "sha": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fad26ed5fa5bf9fc0cf60e84a135e7d03c934000"
        }
      ],
      "message": "test: Add documentation to sync_mempools::use_rpc_sync",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-22T20:12:45Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-22T12:41:30Z"
      },
      "sha": "faac5a8ff6c9966daa880bc8c02951fea804589d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2292178013,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjI5MjE3ODAxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2292178013",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T20:12:55Z"
    },
    {
      "event": "commented",
      "id": 485558503,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTU1ODUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485558503",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-22T21:26:46Z",
      "updated_at": "2019-04-22T21:26:46Z",
      "author_association": "MEMBER",
      "body": "Aesthetic disagreements aside, this is a great improvement. utACK faac5a8ff6c9966daa880bc8c02951fea804589d",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-485558503",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "reviewed",
      "id": 229595171,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI5NTk1MTcx",
      "url": null,
      "actor": null,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kostyantyn",
        "id": 296795,
        "node_id": "MDQ6VXNlcjI5Njc5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/296795?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kostyantyn",
        "html_url": "https://github.com/kostyantyn",
        "followers_url": "https://api.github.com/users/kostyantyn/followers",
        "following_url": "https://api.github.com/users/kostyantyn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kostyantyn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kostyantyn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kostyantyn/subscriptions",
        "organizations_url": "https://api.github.com/users/kostyantyn/orgs",
        "repos_url": "https://api.github.com/users/kostyantyn/repos",
        "events_url": "https://api.github.com/users/kostyantyn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kostyantyn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#pullrequestreview-229595171",
      "submitted_at": "2019-04-23T14:38:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
    },
    {
      "event": "mentioned",
      "id": 2295365781,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjI5NTM2NTc4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2295365781",
      "actor": {
        "login": "kostyantyn",
        "id": 296795,
        "node_id": "MDQ6VXNlcjI5Njc5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/296795?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kostyantyn",
        "html_url": "https://github.com/kostyantyn",
        "followers_url": "https://api.github.com/users/kostyantyn/followers",
        "following_url": "https://api.github.com/users/kostyantyn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kostyantyn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kostyantyn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kostyantyn/subscriptions",
        "organizations_url": "https://api.github.com/users/kostyantyn/orgs",
        "repos_url": "https://api.github.com/users/kostyantyn/repos",
        "events_url": "https://api.github.com/users/kostyantyn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kostyantyn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-23T21:02:09Z"
    },
    {
      "event": "subscribed",
      "id": 2295365784,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyOTUzNjU3ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2295365784",
      "actor": {
        "login": "kostyantyn",
        "id": 296795,
        "node_id": "MDQ6VXNlcjI5Njc5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/296795?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kostyantyn",
        "html_url": "https://github.com/kostyantyn",
        "followers_url": "https://api.github.com/users/kostyantyn/followers",
        "following_url": "https://api.github.com/users/kostyantyn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kostyantyn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kostyantyn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kostyantyn/subscriptions",
        "organizations_url": "https://api.github.com/users/kostyantyn/orgs",
        "repos_url": "https://api.github.com/users/kostyantyn/repos",
        "events_url": "https://api.github.com/users/kostyantyn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kostyantyn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-23T21:02:09Z"
    },
    {
      "event": "closed",
      "id": 2295365888,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjI5NTM2NTg4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2295365888",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-23T21:02:12Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 2295366011,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQyMjk1MzY2MDEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2295366011",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-23T21:02:14Z"
    },
    {
      "event": "head_ref_restored",
      "id": 2297565110,
      "node_id": "MDIwOkhlYWRSZWZSZXN0b3JlZEV2ZW50MjI5NzU2NTExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2297565110",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-24T15:19:35Z"
    },
    {
      "event": "commented",
      "id": 486287647,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjI4NzY0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486287647",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-24T15:20:02Z",
      "updated_at": "2019-04-24T15:20:02Z",
      "author_association": "MEMBER",
      "body": "Going back to this approach, since modifying bitcoind is interpreted as too controversial",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-486287647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "reopened",
      "id": 2297566623,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQyMjk3NTY2NjIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2297566623",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-24T15:20:03Z"
    },
    {
      "event": "commented",
      "id": 486287775,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjI4Nzc3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486287775",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-24T15:20:21Z",
      "updated_at": "2019-04-24T15:20:21Z",
      "author_association": "MEMBER",
      "body": "Unless there are objections this will be merged on Monday",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-486287775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "commented",
      "id": 486290266,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjI5MDI2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486290266",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-24T15:26:07Z",
      "updated_at": "2019-04-24T15:26:07Z",
      "author_association": "MEMBER",
      "body": "Could make sense to skip this optimization in one of the travis job?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-486290266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "commented",
      "id": 486744481,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Njc0NDQ4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486744481",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-25T16:28:53Z",
      "updated_at": "2019-04-29T15:17:13Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15911](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15911.html) (Use wallet RBF default for walletcreatefundedpsbt by Sjors)\n* [#15891](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15891.html) (test: Require standard txs in regtest by default by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-486744481",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "commented",
      "id": 487772015,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzc3MjAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487772015",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-29T22:55:52Z",
      "updated_at": "2019-04-29T22:55:52Z",
      "author_association": "MEMBER",
      "body": "Functional tests on master at 8da1aa4 with Linux Debian 4.19.28-2 (2019-03-15) x86/64\r\n\r\nALL                                   | âœ“ Passed  | 1824 s (accumulated)\r\nRuntime: 466 s\r\n\r\nALL                                   | âœ“ Passed  | 1867 s (accumulated) \r\nRuntime: 476 s\r\n\r\nALL                                   | âœ“ Passed  | 1856 s (accumulated) \r\nRuntime: 473 s\r\n\r\nALL                                   | âœ“ Passed  | 1774 s (accumulated) \r\nRuntime: 453 s\r\n\r\n-----\r\n\r\nFunctional tests with this PR at https://github.com/bitcoin/bitcoin/pull/15858/commits/faac5a8ff6c9966daa880bc8c02951fea804589d rebased on master at 8da1aa4\r\n\r\nALL                                   | âœ“ Passed  | 1372 s (accumulated) \r\nRuntime: 352 s\r\n\r\nALL                                   | âœ“ Passed  | 1388 s (accumulated) \r\nRuntime: 357 s\r\n\r\nALL                                   | âœ“ Passed  | 1472 s (accumulated) \r\nRuntime: 377 s\r\n\r\nALL                                   | âœ“ Passed  | 1449 s (accumulated) \r\nRuntime: 373 s\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-487772015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "closed",
      "id": 2310616195,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjMxMDYxNjE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2310616195",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-30T20:15:16Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 2310616334,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQyMzEwNjE2MzM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2310616334",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-30T20:15:19Z"
    },
    {
      "event": "commented",
      "id": 488100037,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODEwMDAzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488100037",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-30T20:19:12Z",
      "updated_at": "2019-04-30T20:19:12Z",
      "author_association": "MEMBER",
      "body": "> Going back to this approach, since modifying bitcoind is interpreted as too controversial\r\n\r\nI prefer this approach as well. I think the only use for this, ever, is the tests, so I'd prefer not to change `bitcoind` with a special case for it.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#issuecomment-488100037",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15858"
    },
    {
      "event": "locked",
      "id": 5778529699,
      "node_id": "LOE_lADOABII584Z8hFZzwAAAAFYbV2j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778529699",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T13:57:35Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184364",
      "pull_request_review_id": 228929644,
      "id": 277184364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDM2NA==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    pass",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 29,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could assert error \"insufficient fee\"?",
      "created_at": "2019-04-21T23:02:05Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277184364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 417,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184430",
      "pull_request_review_id": 228929644,
      "id": 277184430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDQzMA==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    pass\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            for i_remote, rpc_remote in enumerate(rpc_connections):\n+                pool_remote = {\n+                    txid: TxInfo(raw=rpc_remote.getrawtransaction(txid), ancestors=info['depends'])\n+                    for txid, info in rpc_remote.getrawmempool(verbose=True).items()\n+                }\n+                # Create \"recursive pools\" for ancestors\n+                for tx in pool_remote:\n+                    pool_remote[tx].ancestors = {a: pool_remote[a] for a in pool_remote[tx].ancestors}\n+\n+                # Push this pool to all targets\n+                for i_target, rpc_target in enumerate(rpc_connections):\n+                    missing_txids = pool[i_remote].difference(pool[i_target])",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 48,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could skip when `i_remove == i_target`?",
      "created_at": "2019-04-21T23:04:49Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277184430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184625",
      "pull_request_review_id": 228929644,
      "id": 277184625,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDYyNQ==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    pass\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            for i_remote, rpc_remote in enumerate(rpc_connections):",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A brief description of the following algorithm would be handy.",
      "created_at": "2019-04-21T23:14:46Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277184625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 424,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277243663",
      "pull_request_review_id": 229002026,
      "id": 277243663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzI0MzY2Mw==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):",
      "path": "test/functional/test_framework/util.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adding code documentation in the docstring here would be great, detailling `use_rpc_sync` purpose and use.",
      "created_at": "2019-04-22T09:04:38Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277243663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277243663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 393,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277408817",
      "pull_request_review_id": 229212744,
      "id": 277408817,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQwODgxNw==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:",
      "path": "test/functional/test_framework/util.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems slightly odd to me that this code, which we only ever expect to run once, should be in a `while` loop. I think it'd be clearer to split it out into its own function. Something like:\r\n\r\n```python\r\ndef sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\r\n    \"\"\"\r\n    Wait until everybody has the same transactions in their memory\r\n    pools. If use_rpc_sync is set, sync all transactions right away.\r\n    \"\"\"\r\n    if use_rpc_sync:\r\n        force_sync_mempools(rpc_connections)\r\n    else:\r\n        stop_time = time.time() + timeout\r\n        while time.time() <= stop_time:\r\n            pool = [set(r.getrawmempool()) for r in rpc_connections]\r\n            if pool.count(pool[0]) == len(rpc_connections):\r\n                break\r\n            time.sleep(wait)\r\n        else:\r\n            raise AssertionError(\"Mempool sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(m) for m in pool)))\r\n\r\n    if flush_scheduler:\r\n        for r in rpc_connections:\r\n            r.syncwithvalidationinterfacequeue()\r\n\r\ndef force_sync_mempools(rpc_connections):\r\n\r\n    class TxInfo:\r\n        def __init__(self, *, raw, ancestors):\r\n            self.raw = raw\r\n            self.ancestors = ancestors\r\n\r\n    def topo_send(txs, rpc, pool_add):\r\n        for i in txs:\r\n            topo_send(txs[i].ancestors, rpc, pool_add)\r\n            if i not in pool_add:\r\n                try:\r\n                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\r\n                    pool_add.add(i)\r\n                    # Note that conflicted txs (due to RBF) are not removed\r\n                    # from the pool\r\n                except JSONRPCException as e:\r\n                    # This transaction violates policy (e.g. RBF policy). The\r\n                    # mempools should still converge when the high-fee\r\n                    # replacement is synced in a later call\r\n                    assert 'insufficient fee' in e.error['message']\r\n\r\n    pool = [set(r.getrawmempool()) for r in rpc_connections]\r\n    # Iterate over all nodes, get their raw mempool and send the\r\n    # missing txs to all other nodes\r\n    for i_remote, rpc_remote in enumerate(rpc_connections):\r\n        pool_remote = {\r\n            txid: TxInfo(raw=rpc_remote.getrawtransaction(txid), ancestors=info['depends'])\r\n            for txid, info in rpc_remote.getrawmempool(verbose=True).items()\r\n        }\r\n        # Create \"recursive pools\" for ancestors\r\n        for tx in pool_remote:\r\n            pool_remote[tx].ancestors = {a: pool_remote[a] for a in pool_remote[tx].ancestors}\r\n\r\n        # Push this pool to all targets\r\n        for i_target, rpc_target in enumerate(rpc_connections):\r\n            missing_txids = pool[i_remote].difference(pool[i_target])\r\n            # Send missing txs\r\n            topo_send(\r\n                txs={txid: pool_remote[txid]\r\n                     for txid in pool_remote if txid in missing_txids},\r\n                rpc=rpc_target,\r\n                pool_add=pool[i_target],\r\n            )\r\n    # If the sync fails there is a logic error in the sync or test code\r\n    pool = [set(r.getrawmempool()) for r in rpc_connections]\r\n    assert pool.count(pool[0]) == len(rpc_connections)\r\n```",
      "created_at": "2019-04-22T19:39:29Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277408817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277408817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277409123",
      "pull_request_review_id": 229212744,
      "id": 277409123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQwOTEyMw==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            # Iterate over all nodes, get their raw mempool and send the\n+            # missing txs to all other nodes\n+            for i_remote, rpc_remote in enumerate(rpc_connections):",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 40,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `remote` and `target` don't seem like very descriptive names to me `from` and `to` seem more intuitive to me as the node you're sync'ing from and to.",
      "created_at": "2019-04-22T19:40:27Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277409123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277409123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 426,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277409494",
      "pull_request_review_id": 229212744,
      "id": 277409494,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQwOTQ5NA==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            # Iterate over all nodes, get their raw mempool and send the\n+            # missing txs to all other nodes\n+            for i_remote, rpc_remote in enumerate(rpc_connections):\n+                pool_remote = {\n+                    txid: TxInfo(raw=rpc_remote.getrawtransaction(txid), ancestors=info['depends'])\n+                    for txid, info in rpc_remote.getrawmempool(verbose=True).items()\n+                }\n+                # Create \"recursive pools\" for ancestors",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 45,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: can you make this comment more explicit? What is a \"recursive pool\"?",
      "created_at": "2019-04-22T19:41:38Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277409494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277409494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 431,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277418142",
      "pull_request_review_id": 229225325,
      "id": 277418142,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQxODE0Mg==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:",
      "path": "test/functional/test_framework/util.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277408817,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd rather not use a while-else, which I have to look up what it does every time I encounter it. I opted for a smaller diff and added an `assert`, so the diff should be easier to review and it should be clear that it is only run once via the assert.",
      "created_at": "2019-04-22T20:08:56Z",
      "updated_at": "2019-04-22T20:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277418142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277418142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277419678",
      "pull_request_review_id": 229227345,
      "id": 277419678,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQxOTY3OA==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            # Iterate over all nodes, get their raw mempool and send the\n+            # missing txs to all other nodes\n+            for i_remote, rpc_remote in enumerate(rpc_connections):",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 40,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277409123,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renamed to `to` and `from`",
      "created_at": "2019-04-22T20:13:39Z",
      "updated_at": "2019-04-22T20:13:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277419678",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277419678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 426,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277419747",
      "pull_request_review_id": 229227431,
      "id": 277419747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQxOTc0Nw==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            # Iterate over all nodes, get their raw mempool and send the\n+            # missing txs to all other nodes\n+            for i_remote, rpc_remote in enumerate(rpc_connections):\n+                pool_remote = {\n+                    txid: TxInfo(raw=rpc_remote.getrawtransaction(txid), ancestors=info['depends'])\n+                    for txid, info in rpc_remote.getrawmempool(verbose=True).items()\n+                }\n+                # Create \"recursive pools\" for ancestors",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 45,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277409494,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed mention of \"recursive\"",
      "created_at": "2019-04-22T20:13:53Z",
      "updated_at": "2019-04-22T20:13:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277419747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277419747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 431,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277420191",
      "pull_request_review_id": 229228015,
      "id": 277420191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQyMDE5MQ==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    pass\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:\n+            for i_remote, rpc_remote in enumerate(rpc_connections):\n+                pool_remote = {\n+                    txid: TxInfo(raw=rpc_remote.getrawtransaction(txid), ancestors=info['depends'])\n+                    for txid, info in rpc_remote.getrawmempool(verbose=True).items()\n+                }\n+                # Create \"recursive pools\" for ancestors\n+                for tx in pool_remote:\n+                    pool_remote[tx].ancestors = {a: pool_remote[a] for a in pool_remote[tx].ancestors}\n+\n+                # Push this pool to all targets\n+                for i_target, rpc_target in enumerate(rpc_connections):\n+                    missing_txids = pool[i_remote].difference(pool[i_target])",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 48,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fad26ed5fa5bf9fc0cf60e84a135e7d03c934000",
      "in_reply_to_id": 277184430,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I opted for code brevity. Calculating the empty set as a difference from two equal sets should take negligible time compared to an rpc call",
      "created_at": "2019-04-22T20:15:16Z",
      "updated_at": "2019-04-22T20:15:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277420191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277420191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277420863",
      "pull_request_review_id": 229228870,
      "id": 277420863,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQyMDg2Mw==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:",
      "path": "test/functional/test_framework/util.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277408817,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also rewriting the function would invalidate previous review",
      "created_at": "2019-04-22T20:17:20Z",
      "updated_at": "2019-04-22T20:17:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277420863",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277420863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277443342",
      "pull_request_review_id": 229257583,
      "id": 277443342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQ0MzM0Mg==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:",
      "path": "test/functional/test_framework/util.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277408817,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm surprised you think Python's `while-else` syntax is confusing. I don't think I've ever had a problem with it: https://stackoverflow.com/a/3295949. I certainly think it's clearer than the existing code, which has a `return` buried in a conditional in the `while` loop, but hidden under the `flush_scheduler` cleanup code.\r\n\r\nI'm pretty sure you've been pushed into this weird construction (execute-once code within a while loop) because of the `flush_scheduler` cleanup code being inside the loop. Restructuring the function so the loop breaks and then does the cleanup allows the RPC sync to be separated from the while loop, which seems clearer to me.",
      "created_at": "2019-04-22T21:25:29Z",
      "updated_at": "2019-04-22T21:25:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277443342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277443342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277454926",
      "pull_request_review_id": 229272048,
      "id": 277454926,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQ1NDkyNg==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:",
      "path": "test/functional/test_framework/util.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277408817,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unlike `if-else`, where only *one* branch is executed, the `while-else` (or `for-else`) generally execute *both* branches. To make it even more confusing, it won't execute the else branch when you `break`.",
      "created_at": "2019-04-22T22:06:43Z",
      "updated_at": "2019-04-22T22:06:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277454926",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277454926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277455581",
      "pull_request_review_id": 229272874,
      "id": 277455581,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzQ1NTU4MQ==",
      "diff_hunk": "@@ -390,15 +390,63 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, use_rpc_sync=False, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n-    pools\n+    pools. If use_rpc_sync is set, sync all transactions right away.\n     \"\"\"\n+\n+    class TxInfo:\n+        def __init__(self, *, raw, ancestors):\n+            self.raw = raw\n+            self.ancestors = ancestors\n+\n+    def topo_send(txs, rpc, pool_add):\n+        for i in txs:\n+            topo_send(txs[i].ancestors, rpc, pool_add)\n+            if i not in pool_add:\n+                try:\n+                    assert_equal(i, rpc.sendrawtransaction(txs[i].raw))\n+                    pool_add.add(i)\n+                    # Note that conflicted txs (due to RBF) are not removed\n+                    # from the pool\n+                except JSONRPCException as e:\n+                    # This transaction violates policy (e.g. RBF policy). The\n+                    # mempools should still converge when the high-fee\n+                    # replacement is synced in a later call\n+                    assert 'insufficient fee' in e.error['message']\n+\n     stop_time = time.time() + timeout\n     while time.time() <= stop_time:\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n-        if pool.count(pool[0]) == len(rpc_connections):\n+        sync_done = pool.count(pool[0]) == len(rpc_connections)\n+        if use_rpc_sync and not sync_done:",
      "path": "test/functional/test_framework/util.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "fa1680d748e5166622f7d100a721f550d71253e1",
      "in_reply_to_id": 277408817,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Anyway, I am happy to review a follow-up pull that switches both sync_ helpers to the `while-else` syntax. But, I'd rather not do it here.",
      "created_at": "2019-04-22T22:09:19Z",
      "updated_at": "2019-04-22T22:09:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277455581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277455581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277712902",
      "pull_request_review_id": 229595171,
      "id": 277712902,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzcxMjkwMg==",
      "diff_hunk": "@@ -95,6 +95,7 @@ def __init__(self):\n         self.nodes = []\n         self.network_thread = None\n         self.rpc_timeout = 60  # Wait for up to 60 seconds for the RPC server to respond\n+        self.use_rpc_sync = False",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "in_reply_to_id": null,
      "user": {
        "login": "kostyantyn",
        "id": 296795,
        "node_id": "MDQ6VXNlcjI5Njc5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/296795?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kostyantyn",
        "html_url": "https://github.com/kostyantyn",
        "followers_url": "https://api.github.com/users/kostyantyn/followers",
        "following_url": "https://api.github.com/users/kostyantyn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kostyantyn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kostyantyn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kostyantyn/subscriptions",
        "organizations_url": "https://api.github.com/users/kostyantyn/orgs",
        "repos_url": "https://api.github.com/users/kostyantyn/repos",
        "events_url": "https://api.github.com/users/kostyantyn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kostyantyn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Curious, as the improvement is mostly gained by bypassing Poisson feature, why don't disable it via parameter e.,g,`-enablepoisson=0`, which would be allowed only in regtest? In this case, nodes behave closer to a real scenario, we have cleaner logs as txs are exchanged via P2P only (no race condition), would work even if `sync_mempool` hasn't been called and no need to maintain a custom tx exchange function.",
      "created_at": "2019-04-23T14:38:14Z",
      "updated_at": "2019-04-23T14:38:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277712902",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277712902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277870423",
      "pull_request_review_id": 229794759,
      "id": 277870423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Nzg3MDQyMw==",
      "diff_hunk": "@@ -95,6 +95,7 @@ def __init__(self):\n         self.nodes = []\n         self.network_thread = None\n         self.rpc_timeout = 60  # Wait for up to 60 seconds for the RPC server to respond\n+        self.use_rpc_sync = False",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "original_commit_id": "faac5a8ff6c9966daa880bc8c02951fea804589d",
      "in_reply_to_id": 277712902,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@kostyantyn Good point! Done in\r\n\r\n* net: Send txs without delay on regtest #15881 ",
      "created_at": "2019-04-23T21:02:09Z",
      "updated_at": "2019-04-23T21:02:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/15858#discussion_r277870423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277870423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    }
  ]
}