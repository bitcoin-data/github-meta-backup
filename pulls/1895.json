{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895",
    "id": 2505853,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUwNTg1Mw==",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1895",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/1895.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/1895.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d0b3e77a084ecffae35961994fc0964b37a79f04",
    "number": 1895,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Handle corrupt wallets gracefully.",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Corrupt wallets used to cause a DB_RUNRECOVERY uncaught exception and a\ncrash. This commit does three things:\n\n1) Runs a BDB verify early in the startup process, and if there is a\nlow-level problem with the database:\n- Moves the bad wallet.dat to wallet.timestamp.bak\n- Runs a 'salvage' operation to get key/value pairs, and\n  writes them to a new wallet.dat\n- Continues with startup.\n\n2) Much more tolerant of serialization errors. All errors in deserialization\nare tolerated EXCEPT for errors related to reading keypairs\nor master key records-- those are reported and then shut down, so the user\ncan get help (or recover from a backup).\n\n3) Adds a new -salvagewallet option, which:\n- Moves the wallet.dat to wallet.timestamp.bak\n- extracts ONLY keypairs and master keys into a new wallet.dat\n- soft-sets -rescan, to recreate transaction history\n\nThis was tested by randomly corrupting testnet wallets using a little\npython script I wrote (https://gist.github.com/3812689)\n",
    "labels": [],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/9",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/9",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/9/labels",
      "id": 187629,
      "node_id": "MDk6TWlsZXN0b25lMTg3NjI5",
      "number": 9,
      "state": "closed",
      "title": "0.7.1",
      "description": "0.7.1 minor release, for critical issues found after the 0.7.0 release",
      "creator": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 2,
      "created_at": "2012-10-01T21:13:18Z",
      "updated_at": "2012-10-22T02:24:35Z",
      "closed_at": "2012-10-22T02:24:35Z",
      "due_on": "2012-10-09T07:00:00Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2012-10-01T19:25:49Z",
    "updated_at": "2021-09-08T10:16:22Z",
    "closed_at": "2012-10-09T16:15:37Z",
    "mergeable_state": "unknown",
    "merged_at": "2012-10-09T16:15:37Z",
    "merge_commit_sha": "3bf1230d8cb9d5e2d1f5b8fa7bb791d1f3fe4967",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "gavinandresen:wallet_exceptions",
      "ref": "wallet_exceptions",
      "sha": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 774842,
        "node_id": "MDEwOlJlcG9zaXRvcnk3NzQ4NDI=",
        "name": "bitcoin-git",
        "full_name": "gavinandresen/bitcoin-git",
        "owner": {
          "login": "gavinandresen",
          "id": 331997,
          "node_id": "MDQ6VXNlcjMzMTk5Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gavinandresen",
          "html_url": "https://github.com/gavinandresen",
          "followers_url": "https://api.github.com/users/gavinandresen/followers",
          "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
          "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
          "repos_url": "https://api.github.com/users/gavinandresen/repos",
          "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/gavinandresen/bitcoin-git",
        "description": "Feature branches that aren't yet, or never will be, ready for mainline bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/gavinandresen/bitcoin-git",
        "archive_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/contributors",
        "deployments_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/deployments",
        "downloads_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/downloads",
        "events_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/events",
        "forks_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/forks",
        "git_commits_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/tags%7B/sha%7D",
        "git_url": "git://github.com/gavinandresen/bitcoin-git.git",
        "issue_comment_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/languages",
        "merges_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/merges",
        "milestones_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/releases%7B/id%7D",
        "ssh_url": "git@github.com:gavinandresen/bitcoin-git.git",
        "stargazers_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/stargazers",
        "statuses_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/subscribers",
        "subscription_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/subscription",
        "tags_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/tags",
        "teams_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/teams",
        "trees_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/gavinandresen/bitcoin-git.git",
        "hooks_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/hooks",
        "svn_url": "https://github.com/gavinandresen/bitcoin-git",
        "homepage": "https://github.com/bitcoin",
        "language": "C++",
        "forks_count": 22,
        "stargazers_count": 115,
        "watchers_count": 115,
        "size": 66221,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-07-15T09:13:07Z",
        "created_at": "2010-07-14T15:41:31Z",
        "updated_at": "2023-06-06T03:46:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c2bb42168ba19bb8be4d330238080cb4233cd390",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 531,
    "deletions": 219,
    "changed_files": 8,
    "commits": 3,
    "review_comments": 7,
    "comments": 9
  },
  "events": [
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzU1NTU4Mzp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzU1NTU4Nzp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 9114236,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTQyMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9114236",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-03T17:15:26Z",
      "updated_at": "2012-10-03T17:15:26Z",
      "author_association": "NONE",
      "body": "I know you will for sure dislike the following comment, but I'll try for the last time (you won't get any further comments on strings in your pulls, if you want) as the brave knight for unified string usage ^^. Can you change your Warning messages to the following format:\n\n\"Warning: First sentence! Second sentence.\"\n- start with `Warning:`\n- First sentence (if a sentence) finished with a `!`\n- Further sentences finished with a `.`\n",
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9114236",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "commented",
      "id": 9143425,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkxNDM0MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9143425",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-04T14:36:40Z",
      "updated_at": "2012-10-04T14:36:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Diapolo : good idea on the Verifying message.  And ok, I'll change the first period to an exclamation mark.\n\nI'm finding serious bugs doing more testing; writing here so I don't lose track of them:\n\n1) Getting a crash on my main wallet, bdb complaining about out of memory (out of mutexes).\n\n2) Getting this weirdness switching from newer bitcoind to older:\n 10/04/12 14:16:00 nFileVersion = 70003\n 10/04/12 14:16:00 Performing wallet upgrade to 60000\n\n3) Crash-at-shutdown due to the printf-in-global-destructor bug\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9143425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "mentioned",
      "id": 26182082,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjYxODIwODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26182082",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-04T14:36:40Z"
    },
    {
      "event": "subscribed",
      "id": 26182083,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2MTgyMDgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26182083",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-04T14:36:40Z"
    },
    {
      "event": "commented",
      "id": 9154474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkxNTQ0NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9154474",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-04T19:45:19Z",
      "updated_at": "2012-10-04T19:58:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated to not \"pre-verify\" blkindex.dat which fixes the 'out of mutexes' problem (looks like bdb does not clean up after a ->verify() ?), pick up some changes from @jgarzik version of DBEnv::RemoveDB (kept RemoveDB as the name, though, since it removes a database not a dbenv), and tweaked Warning! messages.\n\nI'll investigate the downgrade weirdness separately, I'm afraid that might be another bug introduced in 0.7.0.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9154474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "mentioned",
      "id": 26210349,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjYyMTAzNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26210349",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-04T19:45:19Z"
    },
    {
      "event": "subscribed",
      "id": 26210350,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2MjEwMzUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26210350",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-04T19:45:19Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzU1NTU5MDp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 9207890,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDc4OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9207890",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-07T13:16:27Z",
      "updated_at": "2012-10-07T13:16:27Z",
      "author_association": "MEMBER",
      "body": "@gavinandresen Do you consider this pull ready now? \n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9207890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "mentioned",
      "id": 26347247,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjYzNDcyNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26347247",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-07T13:16:27Z"
    },
    {
      "event": "subscribed",
      "id": 26347248,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2MzQ3MjQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26347248",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-07T13:16:27Z"
    },
    {
      "event": "commented",
      "id": 9209597,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDk1OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9209597",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-07T16:27:35Z",
      "updated_at": "2012-10-07T16:27:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, this is pull-ready now.\n\nI'd like some help with more thorough testing.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9209597",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "commented",
      "id": 9210115,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMTAxMTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9210115",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-07T17:23:08Z",
      "updated_at": "2012-10-07T17:23:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "So, this can just cause your balance to go to zero with no notice if you're not watching the logs/console output carefully. Perhaps get getinfo error field should get something?\n\nHere is what I tested: \n\nUsing gavin's testnet-in-a-box wallet.\nzzuf -I 'wallet.dat' -s 0:1000 ./bitcoind -daemon=0\n\nSeed 0 fails with Db::open: Invalid argument.  In log I see Salvage(aggressive) found 2372 records.\nRestarting without fuzzing gives me a successful start but zero balance.\n\nRecover original wallet, then run starting with seed 1:\nzzuf -I 'wallet.dat' -s 1:1000 ./bitcoind -daemon=0\n\nFails at seed 1 with \"DbEnv::open: DB_RUNRECOVERY: Fatal error, run database recovery\"\nNo salvage run.\n\nStarting without fuzzing gives the correct balance.\n\nStarting again at seed 2:\nzzuf -I 'wallet.dat' -s 2:1000 ./bitcoind -daemon=0\nThrows \"Bitcoin: Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in /home/gmaxwell/.bitcoin/testnet3; if your balance or transactions are incorrect you should restore from a backup.\" at the console. (first time I've seen that)\n\nLog shows: Renamed wallet.dat to wallet.1349630310.bak\nSalvage(aggressive) found 2372 records\n\nAnd a bunch of nice addwallets.\n\nBut calling getinfo triggers segfault.\n\n-- still, this pull is a massive improvement over default.   Now that we've got a case where there could be backup wallet files laying around perhaps we should go all the way and keep a couple wallet rotation even when there isn't corruption?\n\nPerhaps the fuzzing is a little too nasty to be a realistic test.  Though if we ever change to our own append only format, I absolutely expect it to survive this kind of test.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9210115",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "commented",
      "id": 9210153,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMTAxNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9210153",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-07T17:26:58Z",
      "updated_at": "2012-10-07T17:26:58Z",
      "author_association": "MEMBER",
      "body": "How does this handle encrypted wallets?\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9210153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDVmNDYxY2I2ZDRiYjk1NGZlZjVjM2RlZWJlMmIyYTdiZGJmZTI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d5f461cb6d4bb954fef5c3deebe2b2a7bdbfe27",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d5f461cb6d4bb954fef5c3deebe2b2a7bdbfe27",
      "tree": {
        "sha": "a41c410e8fe04edd5e01d714979b1ef09b44cd42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a41c410e8fe04edd5e01d714979b1ef09b44cd42"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43de64949c96b6d708b7d8a82c3dba0f6ddf059e",
          "sha": "43de64949c96b6d708b7d8a82c3dba0f6ddf059e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/43de64949c96b6d708b7d8a82c3dba0f6ddf059e"
        }
      ],
      "message": "Handle incompatible BDB environments\n\nBefore, opening a -datadir that was created with a new\nversion of Berkeley DB would result in an un-caught DB_RUNRECOVERY\nexception.\n\nAfter these changes, the error is caught and the user is told\nthat there is a problem and is told how to try to recover from\nit.",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-10-08T21:25:17Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-10-08T19:18:04Z"
      },
      "sha": "8d5f461cb6d4bb954fef5c3deebe2b2a7bdbfe27"
    },
    {
      "event": "commented",
      "id": 9240885,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDA4ODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9240885",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-08T21:28:11Z",
      "updated_at": "2012-10-08T21:28:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr it handles encrypted wallets as well as might be expected. It works on the bdb level, salvaging as many key/value pairs as it can from the backed-up wallet.dat.  If it encounters a database-level error reading keys (private keys, encrypted or not, or master keys) it tells the user to try to recover from a backup.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9240885",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "mentioned",
      "id": 26428917,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjY0Mjg5MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26428917",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-08T21:28:11Z"
    },
    {
      "event": "subscribed",
      "id": 26428918,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2NDI4OTE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26428918",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-08T21:28:11Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWQxNzg1ZjcwMWJlOTNhYzI0NjRlODU0YzJhN2RlMWY3NDhlZjg0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eed1785f701be93ac2464e854c2a7de1f748ef84",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eed1785f701be93ac2464e854c2a7de1f748ef84",
      "tree": {
        "sha": "012b0bae35dfc7f35c10d341e50dd31fb88c6cf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/012b0bae35dfc7f35c10d341e50dd31fb88c6cf1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d5f461cb6d4bb954fef5c3deebe2b2a7bdbfe27",
          "sha": "8d5f461cb6d4bb954fef5c3deebe2b2a7bdbfe27",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d5f461cb6d4bb954fef5c3deebe2b2a7bdbfe27"
        }
      ],
      "message": "Handle corrupt wallets gracefully.\n\nCorrupt wallets used to cause a DB_RUNRECOVERY uncaught exception and a\ncrash. This commit does three things:\n\n1) Runs a BDB verify early in the startup process, and if there is a\nlow-level problem with the database:\n  + Moves the bad wallet.dat to wallet.timestamp.bak\n  + Runs a 'salvage' operation to get key/value pairs, and\n    writes them to a new wallet.dat\n  + Continues with startup.\n\n2) Much more tolerant of serialization errors. All errors in deserialization\nare reported by tolerated EXCEPT for errors related to reading keypairs\nor master key records-- those are reported and then shut down, so the user\ncan get help (or recover from a backup).\n\n3) Adds a new -salvagewallet option, which:\n + Moves the wallet.dat to wallet.timestamp.bak\n + extracts ONLY keypairs and master keys into a new wallet.dat\n + soft-sets -rescan, to recreate transaction history\n\nThis was tested by randomly corrupting testnet wallets using a little\npython script I wrote (https://gist.github.com/3812689)",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-10-08T21:46:45Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-09-18T18:30:47Z"
      },
      "sha": "eed1785f701be93ac2464e854c2a7de1f748ef84"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGIzZTc3YTA4NGVjZmZhZTM1OTYxOTk0ZmMwOTY0YjM3YTc5ZjA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0b3e77a084ecffae35961994fc0964b37a79f04",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d0b3e77a084ecffae35961994fc0964b37a79f04",
      "tree": {
        "sha": "73277d9f4ba2a55a0ee4a0fa8221279710362af5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73277d9f4ba2a55a0ee4a0fa8221279710362af5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eed1785f701be93ac2464e854c2a7de1f748ef84",
          "sha": "eed1785f701be93ac2464e854c2a7de1f748ef84",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eed1785f701be93ac2464e854c2a7de1f748ef84"
        }
      ],
      "message": "Don't try to verify a non-existent wallet.dat",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-10-08T21:46:46Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-10-05T23:26:54Z"
      },
      "sha": "d0b3e77a084ecffae35961994fc0964b37a79f04"
    },
    {
      "event": "commented",
      "id": 9244733,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDQ3MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9244733",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-08T23:59:36Z",
      "updated_at": "2012-10-08T23:59:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on top of #1917; changed error handling from bdb methods from exceptions to returned error codes.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#issuecomment-9244733",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1895"
    },
    {
      "event": "merged",
      "id": 26497612,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjY0OTc2MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26497612",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0b3e77a084ecffae35961994fc0964b37a79f04",
      "created_at": "2012-10-09T16:15:37Z"
    },
    {
      "event": "closed",
      "id": 26497613,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjY0OTc2MTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/26497613",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-10-09T16:15:38Z"
    },
    {
      "event": "referenced",
      "id": 4076009660,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwNzYwMDk2NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4076009660",
      "actor": {
        "login": "KolbyML",
        "id": 31669092,
        "node_id": "MDQ6VXNlcjMxNjY5MDky",
        "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KolbyML",
        "html_url": "https://github.com/KolbyML",
        "followers_url": "https://api.github.com/users/KolbyML/followers",
        "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
        "organizations_url": "https://api.github.com/users/KolbyML/orgs",
        "repos_url": "https://api.github.com/users/KolbyML/repos",
        "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KolbyML/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a418e9f1a39153444a1b0e47b5761e109ae5c5a5",
      "commit_url": "https://api.github.com/repos/KolbyML/bitcoin/commits/a418e9f1a39153444a1b0e47b5761e109ae5c5a5",
      "created_at": "2020-12-05T20:50:46Z"
    },
    {
      "event": "locked",
      "id": 5271307035,
      "node_id": "LOE_lADOABII584AbvtmzwAAAAE6McMb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271307035",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:16:22Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735939",
      "pull_request_review_id": null,
      "id": 1735939,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzU5Mzk=",
      "diff_hunk": "@@ -222,189 +426,39 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n                 return DB_CORRUPT;\n             }\n \n-            // Unserialize\n-            // Taking advantage of the fact that pair serialization\n-            // is just the two items serialized one after the other\n-            string strType;\n-            ssKey >> strType;\n-            if (strType == \"name\")\n-            {\n-                string strAddress;\n-                ssKey >> strAddress;\n-                ssValue >> pwallet->mapAddressBook[CBitcoinAddress(strAddress).Get()];\n-            }\n-            else if (strType == \"tx\")\n-            {\n-                uint256 hash;\n-                ssKey >> hash;\n-                CWalletTx& wtx = pwallet->mapWallet[hash];\n-                ssValue >> wtx;\n-                wtx.BindWallet(pwallet);\n-\n-                if (wtx.GetHash() != hash)\n-                    printf(\"Error in wallet.dat, hash mismatch\\n\");\n-\n-                // Undo serialize changes in 31600\n-                if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n-                {\n-                    if (!ssValue.empty())\n-                    {\n-                        char fTmp;\n-                        char fUnused;\n-                        ssValue >> fTmp >> fUnused >> wtx.strFromAccount;\n-                        printf(\"LoadWallet() upgrading tx ver=%d %d '%s' %s\\n\", wtx.fTimeReceivedIsTxTime, fTmp, wtx.strFromAccount.c_str(), hash.ToString().c_str());\n-                        wtx.fTimeReceivedIsTxTime = fTmp;\n-                    }\n-                    else\n-                    {\n-                        printf(\"LoadWallet() repairing tx ver=%d %s\\n\", wtx.fTimeReceivedIsTxTime, hash.ToString().c_str());\n-                        wtx.fTimeReceivedIsTxTime = 0;\n-                    }\n-                    vWalletUpgrade.push_back(hash);\n-                }\n-\n-                if (wtx.nOrderPos == -1)\n-                    fAnyUnordered = true;\n-\n-                //// debug print\n-                //printf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n-                //printf(\" %12\"PRI64d\"  %s  %s  %s\\n\",\n-                //    wtx.vout[0].nValue,\n-                //    DateTimeStrFormat(\"%x %H:%M:%S\", wtx.GetBlockTime()).c_str(),\n-                //    wtx.hashBlock.ToString().substr(0,20).c_str(),\n-                //    wtx.mapValue[\"message\"].c_str());\n-            }\n-            else if (strType == \"acentry\")\n-            {\n-                string strAccount;\n-                ssKey >> strAccount;\n-                uint64 nNumber;\n-                ssKey >> nNumber;\n-                if (nNumber > nAccountingEntryNumber)\n-                    nAccountingEntryNumber = nNumber;\n-\n-                if (!fAnyUnordered)\n-                {\n-                    CAccountingEntry acentry;\n-                    ssValue >> acentry;\n-                    if (acentry.nOrderPos == -1)\n-                        fAnyUnordered = true;\n-                }\n-            }\n-            else if (strType == \"key\" || strType == \"wkey\")\n-            {\n-                vector<unsigned char> vchPubKey;\n-                ssKey >> vchPubKey;\n-                CKey key;\n-                if (strType == \"key\")\n-                {\n-                    CPrivKey pkey;\n-                    ssValue >> pkey;\n-                    key.SetPubKey(vchPubKey);\n-                    key.SetPrivKey(pkey);\n-                    if (key.GetPubKey() != vchPubKey)\n-                    {\n-                        printf(\"Error reading wallet database: CPrivKey pubkey inconsistency\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                    if (!key.IsValid())\n-                    {\n-                        printf(\"Error reading wallet database: invalid CPrivKey\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                }\n-                else\n-                {\n-                    CWalletKey wkey;\n-                    ssValue >> wkey;\n-                    key.SetPubKey(vchPubKey);\n-                    key.SetPrivKey(wkey.vchPrivKey);\n-                    if (key.GetPubKey() != vchPubKey)\n-                    {\n-                        printf(\"Error reading wallet database: CWalletKey pubkey inconsistency\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                    if (!key.IsValid())\n-                    {\n-                        printf(\"Error reading wallet database: invalid CWalletKey\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                }\n-                if (!pwallet->LoadKey(key))\n-                {\n-                    printf(\"Error reading wallet database: LoadKey failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-            }\n-            else if (strType == \"mkey\")\n-            {\n-                unsigned int nID;\n-                ssKey >> nID;\n-                CMasterKey kMasterKey;\n-                ssValue >> kMasterKey;\n-                if(pwallet->mapMasterKeys.count(nID) != 0)\n-                {\n-                    printf(\"Error reading wallet database: duplicate CMasterKey id %u\\n\", nID);\n-                    return DB_CORRUPT;\n-                }\n-                pwallet->mapMasterKeys[nID] = kMasterKey;\n-                if (pwallet->nMasterKeyMaxID < nID)\n-                    pwallet->nMasterKeyMaxID = nID;\n-            }\n-            else if (strType == \"ckey\")\n-            {\n-                vector<unsigned char> vchPubKey;\n-                ssKey >> vchPubKey;\n-                vector<unsigned char> vchPrivKey;\n-                ssValue >> vchPrivKey;\n-                if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey))\n-                {\n-                    printf(\"Error reading wallet database: LoadCryptedKey failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-                fIsEncrypted = true;\n-            }\n-            else if (strType == \"defaultkey\")\n-            {\n-                ssValue >> pwallet->vchDefaultKey;\n-            }\n-            else if (strType == \"pool\")\n-            {\n-                int64 nIndex;\n-                ssKey >> nIndex;\n-                pwallet->setKeyPool.insert(nIndex);\n-            }\n-            else if (strType == \"version\")\n-            {\n-                ssValue >> nFileVersion;\n-                if (nFileVersion == 10300)\n-                    nFileVersion = 300;\n-            }\n-            else if (strType == \"cscript\")\n-            {\n-                uint160 hash;\n-                ssKey >> hash;\n-                CScript script;\n-                ssValue >> script;\n-                if (!pwallet->LoadCScript(script))\n-                {\n-                    printf(\"Error reading wallet database: LoadCScript failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-            }\n-            else if (strType == \"orderposnext\")\n+            // Try to be tolerant of single corrupt records:\n+            string strType, strErr;\n+            if (!ReadKeyValue(pwallet, ssKey, ssValue, nFileVersion,\n+                              vWalletUpgrade, fIsEncrypted, fAnyUnordered, strType, strErr))\n             {\n-                ssValue >> pwallet->nOrderPosNext;\n+                // losing keys is considered a catastrophic error, anything else\n+                // we assume the user can live with:\n+                if (IsKeyType(strType))\n+                    result = DB_CORRUPT;\n+                else if (strType == \"tx\")\n+                    // Rescan if there is a bad transaction record:\n+                    SoftSetBoolArg(\"-rescan\", true);\n+                // Leave other errors alone, if we try to fix them we might make things worse.",
      "path": "src/walletdb.cpp",
      "position": null,
      "original_position": 421,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "959b9ad92694f44e1e234b470ea6539ca8188027",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The result stays DB_LOAD_OK here, so in case of corruptions in non-key/tx records, it silently continues also with the upgrading below at line 458.\nIs this desired behavior? \n\nOr should we set some flag, log a message and show a popup to the user (`uiInterface.ThreadSafeMessageBox`) at the end of the function that recovery has taken place and that some wallet data (such as address book entries, details can be found in debug.log...) might be corrupt?\n",
      "created_at": "2012-10-02T06:34:32Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1735939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1738639",
      "pull_request_review_id": null,
      "id": 1738639,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzg2Mzk=",
      "diff_hunk": "@@ -222,189 +426,39 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n                 return DB_CORRUPT;\n             }\n \n-            // Unserialize\n-            // Taking advantage of the fact that pair serialization\n-            // is just the two items serialized one after the other\n-            string strType;\n-            ssKey >> strType;\n-            if (strType == \"name\")\n-            {\n-                string strAddress;\n-                ssKey >> strAddress;\n-                ssValue >> pwallet->mapAddressBook[CBitcoinAddress(strAddress).Get()];\n-            }\n-            else if (strType == \"tx\")\n-            {\n-                uint256 hash;\n-                ssKey >> hash;\n-                CWalletTx& wtx = pwallet->mapWallet[hash];\n-                ssValue >> wtx;\n-                wtx.BindWallet(pwallet);\n-\n-                if (wtx.GetHash() != hash)\n-                    printf(\"Error in wallet.dat, hash mismatch\\n\");\n-\n-                // Undo serialize changes in 31600\n-                if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n-                {\n-                    if (!ssValue.empty())\n-                    {\n-                        char fTmp;\n-                        char fUnused;\n-                        ssValue >> fTmp >> fUnused >> wtx.strFromAccount;\n-                        printf(\"LoadWallet() upgrading tx ver=%d %d '%s' %s\\n\", wtx.fTimeReceivedIsTxTime, fTmp, wtx.strFromAccount.c_str(), hash.ToString().c_str());\n-                        wtx.fTimeReceivedIsTxTime = fTmp;\n-                    }\n-                    else\n-                    {\n-                        printf(\"LoadWallet() repairing tx ver=%d %s\\n\", wtx.fTimeReceivedIsTxTime, hash.ToString().c_str());\n-                        wtx.fTimeReceivedIsTxTime = 0;\n-                    }\n-                    vWalletUpgrade.push_back(hash);\n-                }\n-\n-                if (wtx.nOrderPos == -1)\n-                    fAnyUnordered = true;\n-\n-                //// debug print\n-                //printf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n-                //printf(\" %12\"PRI64d\"  %s  %s  %s\\n\",\n-                //    wtx.vout[0].nValue,\n-                //    DateTimeStrFormat(\"%x %H:%M:%S\", wtx.GetBlockTime()).c_str(),\n-                //    wtx.hashBlock.ToString().substr(0,20).c_str(),\n-                //    wtx.mapValue[\"message\"].c_str());\n-            }\n-            else if (strType == \"acentry\")\n-            {\n-                string strAccount;\n-                ssKey >> strAccount;\n-                uint64 nNumber;\n-                ssKey >> nNumber;\n-                if (nNumber > nAccountingEntryNumber)\n-                    nAccountingEntryNumber = nNumber;\n-\n-                if (!fAnyUnordered)\n-                {\n-                    CAccountingEntry acentry;\n-                    ssValue >> acentry;\n-                    if (acentry.nOrderPos == -1)\n-                        fAnyUnordered = true;\n-                }\n-            }\n-            else if (strType == \"key\" || strType == \"wkey\")\n-            {\n-                vector<unsigned char> vchPubKey;\n-                ssKey >> vchPubKey;\n-                CKey key;\n-                if (strType == \"key\")\n-                {\n-                    CPrivKey pkey;\n-                    ssValue >> pkey;\n-                    key.SetPubKey(vchPubKey);\n-                    key.SetPrivKey(pkey);\n-                    if (key.GetPubKey() != vchPubKey)\n-                    {\n-                        printf(\"Error reading wallet database: CPrivKey pubkey inconsistency\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                    if (!key.IsValid())\n-                    {\n-                        printf(\"Error reading wallet database: invalid CPrivKey\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                }\n-                else\n-                {\n-                    CWalletKey wkey;\n-                    ssValue >> wkey;\n-                    key.SetPubKey(vchPubKey);\n-                    key.SetPrivKey(wkey.vchPrivKey);\n-                    if (key.GetPubKey() != vchPubKey)\n-                    {\n-                        printf(\"Error reading wallet database: CWalletKey pubkey inconsistency\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                    if (!key.IsValid())\n-                    {\n-                        printf(\"Error reading wallet database: invalid CWalletKey\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                }\n-                if (!pwallet->LoadKey(key))\n-                {\n-                    printf(\"Error reading wallet database: LoadKey failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-            }\n-            else if (strType == \"mkey\")\n-            {\n-                unsigned int nID;\n-                ssKey >> nID;\n-                CMasterKey kMasterKey;\n-                ssValue >> kMasterKey;\n-                if(pwallet->mapMasterKeys.count(nID) != 0)\n-                {\n-                    printf(\"Error reading wallet database: duplicate CMasterKey id %u\\n\", nID);\n-                    return DB_CORRUPT;\n-                }\n-                pwallet->mapMasterKeys[nID] = kMasterKey;\n-                if (pwallet->nMasterKeyMaxID < nID)\n-                    pwallet->nMasterKeyMaxID = nID;\n-            }\n-            else if (strType == \"ckey\")\n-            {\n-                vector<unsigned char> vchPubKey;\n-                ssKey >> vchPubKey;\n-                vector<unsigned char> vchPrivKey;\n-                ssValue >> vchPrivKey;\n-                if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey))\n-                {\n-                    printf(\"Error reading wallet database: LoadCryptedKey failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-                fIsEncrypted = true;\n-            }\n-            else if (strType == \"defaultkey\")\n-            {\n-                ssValue >> pwallet->vchDefaultKey;\n-            }\n-            else if (strType == \"pool\")\n-            {\n-                int64 nIndex;\n-                ssKey >> nIndex;\n-                pwallet->setKeyPool.insert(nIndex);\n-            }\n-            else if (strType == \"version\")\n-            {\n-                ssValue >> nFileVersion;\n-                if (nFileVersion == 10300)\n-                    nFileVersion = 300;\n-            }\n-            else if (strType == \"cscript\")\n-            {\n-                uint160 hash;\n-                ssKey >> hash;\n-                CScript script;\n-                ssValue >> script;\n-                if (!pwallet->LoadCScript(script))\n-                {\n-                    printf(\"Error reading wallet database: LoadCScript failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-            }\n-            else if (strType == \"orderposnext\")\n+            // Try to be tolerant of single corrupt records:\n+            string strType, strErr;\n+            if (!ReadKeyValue(pwallet, ssKey, ssValue, nFileVersion,\n+                              vWalletUpgrade, fIsEncrypted, fAnyUnordered, strType, strErr))\n             {\n-                ssValue >> pwallet->nOrderPosNext;\n+                // losing keys is considered a catastrophic error, anything else\n+                // we assume the user can live with:\n+                if (IsKeyType(strType))\n+                    result = DB_CORRUPT;\n+                else if (strType == \"tx\")\n+                    // Rescan if there is a bad transaction record:\n+                    SoftSetBoolArg(\"-rescan\", true);\n+                // Leave other errors alone, if we try to fix them we might make things worse.",
      "path": "src/walletdb.cpp",
      "position": null,
      "original_position": 421,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "959b9ad92694f44e1e234b470ea6539ca8188027",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An earlier version of this code extended DBErrors to have different levels of error, but the code started getting complicated and confusing (e.g. you could have a wallet that had a key error, a non-key error, AND needed upgrading... maybe DBErrors should be a bitmask, etc).\n\nBut telling the user that there is something wrong is definitely a good idea, I'll make that so.\n",
      "created_at": "2012-10-02T13:45:13Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1738639",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1738639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740914",
      "pull_request_review_id": null,
      "id": 1740914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDA5MTQ=",
      "diff_hunk": "@@ -222,189 +426,39 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n                 return DB_CORRUPT;\n             }\n \n-            // Unserialize\n-            // Taking advantage of the fact that pair serialization\n-            // is just the two items serialized one after the other\n-            string strType;\n-            ssKey >> strType;\n-            if (strType == \"name\")\n-            {\n-                string strAddress;\n-                ssKey >> strAddress;\n-                ssValue >> pwallet->mapAddressBook[CBitcoinAddress(strAddress).Get()];\n-            }\n-            else if (strType == \"tx\")\n-            {\n-                uint256 hash;\n-                ssKey >> hash;\n-                CWalletTx& wtx = pwallet->mapWallet[hash];\n-                ssValue >> wtx;\n-                wtx.BindWallet(pwallet);\n-\n-                if (wtx.GetHash() != hash)\n-                    printf(\"Error in wallet.dat, hash mismatch\\n\");\n-\n-                // Undo serialize changes in 31600\n-                if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n-                {\n-                    if (!ssValue.empty())\n-                    {\n-                        char fTmp;\n-                        char fUnused;\n-                        ssValue >> fTmp >> fUnused >> wtx.strFromAccount;\n-                        printf(\"LoadWallet() upgrading tx ver=%d %d '%s' %s\\n\", wtx.fTimeReceivedIsTxTime, fTmp, wtx.strFromAccount.c_str(), hash.ToString().c_str());\n-                        wtx.fTimeReceivedIsTxTime = fTmp;\n-                    }\n-                    else\n-                    {\n-                        printf(\"LoadWallet() repairing tx ver=%d %s\\n\", wtx.fTimeReceivedIsTxTime, hash.ToString().c_str());\n-                        wtx.fTimeReceivedIsTxTime = 0;\n-                    }\n-                    vWalletUpgrade.push_back(hash);\n-                }\n-\n-                if (wtx.nOrderPos == -1)\n-                    fAnyUnordered = true;\n-\n-                //// debug print\n-                //printf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n-                //printf(\" %12\"PRI64d\"  %s  %s  %s\\n\",\n-                //    wtx.vout[0].nValue,\n-                //    DateTimeStrFormat(\"%x %H:%M:%S\", wtx.GetBlockTime()).c_str(),\n-                //    wtx.hashBlock.ToString().substr(0,20).c_str(),\n-                //    wtx.mapValue[\"message\"].c_str());\n-            }\n-            else if (strType == \"acentry\")\n-            {\n-                string strAccount;\n-                ssKey >> strAccount;\n-                uint64 nNumber;\n-                ssKey >> nNumber;\n-                if (nNumber > nAccountingEntryNumber)\n-                    nAccountingEntryNumber = nNumber;\n-\n-                if (!fAnyUnordered)\n-                {\n-                    CAccountingEntry acentry;\n-                    ssValue >> acentry;\n-                    if (acentry.nOrderPos == -1)\n-                        fAnyUnordered = true;\n-                }\n-            }\n-            else if (strType == \"key\" || strType == \"wkey\")\n-            {\n-                vector<unsigned char> vchPubKey;\n-                ssKey >> vchPubKey;\n-                CKey key;\n-                if (strType == \"key\")\n-                {\n-                    CPrivKey pkey;\n-                    ssValue >> pkey;\n-                    key.SetPubKey(vchPubKey);\n-                    key.SetPrivKey(pkey);\n-                    if (key.GetPubKey() != vchPubKey)\n-                    {\n-                        printf(\"Error reading wallet database: CPrivKey pubkey inconsistency\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                    if (!key.IsValid())\n-                    {\n-                        printf(\"Error reading wallet database: invalid CPrivKey\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                }\n-                else\n-                {\n-                    CWalletKey wkey;\n-                    ssValue >> wkey;\n-                    key.SetPubKey(vchPubKey);\n-                    key.SetPrivKey(wkey.vchPrivKey);\n-                    if (key.GetPubKey() != vchPubKey)\n-                    {\n-                        printf(\"Error reading wallet database: CWalletKey pubkey inconsistency\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                    if (!key.IsValid())\n-                    {\n-                        printf(\"Error reading wallet database: invalid CWalletKey\\n\");\n-                        return DB_CORRUPT;\n-                    }\n-                }\n-                if (!pwallet->LoadKey(key))\n-                {\n-                    printf(\"Error reading wallet database: LoadKey failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-            }\n-            else if (strType == \"mkey\")\n-            {\n-                unsigned int nID;\n-                ssKey >> nID;\n-                CMasterKey kMasterKey;\n-                ssValue >> kMasterKey;\n-                if(pwallet->mapMasterKeys.count(nID) != 0)\n-                {\n-                    printf(\"Error reading wallet database: duplicate CMasterKey id %u\\n\", nID);\n-                    return DB_CORRUPT;\n-                }\n-                pwallet->mapMasterKeys[nID] = kMasterKey;\n-                if (pwallet->nMasterKeyMaxID < nID)\n-                    pwallet->nMasterKeyMaxID = nID;\n-            }\n-            else if (strType == \"ckey\")\n-            {\n-                vector<unsigned char> vchPubKey;\n-                ssKey >> vchPubKey;\n-                vector<unsigned char> vchPrivKey;\n-                ssValue >> vchPrivKey;\n-                if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey))\n-                {\n-                    printf(\"Error reading wallet database: LoadCryptedKey failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-                fIsEncrypted = true;\n-            }\n-            else if (strType == \"defaultkey\")\n-            {\n-                ssValue >> pwallet->vchDefaultKey;\n-            }\n-            else if (strType == \"pool\")\n-            {\n-                int64 nIndex;\n-                ssKey >> nIndex;\n-                pwallet->setKeyPool.insert(nIndex);\n-            }\n-            else if (strType == \"version\")\n-            {\n-                ssValue >> nFileVersion;\n-                if (nFileVersion == 10300)\n-                    nFileVersion = 300;\n-            }\n-            else if (strType == \"cscript\")\n-            {\n-                uint160 hash;\n-                ssKey >> hash;\n-                CScript script;\n-                ssValue >> script;\n-                if (!pwallet->LoadCScript(script))\n-                {\n-                    printf(\"Error reading wallet database: LoadCScript failed\\n\");\n-                    return DB_CORRUPT;\n-                }\n-            }\n-            else if (strType == \"orderposnext\")\n+            // Try to be tolerant of single corrupt records:\n+            string strType, strErr;\n+            if (!ReadKeyValue(pwallet, ssKey, ssValue, nFileVersion,\n+                              vWalletUpgrade, fIsEncrypted, fAnyUnordered, strType, strErr))\n             {\n-                ssValue >> pwallet->nOrderPosNext;\n+                // losing keys is considered a catastrophic error, anything else\n+                // we assume the user can live with:\n+                if (IsKeyType(strType))\n+                    result = DB_CORRUPT;\n+                else if (strType == \"tx\")\n+                    // Rescan if there is a bad transaction record:\n+                    SoftSetBoolArg(\"-rescan\", true);\n+                // Leave other errors alone, if we try to fix them we might make things worse.",
      "path": "src/walletdb.cpp",
      "position": null,
      "original_position": 421,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "959b9ad92694f44e1e234b470ea6539ca8188027",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I like the idea to have bitmasks to handle error codes btw.\n",
      "created_at": "2012-10-02T17:01:52Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1740914",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1752512",
      "pull_request_review_id": null,
      "id": 1752512,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI1MTI=",
      "diff_hunk": "@@ -480,7 +489,34 @@ bool AppInit2()\n \n     int64 nStart;\n \n-    // ********************************************************* Step 5: network initialization\n+    // ********************************************************* Step 5: verify database integrity\n+",
      "path": "src/init.cpp",
      "position": 52,
      "original_position": 53,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "648e148a7ef97251befc7592dc3c3f62a6a78c24",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this process takes a few seconds (or more), it's IMO worth adding a `uiInterface.InitMessage(_(\"Verifying database integrity...\"));` message here.\n",
      "created_at": "2012-10-03T17:07:55Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1752512",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1752512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 492,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767049",
      "pull_request_review_id": null,
      "id": 1767049,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjcwNDk=",
      "diff_hunk": "@@ -141,6 +141,75 @@ void CDBEnv::MakeMock()\n     fMockDb = true;\n }\n \n+CDBEnv::VerifyResult CDBEnv::Verify(std::string strFile, bool (*recoverFunc)(CDBEnv& dbenv, std::string strFile))\n+{\n+    LOCK(cs_db);\n+    assert(mapFileUseCount.count(strFile) == 0);\n+\n+    try {\n+        Db db(&dbenv, 0);\n+        int result = db.verify(strFile.c_str(), NULL, NULL, 0);\n+        if (result == 0)\n+            return VERIFY_OK;\n+    }\n+    catch (DbException &e) {\n+        if (recoverFunc == NULL)\n+            return RECOVER_FAIL;\n+    }\n+\n+    // Try to recover:\n+    bool fRecovered = (*recoverFunc)(*this, strFile);\n+    return (fRecovered ? RECOVER_OK : RECOVER_FAIL);\n+}\n+\n+bool CDBEnv::Salvage(std::string strFile, bool fAggressive,\n+                     std::vector<CDBEnv::KeyValPair >& vResult)\n+{\n+    LOCK(cs_db);\n+    assert(mapFileUseCount.count(strFile) == 0);\n+\n+    u_int32_t flags = DB_SALVAGE;\n+    if (fAggressive) flags |= DB_AGGRESSIVE;\n+\n+    stringstream strDump;\n+\n+    int result = 0;\n+    try {\n+        Db db(&dbenv, 0);\n+        result = db.verify(strFile.c_str(), NULL, &strDump, flags);\n+    }\n+    catch (DbException& e) {\n+        printf(\"ERROR: db salvage failed\\n\");\n+        return false;\n+    }\n+",
      "path": "src/db.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "86d793ba8d2ab487354269ca3430d3bba1216655",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My god... is that was is necessary to recover from BDB? Manually parse the hex dump created by a library?\n\nI want to get rid of BDB yesterday.\n",
      "created_at": "2012-10-04T21:08:59Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1767049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1769967",
      "pull_request_review_id": null,
      "id": 1769967,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk5Njc=",
      "diff_hunk": "@@ -141,6 +141,75 @@ void CDBEnv::MakeMock()\n     fMockDb = true;\n }\n \n+CDBEnv::VerifyResult CDBEnv::Verify(std::string strFile, bool (*recoverFunc)(CDBEnv& dbenv, std::string strFile))\n+{\n+    LOCK(cs_db);\n+    assert(mapFileUseCount.count(strFile) == 0);\n+\n+    try {\n+        Db db(&dbenv, 0);\n+        int result = db.verify(strFile.c_str(), NULL, NULL, 0);\n+        if (result == 0)\n+            return VERIFY_OK;\n+    }\n+    catch (DbException &e) {\n+        if (recoverFunc == NULL)\n+            return RECOVER_FAIL;\n+    }\n+\n+    // Try to recover:\n+    bool fRecovered = (*recoverFunc)(*this, strFile);\n+    return (fRecovered ? RECOVER_OK : RECOVER_FAIL);\n+}\n+\n+bool CDBEnv::Salvage(std::string strFile, bool fAggressive,\n+                     std::vector<CDBEnv::KeyValPair >& vResult)\n+{\n+    LOCK(cs_db);\n+    assert(mapFileUseCount.count(strFile) == 0);\n+\n+    u_int32_t flags = DB_SALVAGE;\n+    if (fAggressive) flags |= DB_AGGRESSIVE;\n+\n+    stringstream strDump;\n+\n+    int result = 0;\n+    try {\n+        Db db(&dbenv, 0);\n+        result = db.verify(strFile.c_str(), NULL, &strDump, flags);\n+    }\n+    catch (DbException& e) {\n+        printf(\"ERROR: db salvage failed\\n\");\n+        return false;\n+    }\n+",
      "path": "src/db.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "86d793ba8d2ab487354269ca3430d3bba1216655",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Recovery is never a nice process, if things are broken enough you always get to a level where you have to look at hexdumps of the raw file to salvage anything. At least you still get delimited keys/values here. \n\nIs it any prettier for leveldb, for example?\n",
      "created_at": "2012-10-05T05:51:29Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1769967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1769967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1770805",
      "pull_request_review_id": null,
      "id": 1770805,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzA4MDU=",
      "diff_hunk": "@@ -141,6 +141,75 @@ void CDBEnv::MakeMock()\n     fMockDb = true;\n }\n \n+CDBEnv::VerifyResult CDBEnv::Verify(std::string strFile, bool (*recoverFunc)(CDBEnv& dbenv, std::string strFile))\n+{\n+    LOCK(cs_db);\n+    assert(mapFileUseCount.count(strFile) == 0);\n+\n+    try {\n+        Db db(&dbenv, 0);\n+        int result = db.verify(strFile.c_str(), NULL, NULL, 0);\n+        if (result == 0)\n+            return VERIFY_OK;\n+    }\n+    catch (DbException &e) {\n+        if (recoverFunc == NULL)\n+            return RECOVER_FAIL;\n+    }\n+\n+    // Try to recover:\n+    bool fRecovered = (*recoverFunc)(*this, strFile);\n+    return (fRecovered ? RECOVER_OK : RECOVER_FAIL);\n+}\n+\n+bool CDBEnv::Salvage(std::string strFile, bool fAggressive,\n+                     std::vector<CDBEnv::KeyValPair >& vResult)\n+{\n+    LOCK(cs_db);\n+    assert(mapFileUseCount.count(strFile) == 0);\n+\n+    u_int32_t flags = DB_SALVAGE;\n+    if (fAggressive) flags |= DB_AGGRESSIVE;\n+\n+    stringstream strDump;\n+\n+    int result = 0;\n+    try {\n+        Db db(&dbenv, 0);\n+        result = db.verify(strFile.c_str(), NULL, &strDump, flags);\n+    }\n+    catch (DbException& e) {\n+        printf(\"ERROR: db salvage failed\\n\");\n+        return false;\n+    }\n+",
      "path": "src/db.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "d0b3e77a084ecffae35961994fc0964b37a79f04",
      "original_commit_id": "86d793ba8d2ab487354269ca3430d3bba1216655",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There are no leveldb tools; I think 'recovery' is the same as 'opening', and 'crashing' is the same as 'closing' in LevelDB. There are a few flags to set the degree of checksum verification or paranoidness when opening, though.\n",
      "created_at": "2012-10-05T08:45:06Z",
      "updated_at": "2012-10-08T21:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1895#discussion_r1770805",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1770805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1895"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}