{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859",
    "id": 630201792,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjMwMjAxNzky",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21859",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21859.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21859.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
    "number": 21859,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add minisketch subtree and integrate in build/test",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds a `src/minisketch` subtree, taken from the master branch of https://github.com/sipa/minisketch, to prepare for Erlay implementation (see #21515). It gets configured for just supporting 32-bit fields (the only ones we're interested in in the context of Erlay), and some code on top is added:\r\n* A very basic unit test (just to make sure compilation & running works; actual correctness checking is done through minisketch's own tests).\r\n* A wrapper in `minisketchwrapper.{cpp,h}` that runs a benchmark to determine which field implementation to use.",
    "labels": [
      {
        "id": 159815356,
        "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
        "name": "Upstream",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "created_at": "2021-05-05T01:23:13Z",
    "updated_at": "2022-10-30T19:10:04Z",
    "closed_at": "2021-09-28T07:08:42Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "30dec899a5c36a2307b6c54aa4e674a5fddc936c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:202105_minisketch",
      "ref": "202105_minisketch",
      "sha": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e69cbac628bfdca4a8e4ead821190eaf5b6b3d07",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 8930,
    "deletions": 23,
    "changed_files": 84,
    "commits": 9,
    "review_comments": 23,
    "comments": 57
  },
  "events": [
    {
      "event": "labeled",
      "id": 4686388303,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2ODYzODgzMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4686388303",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T01:23:56Z",
      "label": {
        "name": "Upstream",
        "color": "bfd4f2"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4686411760,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY4NjQxMTc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4686411760",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T01:37:40Z"
    },
    {
      "event": "commented",
      "id": 832366353,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjM2NjM1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832366353",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T02:04:18Z",
      "updated_at": "2021-05-05T02:04:18Z",
      "author_association": "MEMBER",
      "body": "@sipsorcery Could you help with adding MSVC build config here?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-832366353",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4686458493,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY4NjQ1ODQ5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4686458493",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T02:04:18Z"
    },
    {
      "event": "subscribed",
      "id": 4686458496,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2ODY0NTg0OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4686458496",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T02:04:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4686486956,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY4NjQ4Njk1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4686486956",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T02:20:27Z"
    },
    {
      "event": "commented",
      "id": 832472531,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjQ3MjUzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832472531",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:23:51Z",
      "updated_at": "2021-05-05T07:23:51Z",
      "author_association": "MEMBER",
      "body": "@sipa will do.",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-832472531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4687228628,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY4NzIyODYyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4687228628",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:23:51Z"
    },
    {
      "event": "subscribed",
      "id": 4687228631,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2ODcyMjg2MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4687228631",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:23:51Z"
    },
    {
      "event": "commented",
      "id": 832474947,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjQ3NDk0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832474947",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:28:12Z",
      "updated_at": "2021-05-05T07:28:12Z",
      "author_association": "MEMBER",
      "body": "From ci:\r\n\r\n```\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/minisketch/src/fields/clmul_common_impl.h:23:23 in unsigned int (anonymous namespace)::MulWithClMulReduce<unsigned int, 32, 141u>(unsigned int, unsigned int)\r\n  ORIGIN: invalid (0). Might be a bug in MemorySanitizer origin tracking.\r\n    This could still be a bug in your code, too!",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-832474947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 832476787,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjQ3Njc4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832476787",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:31:37Z",
      "updated_at": "2021-05-05T07:31:37Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke I believe it is simply msan not being able to reason through the intrinsics (see src/minisketch/src/field/clmul_common_impl.h).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-832476787",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4687263037,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY4NzI2MzAzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4687263037",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:31:37Z"
    },
    {
      "event": "subscribed",
      "id": 4687263043,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2ODcyNjMwNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4687263043",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T07:31:37Z"
    },
    {
      "event": "reviewed",
      "id": 652005185,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjUyMDA1MTg1",
      "url": null,
      "actor": null,
      "commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Subawit",
        "id": 83602467,
        "node_id": "MDQ6VXNlcjgzNjAyNDY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/83602467?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Subawit",
        "html_url": "https://github.com/Subawit",
        "followers_url": "https://api.github.com/users/Subawit/followers",
        "following_url": "https://api.github.com/users/Subawit/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Subawit/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Subawit/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Subawit/subscriptions",
        "organizations_url": "https://api.github.com/users/Subawit/orgs",
        "repos_url": "https://api.github.com/users/Subawit/repos",
        "events_url": "https://api.github.com/users/Subawit/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Subawit/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-652005185",
      "submitted_at": "2021-05-05T07:36:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "reviewed",
      "id": 652222652,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjUyMjIyNjUy",
      "url": null,
      "actor": null,
      "commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-652222652",
      "submitted_at": "2021-05-05T12:04:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "reviewed",
      "id": 652223272,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjUyMjIzMjcy",
      "url": null,
      "actor": null,
      "commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-652223272",
      "submitted_at": "2021-05-05T12:05:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "commented",
      "id": 832736638,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjczNjYzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832736638",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T14:31:30Z",
      "updated_at": "2021-05-05T14:31:30Z",
      "author_association": "MEMBER",
      "body": "Attached diff adds a `minisketch` project to the msvc build config. I did make a few small code changes to `minisketch.h` and `minisketch.cpp` to remove a warning and change the location for a header.\r\n\r\n[minisketch.diff.gz](https://github.com/bitcoin/bitcoin/files/6427858/minisketch.diff.gz)\r\n",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-832736638",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "labeled",
      "id": 4689902028,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2ODk5MDIwMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4689902028",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-05T15:49:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 833397513,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzM5NzUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/833397513",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-06T09:56:20Z",
      "updated_at": "2021-05-06T09:56:20Z",
      "author_association": "MEMBER",
      "body": "Do minisketch's own tests get run when running `make check` from bitcoin's base directory? I think it'd be good to modify `make check` to only run the base bitcoin tests, and then have another build target (`make check_all`?) that also runs the subtree unit tests. Those subtrees only get updated every few months. I expect many developers run `make check` many times a day and it seems wasteful to rerun the same unmodified tests on the same unmodified subtrees every time.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-833397513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 833407347,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzQwNzM0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/833407347",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-06T10:12:07Z",
      "updated_at": "2021-05-06T10:12:07Z",
      "author_association": "MEMBER",
      "body": "CI would need to run them, though. As this is the only place where sanitizers are run regularly.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-833407347",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699243556,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTI0MzU1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699243556",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T03:58:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699260546,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTI2MDU0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699260546",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T04:04:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699264620,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTI2NDYyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699264620",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T04:05:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699327000,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTMyNzAwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699327000",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T04:29:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699348353,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTM0ODM1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699348353",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T04:37:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699431681,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTQzMTY4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699431681",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T05:05:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699444359,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTQ0NDM1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699444359",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T05:10:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699462068,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTQ2MjA2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699462068",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T05:17:45Z"
    },
    {
      "event": "unlabeled",
      "id": 4699469912,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDY5OTQ2OTkxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699469912",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T05:20:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699549759,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTU0OTc1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699549759",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T05:50:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4699714652,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY5OTcxNDY1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699714652",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T06:39:13Z"
    },
    {
      "event": "commented",
      "id": 834196929,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDE5NjkyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834196929",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T09:10:15Z",
      "updated_at": "2021-09-18T14:54:57Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22646](https://github.com/bitcoin/bitcoin/pull/22646) ([POC] Tighter Univalue integration, remove `--with-system-univalue` by fanquake)\n* [#21515](https://github.com/bitcoin/bitcoin/pull/21515) (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-834196929",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 834202423,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDIwMjQyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834202423",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T09:18:59Z",
      "updated_at": "2021-05-07T09:18:59Z",
      "author_association": "MEMBER",
      "body": "Failure on arm: `./build-aux/test-driver: line 107: ./test-verify: cannot execute binary file: Exec format error`\r\n\r\nYou might have to modify the `./ci/test/wrap-qemu.sh` script.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-834202423",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4704018270,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwNDAxODI3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704018270",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T18:53:33Z"
    },
    {
      "event": "commented",
      "id": 834703011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDcwMzAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834703011",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T19:06:31Z",
      "updated_at": "2021-05-07T19:13:47Z",
      "author_association": "MEMBER",
      "body": "@sipsorcery Thanks, I've incorporated some of your changes (see https://github.com/sipa/minisketch/pull/36), and MSVC build/test works now.\r\n\r\nAt least one issue remains: when running the minisketch tests, wine can't find libgcc and other dlls. In minisketch's own CI that's worked around by passing `CXXFLAGS=-static -static-libgcc -static-libstdc++`, but it's a bit ugly to pass that through to the sub-configure (a) only for the win64 cirrus build and (b) without doing that for non-minisketch targets. Anyone have a suggestion?\r\n* Make wine find the necessary dll's somehow?\r\n* Just pass `CXXFLAGS=-static -static-libgcc -static-libstdc++` in general to the win64 cirrus configure?\r\n* I have no idea how `src/test/test_bitcoin.exe` avoids this problem, but perhaps its solution is usable too?\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-834703011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4704085417,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwNDA4NTQxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704085417",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T19:06:31Z"
    },
    {
      "event": "subscribed",
      "id": 4704085423,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDQwODU0MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704085423",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T19:06:31Z"
    },
    {
      "event": "commented",
      "id": 834750354,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDc1MDM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834750354",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T20:22:21Z",
      "updated_at": "2021-05-07T20:22:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nVery nice work sipa, gmaxwell and naumenkogs!\r\n\r\nIs it mentioned somewhere in the documentation that `Minisketch::Add` is not an idempotent operation?\r\n\r\nIn other words that …\r\n\r\n```\r\nsketch.Add(i);\r\n```\r\n\r\n… does not have the same effect as …\r\n\r\n```\r\nsketch.Add(i);\r\nsketch.Add(i);\r\n```\r\n\r\nFWIW I couldn't find any such note in `src/minisketch/include/minisketch.h` :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-834750354",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 834782141,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDc4MjE0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834782141",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:10:06Z",
      "updated_at": "2021-05-07T21:10:26Z",
      "author_association": "MEMBER",
      "body": "@practicalswift It's explained in https://github.com/sipa/minisketch/#readme at least, and inherent to symmetric set reconciliation. I don't think the header file should try to explain set reconciliation in detail, but if you have specific suggestions to improve the header, feel free to PR them (in the minisketch repo).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-834782141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4704683563,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwNDY4MzU2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704683563",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:10:06Z"
    },
    {
      "event": "subscribed",
      "id": 4704683571,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDQ2ODM1NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704683571",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:10:06Z"
    },
    {
      "event": "commented",
      "id": 834807963,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDgwNzk2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834807963",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:57:00Z",
      "updated_at": "2021-05-07T21:57:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @practicalswift It's explained in https://github.com/sipa/minisketch/#readme at least, and inherent to symmetric set reconciliation. I don't think the header file should try to explain set reconciliation in detail, but if you have specific suggestions to improve the header, feel free to PR them (in the minisketch repo).\r\n\r\nI think the following should be enough to help avoid unnecessary mistakes in calling code in the hypothetical scenario that the library user is not familiar with set reconciliation details. Submitted as https://github.com/sipa/minisketch/pull/38.\r\n\r\n```patch\r\ndiff --git a/include/minisketch.h b/include/minisketch.h\r\nindex d73123d..23af18f 100644\r\n--- a/include/minisketch.h\r\n+++ b/include/minisketch.h\r\n@@ -104,6 +104,8 @@ void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\r\n  * If the element to be added is 0 (after potentially dropping the most significant\r\n  * bits), then this function is a no-op. Sketches cannot contain an element with\r\n  * the value 0.\r\n+ *\r\n+ * Note that adding the same element a second time removes it again.\r\n  */\r\n void minisketch_add_uint64(minisketch* sketch, uint64_t element);\r\n\r\n@@ -246,7 +248,7 @@ public:\r\n         return *this;\r\n     }\r\n\r\n-    /** See miniksetch_add_element(). */\r\n+    /** See minisketch_add_uint64(). */\r\n     Minisketch& Add(uint64_t element) noexcept\r\n     {\r\n         minisketch_add_uint64(m_minisketch.get(), element);\r\n```",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-834807963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4704875516,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwNDg3NTUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704875516",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:57:00Z"
    },
    {
      "event": "subscribed",
      "id": 4704875520,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDQ4NzU1MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4704875520",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:57:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4705126863,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwNTEyNjg2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4705126863",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T23:07:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4705843067,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwNTg0MzA2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4705843067",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T02:55:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4706359934,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwNjM1OTkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4706359934",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T04:53:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4706390188,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwNjM5MDE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4706390188",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T05:05:50Z"
    },
    {
      "event": "commented",
      "id": 835397936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTM5NzkzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835397936",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T15:12:24Z",
      "updated_at": "2021-05-08T15:12:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Another interface design question:\r\n\r\nThe `Minisketch` constructor does not signal constructor failure by throwing.\r\n\r\nIs that intentional to allow for use in non-Bitcoin Core environments where using exceptions may not be an option?\r\n\r\nI'm a bit worried that the current design might introduce a gotcha/sharp edge which is probably best illustrated by the example below.\r\n\r\nTo be clear: I understand there is a trade-off here and perhaps this gotcha is a price worth paying for a potentially larger user base of the library outside of Bitcoin Core, but I just want to make sure I fully understand the rationale behind the current interface design :)\r\n\r\n---\r\n\r\n**Highly optional review club style quiz (target audience: reviewers and library users :))**\r\n\r\n\r\nAfter reading the documentation in `include/minisketch.h` a library user might write the following code:\r\n\r\n```c++\r\nconstexpr size_t FIELD_SIZE = 32;\r\nconstexpr size_t BYTES_PER_SKETCH_CAPACITY = FIELD_SIZE / 8;\r\nconstexpr size_t MAX_SKETCH_CAPACITY = 8192;\r\n\r\nvoid ProcessSketchMessage(const std::vector<uint8_t>& remote_sketch_serialized) {\r\n    const size_t remote_capacity = remote_sketch_serialized.size() / BYTES_PER_SKETCH_CAPACITY;\r\n    if (remote_capacity > MAX_SKETCH_CAPACITY) {\r\n        // Sketch too large. Skip processing.\r\n        return;\r\n    }\r\n    Minisketch remote_sketch{FIELD_SIZE, 0, remote_capacity};\r\n    if (remote_sketch_serialized.size() != remote_sketch.GetSerializedSize()) {\r\n        // Unexpected sketch size. Skip processing.\r\n        return;\r\n    }\r\n    remote_sketch.Deserialize(remote_sketch_serialized);\r\n    // …\r\n    // Do something useful.\r\n    // …\r\n}\r\n```\r\n\r\nLooks quite reasonable? :)\r\n\r\nThe library user is happy with his/her code: he/she gets the expected results when testing it using a couple of thousand normal test cases. Symmetric set reconciliation is fun! :)\r\n\r\nHowever, the library user becomes a bit sad when an attacker shows up and provides a carefully crafted input which causes a `nullptr` dereference.\r\n\r\nReview club style quiz questions:\r\n* What is the attacker input that caused the `nullptr` dereference?\r\n* Where does the `nullptr` dereference take place?\r\n* Did the library user miss anything of importance when reading the documentation in `include/minisketch.h`?\r\n* What is the conventional approach to construction failure and what is the \"zombie object\" approach? When/why is the latter approach used?\r\n",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835397936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 835399963,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTM5OTk2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835399963",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T15:19:18Z",
      "updated_at": "2021-05-08T15:19:18Z",
      "author_association": "MEMBER",
      "body": "@practicalswift You mean because the construction internally OOMs? If that happens you have bigger problems, I think, as you'd generally use this with capacities of 10s to maybe 1000s. Beyond that, O(n^2) decoding cost starts to make it unusable.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835399963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4708040321,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwODA0MDMyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708040321",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T15:19:18Z"
    },
    {
      "event": "subscribed",
      "id": 4708040322,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDgwNDAzMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708040322",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T15:19:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4708155393,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwODE1NTM5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708155393",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T16:08:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4708267119,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwODI2NzExOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708267119",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T16:56:54Z"
    },
    {
      "event": "commented",
      "id": 835442997,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTQ0Mjk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835442997",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T17:41:50Z",
      "updated_at": "2021-05-08T17:41:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> You mean because the construction internally OOMs? If that happens you have bigger problems, I think, as you'd generally use this with capacities of 10s to maybe 1000s. Beyond that, O(n^2) decoding cost starts to make it unusable.\r\n\r\n@sipa No, note that the user code in the example is very careful about not processing large inputs, so memory exhaustion or excessive run-time is not the problem here.\r\n\r\nThe `if (remote_capacity > MAX_SKETCH_CAPACITY) {` guards against large inputs:\r\n\r\n```c++\r\nconstexpr size_t FIELD_SIZE = 32;\r\nconstexpr size_t BYTES_PER_SKETCH_CAPACITY = FIELD_SIZE / 8;\r\nconstexpr size_t MAX_SKETCH_CAPACITY = 8192;\r\n\r\nvoid ProcessSketchMessage(const std::vector<uint8_t>& remote_sketch_serialized) {\r\n    const size_t remote_capacity = remote_sketch_serialized.size() / BYTES_PER_SKETCH_CAPACITY;\r\n    if (remote_capacity > MAX_SKETCH_CAPACITY) {\r\n        // Sketch too large. Skip processing.\r\n        return;\r\n    }\r\n    Minisketch remote_sketch{FIELD_SIZE, 0, remote_capacity};\r\n    if (remote_sketch_serialized.size() != remote_sketch.GetSerializedSize()) {\r\n        // Unexpected sketch size. Skip processing.\r\n        return;\r\n    }\r\n    remote_sketch.Deserialize(remote_sketch_serialized);\r\n    // …\r\n    // Do something useful.\r\n    // …\r\n}\r\n```\r\n\r\n**WARNING! Spoiler alert! WARNING!**\r\n\r\n<details>\r\n<summary>Click to show spoiler</summary>\r\nConsider what happens when the attacker submits a \"mini-minisketch\": in other words a tiny tiny input... :)\r\n</details>\r\n\r\n",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835442997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4708372384,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwODM3MjM4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708372384",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T17:41:50Z"
    },
    {
      "event": "subscribed",
      "id": 4708372385,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDgzNzIzODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708372385",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T17:41:50Z"
    },
    {
      "event": "commented",
      "id": 835445069,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTQ0NTA2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835445069",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T17:47:11Z",
      "updated_at": "2021-05-08T18:39:49Z",
      "author_association": "MEMBER",
      "body": "@practicalswift You can use `if (sketch)` to detect if a sketch is usable, which may be the case for several reasons (field not implemented, implementation number too high or incompatible with field, illegal capacity, OOM, ...).\r\n\r\nSee https://github.com/sipa/minisketch/pull/39 for some improvements to the documentation.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835445069",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4708386048,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwODM4NjA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708386048",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T17:47:11Z"
    },
    {
      "event": "subscribed",
      "id": 4708386051,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDgzODYwNTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708386051",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T17:47:11Z"
    },
    {
      "event": "referenced",
      "id": 4708448001,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3MDg0NDgwMDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708448001",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2bec6d9bf32cf17602d98cbc40a278025800516f",
      "commit_url": "https://api.github.com/repos/sipa/minisketch/commits/2bec6d9bf32cf17602d98cbc40a278025800516f",
      "created_at": "2021-05-08T18:12:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4708718245,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwODcxODI0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708718245",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T20:12:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4708841584,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwODg0MTU4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4708841584",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T21:07:51Z"
    },
    {
      "event": "commented",
      "id": 835550512,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTU1MDUxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835550512",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T22:36:19Z",
      "updated_at": "2021-05-08T22:36:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa \r\n\r\n> You can use `if (sketch)` to detect if a sketch is usable, which may be the case for several reasons (field not implemented, implementation number too high or incompatible with field, illegal capacity, OOM, ...).\r\n>\r\n> See [sipa/minisketch#39](https://github.com/sipa/minisketch/pull/39) for some improvements to the documentation.\r\n\r\nThanks for updating the documentation. Now the gotcha is documented: that is better :)\r\n\r\nI'm aware that `operator bool()` can be used to check if a `Minisketch` object is a valid object or a zombie object: I'm just afraid that there is a real risk of \"use-before-zombie-check\" errors.\r\n\r\nMy experience is that signalling constructor failure by silently creating a zombie object (instead of throwing) leads to fragile code. Most C++ programmers are used to constructors that either create a fully valid object or throw. Even if the programmer is aware that the somewhat unusual \"zombie check idiom\" is used it is very easy to miss checking it in at least some code path.\r\n\r\nSee the current Erlay code [`txreconciliation.cpp`](https://github.com/bitcoin/bitcoin/blob/1d8d43ed095ef7abade4d62ddc2ede34d4a1a59b/src/txreconciliation.cpp) (#21515) as an example. Not all code paths do \"zombie checking\" using `operator bool()` before using a newly created `Minisketch` object.\r\n\r\nConsider this example:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1d8d43ed095ef7abade4d62ddc2ede34d4a1a59b/src/txreconciliation.cpp#L559\r\n\r\nIf we were throwing instead of creating a zombie object in case of constructor failure we wouldn't have to worry about a potential `nullptr` dereference here.\r\n\r\nThat's why I'm curious about this interface design choice to better understand the trade-offs considered: are we intentionally avoiding throwing to allow for use in non-Bitcoin Core environments where using exceptions may not be an option, or am I missing some other reason for this design choice? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835550512",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4709047163,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwOTA0NzE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4709047163",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T22:36:19Z"
    },
    {
      "event": "subscribed",
      "id": 4709047164,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDkwNDcxNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4709047164",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-08T22:36:19Z"
    },
    {
      "event": "commented",
      "id": 835587369,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTU4NzM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835587369",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T00:15:46Z",
      "updated_at": "2021-05-09T00:16:32Z",
      "author_association": "MEMBER",
      "body": "@practicalswift Exceptions in my opinion are for exceptional situations - things that couldn't have been reasonably prevented by the programmer (things like I/O failure, for example), as they can be deep down in a function call stack, and dealing with them along the way there is both inconvenient and pointless. Except for OOM perhaps, none of the cases where Minisketch construction fails are like this - they all indicate the programmer is doing something wrong. It wouldn't be unreasonable to have assertions for them instead, I guess. OOM is a bit different as it is an exceptional situation, but it's also one that can't occur realistically (due to the size of sketches libminisketch can work with) and is almost always a nothing-can-be-done-about-this situation (you'd just terminate as ~all allocations will fail).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835587369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4709258051,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwOTI1ODA1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4709258051",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T00:15:46Z"
    },
    {
      "event": "subscribed",
      "id": 4709258055,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDkyNTgwNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4709258055",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T00:15:46Z"
    },
    {
      "event": "labeled",
      "id": 4710825213,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3MTA4MjUyMTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4710825213",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T12:56:06Z",
      "label": {
        "name": "Needs gitian build",
        "color": "8c9e07"
      }
    },
    {
      "event": "labeled",
      "id": 4710825215,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3MTA4MjUyMTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4710825215",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T12:56:06Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 835912345,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTkxMjM0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835912345",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:31:26Z",
      "updated_at": "2021-05-09T22:31:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa\r\n\r\nAssuming that we really don't want to throw in the constructor:\r\n\r\nPerhaps an alternative could be to use the named constructor idiom and return `std::optional<Minisketch>`? (With `std::nullopt` being returned if a valid/usable `Minisketch` object could not constructed.)\r\n\r\nSomething along the lines of:\r\n\r\n```c++\r\nclass Minisketch {\r\nprivate:\r\n    Minisketch(uint32_t bits, uint32_t implementation, size_t capacity) noexcept;\r\n    …\r\npublic:\r\n    static std::optional<Minisketch> Create(uint32_t bits, uint32_t implementation, size_t capacity) noexcept;\r\n    …\r\n}\r\n```\r\n\r\nTo be precise the situation I'm worried about with the current design is when `capacity` in `Minisketch(uint32_t bits, uint32_t implementation, size_t capacity)` is indirectly attacker controlled via the attacker provided serialized sketch, and the programmer forgets to check the possibility of a zombie state `Minisketch` object before using it. Note that if `capacity` is `0` then an invalid zombie state `Minisketch` object is created, and using such an invalid `Minisketch` object will cause a `nullptr` dereference as the library is currently written.\r\n\r\nNote that the programmer is likely to check for a \"too large\" sketch: he/she is likely to intuitively understand that such a thing might be dangerous, but the fact that a \"too small\" sketch is dangerous too is a real gotcha IMO :)\r\n\r\n> Exceptions in my opinion are for exceptional situations - things that couldn't have been reasonably prevented by the programmer (things like I/O failure, for example), as they can be deep down in a function call stack, and dealing with them along the way there is both inconvenient and pointless.\r\n\r\nThanks for sharing your perspective. I know you're well aware of all the usual counterarguments, but I'm sharing some links to other perspectives for reviewers who might be unaware :)\r\n\r\n* C++ Core Guidelines: [C.42: If a constructor cannot construct a valid object, throw an exception. Leaving behind an invalid object is asking for trouble.](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c42-if-a-constructor-cannot-construct-a-valid-object-throw-an-exception)\r\n* C++ Core Guidelines: [C.41: A constructor should create a fully initialized object. A constructor establishes the invariant for a class. A user of a class should be able to assume that a constructed object is usable.](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c41-a-constructor-should-create-a-fully-initialized-object)\r\n* The Standard C++ Foundation's C++ FAQ: [How can I handle a constructor that fails? Throw an exception. […] The idea of a “zombie” object has a lot of down-side.](https://isocpp.org/wiki/faq/exceptions#ctors-can-throw)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835912345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4712057193,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcxMjA1NzE5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4712057193",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:31:27Z"
    },
    {
      "event": "subscribed",
      "id": 4712057197,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MTIwNTcxOTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4712057197",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:31:27Z"
    },
    {
      "event": "commented",
      "id": 835913660,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTkxMzY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835913660",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:35:14Z",
      "updated_at": "2021-05-09T22:35:14Z",
      "author_association": "MEMBER",
      "body": "> Perhaps an alternative could be to use the named constructor idiom and return std::optional<Minisketch>\r\n\r\nI think that's rather silly, because that's effectively what a Minisketch object already is. It is a simple wrapper around std::unique_ptr<internal type>, and behaves exactly like that (except that the internal object is not accessible).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835913660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 835918711,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTkxODcxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835918711",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:49:02Z",
      "updated_at": "2021-05-09T22:50:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa \r\n\r\nI think you're missing my point.\r\n\r\nPerhaps my point is better explained in code.\r\n\r\nExecuting …\r\n\r\n```\r\nMinisketch sketch{32, 0, /* likely to be attacker controlled */ 0};\r\nsketch.GetCapacity(); // or really any operation on the invalid Minisketch zombie object\r\n```\r\n\r\n… currently yields …\r\n\r\n```\r\n==30177==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55a2bc704dcb bp 0x7ffe524b6070 sp 0x7ffe524b6040 T0)\r\n==30177==The signal is caused by a READ memory access.\r\n==30177==Hint: address points to the zero page.\r\n    #0 0x55a2bc704dcb in Sketch::Check() const /home/thomas/bitcoin/src/minisketch/src/sketch.h:24:39\r\n    #1 0x55a2bc704dcb in minisketch_capacity /home/thomas/bitcoin/src/minisketch/src/minisketch.cpp:368:8\r\n    #2 0x55a2bb3fc61b in Minisketch::GetCapacity() const ./minisketch/include/minisketch.h:239:50\r\n…\r\n```\r\n\r\nIs that how we want it to work? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835918711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4712102096,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcxMjEwMjA5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4712102096",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:49:02Z"
    },
    {
      "event": "subscribed",
      "id": 4712102098,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MTIxMDIwOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4712102098",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T22:49:02Z"
    },
    {
      "event": "commented",
      "id": 835937493,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTkzNzQ5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/835937493",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T23:28:02Z",
      "updated_at": "2021-05-10T00:00:54Z",
      "author_association": "MEMBER",
      "body": "@practicalswift I understand your point, but I don't think there is a big difference with what you're suggesting.\r\n\r\n```c++\r\nstd::optional<Minisketch> sketch = Minisketch::Create(32, 0, 0);\r\nsketch->GetCapacity();\r\n```\r\n\r\nis equally going to cause problems, if the API user isn't aware the create call can fail. And when those problems appear, it'll be obvious where the problem is.\r\n\r\nPerhaps a better question is: would removing the capacity==0 edge case not solve more problems?\r\n\r\nEDIT: see https://github.com/sipa/minisketch/pull/40",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-835937493",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4712211715,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcxMjIxMTcxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4712211715",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T23:28:02Z"
    },
    {
      "event": "subscribed",
      "id": 4712211720,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MTIyMTE3MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4712211720",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-09T23:28:02Z"
    },
    {
      "event": "commented",
      "id": 836337858,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNjMzNzg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/836337858",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-10T08:07:26Z",
      "updated_at": "2021-05-10T08:07:26Z",
      "author_association": "MEMBER",
      "body": "@sipa I haven't read all the discussion in this PR so don't want to weigh in on the interface design, but:\r\n\r\n> I don't think there is a big difference with what you're suggesting.\r\n> \r\n> ```\r\n> std::optional<Minisketch> sketch = Minisketch::Create(32, 0, 0);\r\n> sketch->GetCapacity();\r\n> ```\r\n>\r\n> is equally going to cause problems, if the API user isn't aware the create call can fail.\r\n\r\nis certainly different from returning a bare object that may be in a valid or invalid state. Unwrapping an optional without first checking that it contains a value is very clearly a bug, and should be obvious to any programmer or compiler, even if they don't know the semantics of the library function that is being called.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-836337858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4714667091,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcxNDY2NzA5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4714667091",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-10T08:07:26Z"
    },
    {
      "event": "subscribed",
      "id": 4714667096,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MTQ2NjcwOTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4714667096",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-10T08:07:26Z"
    },
    {
      "event": "referenced",
      "id": 4720686984,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3MjA2ODY5ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4720686984",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ba7905f91ef88d0fb838779e4ee4dc32e1a8f947",
      "commit_url": "https://api.github.com/repos/sipa/minisketch/commits/ba7905f91ef88d0fb838779e4ee4dc32e1a8f947",
      "created_at": "2021-05-10T20:55:47Z"
    },
    {
      "event": "commented",
      "id": 837351795,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzM1MTc5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/837351795",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-10T21:13:13Z",
      "updated_at": "2021-05-10T21:15:04Z",
      "author_association": "MEMBER",
      "body": "@jnewbery Sure, it's better at conveying to the API user that the call may fail. But I think that's the wrong information: it'll only fail when used incorrectly (*). It's not something the user should be checking for in the first place - what would be done at runtime with that information? The only thing that needs to happen is fixing the code. Putting an optional around it adds both unnecessary overhead, and the wrong signal IMO.\r\n\r\n(*) I admit that capacity=0 was an edge case that could occur at runtime, and would be unexpected. Just merged https://github.com/sipa/minisketch/pull/40 to fix that, will update this PR to reflect that.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-837351795",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4720808560,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcyMDgwODU2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4720808560",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-10T21:13:14Z"
    },
    {
      "event": "subscribed",
      "id": 4720808567,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MjA4MDg1Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4720808567",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-10T21:13:14Z"
    },
    {
      "event": "commented",
      "id": 838548466,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzODU0ODQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/838548466",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-11T14:13:30Z",
      "updated_at": "2021-05-11T14:13:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa \r\n\r\nThanks for addressing the `capacity=0` edge case. That resolves my concern.\r\n\r\nI'm not particularly worried about the other two constructor failure cases (`std::bad_alloc` and unavailable combination of `bits`/`implementation`) since the conditions triggering them are much less likely to be under attacker control.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-838548466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4727873462,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcyNzg3MzQ2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4727873462",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-11T14:13:31Z"
    },
    {
      "event": "subscribed",
      "id": 4727873471,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3Mjc4NzM0NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4727873471",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-11T14:13:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4731931480,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDczMTkzMTQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4731931480",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-11T22:02:17Z"
    },
    {
      "event": "unlabeled",
      "id": 4736787353,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDczNjc4NzM1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4736787353",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T14:45:50Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 839842726,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTg0MjcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/839842726",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T14:59:18Z",
      "updated_at": "2021-05-12T14:59:18Z",
      "author_association": "MEMBER",
      "body": "<details><summary>make check-symbols</summary>\r\n\r\n```\r\n+ make -C src --jobs=1 check-symbols V=1\r\nmake: Entering directory '/distsrc-base/distsrc-202a89b644f0-x86_64-linux-gnu/src'\r\nChecking glibc back compat...\r\nCPPFILT=/root/.guix-profile/bin/x86_64-linux-gnu-c++filt /root/.guix-profile/bin/python3.8 ../contrib/devtools/symbol-check.py bitcoind  bitcoin-cli bitcoin-tx bitcoin-wallet bitcoin-util test/test_bitcoin  qt/bitcoin-qt  \r\nbitcoind: export of symbol typeinfo for std::ios_base::failure[abi:cxx11] not allowed\r\nbitcoind: export of symbol VTT for std::basic_ifstream<char, std::char_traits<char> > not allowed\r\nbitcoind: export of symbol vtable for std::basic_streambuf<char, std::char_traits<char> > not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf() not allowed\r\nbitcoind: export of symbol typeinfo for std::_V2::error_category not allowed\r\nbitcoind: export of symbol typeinfo for std::invalid_argument not allowed\r\nbitcoind: export of symbol vtable for std::basic_ifstream<char, std::char_traits<char> > not allowed\r\nbitcoind: export of symbol typeinfo for std::out_of_range not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf() not allowed\r\nbitcoind: export of symbol std::cerr not allowed\r\nbitcoind: export of symbol vtable for std::basic_filebuf<char, std::char_traits<char> > not allowed\r\nbitcoind: export of symbol typeinfo for std::future_error not allowed\r\nbitcoind: export of symbol vtable for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol vtable for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf() not allowed\r\nbitcoind: export of symbol typeinfo for std::logic_error not allowed\r\nbitcoind: export of symbol VTT for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) not allowed\r\nbitcoind: export of symbol vtable for std::future_error not allowed\r\nbitcoind: export of symbol typeinfo for std::runtime_error not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) not allowed\r\nbitcoind: export of symbol std::nothrow not allowed\r\nbitcoind: export of symbol vtable for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) not allowed\r\nbitcoind: export of symbol std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) not allowed\r\nbitcoind: export of symbol vtable for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol VTT for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol vtable for std::bad_alloc not allowed\r\nbitcoind: export of symbol typeinfo for std::bad_alloc not allowed\r\nbitcoind: export of symbol std::ctype<char>::do_widen(char) const not allowed\r\nbitcoind: export of symbol vtable for std::basic_ios<char, std::char_traits<char> > not allowed\r\nbitcoind: export of symbol typeinfo for std::locale::facet not allowed\r\nbitcoind: export of symbol vtable for std::system_error not allowed\r\nbitcoind: export of symbol VTT for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > not allowed\r\nbitcoind: export of symbol typeinfo for long not allowed\r\nbitcoind: export of symbol vtable for std::ios_base::failure[abi:cxx11] not allowed\r\nbitcoind: export of symbol typeinfo for short not allowed\r\nbitcoind: export of symbol typeinfo for unsigned short not allowed\r\nbitcoind: export of symbol std::cout not allowed\r\nbitcoind: export of symbol typeinfo for void not allowed\r\nbitcoind: export of symbol std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id not allowed\r\nbitcoind: export of symbol void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) not allowed\r\nbitcoind: export of symbol void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) not allowed\r\nbitcoind: export of symbol vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > not allowed\r\nbitcoind: NEEDED library libstdc++.so.6 is not allowed\r\nbitcoind: failed EXPORTED_SYMBOLS LIBRARY_DEPENDENCIES\r\n```\r\n\r\n</details>",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-839842726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 840020185,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDAyMDE4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840020185",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T18:53:29Z",
      "updated_at": "2021-05-12T18:53:29Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Ok, please advise?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-840020185",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4738177815,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDczODE3NzgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4738177815",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T18:53:29Z"
    },
    {
      "event": "subscribed",
      "id": 4738177819,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MzgxNzc4MTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4738177819",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T18:53:29Z"
    },
    {
      "event": "commented",
      "id": 840038554,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDAzODU1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840038554",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T19:24:34Z",
      "updated_at": "2021-05-12T19:24:34Z",
      "author_association": "MEMBER",
      "body": "No idea what that failure is. The build people will have to take a look.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-840038554",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 840038832,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDAzODgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840038832",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T19:25:03Z",
      "updated_at": "2021-05-12T19:25:03Z",
      "author_association": "MEMBER",
      "body": "I am just saying that this can't be merged (yet) because it would break the guix build.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-840038832",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 840043666,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDA0MzY2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840043666",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T19:33:58Z",
      "updated_at": "2021-05-12T22:11:14Z",
      "author_association": "MEMBER",
      "body": "Oh, I see. I thought it was a clarification on why it's complaining about missing libraries (but it may well be related).\r\n\r\n> The build people will have to take a look.\r\n\r\nThe great miners and craftsmen of the mountain halls?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-840043666",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4739109287,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDczOTEwOTI4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4739109287",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T22:56:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4739211907,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDczOTIxMTkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4739211907",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-12T23:37:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4739350029,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDczOTM1MDAyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4739350029",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-13T00:32:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4739626322,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDczOTYyNjMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4739626322",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-13T02:23:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4740100340,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc0MDEwMDM0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4740100340",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-13T05:47:53Z"
    },
    {
      "event": "commented",
      "id": 840363543,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDM2MzU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840363543",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-13T07:05:18Z",
      "updated_at": "2021-05-13T07:05:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "cr ACK b195ae3af078a9038c7d654a267eb14b9332ae70 modulo CI green: patch looks correct, minisketch is awesome and changes are limited to `Makefile.am`, `build_msvc/`, `ci/`, `configure.ac`, `src/Makefile.*`, `src/minisketch/`, `src/minisketchwrapper.cpp`, `src/minisketchwrapper.h`, `src/test/minisketch_tests.cpp` and `test/lint/`.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-840363543",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4740486891,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc0MDQ4Njg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4740486891",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-13T07:32:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4745332418,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc0NTMzMjQxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4745332418",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-14T05:59:23Z"
    },
    {
      "event": "unlabeled",
      "id": 4745948477,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDc0NTk0ODQ3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4745948477",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-14T08:52:44Z",
      "label": {
        "name": "Needs gitian build",
        "color": "8c9e07"
      }
    },
    {
      "event": "comment_deleted",
      "id": 4746055619,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0NzQ2MDU1NjE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4746055619",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-14T09:18:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4750484890,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc1MDQ4NDg5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750484890",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-15T22:49:57Z"
    },
    {
      "event": "referenced",
      "id": 4750612760,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NTA2MTI3NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750612760",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4c1d32bfd484a6da1ba96e1aea5a0ff83251cfa7",
      "commit_url": "https://api.github.com/repos/sipa/minisketch/commits/4c1d32bfd484a6da1ba96e1aea5a0ff83251cfa7",
      "created_at": "2021-05-16T03:00:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4750614714,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc1MDYxNDcxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750614714",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T03:04:01Z"
    },
    {
      "event": "labeled",
      "id": 4750615202,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3NTA2MTUyMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750615202",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T03:04:49Z",
      "label": {
        "name": "Needs gitian build",
        "color": "8c9e07"
      }
    },
    {
      "event": "labeled",
      "id": 4750615203,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3NTA2MTUyMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750615203",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T03:04:49Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 841760973,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTc2MDk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841760973",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T03:39:38Z",
      "updated_at": "2021-05-16T03:39:38Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Build issues resolved, I believe.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-841760973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4750631606,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1MDYzMTYwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750631606",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T03:39:38Z"
    },
    {
      "event": "subscribed",
      "id": 4750631607,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTA2MzE2MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4750631607",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T03:39:38Z"
    },
    {
      "event": "commented",
      "id": 841835509,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTgzNTUwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841835509",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-16T15:49:59Z",
      "updated_at": "2021-05-16T15:49:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "cr re-ACK 35049cf2a16a63bd1adf511e8c0ac526be5e4e8a CI now green, patch looks correct, minisketch is still awesome and changes are limited to `Makefile.am`, `build_msvc/`, `ci/`, `configure.ac`, `src/Makefile.*`, `src/minisketch/`, `src/minisketchwrapper.cpp`, `src/minisketchwrapper.h`, `src/test/minisketch_tests.cpp` and `test/lint/`.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-841835509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "unlabeled",
      "id": 4757048483,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDc1NzA0ODQ4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4757048483",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-17T21:27:37Z",
      "label": {
        "name": "Needs gitian build",
        "color": "8c9e07"
      }
    },
    {
      "event": "reviewed",
      "id": 664235602,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0MjM1NjAy",
      "url": null,
      "actor": null,
      "commit_id": "35049cf2a16a63bd1adf511e8c0ac526be5e4e8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 35049cf2a1\r\n\r\nOnly reviewed src/minisketchwrapper and src/test/minisketch_tests. Left a few very minor comments that should be ignored unless you need to retouch this branch for any reason.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-664235602",
      "submitted_at": "2021-05-20T11:13:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "unlabeled",
      "id": 4828131329,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDgyODEzMTMyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4828131329",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-01T22:15:06Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 852702915,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjcwMjkxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852702915",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-02T04:06:57Z",
      "updated_at": "2021-06-02T04:06:57Z",
      "author_association": "MEMBER",
      "body": "It appears that linking in libminisketch causes `bitcoind` and other binaries to suddenly export(?) libstdc++ symbols. This is beyond my skills, I humbly request the services of the Build People.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-852702915",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 854089288,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDA4OTI4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854089288",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-03T18:34:08Z",
      "updated_at": "2021-06-03T18:50:03Z",
      "author_association": "MEMBER",
      "body": "Edit: Disregard, seems to be an issue with all posted guix builds, so unrelated to minisketch.\r\n\r\nDidn't find anything about libstdc++ being included in the bitcoind binary, but on Ubuntu 18.04 running `ldd bitcoind` on the provided guix binaries errors on:\r\n\r\n```\r\n./bitcoind: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by ./bitcoind)\r\n./bitcoind: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.28' not found (required by ./bitcoind)\r\n```\r\n\r\nRunning `objdump -T bitcoind | grep '2\\.28\\|2\\.29'` shows the offending symbols:\r\n\r\n```\r\n0000000000000000      DF *UND*\t0000000000000000  GLIBC_2.28  fcntl64\r\n0000000000000000      DF *UND*\t0000000000000000  GLIBC_2.29  log\r\n0000000000000000      DF *UND*\t0000000000000000  GLIBC_2.29  pow\r\n0000000000000000      DF *UND*\t0000000000000000  GLIBC_2.29  exp\r\n```\r\n\r\nI guess these need to be wrapped in `compat/glibc_compat.cpp`? I'm not sure if wrapping glibc functionality is still the workaround used currently. If so, there's a stackoverflow answer detailing the wrapping of fcntl64: https://stackoverflow.com/questions/58472958/how-to-force-linkage-to-older-libc-fcntl-instead-of-fcntl64/58472959#58472959 . I guess `log`, `pow` and `exp` could be wrapped in the same way `log2f` is currently wrapped, they are also provided by GLIBC_2.2.5 on x86_64 (though I don't know about the other architectures, might be a different version for arm).",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-854089288",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 854285518,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDI4NTUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854285518",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-04T01:14:44Z",
      "updated_at": "2021-06-04T01:14:44Z",
      "author_association": "MEMBER",
      "body": "> Edit: Disregard, seems to be an issue with all posted guix builds, so unrelated to minisketch.\r\n\r\nIndeed, this is #21454, which does need fixing, but is not introduced by this PR.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-854285518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 854303336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDMwMzMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854303336",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-04T02:09:34Z",
      "updated_at": "2021-06-04T02:09:34Z",
      "author_association": "MEMBER",
      "body": "Well, there is still something making the guix build fail, with this in `guix_build.log`, which isn't in master's build:\r\n\r\n```\r\nChecking glibc back compat...\r\nChecking glibc back compat...\r\nCPPFILT=/root/.guix-profile/bin/x86_64-linux-gnu-c++filt /root/.guix-profile/bin/python3.8 ../contrib/devtools/symbol-check.py bitcoind  bitcoin-cli bitcoin-tx bitcoin-wallet bitcoin-util test/test_bitcoin  qt/bitcoin-qt  \r\nbitcoind: export of symbol typeinfo for std::ios_base::failure[abi:cxx11] not allowed\r\n...\r\n```",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-854303336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "commented",
      "id": 854677006,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDY3NzAwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854677006",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-04T12:35:52Z",
      "updated_at": "2021-06-04T12:35:52Z",
      "author_association": "MEMBER",
      "body": "> Well, there is still something making the guix build fail,\r\n\r\nGiven the symbols that are being exported, is this be some sort of C++ version/ABI incompatibility problem? Will have a closer look shortly.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-854677006",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "labeled",
      "id": 4853050902,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ4NTMwNTA5MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4853050902",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-07T16:08:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4973578593,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDk3MzU3ODU5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4973578593",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T23:48:26Z"
    },
    {
      "event": "labeled",
      "id": 4973578931,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5NzM1Nzg5MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4973578931",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T23:48:44Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 873307477,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzMwNzQ3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873307477",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-02T23:52:06Z",
      "updated_at": "2021-07-02T23:52:06Z",
      "author_association": "MEMBER",
      "body": "Rebased, and updated to include https://github.com/sipa/minisketch/pull/44.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-873307477",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "unlabeled",
      "id": 4973613252,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDk3MzYxMzI1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4973613252",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-03T00:15:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 4974042023,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDk3NDA0MjAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4974042023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-03T09:50:40Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "labeled",
      "id": 4979279567,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5NzkyNzk1Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4979279567",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-05T15:51:33Z",
      "label": {
        "name": "Needs Guix build",
        "color": "bfd4f2"
      }
    },
    {
      "event": "comment_deleted",
      "id": 4979280053,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0OTc5MjgwMDUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4979280053",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-05T15:51:41Z"
    },
    {
      "event": "comment_deleted",
      "id": 4979281820,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0OTc5MjgxODIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4979281820",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-05T15:52:09Z"
    },
    {
      "event": "comment_deleted",
      "id": 4979283943,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0OTc5MjgzOTQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4979283943",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-05T15:52:44Z"
    },
    {
      "event": "comment_deleted",
      "id": 4979284900,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0OTc5Mjg0OTAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4979284900",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-05T15:52:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4979713071,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDk3OTcxMzA3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4979713071",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-05T18:16:44Z"
    },
    {
      "event": "commented",
      "id": 874449826,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDQ0OTgyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874449826",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T04:27:23Z",
      "updated_at": "2021-07-06T04:27:23Z",
      "author_association": "MEMBER",
      "body": "I still get these failures in guix that I can't explain. @dongcarl @fanquake \r\n\r\n```\r\nqt/bitcoin-qt: symbol operator delete[](void*, unsigned long) from unsupported version CXXABI_1.3.9\r\nqt/bitcoin-qt: symbol std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) from unsupported version GLIBCXX_3.4.21\r\nqt/bitcoin-qt: symbol std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int) from unsupported version GLIBCXX_3.4\r\nqt/bitcoin-qt: symbol std::allocator<char>::allocator(std::allocator<char> const&) from unsupported version GLIBCXX_3.4\r\n...\r\n```",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-874449826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4980866090,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk4MDg2NjA5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4980866090",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T04:27:23Z"
    },
    {
      "event": "subscribed",
      "id": 4980866095,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5ODA4NjYwOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4980866095",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T04:27:23Z"
    },
    {
      "event": "mentioned",
      "id": 4980866101,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk4MDg2NjEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4980866101",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T04:27:23Z"
    },
    {
      "event": "subscribed",
      "id": 4980866103,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5ODA4NjYxMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4980866103",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T04:27:23Z"
    },
    {
      "event": "commented",
      "id": 874587226,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDU4NzIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874587226",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T08:58:59Z",
      "updated_at": "2021-07-06T08:58:59Z",
      "author_association": "MEMBER",
      "body": "> I still get these failures in guix that I can't explain. @dongcarl @fanquake\r\n\r\nThis will fix them:\r\n```diff\r\ndiff --git a/contrib/guix/libexec/build.sh b/contrib/guix/libexec/build.sh\r\nindex e457840d1..9092c8862 100755\r\n--- a/contrib/guix/libexec/build.sh\r\n+++ b/contrib/guix/libexec/build.sh\r\n@@ -287,7 +287,7 @@ mkdir -p \"$DISTSRC\"\r\n                     ${HOST_CXXFLAGS:+CXXFLAGS=\"${HOST_CXXFLAGS}\"} \\\r\n                     ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\r\n \r\n-    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\r\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool src/\r\nminisketch/config.status src/minisketch/libtool\r\n \r\n     # Build Bitcoin Core\r\n     make --jobs=\"$JOBS\" ${V:+V=1}\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-874587226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4981885307,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk4MTg4NTMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4981885307",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T08:59:00Z"
    },
    {
      "event": "subscribed",
      "id": 4981885313,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5ODE4ODUzMTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4981885313",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T08:59:00Z"
    },
    {
      "event": "mentioned",
      "id": 4981885322,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk4MTg4NTMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4981885322",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T08:59:00Z"
    },
    {
      "event": "subscribed",
      "id": 4981885325,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5ODE4ODUzMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4981885325",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T08:59:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4984415413,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDk4NDQxNTQxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4984415413",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T16:47:52Z"
    },
    {
      "event": "commented",
      "id": 874959564,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk1OTU2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874959564",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T17:46:22Z",
      "updated_at": "2021-07-06T17:46:22Z",
      "author_association": "MEMBER",
      "body": "@fanquake That fixed it, great!",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-874959564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 4984678772,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk4NDY3ODc3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4984678772",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T17:46:23Z"
    },
    {
      "event": "subscribed",
      "id": 4984678775,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5ODQ2Nzg3NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4984678775",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T17:46:23Z"
    },
    {
      "event": "commented",
      "id": 874959938,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk1OTkzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874959938",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T17:46:55Z",
      "updated_at": "2021-07-06T17:46:55Z",
      "author_association": "MEMBER",
      "body": "(don't merge this yet, as it includes the as-of-yet unmerged  sipa/minisketch#44)",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-874959938",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "labeled",
      "id": 4988867479,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5ODg4Njc0Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4988867479",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-07T12:33:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "added_to_project",
      "id": 4996775052,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQ0OTk2Nzc1MDUy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4996775052",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-08T19:18:32Z",
      "project_card": {
        "id": 64645931,
        "url": "https://api.github.com/projects/columns/cards/64645931",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 706814551,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA2ODE0NTUx",
      "url": null,
      "actor": null,
      "commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Let me know if you prefer I review against the source repository.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-706814551",
      "submitted_at": "2021-07-15T01:02:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "commented",
      "id": 881196317,
      "node_id": "IC_kwDOABII5840hf0d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881196317",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T05:53:57Z",
      "updated_at": "2021-07-16T05:53:57Z",
      "author_association": "MEMBER",
      "body": "After some discussion with @theuni, we are going to take a different approach to integrating the minisketch subtree, than what is currently proposed here. The new approach will be result in a somewhat cleaner integration, remove the need for running a sub-configure, as well as ensure we are building the minisketch library only using Bitcoin Cores build options, compiler flags etc. I expect there will be a branch demoing the approach available shortly. \r\n\r\nIt could also be expected that we will follow suit with our other subtrees.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-881196317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5028991877,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAyODk5MTg3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5028991877",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T05:53:58Z"
    },
    {
      "event": "subscribed",
      "id": 5028991879,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMjg5OTE4Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5028991879",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T05:53:58Z"
    },
    {
      "event": "commented",
      "id": 881510333,
      "node_id": "IC_kwDOABII5840ise9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881510333",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T14:55:22Z",
      "updated_at": "2021-07-16T14:55:22Z",
      "author_association": "MEMBER",
      "body": "That's a little more definitive than I would've put it, but yes, my preference would be tighter integration for the reasons @fanquake mentioned.\r\n\r\n@sipa [Here's ](https://github.com/bitcoin-core/univalue/pull/19)my original POC demonstrating what I had in mind, matching the approach I've suggested for univalue (https://github.com/bitcoin-core/univalue/pull/19). I've started working on a more complete version for minisketch, but I'd like to make sure you're not opposed to doing it that way first. If you're good with it I can finish up in the next day or two.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-881510333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5031412268,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzMTQxMjI2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5031412268",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T14:55:22Z"
    },
    {
      "event": "subscribed",
      "id": 5031412274,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzE0MTIyNzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5031412274",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T14:55:22Z"
    },
    {
      "event": "mentioned",
      "id": 5031412300,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzMTQxMjMwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5031412300",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T14:55:23Z"
    },
    {
      "event": "subscribed",
      "id": 5031412307,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzE0MTIzMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5031412307",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-16T14:55:23Z"
    },
    {
      "event": "commented",
      "id": 881947740,
      "node_id": "IC_kwDOABII5840kXRc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881947740",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:20:47Z",
      "updated_at": "2021-07-17T19:20:47Z",
      "author_association": "MEMBER",
      "body": "@theuni @fanquake Sounds good to me.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-881947740",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5034365626,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzNDM2NTYyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034365626",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:20:47Z"
    },
    {
      "event": "subscribed",
      "id": 5034365629,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzQzNjU2Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034365629",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:20:47Z"
    },
    {
      "event": "mentioned",
      "id": 5034365630,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzNDM2NTYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034365630",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:20:47Z"
    },
    {
      "event": "subscribed",
      "id": 5034365632,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzQzNjU2MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034365632",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:20:47Z"
    },
    {
      "event": "commented",
      "id": 881949489,
      "node_id": "IC_kwDOABII5840kXsx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881949489",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:36:05Z",
      "updated_at": "2021-07-17T19:36:05Z",
      "author_association": "MEMBER",
      "body": "@ariard I think your comments are more useful on https://github.com/sipa/minisketch.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-881949489",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5034375301,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzNDM3NTMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034375301",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:36:05Z"
    },
    {
      "event": "subscribed",
      "id": 5034375303,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzQzNzUzMDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034375303",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:36:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5034378087,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTAzNDM3ODA4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034378087",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T19:40:10Z"
    },
    {
      "event": "unlabeled",
      "id": 5034397995,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NTAzNDM5Nzk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5034397995",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-17T20:10:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 5041929941,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUwNDE5Mjk5NDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5041929941",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T04:36:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 883529658,
      "node_id": "IC_kwDOABII5840qZe6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883529658",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T16:29:15Z",
      "updated_at": "2021-07-20T16:29:15Z",
      "author_association": "MEMBER",
      "body": "@sipa Is building the non-verify version of the lib and tests sufficient for Core? Or is it useful/necessary to run the `-verify` version as well along with our tests?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-883529658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5045386495,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTA0NTM4NjQ5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5045386495",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T16:29:15Z"
    },
    {
      "event": "subscribed",
      "id": 5045386498,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwNDUzODY0OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5045386498",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T16:29:15Z"
    },
    {
      "event": "commented",
      "id": 883631922,
      "node_id": "IC_kwDOABII5840qycy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883631922",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T19:15:26Z",
      "updated_at": "2021-07-20T19:15:26Z",
      "author_association": "MEMBER",
      "body": "@theuni If it's an issue, I think non-verify is sufficient. The verify mode mostly adds algorithmic property checks, not things that I'd expect to be very architecture/build dependent.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-883631922",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5046147281,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTA0NjE0NzI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5046147281",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T19:15:26Z"
    },
    {
      "event": "subscribed",
      "id": 5046147292,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwNDYxNDcyOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5046147292",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T19:15:26Z"
    },
    {
      "event": "commented",
      "id": 883670217,
      "node_id": "IC_kwDOABII5840q7zJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883670217",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T20:22:49Z",
      "updated_at": "2021-07-20T20:22:49Z",
      "author_association": "MEMBER",
      "body": "It's not much of an issue, it's just kinda hacky to build everything twice, especially if it's unlikely to be as useful as it is running in the upstream tests. I can add it back if there's a need.\r\n\r\nSee here for a current integration branch: https://github.com/theuni/bitcoin/commits/minisketch-split . Not sure if it's easier for you to integrate that into this PR or for me to pull your other changes in on top of mine? I'm happy to do the latter if you'd like.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-883670217",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "reviewed",
      "id": 719394603,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE5Mzk0NjAz",
      "url": null,
      "actor": null,
      "commit_id": "cf4897c0efb63dfc7437431bc9f56ebf95fd1ef4",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "GeneFerneau",
        "id": 80422284,
        "node_id": "MDQ6VXNlcjgwNDIyMjg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80422284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GeneFerneau",
        "html_url": "https://github.com/GeneFerneau",
        "followers_url": "https://api.github.com/users/GeneFerneau/followers",
        "following_url": "https://api.github.com/users/GeneFerneau/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GeneFerneau/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GeneFerneau/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GeneFerneau/subscriptions",
        "organizations_url": "https://api.github.com/users/GeneFerneau/orgs",
        "repos_url": "https://api.github.com/users/GeneFerneau/repos",
        "events_url": "https://api.github.com/users/GeneFerneau/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GeneFerneau/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-719394603",
      "submitted_at": "2021-07-30T19:15:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "commented",
      "id": 897412769,
      "node_id": "IC_kwDOABII5841fW6h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897412769",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-12T07:28:57Z",
      "updated_at": "2021-08-12T07:28:57Z",
      "author_association": "MEMBER",
      "body": "I've put together a branch for this. It's based off current master and includes all the latest changes from upstream minisketch, as well as integrating the changes here with @theuni's build changes. It's available here: https://github.com/fanquake/bitcoin/tree/minisketch_integration.\r\n\r\nNote that I've included some of the review suggestions, as well as squashed one commit (https://github.com/theuni/bitcoin/commit/2fff4ce130ee11bc075e7a50354ce92db26795c2) from Corys branch. I've also made some additions to `Makefile.minisketch.include`, and pruned some unneeded changes from 8311cea203be8b61ae04b37bd323ab2323290180. Also dropped the use of `BasicTestingSetup` from the added minisketch test.\r\n\r\nI've opened an issue upstream, https://github.com/sipa/minisketch/issues/46, as now that we've got `-Wimplicit-fallthrough` turned on, we either need to annotate fallthroughs, or suppress the warnings. i.e:\r\n```bash\r\nminisketch/src/minisketch.cpp:104:13: warning: unannotated fall-through between switch labels [-Wimplicit-fallthrough]\r\n            case 2:\r\n            ^\r\nminisketch/src/minisketch.cpp:104:13: note: insert '[[fallthrough]];' to silence this warning\r\n            case 2:\r\n            ^\r\n            [[fallthrough]]; \r\nminisketch/src/minisketch.cpp:104:13: note: insert 'break;' to avoid fall-through\r\n            case 2:\r\n            ^\r\n            break; \r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-897412769",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5147278257,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTE0NzI3ODI1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5147278257",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-12T07:28:58Z"
    },
    {
      "event": "subscribed",
      "id": 5147278262,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxNDcyNzgyNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5147278262",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-12T07:28:58Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVhMGI3ZGEwZDRjYWQxODU2Y2M2NjllNjVlMWY2NDNiNjAzNTRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faea0b7da0d4cad1856cc669e65e1f643b60354c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faea0b7da0d4cad1856cc669e65e1f643b60354c",
      "tree": {
        "sha": "bd350cedd6da55c85e9a29085cb4d85751dbbb7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd350cedd6da55c85e9a29085cb4d85751dbbb7b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [],
      "message": "Squashed 'src/minisketch/' content from commit ea986a869\n\ngit-subtree-dir: src/minisketch\ngit-subtree-split: ea986a869eaff3120aa9c0caaf01143ce51471df",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:16:48Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:16:48Z"
      },
      "sha": "faea0b7da0d4cad1856cc669e65e1f643b60354c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGJjZjc0ZTE4OTNkODc2MDc3OWE1YTUwMzZhNThmZDY1NGMzNzIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58bcf74e1893d8760779a5a5036a58fd654c3720",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58bcf74e1893d8760779a5a5036a58fd654c3720",
      "tree": {
        "sha": "aca358fff9e719a1e860a27c8f6704d4a54247ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aca358fff9e719a1e860a27c8f6704d4a54247ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9424e78f34da991de488c2f7c2409a4196f2819a",
          "sha": "9424e78f34da991de488c2f7c2409a4196f2819a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9424e78f34da991de488c2f7c2409a4196f2819a"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faea0b7da0d4cad1856cc669e65e1f643b60354c",
          "sha": "faea0b7da0d4cad1856cc669e65e1f643b60354c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faea0b7da0d4cad1856cc669e65e1f643b60354c"
        }
      ],
      "message": "Merge commit 'faea0b7da0d4cad1856cc669e65e1f643b60354c' as 'src/minisketch'",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:16:48Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:16:48Z"
      },
      "sha": "58bcf74e1893d8760779a5a5036a58fd654c3720"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTY0YzRlZjJlNDVjM2M1NWIxOWI0YTYwOWMyMjMyOWRmNWU2ZDY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a64c4ef2e45c3c55b19b4a609c22329df5e6d64",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1a64c4ef2e45c3c55b19b4a609c22329df5e6d64",
      "tree": {
        "sha": "2c7b4309d9640b90bb1e6062acd159b8de9bcab3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c7b4309d9640b90bb1e6062acd159b8de9bcab3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2c7b4309d9640b90bb1e6062acd159b8de9bcab3\nparent 58bcf74e1893d8760779a5a5036a58fd654c3720\nauthor Cory Fields <cory-nospam-@coryfields.com> 1626805123 +0000\ncommitter fanquake <fanquake@gmail.com> 1631766074 +0800\n\nbuild: add configure checks for minisketch\n\nAC_DEFINE'd values won't be passed down to minisketch because it does not\nuse bitcoin-config.h. Thus we need a way to know if we should manually add\ndefines for minisketch files.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCxjoACgkQLuufXMCV\nJsFG9Q/8Df5vtV5lDTpwHQW4xkfNLKWdNOcOZ8lFQRmf/DSTW3lkgZ5DnJM2MyJe\nfBIU6JEtaqwlQxsWB7F8zm/VTt5YqjmKz67is5E1xQeTKLTLqCogCWPMBNziAiHf\nNdWNS7q/7ZkcqMGQsfys6CeGN/venxdjfHPXxOk3Jb/B3UoGMQi7Tj7X/bFakyoR\nG8OD0Ag0zIzH7M6CJMTaJmci/CfpWR4R6Dt/qgOM0Zfym6yB8M6rTiVykIE53To5\nCsXyH5eDQjBslVyauATCcwRHW43qJU7nhMOB9SRUVRxSLDmhxq1kwU415AWSgY41\nH24hWokZoa3BVIyWO8E74xU/EBXLy75XmHuuAxh+LN2++H0WdNCGipkjQ7ViLK9X\nTaHd1GQOuwCOeCGmks0fw5BJ8pZQKW/t8Zjo03hfjsccKogRc3x/q2EVHkwEHAHt\n9Whj/LImz0Wog9pGM/mrupDWUfuwQfJe6ybDZEJHmvV9V/xFNOi/dbQumNhs5i6H\nh503P6+ZpEcyHT4v14dwGxxHWLz/SD8J77lum5oN41FnAJvPiObTy11w1SqQ/NTz\nRiQpvhtpov/m5CYX23XO/CLcY/+EjPWe6f5P8OlFcTeurELjNTYXUCW28HScDE1I\nO33eSwtPgtMCgu3WhtaV9c/eM4NZ8TXnpMVNVOrPbx7hmuQu97w=\n=tmYS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58bcf74e1893d8760779a5a5036a58fd654c3720",
          "sha": "58bcf74e1893d8760779a5a5036a58fd654c3720",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/58bcf74e1893d8760779a5a5036a58fd654c3720"
        }
      ],
      "message": "build: add configure checks for minisketch\n\nAC_DEFINE'd values won't be passed down to minisketch because it does not\nuse bitcoin-config.h. Thus we need a way to know if we should manually add\ndefines for minisketch files.",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:21:14Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2021-07-20T18:18:43Z"
      },
      "sha": "1a64c4ef2e45c3c55b19b4a609c22329df5e6d64"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjg0MTIxOGZmZDkwYzMwZTc3MjVmMWZhNzZmMzhmMjY2MjNkODNl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f841218ffd90c30e7725f1fa76f38f26623d83e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3f841218ffd90c30e7725f1fa76f38f26623d83e",
      "tree": {
        "sha": "8d83890c4d2989fe0f98f09ef7aa082215b8816d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d83890c4d2989fe0f98f09ef7aa082215b8816d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8d83890c4d2989fe0f98f09ef7aa082215b8816d\nparent 1a64c4ef2e45c3c55b19b4a609c22329df5e6d64\nauthor Cory Fields <cory-nospam-@coryfields.com> 1626805699 +0000\ncommitter fanquake <fanquake@gmail.com> 1631766097 +0800\n\nbuild: add minisketch build file and include it\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCxlEACgkQLuufXMCV\nJsGr+w//Svz4EccKvfKbzp+U3itB0j5eeRrZud1bQRRoW87OrU3c5j13Af5i636G\nxtZW+fB/aahBP16RP3TPEHVxIHE2aJMXxrf1KpCIbxegzO2osisx3JLTTNnhJhbR\nIS8ja/9aJvW6ANIBSnP/MemH6yZzHHPM5ctIOeJBpnyDllpWn4/6Q5mZ8e4pNnoM\n4c3xO95793sino2ZuRc1Duix9GhGXMPVo9v3wi3NRyVjsbc6WxC9OdFnTJ4HyGN3\ncyvjB8hNAQGYr8CoyImrWzdUbPaR+lu+5AawXKOpvEvK34mrYb7hah5MTLv3yg5v\nLxeZhPE8dM27BWs6qHaJjftuALzORooYGGEhs/secEu/phAnIMsJojhuI+Hch/v4\nMBROxrNqFHAY6nQVyneNNS+w2DF5MEaF6MGm69JzAug+/0jedfBBMxjcexEylu9f\nftfaUnKrVZAsv5R+dAyqRY2vKMrKj6Q0oLudz8r020dXsNyH1pCp7zTwN/F+sNlu\neUCT3+ZZ1nidPE38wz350PD+qXZOoSQNZX8A1HMrHH1ys/1iKYj64/u8iWWhJDsX\nH0cA0oifWC1judMPPeGmcqlhrn3dF2uC7VkR+ZggppNcyixC1SN3WfuhRz0kQhDr\nW5xKoNcfn1mx+gOxcLBXurJm3s+UO3X3WhJTlxh9XUAI0dTbkAI=\n=RBQM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a64c4ef2e45c3c55b19b4a609c22329df5e6d64",
          "sha": "1a64c4ef2e45c3c55b19b4a609c22329df5e6d64",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a64c4ef2e45c3c55b19b4a609c22329df5e6d64"
        }
      ],
      "message": "build: add minisketch build file and include it",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:21:37Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2021-07-20T18:28:19Z"
      },
      "sha": "3f841218ffd90c30e7725f1fa76f38f26623d83e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWNhN2I5NTVkNjc4MjJjNWU4YjIyYjI0ZjQ1YzQ0YjFhYmYxYTk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85ca7b955d67822c5e8b22b24f45c44b1abf1a98",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/85ca7b955d67822c5e8b22b24f45c44b1abf1a98",
      "tree": {
        "sha": "a1519a1a8e3a14e7ac0691a0f7d1ee0612135f9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1519a1a8e3a14e7ac0691a0f7d1ee0612135f9f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a1519a1a8e3a14e7ac0691a0f7d1ee0612135f9f\nparent 3f841218ffd90c30e7725f1fa76f38f26623d83e\nauthor Cory Fields <cory-nospam-@coryfields.com> 1626811694 +0000\ncommitter fanquake <fanquake@gmail.com> 1631766123 +0800\n\nbuild: link minisketch into bitcoind\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCxmsACgkQLuufXMCV\nJsHmLhAAlEEpjcX4DyNoFImc6G36Fm2MsgphLmL6+ambFGoXQlP8uPTm/PvyGMfd\nxpkJs8+xlO0TuBpy/PbU1+m3VvLBzlxts+pbtrfBOgm7WsPrTmXHR7tM768x5z6z\nUccwuQCoOPnFeWiXTIfa46MWk2oljVLFiHMUobRef9Oc6jhKOFjiEkjVKCAC9cL3\n24mkhz0bIcmPPWfXht9Ejfbf0tzKIRhDQJHu89VyspO9GNIL3HX9iNDEEpy0gKnf\nNNjp3LfonLZb+LSnhaCD4u0oScGpwl321atZJM6Xk2d5Jx7tUwhEkFLnzDARMfRm\nBm6gPykcM0K2171mLZrKzU2Wgjmr1Juzq8tQTSEg77crliHUUWfKT08WkX924Bp0\noCaWqKnMJL+9ivcPA9Ddksg3KRnHkJhb9ZigoqltFfrTrZCdcEdmuFZWvQz5wCkt\nVdgLvJddoFZw6dY0yLsIW8RvC2aZ5Raqh+Cu8DStOaFsshbMUNN604B1f4CuAjvo\njqvUVgcXfIB8gGR12lk/DhPcOkxdKEBirWTspocqc+I8hDRCKrJp18GHgAsIf197\nd56ZXXaKgOw1yit6+7FNI9eeBhX/8tJHyvrhKyFW24Xvd9nOwPNrEGuQtg+yZ9/C\nq6h1A8howohguuVi1v71Al8OiQm91X7V/1mFRYmtwEylANe7Xpc=\n=aMAw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f841218ffd90c30e7725f1fa76f38f26623d83e",
          "sha": "3f841218ffd90c30e7725f1fa76f38f26623d83e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3f841218ffd90c30e7725f1fa76f38f26623d83e"
        }
      ],
      "message": "build: link minisketch into bitcoind",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:22:03Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2021-07-20T20:08:14Z"
      },
      "sha": "85ca7b955d67822c5e8b22b24f45c44b1abf1a98"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjEyODc2ZDY2ZDZjYWIzNGEzMTlkM2I5ZjVjYzU5MGYzMWQ0ZWY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f12876d66d6cab34a319d3b9f5cc590f31d4ef4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0f12876d66d6cab34a319d3b9f5cc590f31d4ef4",
      "tree": {
        "sha": "cff86573cddbab7d8f96a192dbcd02501e048238",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cff86573cddbab7d8f96a192dbcd02501e048238"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cff86573cddbab7d8f96a192dbcd02501e048238\nparent 85ca7b955d67822c5e8b22b24f45c44b1abf1a98\nauthor Pieter Wuille <pieter@wuille.net> 1620359755 -0700\ncommitter fanquake <fanquake@gmail.com> 1631766439 +0800\n\nAdd MSVC build configuration for libminisketch\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCx6oACgkQLuufXMCV\nJsHVXBAAqGg5zwR7YTyoxob8rMHSRIOjbdfZZqIeKi8F81joyaTyTHD6AAhLZyA/\nEOdS/vMAuAkCixIIFdyTEsxo9orLT8dJ7dO0H/OAEeQDY1pYSmI/3avlg/4KqLN0\nrzSGYw5XHkEJiPTCYTujV2QDdCCcDtjsay+LboKBE/86macwWE45Qm24tswmJU9d\nXL/qEbXSA/dk85A+cSaFJD4ut9+N2+jgBFfVTMfo6WmXXbsolEZKR4irZoBp7IyC\n57xOnHvnBvLtfPwNTWurynvr0g5fQdttGb50XuNGKn0pK+3yGCqfrNHz9uKtCorw\nhH51xulAVmf4puYz0rxmJFR6aUc8VrUveU+gl0mDnjmOXoMpDMDET2pVBflvcmZg\nZKAzM3gL8XwACyo4KUpyrSo0srE9RLCEuhyKaaUAHUrlb1L07wMsNgX0VLQBs05X\nYoOIaYQOOOZBRBvXYtMjonERjvnEofWgbq39eHZI5shSpYxy3x87Hq+sQESOyIAy\n4qBjkMB7mDVSiP7iWrcd2QeFK76T6uEiaLvR03tCNk1+iOCfqCkLBaKVraws4UMs\n9gRxEugJSQni24c/dwut5vIAV9byHax1bMd2pdin7nZ6bJjkxXzBkgcsqGkAxBM2\nESKAIi2Qyk/k/Pb5lP0fb0xLDEmTh7BqUBakEGKMX1BBV8BJy0E=\n=zAAd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85ca7b955d67822c5e8b22b24f45c44b1abf1a98",
          "sha": "85ca7b955d67822c5e8b22b24f45c44b1abf1a98",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/85ca7b955d67822c5e8b22b24f45c44b1abf1a98"
        }
      ],
      "message": "Add MSVC build configuration for libminisketch",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:27:19Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-05-07T03:55:55Z"
      },
      "sha": "0f12876d66d6cab34a319d3b9f5cc590f31d4ef4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTVkMGNjNDI3MTNlYzUwMDZhM2ZlNzdkZDNhMWJhMmFkOGI1MDY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069",
      "tree": {
        "sha": "273c339daa172b3b785369d01a3b000b6af74ed3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/273c339daa172b3b785369d01a3b000b6af74ed3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 273c339daa172b3b785369d01a3b000b6af74ed3\nparent 0f12876d66d6cab34a319d3b9f5cc590f31d4ef4\nauthor Gleb Naumenko <naumenko.gs@gmail.com> 1582065902 -0500\ncommitter fanquake <fanquake@gmail.com> 1631766477 +0800\n\nAdd minisketch dependency\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCx80ACgkQLuufXMCV\nJsFehA/5AZWsZitSYWfrrevAXiF3SKmjgExJFpunrO+px8WDg4XxC9FO+S4XvAud\nDf4S4i26XXgRooM72D54PL8Z7ViwrsVFV1Q4Ty8nqP4vQmMOHBr/HunfQOlKMtvG\nuWY1n6DjkcqN8gCjzP9AMnve+zy60+OIQgNNIP2J3AHiUUvkdsutk+p/yz1o9D2Y\nEufQrrH0NPbJQHKKHK5vvJGbtaM7FdWqXQ5OqBD/7c60jeOKiJFXK9XgmX0QKQ8a\n7vV2/xW5PPLn4pRqzRmXQ7OhBCthTnb//xbgpspjNUuSY82beU0Gfq89P/XK0NOI\n9attYth9WxqljQcShZtW83eUWbMtzIWkSM3sbQixzbNr/QhZkdmOqyre4AEaJM3M\nh3HRWcSWSnMIMzGFsUNIhJfxww2DslRwM/e0NG6vdkD31of9Eh0s3aicb9HY9+IM\niWAYhdrZ5bOBYCdeaOru1qwfEnUlqwfgA6KMDrmkhAU1LqypoUb1gVBDvZWiJxHC\nay1f4Cj1W6eWPk+RQSbH7ivyc7pDkdGa/beFcs/8Lizjo89/4Z3jMLZMQl8kJZZx\nZvS7H0CJjqh4/weooSdNbPqX+PUbjQTStXiSOGtrYWV0TBggMIfiyrqXTCZS9Bnw\nm2+3Qpun6urFQWMTVbwSPbODizzXsD71JEsX6PL9b0yjxVXlHLI=\n=aRVl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f12876d66d6cab34a319d3b9f5cc590f31d4ef4",
          "sha": "0f12876d66d6cab34a319d3b9f5cc590f31d4ef4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f12876d66d6cab34a319d3b9f5cc590f31d4ef4"
        }
      ],
      "message": "Add minisketch dependency",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:27:57Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2020-02-18T22:45:02Z"
      },
      "sha": "2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjk2ZGVhZTVmNzk2Mzk5OTRhMjU5NTRmY2QyZjA2YzQ1MWNlN2Fm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e696deae5f79639994a25954fcd2f06c451ce7af",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e696deae5f79639994a25954fcd2f06c451ce7af",
      "tree": {
        "sha": "4eb1851b57a65db17221fdea8e297f73c6a17ba0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4eb1851b57a65db17221fdea8e297f73c6a17ba0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4eb1851b57a65db17221fdea8e297f73c6a17ba0\nparent 2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069\nauthor Pieter Wuille <pieter@wuille.net> 1620172944 -0700\ncommitter fanquake <fanquake@gmail.com> 1631766490 +0800\n\nAdd basic minisketch tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCx9oACgkQLuufXMCV\nJsEpSA/8DjVKovFl+f6deQcW0n7wrCiZ2T0gv6voD80XcrGhLA3JBy+2OA8LgGh4\nf7m3hOy83c3HNaLDJSLfirP+rPHAD/dFWDVoMSXOKPZ5p4Z7wuo7x0H0UKwooqn8\nZj39I+El9XhB6rzScFW1V+ltFM+1uNe8lKeVgrcVFJfpWp0bR8KLUp8C9QtQewtQ\nXINoIe+ig8rf4wgtCMzToWx/8Jnsp207SVOfZRGYJiTrV4aELUeLPE638bTMdnqe\nR5aohYA1Bz1lKxuzuyiu7FRWLDS551usRRTWHl3IEBoPOosUbNyW/ixVP/KQoIkU\nQvdESSuxiJj1yYVHYAa/PxUnVz+DgP+DpPdR+glh8M125Pza+RMMOpZHA4XFggSP\nLRWTW7nek5bryCIRjrT8Ug0sho51277bKTPCZgJV+YgAZvmUcJnI2lNUCeV2A7Cs\nM7JJvtCvg2+GnNUSvShK+AZ5Hh6TM+Ka3INXaLk3ULy6BvA/PBAFDf27gl8LC0Yn\nI1irPnlNWnib8xT9AjAMdE+b58xizYqZZ5kuZyzg3DbkbRsy4hTktCsUymyHx5ZR\nK/I4QwNYaOS99j9/XRfYY+2Bc92m5k9wDvRE98rpn3LOUmHUZfPQ6VOm/QQnkSnL\n/F/ANWGMmonxAmS5ayUCBz0Be/HrdkgETOPHqR0BhVo1QgJMiN4=\n=4AFd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069",
          "sha": "2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2e5d0cc42713ec5006a3fe77dd3a1ba2ad8b5069"
        }
      ],
      "message": "Add basic minisketch tests",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:28:10Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-05-05T00:02:24Z"
      },
      "sha": "e696deae5f79639994a25954fcd2f06c451ce7af"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzhiZjZlOGJkNWMwYjA5YmY2NjliNmU4YTEwNWY0MjIzZDZmMzM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "tree": {
        "sha": "12daf488f07c3dd5875ec7a22227ad3485ab7329",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12daf488f07c3dd5875ec7a22227ad3485ab7329"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 12daf488f07c3dd5875ec7a22227ad3485ab7329\nparent e696deae5f79639994a25954fcd2f06c451ce7af\nauthor Pieter Wuille <pieter@wuille.net> 1620177213 -0700\ncommitter fanquake <fanquake@gmail.com> 1631766499 +0800\n\nAdd thin Minisketch wrapper to pick best implementation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFCx+MACgkQLuufXMCV\nJsFsmRAAlm/pPbET4YhAJePie0DgIssrv9A+f7Okd7cDinF3WkKTOM3DRRe7aTA5\nyODL1str5PUOx+TTW+8ZHxR5TdKiP1N5Ij7jkl0EfQIXqjcH79zw0jK5xeCPyAhJ\nBvP2EMRnHXMWvdixkj2ii0MkJqX4xEdnBlse8RqtzCUT9v/4G0XhInFUch2K1Zf9\nhxo9mmijWEkATw9FlbzMxjNKM8g3AziOBcpIpx3kHOmRiWmonZRVZYA0+7Qi9gYG\nSDQcmDtWFNlzwq+aQ1n55A0RvmhQSqn0DiX7wCdNSNiNI4/THb7weX0lzu9d4Ja1\nJBc/xkF4hP1JLLli+iJugnMSd50VZOezmP3cWAVfTyp46gkWOe9ARvMgY6U2O2GD\nAre1kd5y25CaTCu7PyR4iLIXnysejF1GUPHk45uziUmJvwog/Ye33ix0t+Tz0DEf\no3JEQyPPCkj0SRLjJa+V5B3ycBpva5lCfNLYjhZmy5ojH662LSERD2dxhoIy+o9J\nRD0Xm7oVUwtxVWLh5FRQ6/0Up9UV9GOzK0WP/gm9YlBaIo4V/Lb+hlYv4h0R44Ay\nDhMDzycFFtEyDPUO1DLihXSPrifUlHdGglj1R/f6gnpWdOam71xVCoaTlxrchv1g\nmxEbuxokhQbuF8OOky6/OEfx0E6UY7pfVnIxpng37uSEirzNmFE=\n=Uhl5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e696deae5f79639994a25954fcd2f06c451ce7af",
          "sha": "e696deae5f79639994a25954fcd2f06c451ce7af",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e696deae5f79639994a25954fcd2f06c451ce7af"
        }
      ],
      "message": "Add thin Minisketch wrapper to pick best implementation",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-16T04:28:19Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-05-05T01:13:33Z"
      },
      "sha": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338"
    },
    {
      "event": "commented",
      "id": 920574629,
      "node_id": "IC_kwDOABII58423tql",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/920574629",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-16T04:55:11Z",
      "updated_at": "2021-09-16T06:46:29Z",
      "author_association": "MEMBER",
      "body": "I've updated my branch (https://github.com/fanquake/bitcoin/tree/minisketch_integration) to be rebased on master, include the upstream minisktech changes, namely https://github.com/sipa/minisketch/pull/45 & https://github.com/sipa/minisketch/pull/47 and update our integration accordingly. Had a conflict in the MSVC config files, not 100% sure if how it's been resolved is correct.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-920574629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "referenced",
      "id": 5310002313,
      "node_id": "REFE_lADOABII5840NiyWzwAAAAE8gDSJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5310002313",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dc5ee1439f54d18e2f079b2014adf769c7fcc269",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/dc5ee1439f54d18e2f079b2014adf769c7fcc269",
      "created_at": "2021-09-16T04:56:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5320211009,
      "node_id": "HRFPE_lADOABII5840NiyWzwAAAAE9G_pB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5320211009",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-17T15:45:55Z"
    },
    {
      "event": "commented",
      "id": 921899200,
      "node_id": "IC_kwDOABII58428xDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921899200",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-17T15:46:10Z",
      "updated_at": "2021-09-17T15:46:10Z",
      "author_association": "MEMBER",
      "body": "Reviewed @fanquake's branch, and switched to it.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-921899200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5320212372,
      "node_id": "MEE_lADOABII5840NiyWzwAAAAE9G_-U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5320212372",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-17T15:46:10Z"
    },
    {
      "event": "subscribed",
      "id": 5320212378,
      "node_id": "SE_lADOABII5840NiyWzwAAAAE9G_-a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5320212378",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-17T15:46:10Z"
    },
    {
      "event": "unlabeled",
      "id": 5320669719,
      "node_id": "UNLE_lADOABII5840NiyWzwAAAAE9IvoX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5320669719",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-17T17:20:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 922398092,
      "node_id": "IC_kwDOABII5842-q2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922398092",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-19T01:23:10Z",
      "updated_at": "2021-09-19T01:23:10Z",
      "author_association": "MEMBER",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit e69cbac628bfdca4a8e4ead821190eaf5b6b3d07<br>(master) | commit d40c25adfc5a07488fdd4cd168af74ed520bac2f<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`3a878af99efa151a...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/SHA256SUMS.part) |  |\n| *-aarch64-linux-gnu-debug.tar.gz | [`504514ca43584dc4...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-aarch64-linux-gnu-debug.tar.gz) |  |\n| *-aarch64-linux-gnu.tar.gz | [`a7f1043c5be2bad7...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-aarch64-linux-gnu.tar.gz) |  |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`01025cf9adb91f2f...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-arm-linux-gnueabihf-debug.tar.gz) |  |\n| *-arm-linux-gnueabihf.tar.gz | [`fe378f5c927d3c18...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-arm-linux-gnueabihf.tar.gz) |  |\n| *-osx-unsigned.dmg | [`58d3a322c88960b2...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-osx-unsigned.dmg) |  |\n| *-osx-unsigned.tar.gz | [`5f841485eaff6daf...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-osx-unsigned.tar.gz) |  |\n| *-osx64.tar.gz | [`d55e205495c5d767...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-osx64.tar.gz) |  |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`9a6c6812019b74bf...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-powerpc64-linux-gnu-debug.tar.gz) |  |\n| *-powerpc64-linux-gnu.tar.gz | [`0ee4928babe8a06f...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-powerpc64-linux-gnu.tar.gz) |  |\n| *-powerpc64le-linux-gnu-debug.tar.gz | [`1d342c95661b5b24...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-powerpc64le-linux-gnu-debug.tar.gz) |  |\n| *-powerpc64le-linux-gnu.tar.gz | [`bd8ea614f91c2853...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-powerpc64le-linux-gnu.tar.gz) |  |\n| *-riscv64-linux-gnu-debug.tar.gz | [`5469fc63a961d097...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-riscv64-linux-gnu-debug.tar.gz) |  |\n| *-riscv64-linux-gnu.tar.gz | [`1e316726edf1fe21...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-riscv64-linux-gnu.tar.gz) |  |\n| *-win-unsigned.tar.gz | [`1c32a6162f0f5538...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-win-unsigned.tar.gz) |  |\n| *-win64-debug.zip | [`e7640bc4e2145270...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-win64-debug.zip) |  |\n| *-win64-setup-unsigned.exe | [`8e1ff1a0052908f7...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-win64-setup-unsigned.exe) |  |\n| *-win64.zip | [`4ce4c3029f41f5af...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-win64.zip) |  |\n| *-x86_64-linux-gnu-debug.tar.gz | [`93faa3c2bd0f0d33...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-x86_64-linux-gnu-debug.tar.gz) |  |\n| *-x86_64-linux-gnu.tar.gz | [`40e4f747759f74c3...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf-x86_64-linux-gnu.tar.gz) |  |\n| *.tar.gz | [`ec27e3d27919ffdc...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/bitcoin-e69cbac628bf.tar.gz) | [`76ccd2524fc79166...`](https://drahtbot.space/guix/bitcoin/bitcoin/d40c25adfc5a07488fdd4cd168af74ed520bac2f/bitcoin-d40c25adfc5a.tar.gz) |\n| guix_build.log | [`31ace9d1e85bed5c...`](https://drahtbot.space/guix/bitcoin/bitcoin/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/guix_build.log) | [`2b355a35d6fe8e3d...`](https://drahtbot.space/guix/bitcoin/bitcoin/d40c25adfc5a07488fdd4cd168af74ed520bac2f/guix_build.log) |\n| guix_build.log.diff |  | [`440a46f08e4ab3e9...`](https://drahtbot.space/guix/bitcoin/bitcoin/d40c25adfc5a07488fdd4cd168af74ed520bac2f/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-922398092",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "unlabeled",
      "id": 5324022706,
      "node_id": "UNLE_lADOABII5840NiyWzwAAAAE9ViOy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5324022706",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-19T01:23:11Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "reviewed",
      "id": 758118296,
      "node_id": "PRR_kwDOABII584tL_eY",
      "url": null,
      "actor": null,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-758118296",
      "submitted_at": "2021-09-19T07:10:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "reviewed",
      "id": 760205268,
      "node_id": "PRR_kwDOABII584tT8_U",
      "url": null,
      "actor": null,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#pullrequestreview-760205268",
      "submitted_at": "2021-09-21T20:10:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
    },
    {
      "event": "commented",
      "id": 924499138,
      "node_id": "IC_kwDOABII5843GrzC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924499138",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T01:05:33Z",
      "updated_at": "2021-09-22T01:05:33Z",
      "author_association": "MEMBER",
      "body": "I've pushed some fixups to https://github.com/fanquake/bitcoin/tree/minisketch_integration (sorry @sipa). `make dist(dir)` and the Guix build have both been fixed. I also added a missing exclude for minisketch to the copyright header update script.\r\n\r\nGuix build:\r\n```bash\r\nbash-5.1# find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\r\n6f2f140e623e86a13c3c6723528c9241d7f195ee9b440c2b70cb48b7f897efa4  guix-build-1977a5eac1ac/output/aarch64-linux-gnu/SHA256SUMS.part\r\nf143030f742955210bbaa93f72b88aed7e64168869712ae2d06d4920b4797feb  guix-build-1977a5eac1ac/output/aarch64-linux-gnu/bitcoin-1977a5eac1ac-aarch64-linux-gnu-debug.tar.gz\r\ne7873892728dec8e46766a8094b8d32dd91d8b8e3cba7380750b9f0af046274f  guix-build-1977a5eac1ac/output/aarch64-linux-gnu/bitcoin-1977a5eac1ac-aarch64-linux-gnu.tar.gz\r\nf15a670b0bc218ec29f8d55db2c6beb08707ffdcacc5bd950ec300ef8f1d4c3d  guix-build-1977a5eac1ac/output/arm-linux-gnueabihf/SHA256SUMS.part\r\necc3de5d0e229782fabc4d367a2868256f34041a67af3b3ce585e2b6e0425501  guix-build-1977a5eac1ac/output/arm-linux-gnueabihf/bitcoin-1977a5eac1ac-arm-linux-gnueabihf-debug.tar.gz\r\n1c53d7facb75bef4541fe4076dd8f8b1b053739fbe62fc5430c8cb2fcef19160  guix-build-1977a5eac1ac/output/arm-linux-gnueabihf/bitcoin-1977a5eac1ac-arm-linux-gnueabihf.tar.gz\r\nd8a9ae46890e515ec1f463745a6468dd861397d34b7ed7154f3ac67cb7b19a89  guix-build-1977a5eac1ac/output/dist-archive/bitcoin-1977a5eac1ac.tar.gz\r\ned1d14528d00211c1369067b0700534b0dd63a28c1a6d29d838d2efa4dc135ac  guix-build-1977a5eac1ac/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n80422fc2edb2cdf44b79962697b7e465cef87bdf984e6bb95d8a54db6c1bde2c  guix-build-1977a5eac1ac/output/powerpc64-linux-gnu/bitcoin-1977a5eac1ac-powerpc64-linux-gnu-debug.tar.gz\r\ne0d15a9e6a13d40d3ac8cba00edb8cc445da96414c236a9adcbcb850e3bd909b  guix-build-1977a5eac1ac/output/powerpc64-linux-gnu/bitcoin-1977a5eac1ac-powerpc64-linux-gnu.tar.gz\r\nb7d2395d35c2891eed5473a085460e02842522d4aadfba2af2bcd62fe2b58a11  guix-build-1977a5eac1ac/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n195239762f7eb08f1c821c90b342d18dd83bc0ab66a987afe11ce531614b37ef  guix-build-1977a5eac1ac/output/powerpc64le-linux-gnu/bitcoin-1977a5eac1ac-powerpc64le-linux-gnu-debug.tar.gz\r\n5b6fe49560e675a6a660c1d01c1bd7fc07650584879a93578ddabaa4e14b1a46  guix-build-1977a5eac1ac/output/powerpc64le-linux-gnu/bitcoin-1977a5eac1ac-powerpc64le-linux-gnu.tar.gz\r\nedef8e58acd9f9328b8ab77631c72b727d3efe246801c219f583ab1eeff00bcb  guix-build-1977a5eac1ac/output/riscv64-linux-gnu/SHA256SUMS.part\r\n1d8e37a871448ed9ec6febf825521a70e0e7b26502df7022159c6e9ffbc307b3  guix-build-1977a5eac1ac/output/riscv64-linux-gnu/bitcoin-1977a5eac1ac-riscv64-linux-gnu-debug.tar.gz\r\n27a616dede243cc01b1b1687fb66d627c5472c8419cc493510350f9ecaea1dd7  guix-build-1977a5eac1ac/output/riscv64-linux-gnu/bitcoin-1977a5eac1ac-riscv64-linux-gnu.tar.gz\r\nf811ea4e8ae6a0e6aac962ef6445f16c4cf316e969d97cd25a9f6d98024299ff  guix-build-1977a5eac1ac/output/x86_64-apple-darwin18/SHA256SUMS.part\r\n3ab7a4c0c4b936033b4dc48b652478db69de3864cdb33123dd197c453baafec5  guix-build-1977a5eac1ac/output/x86_64-apple-darwin18/bitcoin-1977a5eac1ac-osx-unsigned.dmg\r\n4ed8e72a15af32c4d44e86b025735689fd8190f3b70ba126ab64f2049e112fe1  guix-build-1977a5eac1ac/output/x86_64-apple-darwin18/bitcoin-1977a5eac1ac-osx-unsigned.tar.gz\r\nb32fca59c82d9502aaacd9521fcd8ce60c3ab177056433eb55fe6fee51fac6fd  guix-build-1977a5eac1ac/output/x86_64-apple-darwin18/bitcoin-1977a5eac1ac-osx64.tar.gz\r\n8e2d602f8577eb96112b3859f9b31ccdce44a202615b3d2a4f212b2406e9e2fd  guix-build-1977a5eac1ac/output/x86_64-linux-gnu/SHA256SUMS.part\r\ncebad9c8b47ad0ff2a15cc6c4899b8461dd143a51127d1f538e722d373b06bd3  guix-build-1977a5eac1ac/output/x86_64-linux-gnu/bitcoin-1977a5eac1ac-x86_64-linux-gnu-debug.tar.gz\r\n27c050901873acb873d6ba999d9cee3e82c7ea5b17625627f0b86bd55b0ba813  guix-build-1977a5eac1ac/output/x86_64-linux-gnu/bitcoin-1977a5eac1ac-x86_64-linux-gnu.tar.gz\r\n8627e3ed867fb065ac7c9080764f7fb0b1ad7359564a0948b4820dc39764b2a0  guix-build-1977a5eac1ac/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n461232a659284bdea174acc0f8f4462b02133a2c0f21a81d0b2af7533b12220b  guix-build-1977a5eac1ac/output/x86_64-w64-mingw32/bitcoin-1977a5eac1ac-win-unsigned.tar.gz\r\n9c2c1b9c94016fbbd6606a0dee55a9d7d78e9725468e0b79aa413a339fb97119  guix-build-1977a5eac1ac/output/x86_64-w64-mingw32/bitcoin-1977a5eac1ac-win64-debug.zip\r\naa344b4f6861f090477e2ba515b20bdb686735ebcfe87c32e75d1f41db8b5e42  guix-build-1977a5eac1ac/output/x86_64-w64-mingw32/bitcoin-1977a5eac1ac-win64-setup-unsigned.exe\r\n9a413697d21318a0930419b51cab86defff7a0a13eca6d59a3288dee00f427a0  guix-build-1977a5eac1ac/output/x86_64-w64-mingw32/bitcoin-1977a5eac1ac-win64.zip\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-924499138",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "mentioned",
      "id": 5339706384,
      "node_id": "MEE_lADOABII5840NiyWzwAAAAE-RXQQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5339706384",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T01:05:33Z"
    },
    {
      "event": "subscribed",
      "id": 5339706385,
      "node_id": "SE_lADOABII5840NiyWzwAAAAE-RXQR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5339706385",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T01:05:33Z"
    },
    {
      "event": "commented",
      "id": 928916969,
      "node_id": "IC_kwDOABII5843XiXp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928916969",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T07:08:41Z",
      "updated_at": "2021-09-28T07:08:41Z",
      "author_association": "MEMBER",
      "body": "Closing in favour of #23114.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#issuecomment-928916969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21859"
    },
    {
      "event": "closed",
      "id": 5371610140,
      "node_id": "CE_lADOABII5840NiyWzwAAAAFALEQc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5371610140",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T07:08:42Z"
    },
    {
      "event": "removed_from_project",
      "id": 5371613367,
      "node_id": "RFPE_lADOABII5840NiyWzwAAAAFALFC3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5371613367",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T07:09:15Z",
      "project_card": {
        "id": 64645931,
        "url": "https://api.github.com/projects/columns/cards/64645931",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 5607042254,
      "node_id": "REFE_lADOABII5840NiyWzwAAAAFONKzO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5607042254",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c1fb30633b6dcbf32db7d53c9f538019af80d6c5",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/c1fb30633b6dcbf32db7d53c9f538019af80d6c5",
      "created_at": "2021-11-12T02:01:12Z"
    },
    {
      "event": "locked",
      "id": 7699632288,
      "node_id": "LOE_lADOABII5840NiyWzwAAAAHK7xCg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7699632288",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T19:10:04Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/626504683",
      "pull_request_review_id": 652222652,
      "id": 626504683,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjUwNDY4Mw==",
      "diff_hunk": "@@ -0,0 +1,452 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Pieter Wuille, Greg Maxwell, Gleb Naumenko      *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file LICENSE or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <new>\n+\n+#include \"../include/minisketch.h\"\n+\n+#include \"false_positives.h\"\n+#include \"sketch.h\"\n+\n+#ifdef HAVE_CLMUL\n+#include <cpuid.h>\n+#endif\n+\n+Sketch* ConstructGeneric1Byte(int bits, int implementation);\n+Sketch* ConstructGeneric2Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric3Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric4Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric5Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric6Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric7Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric8Bytes(int bits, int implementation);\n+\n+#ifdef HAVE_CLMUL\n+Sketch* ConstructClMul1Byte(int bits, int implementation);\n+Sketch* ConstructClMul2Bytes(int bits, int implementation);\n+Sketch* ConstructClMul3Bytes(int bits, int implementation);\n+Sketch* ConstructClMul4Bytes(int bits, int implementation);\n+Sketch* ConstructClMul5Bytes(int bits, int implementation);\n+Sketch* ConstructClMul6Bytes(int bits, int implementation);\n+Sketch* ConstructClMul7Bytes(int bits, int implementation);\n+Sketch* ConstructClMul8Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri1Byte(int bits, int implementation);\n+Sketch* ConstructClMulTri2Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri3Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri4Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri5Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri6Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri7Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri8Bytes(int bits, int implementation);\n+#endif\n+\n+namespace {\n+\n+enum class FieldImpl {\n+    GENERIC = 0,\n+#ifdef HAVE_CLMUL\n+    CLMUL,\n+    CLMUL_TRI,\n+#endif\n+};\n+\n+Sketch* Construct(int bits, int impl)\n+{\n+    switch (FieldImpl(impl)) {\n+    case FieldImpl::GENERIC:\n+        switch ((bits + 7) / 8) {\n+        case 1:\n+            return ConstructGeneric1Byte(bits, impl);\n+        case 2:\n+            return ConstructGeneric2Bytes(bits, impl);\n+        case 3:\n+            return ConstructGeneric3Bytes(bits, impl);\n+        case 4:\n+            return ConstructGeneric4Bytes(bits, impl);\n+        case 5:\n+            return ConstructGeneric5Bytes(bits, impl);\n+        case 6:\n+            return ConstructGeneric6Bytes(bits, impl);\n+        case 7:\n+            return ConstructGeneric7Bytes(bits, impl);\n+        case 8:\n+            return ConstructGeneric8Bytes(bits, impl);\n+        default:\n+            return nullptr;\n+        }\n+#ifdef HAVE_CLMUL\n+    case FieldImpl::CLMUL:\n+    case FieldImpl::CLMUL_TRI: {\n+        uint32_t eax, ebx, ecx, edx;\n+        if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & 0x2)) {\n+            switch ((bits + 7) / 8) {\n+            case 1:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul1Byte(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri1Byte(bits, impl);\n+            case 2:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul2Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri2Bytes(bits, impl);\n+            case 3:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul3Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri3Bytes(bits, impl);\n+            case 4:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul4Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri4Bytes(bits, impl);\n+            case 5:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul5Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri5Bytes(bits, impl);\n+            case 6:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul6Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri6Bytes(bits, impl);\n+            case 7:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul7Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri7Bytes(bits, impl);\n+            case 8:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul8Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri8Bytes(bits, impl);\n+            default:\n+                return nullptr;\n+            }\n+        }\n+    }\n+#endif\n+    }\n+    return nullptr;\n+}\n+\n+}\n+\n+extern \"C\" {\n+\n+int minisketch_bits_supported(uint32_t bits) {\n+#ifndef DISABLE_FIELD_2\n+    if (bits == 2) return true;\n+#endif\n+#ifndef DISABLE_FIELD_3\n+    if (bits == 3) return true;\n+#endif\n+#ifndef DISABLE_FIELD_4\n+    if (bits == 4) return true;\n+#endif\n+#ifndef DISABLE_FIELD_5\n+    if (bits == 5) return true;\n+#endif\n+#ifndef DISABLE_FIELD_6\n+    if (bits == 6) return true;\n+#endif\n+#ifndef DISABLE_FIELD_7\n+    if (bits == 7) return true;\n+#endif\n+#ifndef DISABLE_FIELD_8\n+    if (bits == 8) return true;\n+#endif\n+#ifndef DISABLE_FIELD_9\n+    if (bits == 9) return true;\n+#endif\n+#ifndef DISABLE_FIELD_10\n+    if (bits == 10) return true;\n+#endif\n+#ifndef DISABLE_FIELD_11\n+    if (bits == 11) return true;\n+#endif\n+#ifndef DISABLE_FIELD_12\n+    if (bits == 12) return true;\n+#endif\n+#ifndef DISABLE_FIELD_13\n+    if (bits == 13) return true;\n+#endif\n+#ifndef DISABLE_FIELD_14\n+    if (bits == 14) return true;\n+#endif\n+#ifndef DISABLE_FIELD_15\n+    if (bits == 15) return true;\n+#endif\n+#ifndef DISABLE_FIELD_16\n+    if (bits == 16) return true;\n+#endif\n+#ifndef DISABLE_FIELD_17\n+    if (bits == 17) return true;\n+#endif\n+#ifndef DISABLE_FIELD_18\n+    if (bits == 18) return true;\n+#endif\n+#ifndef DISABLE_FIELD_19\n+    if (bits == 19) return true;\n+#endif\n+#ifndef DISABLE_FIELD_20\n+    if (bits == 20) return true;\n+#endif\n+#ifndef DISABLE_FIELD_21\n+    if (bits == 21) return true;\n+#endif\n+#ifndef DISABLE_FIELD_22\n+    if (bits == 22) return true;\n+#endif\n+#ifndef DISABLE_FIELD_23\n+    if (bits == 23) return true;\n+#endif\n+#ifndef DISABLE_FIELD_24\n+    if (bits == 24) return true;\n+#endif\n+#ifndef DISABLE_FIELD_25\n+    if (bits == 25) return true;\n+#endif\n+#ifndef DISABLE_FIELD_26\n+    if (bits == 26) return true;\n+#endif\n+#ifndef DISABLE_FIELD_27\n+    if (bits == 27) return true;\n+#endif\n+#ifndef DISABLE_FIELD_28\n+    if (bits == 28) return true;\n+#endif\n+#ifndef DISABLE_FIELD_29\n+    if (bits == 29) return true;\n+#endif\n+#ifndef DISABLE_FIELD_30\n+    if (bits == 30) return true;\n+#endif\n+#ifndef DISABLE_FIELD_31\n+    if (bits == 31) return true;\n+#endif\n+#ifndef DISABLE_FIELD_32\n+    if (bits == 32) return true;\n+#endif\n+#ifndef DISABLE_FIELD_33\n+    if (bits == 33) return true;\n+#endif\n+#ifndef DISABLE_FIELD_34\n+    if (bits == 34) return true;\n+#endif\n+#ifndef DISABLE_FIELD_35\n+    if (bits == 35) return true;\n+#endif\n+#ifndef DISABLE_FIELD_36\n+    if (bits == 36) return true;\n+#endif\n+#ifndef DISABLE_FIELD_37\n+    if (bits == 37) return true;\n+#endif\n+#ifndef DISABLE_FIELD_38\n+    if (bits == 38) return true;\n+#endif\n+#ifndef DISABLE_FIELD_39\n+    if (bits == 39) return true;\n+#endif\n+#ifndef DISABLE_FIELD_40\n+    if (bits == 40) return true;\n+#endif\n+#ifndef DISABLE_FIELD_41\n+    if (bits == 41) return true;\n+#endif\n+#ifndef DISABLE_FIELD_42\n+    if (bits == 42) return true;\n+#endif\n+#ifndef DISABLE_FIELD_43\n+    if (bits == 43) return true;\n+#endif\n+#ifndef DISABLE_FIELD_44\n+    if (bits == 44) return true;\n+#endif\n+#ifndef DISABLE_FIELD_45\n+    if (bits == 45) return true;\n+#endif\n+#ifndef DISABLE_FIELD_46\n+    if (bits == 46) return true;\n+#endif\n+#ifndef DISABLE_FIELD_47\n+    if (bits == 47) return true;\n+#endif\n+#ifndef DISABLE_FIELD_48\n+    if (bits == 48) return true;\n+#endif\n+#ifndef DISABLE_FIELD_49\n+    if (bits == 49) return true;\n+#endif\n+#ifndef DISABLE_FIELD_50\n+    if (bits == 50) return true;\n+#endif\n+#ifndef DISABLE_FIELD_51\n+    if (bits == 51) return true;\n+#endif\n+#ifndef DISABLE_FIELD_52\n+    if (bits == 52) return true;\n+#endif\n+#ifndef DISABLE_FIELD_53\n+    if (bits == 53) return true;\n+#endif\n+#ifndef DISABLE_FIELD_54\n+    if (bits == 54) return true;\n+#endif\n+#ifndef DISABLE_FIELD_55\n+    if (bits == 55) return true;\n+#endif\n+#ifndef DISABLE_FIELD_56\n+    if (bits == 56) return true;\n+#endif\n+#ifndef DISABLE_FIELD_57\n+    if (bits == 57) return true;\n+#endif\n+#ifndef DISABLE_FIELD_58\n+    if (bits == 58) return true;\n+#endif\n+#ifndef DISABLE_FIELD_59\n+    if (bits == 59) return true;\n+#endif\n+#ifndef DISABLE_FIELD_60\n+    if (bits == 60) return true;\n+#endif\n+#ifndef DISABLE_FIELD_61\n+    if (bits == 61) return true;\n+#endif\n+#ifndef DISABLE_FIELD_62\n+    if (bits == 62) return true;\n+#endif\n+#ifndef DISABLE_FIELD_63\n+    if (bits == 63) return true;\n+#endif\n+#ifndef DISABLE_FIELD_64\n+    if (bits == 64) return true;\n+#endif\n+    return false;\n+}\n+\n+uint32_t minisketch_implementation_max() {\n+    uint32_t ret = 0;\n+#ifdef HAVE_CLMUL\n+    ret += 2;\n+#endif\n+    return ret;\n+}\n+\n+int minisketch_implementation_supported(uint32_t bits, uint32_t implementation) {\n+    if (!minisketch_bits_supported(bits) || implementation > minisketch_implementation_max()) {\n+        return 0;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            delete sketch;\n+            return 1;\n+        }\n+    } catch (std::bad_alloc& ba) {}\n+    return 0;\n+}\n+\n+minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity) {\n+    if (capacity == 0) {\n+        return nullptr;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            try {\n+                sketch->Init(capacity);\n+            } catch (std::bad_alloc& ba) {\n+                delete sketch;\n+                throw;\n+            }\n+            sketch->Ready();\n+        }\n+        return (minisketch*)sketch;\n+    } catch (std::bad_alloc& ba) {",
      "path": "src/minisketch/src/minisketch.cpp",
      "position": null,
      "original_position": 355,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`ba` isn't used. Can it be removed?",
      "created_at": "2021-05-05T12:04:35Z",
      "updated_at": "2021-05-08T21:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r626504683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/626504683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/626505082",
      "pull_request_review_id": 652223272,
      "id": 626505082,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjUwNTA4Mg==",
      "diff_hunk": "@@ -0,0 +1,452 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Pieter Wuille, Greg Maxwell, Gleb Naumenko      *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file LICENSE or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <new>\n+\n+#include \"../include/minisketch.h\"\n+\n+#include \"false_positives.h\"\n+#include \"sketch.h\"\n+\n+#ifdef HAVE_CLMUL\n+#include <cpuid.h>\n+#endif\n+\n+Sketch* ConstructGeneric1Byte(int bits, int implementation);\n+Sketch* ConstructGeneric2Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric3Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric4Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric5Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric6Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric7Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric8Bytes(int bits, int implementation);\n+\n+#ifdef HAVE_CLMUL\n+Sketch* ConstructClMul1Byte(int bits, int implementation);\n+Sketch* ConstructClMul2Bytes(int bits, int implementation);\n+Sketch* ConstructClMul3Bytes(int bits, int implementation);\n+Sketch* ConstructClMul4Bytes(int bits, int implementation);\n+Sketch* ConstructClMul5Bytes(int bits, int implementation);\n+Sketch* ConstructClMul6Bytes(int bits, int implementation);\n+Sketch* ConstructClMul7Bytes(int bits, int implementation);\n+Sketch* ConstructClMul8Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri1Byte(int bits, int implementation);\n+Sketch* ConstructClMulTri2Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri3Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri4Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri5Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri6Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri7Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri8Bytes(int bits, int implementation);\n+#endif\n+\n+namespace {\n+\n+enum class FieldImpl {\n+    GENERIC = 0,\n+#ifdef HAVE_CLMUL\n+    CLMUL,\n+    CLMUL_TRI,\n+#endif\n+};\n+\n+Sketch* Construct(int bits, int impl)\n+{\n+    switch (FieldImpl(impl)) {\n+    case FieldImpl::GENERIC:\n+        switch ((bits + 7) / 8) {\n+        case 1:\n+            return ConstructGeneric1Byte(bits, impl);\n+        case 2:\n+            return ConstructGeneric2Bytes(bits, impl);\n+        case 3:\n+            return ConstructGeneric3Bytes(bits, impl);\n+        case 4:\n+            return ConstructGeneric4Bytes(bits, impl);\n+        case 5:\n+            return ConstructGeneric5Bytes(bits, impl);\n+        case 6:\n+            return ConstructGeneric6Bytes(bits, impl);\n+        case 7:\n+            return ConstructGeneric7Bytes(bits, impl);\n+        case 8:\n+            return ConstructGeneric8Bytes(bits, impl);\n+        default:\n+            return nullptr;\n+        }\n+#ifdef HAVE_CLMUL\n+    case FieldImpl::CLMUL:\n+    case FieldImpl::CLMUL_TRI: {\n+        uint32_t eax, ebx, ecx, edx;\n+        if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & 0x2)) {\n+            switch ((bits + 7) / 8) {\n+            case 1:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul1Byte(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri1Byte(bits, impl);\n+            case 2:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul2Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri2Bytes(bits, impl);\n+            case 3:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul3Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri3Bytes(bits, impl);\n+            case 4:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul4Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri4Bytes(bits, impl);\n+            case 5:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul5Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri5Bytes(bits, impl);\n+            case 6:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul6Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri6Bytes(bits, impl);\n+            case 7:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul7Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri7Bytes(bits, impl);\n+            case 8:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul8Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri8Bytes(bits, impl);\n+            default:\n+                return nullptr;\n+            }\n+        }\n+    }\n+#endif\n+    }\n+    return nullptr;\n+}\n+\n+}\n+\n+extern \"C\" {\n+\n+int minisketch_bits_supported(uint32_t bits) {\n+#ifndef DISABLE_FIELD_2\n+    if (bits == 2) return true;\n+#endif\n+#ifndef DISABLE_FIELD_3\n+    if (bits == 3) return true;\n+#endif\n+#ifndef DISABLE_FIELD_4\n+    if (bits == 4) return true;\n+#endif\n+#ifndef DISABLE_FIELD_5\n+    if (bits == 5) return true;\n+#endif\n+#ifndef DISABLE_FIELD_6\n+    if (bits == 6) return true;\n+#endif\n+#ifndef DISABLE_FIELD_7\n+    if (bits == 7) return true;\n+#endif\n+#ifndef DISABLE_FIELD_8\n+    if (bits == 8) return true;\n+#endif\n+#ifndef DISABLE_FIELD_9\n+    if (bits == 9) return true;\n+#endif\n+#ifndef DISABLE_FIELD_10\n+    if (bits == 10) return true;\n+#endif\n+#ifndef DISABLE_FIELD_11\n+    if (bits == 11) return true;\n+#endif\n+#ifndef DISABLE_FIELD_12\n+    if (bits == 12) return true;\n+#endif\n+#ifndef DISABLE_FIELD_13\n+    if (bits == 13) return true;\n+#endif\n+#ifndef DISABLE_FIELD_14\n+    if (bits == 14) return true;\n+#endif\n+#ifndef DISABLE_FIELD_15\n+    if (bits == 15) return true;\n+#endif\n+#ifndef DISABLE_FIELD_16\n+    if (bits == 16) return true;\n+#endif\n+#ifndef DISABLE_FIELD_17\n+    if (bits == 17) return true;\n+#endif\n+#ifndef DISABLE_FIELD_18\n+    if (bits == 18) return true;\n+#endif\n+#ifndef DISABLE_FIELD_19\n+    if (bits == 19) return true;\n+#endif\n+#ifndef DISABLE_FIELD_20\n+    if (bits == 20) return true;\n+#endif\n+#ifndef DISABLE_FIELD_21\n+    if (bits == 21) return true;\n+#endif\n+#ifndef DISABLE_FIELD_22\n+    if (bits == 22) return true;\n+#endif\n+#ifndef DISABLE_FIELD_23\n+    if (bits == 23) return true;\n+#endif\n+#ifndef DISABLE_FIELD_24\n+    if (bits == 24) return true;\n+#endif\n+#ifndef DISABLE_FIELD_25\n+    if (bits == 25) return true;\n+#endif\n+#ifndef DISABLE_FIELD_26\n+    if (bits == 26) return true;\n+#endif\n+#ifndef DISABLE_FIELD_27\n+    if (bits == 27) return true;\n+#endif\n+#ifndef DISABLE_FIELD_28\n+    if (bits == 28) return true;\n+#endif\n+#ifndef DISABLE_FIELD_29\n+    if (bits == 29) return true;\n+#endif\n+#ifndef DISABLE_FIELD_30\n+    if (bits == 30) return true;\n+#endif\n+#ifndef DISABLE_FIELD_31\n+    if (bits == 31) return true;\n+#endif\n+#ifndef DISABLE_FIELD_32\n+    if (bits == 32) return true;\n+#endif\n+#ifndef DISABLE_FIELD_33\n+    if (bits == 33) return true;\n+#endif\n+#ifndef DISABLE_FIELD_34\n+    if (bits == 34) return true;\n+#endif\n+#ifndef DISABLE_FIELD_35\n+    if (bits == 35) return true;\n+#endif\n+#ifndef DISABLE_FIELD_36\n+    if (bits == 36) return true;\n+#endif\n+#ifndef DISABLE_FIELD_37\n+    if (bits == 37) return true;\n+#endif\n+#ifndef DISABLE_FIELD_38\n+    if (bits == 38) return true;\n+#endif\n+#ifndef DISABLE_FIELD_39\n+    if (bits == 39) return true;\n+#endif\n+#ifndef DISABLE_FIELD_40\n+    if (bits == 40) return true;\n+#endif\n+#ifndef DISABLE_FIELD_41\n+    if (bits == 41) return true;\n+#endif\n+#ifndef DISABLE_FIELD_42\n+    if (bits == 42) return true;\n+#endif\n+#ifndef DISABLE_FIELD_43\n+    if (bits == 43) return true;\n+#endif\n+#ifndef DISABLE_FIELD_44\n+    if (bits == 44) return true;\n+#endif\n+#ifndef DISABLE_FIELD_45\n+    if (bits == 45) return true;\n+#endif\n+#ifndef DISABLE_FIELD_46\n+    if (bits == 46) return true;\n+#endif\n+#ifndef DISABLE_FIELD_47\n+    if (bits == 47) return true;\n+#endif\n+#ifndef DISABLE_FIELD_48\n+    if (bits == 48) return true;\n+#endif\n+#ifndef DISABLE_FIELD_49\n+    if (bits == 49) return true;\n+#endif\n+#ifndef DISABLE_FIELD_50\n+    if (bits == 50) return true;\n+#endif\n+#ifndef DISABLE_FIELD_51\n+    if (bits == 51) return true;\n+#endif\n+#ifndef DISABLE_FIELD_52\n+    if (bits == 52) return true;\n+#endif\n+#ifndef DISABLE_FIELD_53\n+    if (bits == 53) return true;\n+#endif\n+#ifndef DISABLE_FIELD_54\n+    if (bits == 54) return true;\n+#endif\n+#ifndef DISABLE_FIELD_55\n+    if (bits == 55) return true;\n+#endif\n+#ifndef DISABLE_FIELD_56\n+    if (bits == 56) return true;\n+#endif\n+#ifndef DISABLE_FIELD_57\n+    if (bits == 57) return true;\n+#endif\n+#ifndef DISABLE_FIELD_58\n+    if (bits == 58) return true;\n+#endif\n+#ifndef DISABLE_FIELD_59\n+    if (bits == 59) return true;\n+#endif\n+#ifndef DISABLE_FIELD_60\n+    if (bits == 60) return true;\n+#endif\n+#ifndef DISABLE_FIELD_61\n+    if (bits == 61) return true;\n+#endif\n+#ifndef DISABLE_FIELD_62\n+    if (bits == 62) return true;\n+#endif\n+#ifndef DISABLE_FIELD_63\n+    if (bits == 63) return true;\n+#endif\n+#ifndef DISABLE_FIELD_64\n+    if (bits == 64) return true;\n+#endif\n+    return false;\n+}\n+\n+uint32_t minisketch_implementation_max() {\n+    uint32_t ret = 0;\n+#ifdef HAVE_CLMUL\n+    ret += 2;\n+#endif\n+    return ret;\n+}\n+\n+int minisketch_implementation_supported(uint32_t bits, uint32_t implementation) {\n+    if (!minisketch_bits_supported(bits) || implementation > minisketch_implementation_max()) {\n+        return 0;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            delete sketch;\n+            return 1;\n+        }\n+    } catch (std::bad_alloc& ba) {}\n+    return 0;\n+}\n+\n+minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity) {\n+    if (capacity == 0) {\n+        return nullptr;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            try {\n+                sketch->Init(capacity);\n+            } catch (std::bad_alloc& ba) {",
      "path": "src/minisketch/src/minisketch.cpp",
      "position": null,
      "original_position": 348,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ba isn't used. Can it be removed?",
      "created_at": "2021-05-05T12:05:23Z",
      "updated_at": "2021-05-08T21:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r626505082",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/626505082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 348,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628444294",
      "pull_request_review_id": 654786960,
      "id": 628444294,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODQ0NDI5NA==",
      "diff_hunk": "@@ -0,0 +1,452 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Pieter Wuille, Greg Maxwell, Gleb Naumenko      *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file LICENSE or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <new>\n+\n+#include \"../include/minisketch.h\"\n+\n+#include \"false_positives.h\"\n+#include \"sketch.h\"\n+\n+#ifdef HAVE_CLMUL\n+#include <cpuid.h>\n+#endif\n+\n+Sketch* ConstructGeneric1Byte(int bits, int implementation);\n+Sketch* ConstructGeneric2Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric3Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric4Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric5Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric6Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric7Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric8Bytes(int bits, int implementation);\n+\n+#ifdef HAVE_CLMUL\n+Sketch* ConstructClMul1Byte(int bits, int implementation);\n+Sketch* ConstructClMul2Bytes(int bits, int implementation);\n+Sketch* ConstructClMul3Bytes(int bits, int implementation);\n+Sketch* ConstructClMul4Bytes(int bits, int implementation);\n+Sketch* ConstructClMul5Bytes(int bits, int implementation);\n+Sketch* ConstructClMul6Bytes(int bits, int implementation);\n+Sketch* ConstructClMul7Bytes(int bits, int implementation);\n+Sketch* ConstructClMul8Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri1Byte(int bits, int implementation);\n+Sketch* ConstructClMulTri2Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri3Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri4Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri5Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri6Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri7Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri8Bytes(int bits, int implementation);\n+#endif\n+\n+namespace {\n+\n+enum class FieldImpl {\n+    GENERIC = 0,\n+#ifdef HAVE_CLMUL\n+    CLMUL,\n+    CLMUL_TRI,\n+#endif\n+};\n+\n+Sketch* Construct(int bits, int impl)\n+{\n+    switch (FieldImpl(impl)) {\n+    case FieldImpl::GENERIC:\n+        switch ((bits + 7) / 8) {\n+        case 1:\n+            return ConstructGeneric1Byte(bits, impl);\n+        case 2:\n+            return ConstructGeneric2Bytes(bits, impl);\n+        case 3:\n+            return ConstructGeneric3Bytes(bits, impl);\n+        case 4:\n+            return ConstructGeneric4Bytes(bits, impl);\n+        case 5:\n+            return ConstructGeneric5Bytes(bits, impl);\n+        case 6:\n+            return ConstructGeneric6Bytes(bits, impl);\n+        case 7:\n+            return ConstructGeneric7Bytes(bits, impl);\n+        case 8:\n+            return ConstructGeneric8Bytes(bits, impl);\n+        default:\n+            return nullptr;\n+        }\n+#ifdef HAVE_CLMUL\n+    case FieldImpl::CLMUL:\n+    case FieldImpl::CLMUL_TRI: {\n+        uint32_t eax, ebx, ecx, edx;\n+        if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & 0x2)) {\n+            switch ((bits + 7) / 8) {\n+            case 1:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul1Byte(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri1Byte(bits, impl);\n+            case 2:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul2Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri2Bytes(bits, impl);\n+            case 3:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul3Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri3Bytes(bits, impl);\n+            case 4:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul4Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri4Bytes(bits, impl);\n+            case 5:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul5Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri5Bytes(bits, impl);\n+            case 6:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul6Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri6Bytes(bits, impl);\n+            case 7:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul7Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri7Bytes(bits, impl);\n+            case 8:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul8Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri8Bytes(bits, impl);\n+            default:\n+                return nullptr;\n+            }\n+        }\n+    }\n+#endif\n+    }\n+    return nullptr;\n+}\n+\n+}\n+\n+extern \"C\" {\n+\n+int minisketch_bits_supported(uint32_t bits) {\n+#ifndef DISABLE_FIELD_2\n+    if (bits == 2) return true;\n+#endif\n+#ifndef DISABLE_FIELD_3\n+    if (bits == 3) return true;\n+#endif\n+#ifndef DISABLE_FIELD_4\n+    if (bits == 4) return true;\n+#endif\n+#ifndef DISABLE_FIELD_5\n+    if (bits == 5) return true;\n+#endif\n+#ifndef DISABLE_FIELD_6\n+    if (bits == 6) return true;\n+#endif\n+#ifndef DISABLE_FIELD_7\n+    if (bits == 7) return true;\n+#endif\n+#ifndef DISABLE_FIELD_8\n+    if (bits == 8) return true;\n+#endif\n+#ifndef DISABLE_FIELD_9\n+    if (bits == 9) return true;\n+#endif\n+#ifndef DISABLE_FIELD_10\n+    if (bits == 10) return true;\n+#endif\n+#ifndef DISABLE_FIELD_11\n+    if (bits == 11) return true;\n+#endif\n+#ifndef DISABLE_FIELD_12\n+    if (bits == 12) return true;\n+#endif\n+#ifndef DISABLE_FIELD_13\n+    if (bits == 13) return true;\n+#endif\n+#ifndef DISABLE_FIELD_14\n+    if (bits == 14) return true;\n+#endif\n+#ifndef DISABLE_FIELD_15\n+    if (bits == 15) return true;\n+#endif\n+#ifndef DISABLE_FIELD_16\n+    if (bits == 16) return true;\n+#endif\n+#ifndef DISABLE_FIELD_17\n+    if (bits == 17) return true;\n+#endif\n+#ifndef DISABLE_FIELD_18\n+    if (bits == 18) return true;\n+#endif\n+#ifndef DISABLE_FIELD_19\n+    if (bits == 19) return true;\n+#endif\n+#ifndef DISABLE_FIELD_20\n+    if (bits == 20) return true;\n+#endif\n+#ifndef DISABLE_FIELD_21\n+    if (bits == 21) return true;\n+#endif\n+#ifndef DISABLE_FIELD_22\n+    if (bits == 22) return true;\n+#endif\n+#ifndef DISABLE_FIELD_23\n+    if (bits == 23) return true;\n+#endif\n+#ifndef DISABLE_FIELD_24\n+    if (bits == 24) return true;\n+#endif\n+#ifndef DISABLE_FIELD_25\n+    if (bits == 25) return true;\n+#endif\n+#ifndef DISABLE_FIELD_26\n+    if (bits == 26) return true;\n+#endif\n+#ifndef DISABLE_FIELD_27\n+    if (bits == 27) return true;\n+#endif\n+#ifndef DISABLE_FIELD_28\n+    if (bits == 28) return true;\n+#endif\n+#ifndef DISABLE_FIELD_29\n+    if (bits == 29) return true;\n+#endif\n+#ifndef DISABLE_FIELD_30\n+    if (bits == 30) return true;\n+#endif\n+#ifndef DISABLE_FIELD_31\n+    if (bits == 31) return true;\n+#endif\n+#ifndef DISABLE_FIELD_32\n+    if (bits == 32) return true;\n+#endif\n+#ifndef DISABLE_FIELD_33\n+    if (bits == 33) return true;\n+#endif\n+#ifndef DISABLE_FIELD_34\n+    if (bits == 34) return true;\n+#endif\n+#ifndef DISABLE_FIELD_35\n+    if (bits == 35) return true;\n+#endif\n+#ifndef DISABLE_FIELD_36\n+    if (bits == 36) return true;\n+#endif\n+#ifndef DISABLE_FIELD_37\n+    if (bits == 37) return true;\n+#endif\n+#ifndef DISABLE_FIELD_38\n+    if (bits == 38) return true;\n+#endif\n+#ifndef DISABLE_FIELD_39\n+    if (bits == 39) return true;\n+#endif\n+#ifndef DISABLE_FIELD_40\n+    if (bits == 40) return true;\n+#endif\n+#ifndef DISABLE_FIELD_41\n+    if (bits == 41) return true;\n+#endif\n+#ifndef DISABLE_FIELD_42\n+    if (bits == 42) return true;\n+#endif\n+#ifndef DISABLE_FIELD_43\n+    if (bits == 43) return true;\n+#endif\n+#ifndef DISABLE_FIELD_44\n+    if (bits == 44) return true;\n+#endif\n+#ifndef DISABLE_FIELD_45\n+    if (bits == 45) return true;\n+#endif\n+#ifndef DISABLE_FIELD_46\n+    if (bits == 46) return true;\n+#endif\n+#ifndef DISABLE_FIELD_47\n+    if (bits == 47) return true;\n+#endif\n+#ifndef DISABLE_FIELD_48\n+    if (bits == 48) return true;\n+#endif\n+#ifndef DISABLE_FIELD_49\n+    if (bits == 49) return true;\n+#endif\n+#ifndef DISABLE_FIELD_50\n+    if (bits == 50) return true;\n+#endif\n+#ifndef DISABLE_FIELD_51\n+    if (bits == 51) return true;\n+#endif\n+#ifndef DISABLE_FIELD_52\n+    if (bits == 52) return true;\n+#endif\n+#ifndef DISABLE_FIELD_53\n+    if (bits == 53) return true;\n+#endif\n+#ifndef DISABLE_FIELD_54\n+    if (bits == 54) return true;\n+#endif\n+#ifndef DISABLE_FIELD_55\n+    if (bits == 55) return true;\n+#endif\n+#ifndef DISABLE_FIELD_56\n+    if (bits == 56) return true;\n+#endif\n+#ifndef DISABLE_FIELD_57\n+    if (bits == 57) return true;\n+#endif\n+#ifndef DISABLE_FIELD_58\n+    if (bits == 58) return true;\n+#endif\n+#ifndef DISABLE_FIELD_59\n+    if (bits == 59) return true;\n+#endif\n+#ifndef DISABLE_FIELD_60\n+    if (bits == 60) return true;\n+#endif\n+#ifndef DISABLE_FIELD_61\n+    if (bits == 61) return true;\n+#endif\n+#ifndef DISABLE_FIELD_62\n+    if (bits == 62) return true;\n+#endif\n+#ifndef DISABLE_FIELD_63\n+    if (bits == 63) return true;\n+#endif\n+#ifndef DISABLE_FIELD_64\n+    if (bits == 64) return true;\n+#endif\n+    return false;\n+}\n+\n+uint32_t minisketch_implementation_max() {\n+    uint32_t ret = 0;\n+#ifdef HAVE_CLMUL\n+    ret += 2;\n+#endif\n+    return ret;\n+}\n+\n+int minisketch_implementation_supported(uint32_t bits, uint32_t implementation) {\n+    if (!minisketch_bits_supported(bits) || implementation > minisketch_implementation_max()) {\n+        return 0;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            delete sketch;\n+            return 1;\n+        }\n+    } catch (std::bad_alloc& ba) {}\n+    return 0;\n+}\n+\n+minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity) {\n+    if (capacity == 0) {\n+        return nullptr;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            try {\n+                sketch->Init(capacity);\n+            } catch (std::bad_alloc& ba) {\n+                delete sketch;\n+                throw;\n+            }\n+            sketch->Ready();\n+        }\n+        return (minisketch*)sketch;\n+    } catch (std::bad_alloc& ba) {",
      "path": "src/minisketch/src/minisketch.cpp",
      "position": null,
      "original_position": 355,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "in_reply_to_id": 626504683,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, removed.",
      "created_at": "2021-05-07T19:01:30Z",
      "updated_at": "2021-05-08T21:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r628444294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628444294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628444409",
      "pull_request_review_id": 654787045,
      "id": 628444409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODQ0NDQwOQ==",
      "diff_hunk": "@@ -0,0 +1,452 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Pieter Wuille, Greg Maxwell, Gleb Naumenko      *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file LICENSE or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <new>\n+\n+#include \"../include/minisketch.h\"\n+\n+#include \"false_positives.h\"\n+#include \"sketch.h\"\n+\n+#ifdef HAVE_CLMUL\n+#include <cpuid.h>\n+#endif\n+\n+Sketch* ConstructGeneric1Byte(int bits, int implementation);\n+Sketch* ConstructGeneric2Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric3Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric4Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric5Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric6Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric7Bytes(int bits, int implementation);\n+Sketch* ConstructGeneric8Bytes(int bits, int implementation);\n+\n+#ifdef HAVE_CLMUL\n+Sketch* ConstructClMul1Byte(int bits, int implementation);\n+Sketch* ConstructClMul2Bytes(int bits, int implementation);\n+Sketch* ConstructClMul3Bytes(int bits, int implementation);\n+Sketch* ConstructClMul4Bytes(int bits, int implementation);\n+Sketch* ConstructClMul5Bytes(int bits, int implementation);\n+Sketch* ConstructClMul6Bytes(int bits, int implementation);\n+Sketch* ConstructClMul7Bytes(int bits, int implementation);\n+Sketch* ConstructClMul8Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri1Byte(int bits, int implementation);\n+Sketch* ConstructClMulTri2Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri3Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri4Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri5Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri6Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri7Bytes(int bits, int implementation);\n+Sketch* ConstructClMulTri8Bytes(int bits, int implementation);\n+#endif\n+\n+namespace {\n+\n+enum class FieldImpl {\n+    GENERIC = 0,\n+#ifdef HAVE_CLMUL\n+    CLMUL,\n+    CLMUL_TRI,\n+#endif\n+};\n+\n+Sketch* Construct(int bits, int impl)\n+{\n+    switch (FieldImpl(impl)) {\n+    case FieldImpl::GENERIC:\n+        switch ((bits + 7) / 8) {\n+        case 1:\n+            return ConstructGeneric1Byte(bits, impl);\n+        case 2:\n+            return ConstructGeneric2Bytes(bits, impl);\n+        case 3:\n+            return ConstructGeneric3Bytes(bits, impl);\n+        case 4:\n+            return ConstructGeneric4Bytes(bits, impl);\n+        case 5:\n+            return ConstructGeneric5Bytes(bits, impl);\n+        case 6:\n+            return ConstructGeneric6Bytes(bits, impl);\n+        case 7:\n+            return ConstructGeneric7Bytes(bits, impl);\n+        case 8:\n+            return ConstructGeneric8Bytes(bits, impl);\n+        default:\n+            return nullptr;\n+        }\n+#ifdef HAVE_CLMUL\n+    case FieldImpl::CLMUL:\n+    case FieldImpl::CLMUL_TRI: {\n+        uint32_t eax, ebx, ecx, edx;\n+        if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx & 0x2)) {\n+            switch ((bits + 7) / 8) {\n+            case 1:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul1Byte(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri1Byte(bits, impl);\n+            case 2:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul2Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri2Bytes(bits, impl);\n+            case 3:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul3Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri3Bytes(bits, impl);\n+            case 4:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul4Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri4Bytes(bits, impl);\n+            case 5:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul5Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri5Bytes(bits, impl);\n+            case 6:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul6Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri6Bytes(bits, impl);\n+            case 7:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul7Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri7Bytes(bits, impl);\n+            case 8:\n+                if (FieldImpl(impl) == FieldImpl::CLMUL) return ConstructClMul8Bytes(bits, impl);\n+                if (FieldImpl(impl) == FieldImpl::CLMUL_TRI) return ConstructClMulTri8Bytes(bits, impl);\n+            default:\n+                return nullptr;\n+            }\n+        }\n+    }\n+#endif\n+    }\n+    return nullptr;\n+}\n+\n+}\n+\n+extern \"C\" {\n+\n+int minisketch_bits_supported(uint32_t bits) {\n+#ifndef DISABLE_FIELD_2\n+    if (bits == 2) return true;\n+#endif\n+#ifndef DISABLE_FIELD_3\n+    if (bits == 3) return true;\n+#endif\n+#ifndef DISABLE_FIELD_4\n+    if (bits == 4) return true;\n+#endif\n+#ifndef DISABLE_FIELD_5\n+    if (bits == 5) return true;\n+#endif\n+#ifndef DISABLE_FIELD_6\n+    if (bits == 6) return true;\n+#endif\n+#ifndef DISABLE_FIELD_7\n+    if (bits == 7) return true;\n+#endif\n+#ifndef DISABLE_FIELD_8\n+    if (bits == 8) return true;\n+#endif\n+#ifndef DISABLE_FIELD_9\n+    if (bits == 9) return true;\n+#endif\n+#ifndef DISABLE_FIELD_10\n+    if (bits == 10) return true;\n+#endif\n+#ifndef DISABLE_FIELD_11\n+    if (bits == 11) return true;\n+#endif\n+#ifndef DISABLE_FIELD_12\n+    if (bits == 12) return true;\n+#endif\n+#ifndef DISABLE_FIELD_13\n+    if (bits == 13) return true;\n+#endif\n+#ifndef DISABLE_FIELD_14\n+    if (bits == 14) return true;\n+#endif\n+#ifndef DISABLE_FIELD_15\n+    if (bits == 15) return true;\n+#endif\n+#ifndef DISABLE_FIELD_16\n+    if (bits == 16) return true;\n+#endif\n+#ifndef DISABLE_FIELD_17\n+    if (bits == 17) return true;\n+#endif\n+#ifndef DISABLE_FIELD_18\n+    if (bits == 18) return true;\n+#endif\n+#ifndef DISABLE_FIELD_19\n+    if (bits == 19) return true;\n+#endif\n+#ifndef DISABLE_FIELD_20\n+    if (bits == 20) return true;\n+#endif\n+#ifndef DISABLE_FIELD_21\n+    if (bits == 21) return true;\n+#endif\n+#ifndef DISABLE_FIELD_22\n+    if (bits == 22) return true;\n+#endif\n+#ifndef DISABLE_FIELD_23\n+    if (bits == 23) return true;\n+#endif\n+#ifndef DISABLE_FIELD_24\n+    if (bits == 24) return true;\n+#endif\n+#ifndef DISABLE_FIELD_25\n+    if (bits == 25) return true;\n+#endif\n+#ifndef DISABLE_FIELD_26\n+    if (bits == 26) return true;\n+#endif\n+#ifndef DISABLE_FIELD_27\n+    if (bits == 27) return true;\n+#endif\n+#ifndef DISABLE_FIELD_28\n+    if (bits == 28) return true;\n+#endif\n+#ifndef DISABLE_FIELD_29\n+    if (bits == 29) return true;\n+#endif\n+#ifndef DISABLE_FIELD_30\n+    if (bits == 30) return true;\n+#endif\n+#ifndef DISABLE_FIELD_31\n+    if (bits == 31) return true;\n+#endif\n+#ifndef DISABLE_FIELD_32\n+    if (bits == 32) return true;\n+#endif\n+#ifndef DISABLE_FIELD_33\n+    if (bits == 33) return true;\n+#endif\n+#ifndef DISABLE_FIELD_34\n+    if (bits == 34) return true;\n+#endif\n+#ifndef DISABLE_FIELD_35\n+    if (bits == 35) return true;\n+#endif\n+#ifndef DISABLE_FIELD_36\n+    if (bits == 36) return true;\n+#endif\n+#ifndef DISABLE_FIELD_37\n+    if (bits == 37) return true;\n+#endif\n+#ifndef DISABLE_FIELD_38\n+    if (bits == 38) return true;\n+#endif\n+#ifndef DISABLE_FIELD_39\n+    if (bits == 39) return true;\n+#endif\n+#ifndef DISABLE_FIELD_40\n+    if (bits == 40) return true;\n+#endif\n+#ifndef DISABLE_FIELD_41\n+    if (bits == 41) return true;\n+#endif\n+#ifndef DISABLE_FIELD_42\n+    if (bits == 42) return true;\n+#endif\n+#ifndef DISABLE_FIELD_43\n+    if (bits == 43) return true;\n+#endif\n+#ifndef DISABLE_FIELD_44\n+    if (bits == 44) return true;\n+#endif\n+#ifndef DISABLE_FIELD_45\n+    if (bits == 45) return true;\n+#endif\n+#ifndef DISABLE_FIELD_46\n+    if (bits == 46) return true;\n+#endif\n+#ifndef DISABLE_FIELD_47\n+    if (bits == 47) return true;\n+#endif\n+#ifndef DISABLE_FIELD_48\n+    if (bits == 48) return true;\n+#endif\n+#ifndef DISABLE_FIELD_49\n+    if (bits == 49) return true;\n+#endif\n+#ifndef DISABLE_FIELD_50\n+    if (bits == 50) return true;\n+#endif\n+#ifndef DISABLE_FIELD_51\n+    if (bits == 51) return true;\n+#endif\n+#ifndef DISABLE_FIELD_52\n+    if (bits == 52) return true;\n+#endif\n+#ifndef DISABLE_FIELD_53\n+    if (bits == 53) return true;\n+#endif\n+#ifndef DISABLE_FIELD_54\n+    if (bits == 54) return true;\n+#endif\n+#ifndef DISABLE_FIELD_55\n+    if (bits == 55) return true;\n+#endif\n+#ifndef DISABLE_FIELD_56\n+    if (bits == 56) return true;\n+#endif\n+#ifndef DISABLE_FIELD_57\n+    if (bits == 57) return true;\n+#endif\n+#ifndef DISABLE_FIELD_58\n+    if (bits == 58) return true;\n+#endif\n+#ifndef DISABLE_FIELD_59\n+    if (bits == 59) return true;\n+#endif\n+#ifndef DISABLE_FIELD_60\n+    if (bits == 60) return true;\n+#endif\n+#ifndef DISABLE_FIELD_61\n+    if (bits == 61) return true;\n+#endif\n+#ifndef DISABLE_FIELD_62\n+    if (bits == 62) return true;\n+#endif\n+#ifndef DISABLE_FIELD_63\n+    if (bits == 63) return true;\n+#endif\n+#ifndef DISABLE_FIELD_64\n+    if (bits == 64) return true;\n+#endif\n+    return false;\n+}\n+\n+uint32_t minisketch_implementation_max() {\n+    uint32_t ret = 0;\n+#ifdef HAVE_CLMUL\n+    ret += 2;\n+#endif\n+    return ret;\n+}\n+\n+int minisketch_implementation_supported(uint32_t bits, uint32_t implementation) {\n+    if (!minisketch_bits_supported(bits) || implementation > minisketch_implementation_max()) {\n+        return 0;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            delete sketch;\n+            return 1;\n+        }\n+    } catch (std::bad_alloc& ba) {}\n+    return 0;\n+}\n+\n+minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity) {\n+    if (capacity == 0) {\n+        return nullptr;\n+    }\n+    try {\n+        Sketch* sketch = Construct(bits, implementation);\n+        if (sketch) {\n+            try {\n+                sketch->Init(capacity);\n+            } catch (std::bad_alloc& ba) {",
      "path": "src/minisketch/src/minisketch.cpp",
      "position": null,
      "original_position": 348,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "7faf0937cf772a34794f1ad33c03fdee222252a7",
      "in_reply_to_id": 626505082,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, removed.",
      "created_at": "2021-05-07T19:01:37Z",
      "updated_at": "2021-05-08T21:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r628444409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628444409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 348,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635995151",
      "pull_request_review_id": 664235602,
      "id": 635995151,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTk5NTE1MQ==",
      "diff_hunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketchwrapper.h>\n+\n+#include <minisketch.h>\n+#include <logging.h>\n+#include <util/time.h>",
      "path": "src/minisketchwrapper.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "35049cf2a16a63bd1adf511e8c0ac526be5e4e8a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps:\r\n\r\n```suggestion\r\n#include <logging.h>\r\n#include <util/time.h>\r\n\r\n#include <minisketch.h>\r\n```\r\n(since minisketch.h is a separate library import)",
      "created_at": "2021-05-20T10:57:56Z",
      "updated_at": "2021-05-20T11:13:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r635995151",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635995151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": 7,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635995669",
      "pull_request_review_id": 664235602,
      "id": 635995669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTk5NTY2OQ==",
      "diff_hunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketchwrapper.h>\n+\n+#include <minisketch.h>\n+#include <logging.h>\n+#include <util/time.h>\n+\n+#include <algorithm>\n+#include <optional>\n+#include <stddef.h>\n+#include <stdint.h>",
      "path": "src/minisketchwrapper.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "35049cf2a16a63bd1adf511e8c0ac526be5e4e8a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the c++ headers are generally preferred (cstddef and cstdint)",
      "created_at": "2021-05-20T10:58:46Z",
      "updated_at": "2021-05-20T11:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r635995669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635995669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635995919",
      "pull_request_review_id": 664235602,
      "id": 635995919,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTk5NTkxOQ==",
      "diff_hunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketchwrapper.h>\n+\n+#include <minisketch.h>\n+#include <logging.h>\n+#include <util/time.h>\n+\n+#include <algorithm>\n+#include <optional>\n+#include <stddef.h>\n+#include <stdint.h>\n+\n+namespace {\n+\n+static constexpr uint32_t BITS = 32;\n+\n+uint32_t FindBestImplementation()\n+{\n+    std::optional<std::pair<int64_t, uint32_t>> best;\n+\n+    uint32_t max_impl = Minisketch::MaxImplementation();\n+    for (uint32_t impl = 0; impl <= max_impl; ++impl) {\n+        std::vector<int64_t> benches;",
      "path": "src/minisketchwrapper.cpp",
      "position": 29,
      "original_position": 26,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "35049cf2a16a63bd1adf511e8c0ac526be5e4e8a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps:\r\n\r\n```suggestion\r\n        std::array<int64_t, 11> benches;\r\n```\r\n\r\nSince the capacity is known upfront?",
      "created_at": "2021-05-20T10:59:13Z",
      "updated_at": "2021-05-20T11:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r635995919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635995919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635996839",
      "pull_request_review_id": 664235602,
      "id": 635996839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTk5NjgzOQ==",
      "diff_hunk": "@@ -0,0 +1,17 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_MINISKETCHWRAPPER_H\n+#define BITCOIN_MINISKETCHWRAPPER_H\n+\n+#include <minisketch.h>\n+#include <stddef.h>\n+#include <stdint.h>",
      "path": "src/minisketchwrapper.h",
      "position": null,
      "original_position": 10,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "35049cf2a16a63bd1adf511e8c0ac526be5e4e8a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Separate standard library imports:\r\n\r\n```suggestion\r\n#include <minisketch.h>\r\n\r\n#include <cstddef>\r\n#include <cstdint>\r\n```",
      "created_at": "2021-05-20T11:00:40Z",
      "updated_at": "2021-05-20T11:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r635996839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635996839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": 8,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635997171",
      "pull_request_review_id": 664235602,
      "id": 635997171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTk5NzE3MQ==",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 21 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <random.h>\n+#include <test/util/setup_common.h>\n+#include <vector>\n+\n+#include <boost/test/unit_test.hpp>",
      "path": "src/test/minisketch_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "35049cf2a16a63bd1adf511e8c0ac526be5e4e8a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n\r\n#include <boost/test/unit_test.hpp>\r\n\r\n#include <vector>\r\n```",
      "created_at": "2021-05-20T11:01:12Z",
      "updated_at": "2021-05-20T11:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r635997171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635997171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670032987",
      "pull_request_review_id": 706814551,
      "id": 670032987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDAzMjk4Nw==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */",
      "path": "src/minisketch/include/minisketch.h",
      "position": 76,
      "original_position": 76,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reading from the fuzzy paper \"Codes and Syndromes\", should one interpret the capacity as the error-correcting distance `C` (here instantiated as binary BCH codes) ? \r\n\r\nFurther the documentation says the decoding is always successful when the number of elements in the set is not higher than the capacity, though in fact set size != sketch capacity, as afaiu 0 element are pruned out of the sketch, so shouldn't documentation says that decoding can be successful even in set size > sketch capacity ?",
      "created_at": "2021-07-15T00:06:57Z",
      "updated_at": "2021-07-15T01:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r670032987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670032987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670035887",
      "pull_request_review_id": 706814551,
      "id": 670035887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDAzNTg4Nw==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);",
      "path": "src/minisketch/include/minisketch.h",
      "position": 93,
      "original_position": 93,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC, sketches are initialized by default with `std::random_device`. If a user has a better source of randomness rather than this implementation-defined pseudo-random number generator, it should rather rely on it ? \r\n\r\nIf so, I think comment could be clearer about when a user should decide between default random seed and user-provided value.",
      "created_at": "2021-07-15T00:15:14Z",
      "updated_at": "2021-07-15T01:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r670035887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670035887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670043855",
      "pull_request_review_id": 706814551,
      "id": 670043855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDA0Mzg1NQ==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);\n+\n+/** Clone a sketch.\n+ *\n+ * The result must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_clone(const minisketch* sketch);\n+\n+/** Destroy a sketch.\n+ *\n+ * The pointer that was passed in may not be used anymore afterwards.\n+ */\n+MINISKETCH_API void minisketch_destroy(minisketch* sketch);\n+\n+/** Compute the size in bytes for serializing a given sketch. */\n+MINISKETCH_API size_t minisketch_serialized_size(const minisketch* sketch);\n+\n+/** Serialize a sketch to bytes. */\n+MINISKETCH_API void minisketch_serialize(const minisketch* sketch, unsigned char* output);\n+\n+/** Deserialize a sketch from bytes. */\n+MINISKETCH_API void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\n+\n+/** Add an element to a sketch.\n+ * \n+ * If the element to be added is too large for the sketch, the most significant\n+ * bits of the element are dropped. More precisely, if the element size of\n+ * `sketch` is b bits, then this function adds the unsigned integer represented\n+ * by the b least significant bits of `element` to `sketch`.",
      "path": "src/minisketch/include/minisketch.h",
      "position": 121,
      "original_position": 121,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe you should point out to protocoltips.md, that's the only other documentation place where collisions and their risks are explained ?\r\n\r\nZooming out, what's the collision model we care for Erlay ? I think there was an irc discussion a while back pointing that malicious inputs provoking collisions don't really matter as if your peer want to fail transaction announcement there is a reduction to stay silent. So it's more about accidental collisions, what's the probability here with 32-bit elements, (2^32 / 2^256)^(set _size) ?",
      "created_at": "2021-07-15T00:40:13Z",
      "updated_at": "2021-07-15T01:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r670043855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670043855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 121,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670048599",
      "pull_request_review_id": 706814551,
      "id": 670048599,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDA0ODU5OQ==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);\n+\n+/** Clone a sketch.\n+ *\n+ * The result must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_clone(const minisketch* sketch);\n+\n+/** Destroy a sketch.\n+ *\n+ * The pointer that was passed in may not be used anymore afterwards.\n+ */\n+MINISKETCH_API void minisketch_destroy(minisketch* sketch);\n+\n+/** Compute the size in bytes for serializing a given sketch. */\n+MINISKETCH_API size_t minisketch_serialized_size(const minisketch* sketch);\n+\n+/** Serialize a sketch to bytes. */\n+MINISKETCH_API void minisketch_serialize(const minisketch* sketch, unsigned char* output);\n+\n+/** Deserialize a sketch from bytes. */\n+MINISKETCH_API void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\n+\n+/** Add an element to a sketch.\n+ * \n+ * If the element to be added is too large for the sketch, the most significant\n+ * bits of the element are dropped. More precisely, if the element size of\n+ * `sketch` is b bits, then this function adds the unsigned integer represented\n+ * by the b least significant bits of `element` to `sketch`.\n+ * \n+ * If the element to be added is 0 (after potentially dropping the most significant\n+ * bits), then this function is a no-op. Sketches cannot contain an element with\n+ * the value 0.\n+ *\n+ * Note that adding the same element a second time removes it again.\n+ */\n+MINISKETCH_API void minisketch_add_uint64(minisketch* sketch, uint64_t element);\n+\n+/** Merge the elements of another sketch into this sketch.\n+ *\n+ * After merging, `sketch` will contain every element that existed in one but not\n+ * both of the input sketches. It can be seen as an exclusive or operation on\n+ * the set elements.  If the capacity of `other_sketch` is lower than `sketch`'s,\n+ * merging reduces the capacity of `sketch` to that of `other_sketch`.\n+ *\n+ * This function returns the capacity of `sketch` after merging has been performed\n+ * (where this capacity is at least 1), or 0 to indicate that merging has failed because\n+ * the two input sketches differ in their element size or implementation. If 0 is\n+ * returned, `sketch` (and its capacity) have not been modified.\n+ *\n+ * It is also possible to perform this operation directly on the serializations\n+ * of two sketches with the same element size and capacity by performing a bitwise XOR\n+ * of the serializations.\n+ */\n+MINISKETCH_API size_t minisketch_merge(minisketch* sketch, const minisketch* other_sketch);\n+\n+/** Decode a sketch.\n+ *\n+ * `output` is a pointer to an array of `max_element` uint64_t's, which will be\n+ * filled with the elements in this sketch.\n+ *\n+ * The return value is the number of decoded elements, or -1 if decoding failed.\n+ */\n+MINISKETCH_API ssize_t minisketch_decode(const minisketch* sketch, size_t max_elements, uint64_t* output);\n+\n+/** Compute the capacity needed to achieve a certain rate of false positives.\n+ *\n+ * A sketch with capacity c and no more than c elements can always be decoded\n+ * correctly. However, if it has more than c elements, or contains just random\n+ * bytes, it is possible that it will still decode, but the result will be\n+ * nonsense. This can be counteracted by increasing the capacity slightly.\n+ *\n+ * Given a field size bits, an intended number of elements that can be decoded\n+ * max_elements, and a false positive probability of 1 in 2**fpbits, this\n+ * function computes the necessary capacity. It is only guaranteed to be\n+ * accurate up to fpbits=256.\n+ */\n+MINISKETCH_API size_t minisketch_compute_capacity(uint32_t bits, size_t max_elements, uint32_t fpbits);\n+\n+/** Compute what max_elements can be decoded for a certain rate of false positives.\n+ *\n+ * This is the inverse operation of minisketch_compute_capacity. It determines,\n+ * given a field size bits, a capacity of a sketch, and an acceptable false\n+ * positive probability of 1 in 2**fpbits, what the maximum allowed\n+ * max_elements value is. If no value of max_elements would give the desired\n+ * false positive probability, 0 is returned.\n+ *\n+ * Note that this is not an exact inverse of minisketch_compute_capacity. For\n+ * example, with bits=32, fpbits=16, and max_elements=8,\n+ * minisketch_compute_capacity will return 9, as capacity 8 would only have a\n+ * false positive chance of 1 in 2^15.3. Increasing the capacity to 9 however\n+ * decreases the fp chance to 1 in 2^47.3, enough for max_elements=9 (with fp\n+ * chance of 1 in 2^18.5). Therefore, minisketch_compute_max_elements with\n+ * capacity=9 will return 9.\n+ */\n+MINISKETCH_API size_t minisketch_compute_max_elements(uint32_t bits, size_t capacity, uint32_t fpbits);\n+\n+#ifdef __cplusplus\n+}\n+\n+#if __cplusplus >= 201103L\n+/** Simple RAII C++11 wrapper around the minisketch API. */\n+class Minisketch\n+{\n+    struct Deleter\n+    {\n+        void operator()(minisketch* ptr) const\n+        {\n+            minisketch_destroy(ptr);\n+        }\n+    };\n+\n+    std::unique_ptr<minisketch, Deleter> m_minisketch;\n+\n+public:\n+    /** Check whether the library supports fields of the given size. */\n+    static bool BitsSupported(uint32_t bits) noexcept { return minisketch_bits_supported(bits); }\n+\n+    /** Get the highest supported implementation number. */\n+    static uint32_t MaxImplementation() noexcept { return minisketch_implementation_max(); }\n+\n+    /** Check whether the library supports fields with a given size and implementation number.\n+     *  If a particular field size `bits` is supported, implementation 0 is always supported for it.\n+     *  Higher implementation numbers may or may not be available as well, up to MaxImplementation().\n+     */\n+    static bool ImplementationSupported(uint32_t bits, uint32_t implementation) noexcept { return minisketch_implementation_supported(bits, implementation); }\n+\n+    /** Given field size and a maximum number of decodable elements n, compute what capacity c to\n+     *  use so that sketches with more elements than n have a chance no higher than 2^-fpbits of\n+     *  being decoded incorrectly (and will instead fail when decoding for up to n elements).\n+     *\n+     *  See minisketch_compute_capacity for more details. */\n+    static size_t ComputeCapacity(uint32_t bits, size_t max_elements, uint32_t fpbits) noexcept { return minisketch_compute_capacity(bits, max_elements, fpbits); }\n+\n+    /** Reverse operation of ComputeCapacity. See minisketch_compute_max_elements. */\n+    static size_t ComputeMaxElements(uint32_t bits, size_t capacity, uint32_t fpbits) noexcept { return minisketch_compute_max_elements(bits, capacity, fpbits); }\n+\n+    /** Construct a clone of the specified sketch. */\n+    Minisketch(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+    }\n+\n+    /** Make this Minisketch a clone of the specified one. */\n+    Minisketch& operator=(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+        return *this;\n+    }\n+\n+    /** Check whether this Minisketch object is valid. */\n+    explicit operator bool() const noexcept { return bool{m_minisketch}; }",
      "path": "src/minisketch/include/minisketch.h",
      "position": 248,
      "original_position": 248,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could be called `is_valid`, more Core's nomenclature-like imo?",
      "created_at": "2021-07-15T00:55:47Z",
      "updated_at": "2021-07-15T01:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r670048599",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670048599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 248,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670050525",
      "pull_request_review_id": 706814551,
      "id": 670050525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDA1MDUyNQ==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);\n+\n+/** Clone a sketch.\n+ *\n+ * The result must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_clone(const minisketch* sketch);\n+\n+/** Destroy a sketch.\n+ *\n+ * The pointer that was passed in may not be used anymore afterwards.\n+ */\n+MINISKETCH_API void minisketch_destroy(minisketch* sketch);\n+\n+/** Compute the size in bytes for serializing a given sketch. */\n+MINISKETCH_API size_t minisketch_serialized_size(const minisketch* sketch);\n+\n+/** Serialize a sketch to bytes. */\n+MINISKETCH_API void minisketch_serialize(const minisketch* sketch, unsigned char* output);\n+\n+/** Deserialize a sketch from bytes. */\n+MINISKETCH_API void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\n+\n+/** Add an element to a sketch.\n+ * \n+ * If the element to be added is too large for the sketch, the most significant\n+ * bits of the element are dropped. More precisely, if the element size of\n+ * `sketch` is b bits, then this function adds the unsigned integer represented\n+ * by the b least significant bits of `element` to `sketch`.\n+ * \n+ * If the element to be added is 0 (after potentially dropping the most significant\n+ * bits), then this function is a no-op. Sketches cannot contain an element with\n+ * the value 0.\n+ *\n+ * Note that adding the same element a second time removes it again.\n+ */\n+MINISKETCH_API void minisketch_add_uint64(minisketch* sketch, uint64_t element);\n+\n+/** Merge the elements of another sketch into this sketch.\n+ *\n+ * After merging, `sketch` will contain every element that existed in one but not\n+ * both of the input sketches. It can be seen as an exclusive or operation on\n+ * the set elements.  If the capacity of `other_sketch` is lower than `sketch`'s,\n+ * merging reduces the capacity of `sketch` to that of `other_sketch`.\n+ *\n+ * This function returns the capacity of `sketch` after merging has been performed\n+ * (where this capacity is at least 1), or 0 to indicate that merging has failed because\n+ * the two input sketches differ in their element size or implementation. If 0 is\n+ * returned, `sketch` (and its capacity) have not been modified.\n+ *\n+ * It is also possible to perform this operation directly on the serializations\n+ * of two sketches with the same element size and capacity by performing a bitwise XOR\n+ * of the serializations.\n+ */\n+MINISKETCH_API size_t minisketch_merge(minisketch* sketch, const minisketch* other_sketch);\n+\n+/** Decode a sketch.\n+ *\n+ * `output` is a pointer to an array of `max_element` uint64_t's, which will be\n+ * filled with the elements in this sketch.\n+ *\n+ * The return value is the number of decoded elements, or -1 if decoding failed.\n+ */\n+MINISKETCH_API ssize_t minisketch_decode(const minisketch* sketch, size_t max_elements, uint64_t* output);\n+\n+/** Compute the capacity needed to achieve a certain rate of false positives.\n+ *\n+ * A sketch with capacity c and no more than c elements can always be decoded\n+ * correctly. However, if it has more than c elements, or contains just random\n+ * bytes, it is possible that it will still decode, but the result will be\n+ * nonsense. This can be counteracted by increasing the capacity slightly.\n+ *\n+ * Given a field size bits, an intended number of elements that can be decoded\n+ * max_elements, and a false positive probability of 1 in 2**fpbits, this\n+ * function computes the necessary capacity. It is only guaranteed to be\n+ * accurate up to fpbits=256.\n+ */\n+MINISKETCH_API size_t minisketch_compute_capacity(uint32_t bits, size_t max_elements, uint32_t fpbits);\n+\n+/** Compute what max_elements can be decoded for a certain rate of false positives.\n+ *\n+ * This is the inverse operation of minisketch_compute_capacity. It determines,\n+ * given a field size bits, a capacity of a sketch, and an acceptable false\n+ * positive probability of 1 in 2**fpbits, what the maximum allowed\n+ * max_elements value is. If no value of max_elements would give the desired\n+ * false positive probability, 0 is returned.\n+ *\n+ * Note that this is not an exact inverse of minisketch_compute_capacity. For\n+ * example, with bits=32, fpbits=16, and max_elements=8,\n+ * minisketch_compute_capacity will return 9, as capacity 8 would only have a\n+ * false positive chance of 1 in 2^15.3. Increasing the capacity to 9 however\n+ * decreases the fp chance to 1 in 2^47.3, enough for max_elements=9 (with fp\n+ * chance of 1 in 2^18.5). Therefore, minisketch_compute_max_elements with\n+ * capacity=9 will return 9.\n+ */\n+MINISKETCH_API size_t minisketch_compute_max_elements(uint32_t bits, size_t capacity, uint32_t fpbits);\n+\n+#ifdef __cplusplus\n+}\n+\n+#if __cplusplus >= 201103L\n+/** Simple RAII C++11 wrapper around the minisketch API. */\n+class Minisketch\n+{\n+    struct Deleter\n+    {\n+        void operator()(minisketch* ptr) const\n+        {\n+            minisketch_destroy(ptr);\n+        }\n+    };\n+\n+    std::unique_ptr<minisketch, Deleter> m_minisketch;\n+\n+public:\n+    /** Check whether the library supports fields of the given size. */\n+    static bool BitsSupported(uint32_t bits) noexcept { return minisketch_bits_supported(bits); }\n+\n+    /** Get the highest supported implementation number. */\n+    static uint32_t MaxImplementation() noexcept { return minisketch_implementation_max(); }\n+\n+    /** Check whether the library supports fields with a given size and implementation number.\n+     *  If a particular field size `bits` is supported, implementation 0 is always supported for it.\n+     *  Higher implementation numbers may or may not be available as well, up to MaxImplementation().\n+     */\n+    static bool ImplementationSupported(uint32_t bits, uint32_t implementation) noexcept { return minisketch_implementation_supported(bits, implementation); }\n+\n+    /** Given field size and a maximum number of decodable elements n, compute what capacity c to\n+     *  use so that sketches with more elements than n have a chance no higher than 2^-fpbits of\n+     *  being decoded incorrectly (and will instead fail when decoding for up to n elements).\n+     *\n+     *  See minisketch_compute_capacity for more details. */\n+    static size_t ComputeCapacity(uint32_t bits, size_t max_elements, uint32_t fpbits) noexcept { return minisketch_compute_capacity(bits, max_elements, fpbits); }\n+\n+    /** Reverse operation of ComputeCapacity. See minisketch_compute_max_elements. */\n+    static size_t ComputeMaxElements(uint32_t bits, size_t capacity, uint32_t fpbits) noexcept { return minisketch_compute_max_elements(bits, capacity, fpbits); }\n+\n+    /** Construct a clone of the specified sketch. */\n+    Minisketch(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+    }\n+\n+    /** Make this Minisketch a clone of the specified one. */\n+    Minisketch& operator=(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+        return *this;\n+    }\n+\n+    /** Check whether this Minisketch object is valid. */\n+    explicit operator bool() const noexcept { return bool{m_minisketch}; }\n+\n+    /** Construct an (invalid) Minisketch object. */\n+    Minisketch() noexcept = default;\n+\n+    /** Move constructor. */\n+    Minisketch(Minisketch&&) noexcept = default;\n+\n+    /** Move assignment. */\n+    Minisketch& operator=(Minisketch&&) noexcept = default;\n+\n+    /** Construct a Minisketch object with the specified parameters.\n+     *\n+     * If bits is not BitsSupported(), or the combination of bits and capacity is not\n+     * ImplementationSupported(), or OOM occurs internally, an invalid Minisketch\n+     * object will be constructed. Use operator bool() to check that this isn't the\n+     * case before performing any other operations. */\n+    Minisketch(uint32_t bits, uint32_t implementation, size_t capacity) noexcept\n+    {\n+        m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_create(bits, implementation, capacity));\n+    }\n+\n+    /** Create a Minisketch object sufficiently large for the specified number of elements at given fpbits.\n+     *  It may construct an invalid object, which you may need to check for. */",
      "path": "src/minisketch/include/minisketch.h",
      "position": 271,
      "original_position": 271,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: make the \"may\" a \"must\", at least I interpret the requirement on the non-wrapped construction already as a must \"Use operator bool() to check that this isn't the case before performing any other operations\"",
      "created_at": "2021-07-15T01:01:53Z",
      "updated_at": "2021-07-15T01:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r670050525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670050525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 271,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733490",
      "pull_request_review_id": 708964053,
      "id": 671733490,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTczMzQ5MA==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */",
      "path": "src/minisketch/include/minisketch.h",
      "position": 76,
      "original_position": 76,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": 670032987,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The distance of the implicit BCH code is 2C+1. I don't understand the rest of what you're trying to say.\r\n\r\nEDIT: I was wrong earlier; the distance is 2C+1, not C+1.",
      "created_at": "2021-07-17T19:15:44Z",
      "updated_at": "2021-07-18T17:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r671733490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733597",
      "pull_request_review_id": 708964114,
      "id": 671733597,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTczMzU5Nw==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);\n+\n+/** Clone a sketch.\n+ *\n+ * The result must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_clone(const minisketch* sketch);\n+\n+/** Destroy a sketch.\n+ *\n+ * The pointer that was passed in may not be used anymore afterwards.\n+ */\n+MINISKETCH_API void minisketch_destroy(minisketch* sketch);\n+\n+/** Compute the size in bytes for serializing a given sketch. */\n+MINISKETCH_API size_t minisketch_serialized_size(const minisketch* sketch);\n+\n+/** Serialize a sketch to bytes. */\n+MINISKETCH_API void minisketch_serialize(const minisketch* sketch, unsigned char* output);\n+\n+/** Deserialize a sketch from bytes. */\n+MINISKETCH_API void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\n+\n+/** Add an element to a sketch.\n+ * \n+ * If the element to be added is too large for the sketch, the most significant\n+ * bits of the element are dropped. More precisely, if the element size of\n+ * `sketch` is b bits, then this function adds the unsigned integer represented\n+ * by the b least significant bits of `element` to `sketch`.",
      "path": "src/minisketch/include/minisketch.h",
      "position": 121,
      "original_position": 121,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": 670043855,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://en.wikipedia.org/wiki/Birthday_problem",
      "created_at": "2021-07-17T19:17:15Z",
      "updated_at": "2021-07-17T19:17:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r671733597",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 121,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733622",
      "pull_request_review_id": 708964126,
      "id": 671733622,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTczMzYyMg==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);\n+\n+/** Clone a sketch.\n+ *\n+ * The result must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_clone(const minisketch* sketch);\n+\n+/** Destroy a sketch.\n+ *\n+ * The pointer that was passed in may not be used anymore afterwards.\n+ */\n+MINISKETCH_API void minisketch_destroy(minisketch* sketch);\n+\n+/** Compute the size in bytes for serializing a given sketch. */\n+MINISKETCH_API size_t minisketch_serialized_size(const minisketch* sketch);\n+\n+/** Serialize a sketch to bytes. */\n+MINISKETCH_API void minisketch_serialize(const minisketch* sketch, unsigned char* output);\n+\n+/** Deserialize a sketch from bytes. */\n+MINISKETCH_API void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\n+\n+/** Add an element to a sketch.\n+ * \n+ * If the element to be added is too large for the sketch, the most significant\n+ * bits of the element are dropped. More precisely, if the element size of\n+ * `sketch` is b bits, then this function adds the unsigned integer represented\n+ * by the b least significant bits of `element` to `sketch`.\n+ * \n+ * If the element to be added is 0 (after potentially dropping the most significant\n+ * bits), then this function is a no-op. Sketches cannot contain an element with\n+ * the value 0.\n+ *\n+ * Note that adding the same element a second time removes it again.\n+ */\n+MINISKETCH_API void minisketch_add_uint64(minisketch* sketch, uint64_t element);\n+\n+/** Merge the elements of another sketch into this sketch.\n+ *\n+ * After merging, `sketch` will contain every element that existed in one but not\n+ * both of the input sketches. It can be seen as an exclusive or operation on\n+ * the set elements.  If the capacity of `other_sketch` is lower than `sketch`'s,\n+ * merging reduces the capacity of `sketch` to that of `other_sketch`.\n+ *\n+ * This function returns the capacity of `sketch` after merging has been performed\n+ * (where this capacity is at least 1), or 0 to indicate that merging has failed because\n+ * the two input sketches differ in their element size or implementation. If 0 is\n+ * returned, `sketch` (and its capacity) have not been modified.\n+ *\n+ * It is also possible to perform this operation directly on the serializations\n+ * of two sketches with the same element size and capacity by performing a bitwise XOR\n+ * of the serializations.\n+ */\n+MINISKETCH_API size_t minisketch_merge(minisketch* sketch, const minisketch* other_sketch);\n+\n+/** Decode a sketch.\n+ *\n+ * `output` is a pointer to an array of `max_element` uint64_t's, which will be\n+ * filled with the elements in this sketch.\n+ *\n+ * The return value is the number of decoded elements, or -1 if decoding failed.\n+ */\n+MINISKETCH_API ssize_t minisketch_decode(const minisketch* sketch, size_t max_elements, uint64_t* output);\n+\n+/** Compute the capacity needed to achieve a certain rate of false positives.\n+ *\n+ * A sketch with capacity c and no more than c elements can always be decoded\n+ * correctly. However, if it has more than c elements, or contains just random\n+ * bytes, it is possible that it will still decode, but the result will be\n+ * nonsense. This can be counteracted by increasing the capacity slightly.\n+ *\n+ * Given a field size bits, an intended number of elements that can be decoded\n+ * max_elements, and a false positive probability of 1 in 2**fpbits, this\n+ * function computes the necessary capacity. It is only guaranteed to be\n+ * accurate up to fpbits=256.\n+ */\n+MINISKETCH_API size_t minisketch_compute_capacity(uint32_t bits, size_t max_elements, uint32_t fpbits);\n+\n+/** Compute what max_elements can be decoded for a certain rate of false positives.\n+ *\n+ * This is the inverse operation of minisketch_compute_capacity. It determines,\n+ * given a field size bits, a capacity of a sketch, and an acceptable false\n+ * positive probability of 1 in 2**fpbits, what the maximum allowed\n+ * max_elements value is. If no value of max_elements would give the desired\n+ * false positive probability, 0 is returned.\n+ *\n+ * Note that this is not an exact inverse of minisketch_compute_capacity. For\n+ * example, with bits=32, fpbits=16, and max_elements=8,\n+ * minisketch_compute_capacity will return 9, as capacity 8 would only have a\n+ * false positive chance of 1 in 2^15.3. Increasing the capacity to 9 however\n+ * decreases the fp chance to 1 in 2^47.3, enough for max_elements=9 (with fp\n+ * chance of 1 in 2^18.5). Therefore, minisketch_compute_max_elements with\n+ * capacity=9 will return 9.\n+ */\n+MINISKETCH_API size_t minisketch_compute_max_elements(uint32_t bits, size_t capacity, uint32_t fpbits);\n+\n+#ifdef __cplusplus\n+}\n+\n+#if __cplusplus >= 201103L\n+/** Simple RAII C++11 wrapper around the minisketch API. */\n+class Minisketch\n+{\n+    struct Deleter\n+    {\n+        void operator()(minisketch* ptr) const\n+        {\n+            minisketch_destroy(ptr);\n+        }\n+    };\n+\n+    std::unique_ptr<minisketch, Deleter> m_minisketch;\n+\n+public:\n+    /** Check whether the library supports fields of the given size. */\n+    static bool BitsSupported(uint32_t bits) noexcept { return minisketch_bits_supported(bits); }\n+\n+    /** Get the highest supported implementation number. */\n+    static uint32_t MaxImplementation() noexcept { return minisketch_implementation_max(); }\n+\n+    /** Check whether the library supports fields with a given size and implementation number.\n+     *  If a particular field size `bits` is supported, implementation 0 is always supported for it.\n+     *  Higher implementation numbers may or may not be available as well, up to MaxImplementation().\n+     */\n+    static bool ImplementationSupported(uint32_t bits, uint32_t implementation) noexcept { return minisketch_implementation_supported(bits, implementation); }\n+\n+    /** Given field size and a maximum number of decodable elements n, compute what capacity c to\n+     *  use so that sketches with more elements than n have a chance no higher than 2^-fpbits of\n+     *  being decoded incorrectly (and will instead fail when decoding for up to n elements).\n+     *\n+     *  See minisketch_compute_capacity for more details. */\n+    static size_t ComputeCapacity(uint32_t bits, size_t max_elements, uint32_t fpbits) noexcept { return minisketch_compute_capacity(bits, max_elements, fpbits); }\n+\n+    /** Reverse operation of ComputeCapacity. See minisketch_compute_max_elements. */\n+    static size_t ComputeMaxElements(uint32_t bits, size_t capacity, uint32_t fpbits) noexcept { return minisketch_compute_max_elements(bits, capacity, fpbits); }\n+\n+    /** Construct a clone of the specified sketch. */\n+    Minisketch(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+    }\n+\n+    /** Make this Minisketch a clone of the specified one. */\n+    Minisketch& operator=(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+        return *this;\n+    }\n+\n+    /** Check whether this Minisketch object is valid. */\n+    explicit operator bool() const noexcept { return bool{m_minisketch}; }",
      "path": "src/minisketch/include/minisketch.h",
      "position": 248,
      "original_position": 248,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": 670048599,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isn't Bitcoin Core, and I think this is the the most ideomatic approach (especially with the `explicit` which avoids accidental conversions).",
      "created_at": "2021-07-17T19:17:34Z",
      "updated_at": "2021-07-17T19:18:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r671733622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 248,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733923",
      "pull_request_review_id": 708964259,
      "id": 671733923,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTczMzkyMw==",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+#ifndef _MINISKETCH_H_\n+#define _MINISKETCH_H_ 1\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifdef _MSC_VER\n+#  include <compat.h>\n+#else\n+#  include <unistd.h>\n+#endif\n+\n+#ifndef MINISKETCH_API\n+# if defined(_WIN32)\n+#  ifdef MINISKETCH_BUILD\n+#   define MINISKETCH_API __declspec(dllexport)\n+#  else\n+#   define MINISKETCH_API\n+#  endif\n+# elif defined(__GNUC__) && (__GNUC__ >= 4) && defined(MINISKETCH_BUILD)\n+#  define MINISKETCH_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define MINISKETCH_API\n+# endif\n+#endif\n+\n+#ifdef __cplusplus\n+#  if __cplusplus >= 201103L\n+#    include <memory>\n+#    include <vector>\n+#    include <cassert>\n+#    if __cplusplus >= 201703L\n+#      include <optional>\n+#    endif // __cplusplus >= 201703L\n+#  endif // __cplusplus >= 201103L\n+extern \"C\" {\n+#endif // __cplusplus\n+\n+/** Opaque type for decoded sketches. */\n+typedef struct minisketch minisketch;\n+\n+/** Determine whether support for elements of `bits` bits was compiled in. */\n+MINISKETCH_API int minisketch_bits_supported(uint32_t bits);\n+\n+/** Determine the maximum number of implementations available.\n+ *\n+ * Multiple implementations may be available for a given element size, with\n+ * different performance characteristics on different hardware.\n+ *\n+ * Each implementation is identified by a number from 0 to the output of this\n+ * function call, inclusive. Note that not every combination of implementation\n+ * and element size may exist (see further).\n+*/\n+MINISKETCH_API uint32_t minisketch_implementation_max(void);\n+\n+/** Determine if the a combination of bits and implementation number is available.\n+ *\n+ * Returns 1 if it is, 0 otherwise.\n+ */\n+MINISKETCH_API int minisketch_implementation_supported(uint32_t bits, uint32_t implementation);\n+\n+/** Construct a sketch for a given element size, implementation and capacity.\n+ *\n+ * If the combination of `bits` and `implementation` is unavailable, or when\n+ * OOM occurs, NULL is returned. If minisketch_implementation_supported\n+ * returns 1 for the specified bits and implementation, this will always succeed\n+ * (except when allocation fails).\n+ *\n+ * If the result is not NULL, it must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_create(uint32_t bits, uint32_t implementation, size_t capacity);\n+\n+/** Get the element size of a sketch in bits. */\n+MINISKETCH_API uint32_t minisketch_bits(const minisketch* sketch);\n+\n+/** Get the capacity of a sketch. */\n+MINISKETCH_API size_t minisketch_capacity(const minisketch* sketch);\n+\n+/** Get the implementation of a sketch. */\n+MINISKETCH_API uint32_t minisketch_implementation(const minisketch* sketch);\n+\n+/** Set the seed for randomizing algorithm choices to a fixed value.\n+ *\n+ * By default, sketches are initialized with a random seed. This is important\n+ * to avoid scenarios where an attacker could force worst-case behavior.\n+ *\n+ * This function initializes the seed to a user-provided value (any 64-bit\n+ * integer is acceptable, regardless of field size).\n+ *\n+ * When seed is -1, a fixed internal value with predictable behavior is\n+ * used. It is only intended for testing.\n+ */\n+MINISKETCH_API void minisketch_set_seed(minisketch* sketch, uint64_t seed);\n+\n+/** Clone a sketch.\n+ *\n+ * The result must be destroyed using minisketch_destroy.\n+ */\n+MINISKETCH_API minisketch* minisketch_clone(const minisketch* sketch);\n+\n+/** Destroy a sketch.\n+ *\n+ * The pointer that was passed in may not be used anymore afterwards.\n+ */\n+MINISKETCH_API void minisketch_destroy(minisketch* sketch);\n+\n+/** Compute the size in bytes for serializing a given sketch. */\n+MINISKETCH_API size_t minisketch_serialized_size(const minisketch* sketch);\n+\n+/** Serialize a sketch to bytes. */\n+MINISKETCH_API void minisketch_serialize(const minisketch* sketch, unsigned char* output);\n+\n+/** Deserialize a sketch from bytes. */\n+MINISKETCH_API void minisketch_deserialize(minisketch* sketch, const unsigned char* input);\n+\n+/** Add an element to a sketch.\n+ * \n+ * If the element to be added is too large for the sketch, the most significant\n+ * bits of the element are dropped. More precisely, if the element size of\n+ * `sketch` is b bits, then this function adds the unsigned integer represented\n+ * by the b least significant bits of `element` to `sketch`.\n+ * \n+ * If the element to be added is 0 (after potentially dropping the most significant\n+ * bits), then this function is a no-op. Sketches cannot contain an element with\n+ * the value 0.\n+ *\n+ * Note that adding the same element a second time removes it again.\n+ */\n+MINISKETCH_API void minisketch_add_uint64(minisketch* sketch, uint64_t element);\n+\n+/** Merge the elements of another sketch into this sketch.\n+ *\n+ * After merging, `sketch` will contain every element that existed in one but not\n+ * both of the input sketches. It can be seen as an exclusive or operation on\n+ * the set elements.  If the capacity of `other_sketch` is lower than `sketch`'s,\n+ * merging reduces the capacity of `sketch` to that of `other_sketch`.\n+ *\n+ * This function returns the capacity of `sketch` after merging has been performed\n+ * (where this capacity is at least 1), or 0 to indicate that merging has failed because\n+ * the two input sketches differ in their element size or implementation. If 0 is\n+ * returned, `sketch` (and its capacity) have not been modified.\n+ *\n+ * It is also possible to perform this operation directly on the serializations\n+ * of two sketches with the same element size and capacity by performing a bitwise XOR\n+ * of the serializations.\n+ */\n+MINISKETCH_API size_t minisketch_merge(minisketch* sketch, const minisketch* other_sketch);\n+\n+/** Decode a sketch.\n+ *\n+ * `output` is a pointer to an array of `max_element` uint64_t's, which will be\n+ * filled with the elements in this sketch.\n+ *\n+ * The return value is the number of decoded elements, or -1 if decoding failed.\n+ */\n+MINISKETCH_API ssize_t minisketch_decode(const minisketch* sketch, size_t max_elements, uint64_t* output);\n+\n+/** Compute the capacity needed to achieve a certain rate of false positives.\n+ *\n+ * A sketch with capacity c and no more than c elements can always be decoded\n+ * correctly. However, if it has more than c elements, or contains just random\n+ * bytes, it is possible that it will still decode, but the result will be\n+ * nonsense. This can be counteracted by increasing the capacity slightly.\n+ *\n+ * Given a field size bits, an intended number of elements that can be decoded\n+ * max_elements, and a false positive probability of 1 in 2**fpbits, this\n+ * function computes the necessary capacity. It is only guaranteed to be\n+ * accurate up to fpbits=256.\n+ */\n+MINISKETCH_API size_t minisketch_compute_capacity(uint32_t bits, size_t max_elements, uint32_t fpbits);\n+\n+/** Compute what max_elements can be decoded for a certain rate of false positives.\n+ *\n+ * This is the inverse operation of minisketch_compute_capacity. It determines,\n+ * given a field size bits, a capacity of a sketch, and an acceptable false\n+ * positive probability of 1 in 2**fpbits, what the maximum allowed\n+ * max_elements value is. If no value of max_elements would give the desired\n+ * false positive probability, 0 is returned.\n+ *\n+ * Note that this is not an exact inverse of minisketch_compute_capacity. For\n+ * example, with bits=32, fpbits=16, and max_elements=8,\n+ * minisketch_compute_capacity will return 9, as capacity 8 would only have a\n+ * false positive chance of 1 in 2^15.3. Increasing the capacity to 9 however\n+ * decreases the fp chance to 1 in 2^47.3, enough for max_elements=9 (with fp\n+ * chance of 1 in 2^18.5). Therefore, minisketch_compute_max_elements with\n+ * capacity=9 will return 9.\n+ */\n+MINISKETCH_API size_t minisketch_compute_max_elements(uint32_t bits, size_t capacity, uint32_t fpbits);\n+\n+#ifdef __cplusplus\n+}\n+\n+#if __cplusplus >= 201103L\n+/** Simple RAII C++11 wrapper around the minisketch API. */\n+class Minisketch\n+{\n+    struct Deleter\n+    {\n+        void operator()(minisketch* ptr) const\n+        {\n+            minisketch_destroy(ptr);\n+        }\n+    };\n+\n+    std::unique_ptr<minisketch, Deleter> m_minisketch;\n+\n+public:\n+    /** Check whether the library supports fields of the given size. */\n+    static bool BitsSupported(uint32_t bits) noexcept { return minisketch_bits_supported(bits); }\n+\n+    /** Get the highest supported implementation number. */\n+    static uint32_t MaxImplementation() noexcept { return minisketch_implementation_max(); }\n+\n+    /** Check whether the library supports fields with a given size and implementation number.\n+     *  If a particular field size `bits` is supported, implementation 0 is always supported for it.\n+     *  Higher implementation numbers may or may not be available as well, up to MaxImplementation().\n+     */\n+    static bool ImplementationSupported(uint32_t bits, uint32_t implementation) noexcept { return minisketch_implementation_supported(bits, implementation); }\n+\n+    /** Given field size and a maximum number of decodable elements n, compute what capacity c to\n+     *  use so that sketches with more elements than n have a chance no higher than 2^-fpbits of\n+     *  being decoded incorrectly (and will instead fail when decoding for up to n elements).\n+     *\n+     *  See minisketch_compute_capacity for more details. */\n+    static size_t ComputeCapacity(uint32_t bits, size_t max_elements, uint32_t fpbits) noexcept { return minisketch_compute_capacity(bits, max_elements, fpbits); }\n+\n+    /** Reverse operation of ComputeCapacity. See minisketch_compute_max_elements. */\n+    static size_t ComputeMaxElements(uint32_t bits, size_t capacity, uint32_t fpbits) noexcept { return minisketch_compute_max_elements(bits, capacity, fpbits); }\n+\n+    /** Construct a clone of the specified sketch. */\n+    Minisketch(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+    }\n+\n+    /** Make this Minisketch a clone of the specified one. */\n+    Minisketch& operator=(const Minisketch& sketch) noexcept\n+    {\n+        if (sketch.m_minisketch) {\n+            m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_clone(sketch.m_minisketch.get()));\n+        }\n+        return *this;\n+    }\n+\n+    /** Check whether this Minisketch object is valid. */\n+    explicit operator bool() const noexcept { return bool{m_minisketch}; }\n+\n+    /** Construct an (invalid) Minisketch object. */\n+    Minisketch() noexcept = default;\n+\n+    /** Move constructor. */\n+    Minisketch(Minisketch&&) noexcept = default;\n+\n+    /** Move assignment. */\n+    Minisketch& operator=(Minisketch&&) noexcept = default;\n+\n+    /** Construct a Minisketch object with the specified parameters.\n+     *\n+     * If bits is not BitsSupported(), or the combination of bits and capacity is not\n+     * ImplementationSupported(), or OOM occurs internally, an invalid Minisketch\n+     * object will be constructed. Use operator bool() to check that this isn't the\n+     * case before performing any other operations. */\n+    Minisketch(uint32_t bits, uint32_t implementation, size_t capacity) noexcept\n+    {\n+        m_minisketch = std::unique_ptr<minisketch, Deleter>(minisketch_create(bits, implementation, capacity));\n+    }\n+\n+    /** Create a Minisketch object sufficiently large for the specified number of elements at given fpbits.\n+     *  It may construct an invalid object, which you may need to check for. */",
      "path": "src/minisketch/include/minisketch.h",
      "position": 271,
      "original_position": 271,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "f0d322d277abf39c0a1b6f0ffc8871ba5f5cff84",
      "in_reply_to_id": 670050525,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See the comment above, which describes the conditions under which an invalid object may be constructed. There are reasonable use cases where you don't need to check (you already made sure the fieldsize/implementation combination is supported, and you're ok with treating OOM as a fatal error).",
      "created_at": "2021-07-17T19:20:23Z",
      "updated_at": "2021-07-17T19:20:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r671733923",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671733923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 271,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680167874",
      "pull_request_review_id": 719394603,
      "id": 680167874,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE2Nzg3NA==",
      "diff_hunk": "@@ -0,0 +1,433 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Pieter Wuille, Greg Maxwell, Gleb Naumenko      *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file LICENSE or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _MINISKETCH_SKETCH_IMPL_H_\n+#define _MINISKETCH_SKETCH_IMPL_H_\n+\n+#include <random>\n+\n+#include \"util.h\"\n+#include \"sketch.h\"\n+#include \"int_utils.h\"\n+\n+/** Compute the remainder of a polynomial division of val by mod, putting the result in mod. */\n+template<typename F>\n+void PolyMod(const std::vector<typename F::Elem>& mod, std::vector<typename F::Elem>& val, const F& field) {\n+    size_t modsize = mod.size();\n+    CHECK_SAFE(modsize > 0 && mod.back() == 1);\n+    if (val.size() < modsize) return;\n+    CHECK_SAFE(val.back() != 0);\n+    while (val.size() >= modsize) {\n+        auto term = val.back();\n+        val.pop_back();\n+        if (term != 0) {\n+            typename F::Multiplier mul(field, term);\n+            for (size_t x = 0; x < mod.size() - 1; ++x) {\n+                val[val.size() - modsize + 1 + x] ^= mul(mod[x]);\n+            }\n+        }\n+    }\n+    while (val.size() > 0 && val.back() == 0) val.pop_back();\n+}\n+\n+/** Compute the quotient of a polynomial division of val by mod, putting the quotient in div and the remainder in val. */\n+template<typename F>\n+void DivMod(const std::vector<typename F::Elem>& mod, std::vector<typename F::Elem>& val, std::vector<typename F::Elem>& div, const F& field) {\n+    size_t modsize = mod.size();\n+    CHECK_SAFE(mod.size() > 0 && mod.back() == 1);\n+    if (val.size() < mod.size()) {\n+        div.clear();\n+        return;\n+    }\n+    CHECK_SAFE(val.back() != 0);\n+    div.resize(val.size() - mod.size() + 1);\n+    while (val.size() >= modsize) {\n+        auto term = val.back();\n+        div[val.size() - modsize] = term;\n+        val.pop_back();\n+        if (term != 0) {\n+            typename F::Multiplier mul(field, term);\n+            for (size_t x = 0; x < mod.size() - 1; ++x) {\n+                val[val.size() - modsize + 1 + x] ^= mul(mod[x]);\n+            }\n+        }\n+    }\n+}\n+\n+/** Make a polynomial monic. */\n+template<typename F>\n+typename F::Elem MakeMonic(std::vector<typename F::Elem>& a, const F& field) {\n+    CHECK_SAFE(a.back() != 0);\n+    if (a.back() == 1) return 0;\n+    auto inv = field.Inv(a.back());\n+    typename F::Multiplier mul(field, inv);\n+    a.back() = 1;\n+    for (size_t i = 0; i < a.size() - 1; ++i) {\n+        a[i] = mul(a[i]);\n+    }\n+    return inv;\n+}\n+\n+/** Compute the GCD of two polynomials, putting the result in a. b will be cleared. */\n+template<typename F>\n+void GCD(std::vector<typename F::Elem>& a, std::vector<typename F::Elem>& b, const F& field) {\n+    if (a.size() < b.size()) std::swap(a, b);\n+    while (b.size() > 0) {\n+        if (b.size() == 1) {\n+            a.resize(1);\n+            a[0] = 1;\n+            return;\n+        }\n+        MakeMonic(b, field);\n+        PolyMod(b, a, field);\n+        std::swap(a, b);\n+    }\n+}\n+\n+/** Square a polynomial. */\n+template<typename F>\n+void Sqr(std::vector<typename F::Elem>& poly, const F& field) {\n+    if (poly.size() == 0) return;\n+    poly.resize(poly.size() * 2 - 1);\n+    for (int x = poly.size() - 1; x >= 0; --x) {\n+        poly[x] = (x & 1) ? 0 : field.Sqr(poly[x / 2]);\n+    }\n+}\n+\n+/** Compute the trace map of (param*x) modulo mod, putting the result in out. */\n+template<typename F>\n+void TraceMod(const std::vector<typename F::Elem>& mod, std::vector<typename F::Elem>& out, const typename F::Elem& param, const F& field) {\n+    out.reserve(mod.size() * 2);\n+    out.resize(2);\n+    out[0] = 0;\n+    out[1] = param;\n+\n+    for (int i = 0; i < field.Bits() - 1; ++i) {\n+        Sqr(out, field);\n+        if (out.size() < 2) out.resize(2);\n+        out[1] = param;\n+        PolyMod(mod, out, field);\n+    }\n+}\n+\n+/** One step of the root finding algorithm; finds roots of stack[pos] and adds them to roots. Stack elements >= pos are destroyed.\n+ *\n+ * It operates on a stack of polynomials. The polynomial operated on is `stack[pos]`, where elements of `stack` with index higher\n+ * than `pos` are used as scratch space.\n+ *\n+ * `stack[pos]` is assumed to be square-free polynomial. If `fully_factorizable` is true, it is also assumed to have no irreducible\n+ * factors of degree higher than 1.\n+\n+ * This implements the Berlekamp trace algorithm, plus an efficient test to fail fast in\n+ * case the polynomial cannot be fully factored.\n+ */\n+template<typename F>\n+bool RecFindRoots(std::vector<std::vector<typename F::Elem>>& stack, size_t pos, std::vector<typename F::Elem>& roots, bool fully_factorizable, int depth, typename F::Elem randv, const F& field) {\n+    auto& ppoly = stack[pos];\n+    // We assert ppoly.size() > 1 (instead of just ppoly.size() > 0) to additionally exclude\n+    // constants polynomials because\n+    //  - ppoly is not constant initially (this is ensured by FindRoots()), and\n+    //  - we never recurse on a constant polynomial.\n+    CHECK_SAFE(ppoly.size() > 1 && ppoly.back() == 1);\n+    /* 1st degree input: constant term is the root. */\n+    if (ppoly.size() == 2) {\n+        roots.push_back(ppoly[0]);\n+        return true;\n+    }\n+    /* 2nd degree input: use direct quadratic solver. */\n+    if (ppoly.size() == 3) {\n+        CHECK_RETURN(ppoly[1] != 0, false); // Equations of the form (x^2 + a) have two identical solutions; contradicts square-free assumption. */\n+        auto input = field.Mul(ppoly[0], field.Sqr(field.Inv(ppoly[1])));\n+        auto root = field.Qrt(input);\n+        if ((field.Sqr(root) ^ root) != input) {\n+            CHECK_SAFE(!fully_factorizable);\n+            return false; // No root found.\n+        }\n+        auto sol = field.Mul(root, ppoly[1]);\n+        roots.push_back(sol);\n+        roots.push_back(sol ^ ppoly[1]);\n+        return true;\n+    }\n+    /* 3rd degree input and more: recurse further. */\n+    if (pos + 3 > stack.size()) {\n+        // Allocate memory if necessary.\n+        stack.resize((pos + 3) * 2);\n+    }\n+    auto& poly = stack[pos];\n+    auto& tmp = stack[pos + 1];\n+    auto& trace = stack[pos + 2];\n+    trace.clear();\n+    tmp.clear();\n+    for (int iter = 0;; ++iter) {\n+        // Compute the polynomial (trace(x*randv) mod poly(x)) symbolically,\n+        // and put the result in `trace`.\n+        TraceMod(poly, trace, randv, field);\n+\n+        if (iter >= 1 && !fully_factorizable) {\n+            // If the polynomial cannot be factorized completely (it has an\n+            // irreducible factor of degree higher than 1), we want to avoid\n+            // the case where this is only detected after trying all BITS\n+            // independent split attempts fail (see the assert below).\n+            //\n+            // Observe that if we call y = randv*x, it is true that:\n+            //\n+            //   trace = y + y^2 + y^4 + y^8 + ... y^(FIELDSIZE/2) mod poly\n+            //\n+            // Due to the Frobenius endomorphism, this means:\n+            //\n+            //   trace^2 = y^2 + y^4 + y^8 + ... + y^FIELDSIZE mod poly\n+            //\n+            // Or, adding them up:\n+            //\n+            //   trace + trace^2 = y + y^FIELDSIZE mod poly.\n+            //                   = randv*x + randv^FIELDSIZE*x^FIELDSIZE\n+            //                   = randv*x + randv*x^FIELDSIZE\n+            //                   = randv*(x + x^FIELDSIZE).\n+            //     (all mod poly)\n+            //\n+            // x + x^FIELDSIZE is the polynomial which has every field element\n+            // as root once. Whenever x + x^FIELDSIZE is multiple of poly,\n+            // this means it only has unique first degree factors. The same\n+            // holds for its constant multiple randv*(x + x^FIELDSIZE) =\n+            // trace + trace^2.\n+            //\n+            // We use this test to quickly verify whether the polynomial is\n+            // fully factorizable after already having computed a trace.\n+            // We don't invoke it immediately; only when splitting has failed\n+            // at least once, which avoids it for most polynomials that are\n+            // fully factorizable (or at least pushes the test down the\n+            // recursion to factors which are smaller and thus faster).\n+            tmp = trace;\n+            Sqr(tmp, field);\n+            for (size_t i = 0; i < trace.size(); ++i) {\n+                tmp[i] ^= trace[i];\n+            }\n+            while (tmp.size() && tmp.back() == 0) tmp.pop_back();\n+            PolyMod(poly, tmp, field);\n+\n+            // Whenever the test fails, we can immediately abort the root\n+            // finding. Whenever it succeeds, we can remember and pass down\n+            // the information that it is in fact fully factorizable, avoiding\n+            // the need to run the test again.\n+            if (tmp.size() != 0) return false;\n+            fully_factorizable = true;\n+        }\n+\n+        if (fully_factorizable) {\n+            // Every succesful iteration of this algorithm splits the input\n+            // polynomial further into buckets, each corresponding to a subset\n+            // of 2^(BITS-depth) roots. If after depth splits the degree of\n+            // the polynomial is >= 2^(BITS-depth), something is wrong.\n+            CHECK_RETURN(field.Bits() - depth >= std::numeric_limits<decltype(poly.size())>::digits ||\n+                (poly.size() - 2) >> (field.Bits() - depth) == 0, false);\n+        }\n+\n+        depth++;\n+        // In every iteration we multiply randv by 2. As a result, the set\n+        // of randv values forms a GF(2)-linearly independent basis of splits.\n+        randv = field.Mul2(randv);\n+        tmp = poly;\n+        GCD(trace, tmp, field);\n+        if (trace.size() != poly.size() && trace.size() > 1) break;\n+    }\n+    MakeMonic(trace, field);\n+    DivMod(trace, poly, tmp, field);\n+    // At this point, the stack looks like [... (poly) tmp trace], and we want to recursively\n+    // find roots of trace and tmp (= poly/trace). As we don't care about poly anymore, move\n+    // trace into its position first.\n+    std::swap(poly, trace);\n+    // Now the stack is [... (trace) tmp ...]. First we factor tmp (at pos = pos+1), and then\n+    // we factor trace (at pos = pos).\n+    if (!RecFindRoots(stack, pos + 1, roots, fully_factorizable, depth, randv, field)) return false;\n+    // The stack position pos contains trace, the polynomial with all of poly's roots which (after\n+    // multiplication with randv) have trace 0. This is never the case for irreducible factors\n+    // (which always end up in tmp), so we can set fully_factorizable to true when recursing.\n+    bool ret = RecFindRoots(stack, pos, roots, true, depth, randv, field);\n+    // Because of the above, recursion can never fail here.\n+    CHECK_SAFE(ret);\n+    return ret;\n+}\n+\n+/** Returns the roots of a fully factorizable polynomial\n+ *\n+ * This function assumes that the input polynomial is square-free\n+ * and not the zero polynomial (represented by an empty vector).\n+ *\n+ * In case the square-free polynomial is not fully factorizable, i.e., it\n+ * has fewer roots than its degree, the empty vector is returned.\n+ */\n+template<typename F>\n+std::vector<typename F::Elem> FindRoots(const std::vector<typename F::Elem>& poly, typename F::Elem basis, const F& field) {\n+    std::vector<typename F::Elem> roots;\n+    CHECK_RETURN(poly.size() != 0, {});\n+    CHECK_RETURN(basis != 0, {});\n+    if (poly.size() == 1) return roots; // No roots when the polynomial is a constant.\n+    roots.reserve(poly.size() - 1);\n+    std::vector<std::vector<typename F::Elem>> stack = {poly};\n+\n+    // Invoke the recursive factorization algorithm.\n+    if (!RecFindRoots(stack, 0, roots, false, 0, basis, field)) {\n+        // Not fully factorizable.\n+        return {};\n+    }\n+    CHECK_RETURN(poly.size() - 1 == roots.size(), {});\n+    return roots;\n+}\n+\n+template<typename F>\n+std::vector<typename F::Elem> BerlekampMassey(const std::vector<typename F::Elem>& syndromes, size_t max_degree, const F& field) {\n+    std::vector<typename F::Multiplier> table;\n+    std::vector<typename F::Elem> current, prev, tmp;\n+    current.reserve(syndromes.size() / 2 + 1);\n+    prev.reserve(syndromes.size() / 2 + 1);\n+    tmp.reserve(syndromes.size() / 2 + 1);\n+    current.resize(1);\n+    current[0] = 1;\n+    prev.resize(1);\n+    prev[0] = 1;\n+    typename F::Elem b = 1, b_inv = 1;\n+    bool b_have_inv = true;\n+    table.reserve(syndromes.size());\n+\n+    for (size_t n = 0; n != syndromes.size(); ++n) {\n+        table.emplace_back(field, syndromes[n]);\n+        auto discrepancy = syndromes[n];\n+        for (size_t i = 1; i < current.size(); ++i) discrepancy ^= table[n - i](current[i]);\n+        if (discrepancy != 0) {\n+            int x = n + 1 - (current.size() - 1) - (prev.size() - 1);\n+            if (!b_have_inv) {\n+                b_inv = field.Inv(b);\n+                b_have_inv = true;\n+            }\n+            bool swap = 2 * (current.size() - 1) <= n;\n+            if (swap) {\n+                if (prev.size() + x - 1 > max_degree) return {}; // We'd exceed maximum degree\n+                tmp = current;\n+                current.resize(prev.size() + x);\n+            }\n+            typename F::Multiplier mul(field, field.Mul(discrepancy, b_inv));\n+            for (size_t i = 0; i < prev.size(); ++i) current[i + x] ^= mul(prev[i]);\n+            if (swap) {\n+                std::swap(prev, tmp);\n+                b = discrepancy;\n+                b_have_inv = false;\n+            }\n+        }\n+    }\n+    CHECK_RETURN(current.size() && current.back() != 0, {});\n+    return current;\n+}\n+\n+template<typename F>\n+std::vector<typename F::Elem> ReconstructAllSyndromes(const std::vector<typename F::Elem>& odd_syndromes, const F& field) {\n+    std::vector<typename F::Elem> all_syndromes;\n+    all_syndromes.resize(odd_syndromes.size() * 2);\n+    for (size_t i = 0; i < odd_syndromes.size(); ++i) {\n+        all_syndromes[i * 2] = odd_syndromes[i];\n+        all_syndromes[i * 2 + 1] = field.Sqr(all_syndromes[i]);\n+    }\n+    return all_syndromes;\n+}\n+\n+template<typename F>\n+void AddToOddSyndromes(std::vector<typename F::Elem>& osyndromes, typename F::Elem data, const F& field) {\n+    auto sqr = field.Sqr(data);\n+    typename F::Multiplier mul(field, sqr);\n+    for (auto& osyndrome : osyndromes) {\n+        osyndrome ^= data;\n+        data = mul(data);\n+    }\n+}\n+\n+template<typename F>\n+std::vector<typename F::Elem> FullDecode(const std::vector<typename F::Elem>& osyndromes, const F& field) {\n+    auto asyndromes = ReconstructAllSyndromes<typename F::Elem>(osyndromes, field);\n+    auto poly = BerlekampMassey(asyndromes, field);\n+    std::reverse(poly.begin(), poly.end());\n+    return FindRoots(poly, field);\n+}\n+\n+template<typename F>\n+class SketchImpl final : public Sketch\n+{\n+    const F m_field;\n+    std::vector<typename F::Elem> m_syndromes;\n+    typename F::Elem m_basis;\n+\n+public:\n+    template<typename... Args>\n+    SketchImpl(int implementation, int bits, const Args&... args) : Sketch(implementation, bits), m_field(args...) {\n+        std::random_device rng;\n+        std::uniform_int_distribution<uint64_t> dist;\n+        m_basis = m_field.FromSeed(dist(rng));\n+    }\n+\n+    size_t Syndromes() const override { return m_syndromes.size(); }\n+    void Init(int count) override { m_syndromes.assign(count, 0); }\n+\n+    void Add(uint64_t val) override\n+    {\n+        auto elem = m_field.FromUint64(val);\n+        AddToOddSyndromes(m_syndromes, elem, m_field);\n+    }\n+\n+    void Serialize(unsigned char* ptr) const override\n+    {\n+        BitWriter writer(ptr);\n+        for (const auto& val : m_syndromes) {\n+            m_field.Serialize(writer, val);\n+        }\n+        writer.Flush();\n+    }\n+\n+    void Deserialize(const unsigned char* ptr) override",
      "path": "src/minisketch/src/sketch_impl.h",
      "position": 386,
      "original_position": 386,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "cf4897c0efb63dfc7437431bc9f56ebf95fd1ef4",
      "in_reply_to_id": null,
      "user": {
        "login": "GeneFerneau",
        "id": 80422284,
        "node_id": "MDQ6VXNlcjgwNDIyMjg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80422284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GeneFerneau",
        "html_url": "https://github.com/GeneFerneau",
        "followers_url": "https://api.github.com/users/GeneFerneau/followers",
        "following_url": "https://api.github.com/users/GeneFerneau/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GeneFerneau/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GeneFerneau/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GeneFerneau/subscriptions",
        "organizations_url": "https://api.github.com/users/GeneFerneau/orgs",
        "repos_url": "https://api.github.com/users/GeneFerneau/repos",
        "events_url": "https://api.github.com/users/GeneFerneau/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GeneFerneau/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "May be helpful to add a fuzz harness for sketch deserialization. A large number of security bugs come from deserializing untrusted data.",
      "created_at": "2021-07-30T19:15:38Z",
      "updated_at": "2021-07-30T19:15:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r680167874",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680167874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 386,
      "original_line": 386,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/711696845",
      "pull_request_review_id": 758118296,
      "id": 711696845,
      "node_id": "PRRC_kwDOABII584qa6HN",
      "diff_hunk": "@@ -297,7 +297,7 @@ mkdir -p \"$DISTSRC\"\n                     ${HOST_CXXFLAGS:+CXXFLAGS=\"${HOST_CXXFLAGS}\"} \\\n                     ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n \n-    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool src/minisketch/config.status src/minisketch/libtool",
      "path": "contrib/guix/libexec/build.sh",
      "position": 5,
      "original_position": 5,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nOptions used to compile and link:\r\n  external signer = yes\r\n  multiprocess    = no\r\n  with libs       = yes\r\n  with wallet     = yes\r\n    with sqlite   = yes\r\n    with bdb      = yes\r\n  with gui / qt   = yes\r\n    with qr       = yes\r\n  with zmq        = yes\r\n  with test       = yes\r\n  with bench      = no\r\n  with upnp       = yes\r\n  with natpmp     = yes\r\n  use asm         = yes\r\n  ebpf tracing    = no\r\n  sanitizers      = \r\n  debug enabled   = no\r\n  gprof enabled   = no\r\n  werror          = no\r\n\r\n  target os       = linux\r\n  build os        = linux-gnu\r\n\r\n  CC              = x86_64-linux-gnu-gcc\r\n  CFLAGS          = -pthread -pipe -O2 -O2 -g -ffile-prefix-map=/bitcoin=.\r\n  CPPFLAGS        =   -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I/bitcoin/depends/x86_64-linux-gnu/include/  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -DPROVIDE_FUZZ_MAIN_FUNCTION\r\n  CXX             = x86_64-linux-gnu-g++ -std=c++17\r\n  CXXFLAGS        =   -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection     -pipe -O2 -O2 -g -ffile-prefix-map=/bitcoin=. -fno-extended-identifiers -fvisibility=hidden\r\n  LDFLAGS         = -lpthread  -Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code -pie  -L/bitcoin/depends/x86_64-linux-gnu/lib -Wl,--as-needed -Wl,--dynamic-linker=/lib64/ld-linux-x86-64.so.2 -static-libstdc++ -Wl,-O2\r\n  ARFLAGS         = cr\r\n\r\n+ sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool src/minisketch/config.status src/minisketch/libtool\r\nsed: can't read src/minisketch/config.status: No such file or directory\r\nsed: can't read src/minisketch/libtool: No such file or directory",
      "created_at": "2021-09-19T07:10:46Z",
      "updated_at": "2021-09-19T07:10:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r711696845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/711696845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713382337",
      "pull_request_review_id": 760205268,
      "id": 713382337,
      "node_id": "PRRC_kwDOABII584qhVnB",
      "diff_hunk": "@@ -6,7 +6,7 @@\n print-%: FORCE\n \t@echo '$*'='$($*)'\n \n-DIST_SUBDIRS = secp256k1 univalue\n+DIST_SUBDIRS = secp256k1 minisketch univalue",
      "path": "src/Makefile.am",
      "position": 5,
      "original_position": 5,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty sure there's no need for this since we're building it ourselves. IIRC including it here was problematic while I was testing, but I've forgotten why.",
      "created_at": "2021-09-21T20:10:09Z",
      "updated_at": "2021-09-21T20:10:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r713382337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713382337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713518567",
      "pull_request_review_id": 760370784,
      "id": 713518567,
      "node_id": "PRRC_kwDOABII584qh23n",
      "diff_hunk": "@@ -6,7 +6,7 @@\n print-%: FORCE\n \t@echo '$*'='$($*)'\n \n-DIST_SUBDIRS = secp256k1 univalue\n+DIST_SUBDIRS = secp256k1 minisketch univalue",
      "path": "src/Makefile.am",
      "position": 5,
      "original_position": 5,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "in_reply_to_id": 713382337,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yea this isn't needed, and was breaking `make dist`. Have dropped it from my branch.",
      "created_at": "2021-09-22T01:05:14Z",
      "updated_at": "2021-09-22T01:05:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r713518567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713518567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713518591",
      "pull_request_review_id": 760370801,
      "id": 713518591,
      "node_id": "PRRC_kwDOABII584qh23_",
      "diff_hunk": "@@ -297,7 +297,7 @@ mkdir -p \"$DISTSRC\"\n                     ${HOST_CXXFLAGS:+CXXFLAGS=\"${HOST_CXXFLAGS}\"} \\\n                     ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n \n-    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool src/minisketch/config.status src/minisketch/libtool",
      "path": "contrib/guix/libexec/build.sh",
      "position": 5,
      "original_position": 5,
      "commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "original_commit_id": "238bf6e8bd5c0b09bf669b6e8a105f4223d6f338",
      "in_reply_to_id": 711696845,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We can remove this now that we've integrated the minisketch build. Have dropped it from my branch.",
      "created_at": "2021-09-22T01:05:17Z",
      "updated_at": "2021-09-22T01:05:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21859#discussion_r713518591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713518591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    }
  ]
}