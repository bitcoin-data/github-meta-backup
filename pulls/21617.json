{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617",
    "id": 609746190,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjA5NzQ2MTkw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21617",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21617.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21617.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21617",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21617/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/33333755f2edcbe88fcd136f6fef81f94819002e",
    "number": 21617,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "fuzz: Fix uninitialized read in i2p test",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can be tested with:\r\n\r\n```\r\n./test/fuzz/test_runner.py -l DEBUG --valgrind ../btc_qa_assets/fuzz_seed_corpus/ i2p\r\n```\r\n\r\n```\r\n==22582== Conditional jump or move depends on uninitialised value(s)\r\n==22582==    at 0x6BB2D8: __sanitizer_cov_trace_const_cmp1 (in /tmp/bitcoin-core/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz)\r\n==22582==    by 0xB305DB: ConnectSocketDirectly(CService const&, Sock const&, int, bool) (netbase.cpp:570)\r\n==22582==    by 0x8AAA5D: i2p::sam::Session::Hello() const (i2p.cpp:284)\r\n==22582==    by 0x8A6FA0: i2p::sam::Session::CreateIfNotCreatedAlready() (i2p.cpp:352)\r\n==22582==    by 0x8A6742: i2p::sam::Session::Listen(i2p::Connection&) (i2p.cpp:134)\r\n==22582==    by 0x7A6C42: i2p_fuzz_target(Span<unsigned char const>) (i2p.cpp:37)",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2021-04-06T10:45:31Z",
    "updated_at": "2022-08-16T17:14:23Z",
    "closed_at": "2021-04-07T08:40:56Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-04-07T08:40:56Z",
    "merge_commit_sha": "6154291cf9ab5dbf4951043339fa7eb2cdbb9fac",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2104-fuzzValgrind",
      "ref": "2104-fuzzValgrind",
      "sha": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9be7fe4849310884294669b019dd8300f69bc334",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 11,
    "deletions": 5,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 6,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzMzMzc1NWYyZWRjYmU4OGZjZDEzNmY2ZmVmODFmOTQ4MTkwMDJl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33333755f2edcbe88fcd136f6fef81f94819002e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/33333755f2edcbe88fcd136f6fef81f94819002e",
      "tree": {
        "sha": "e2c74b184b881202c0542602bfb11d560ddd4c0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2c74b184b881202c0542602bfb11d560ddd4c0a"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree e2c74b184b881202c0542602bfb11d560ddd4c0a\nparent 1a7dec77f610607b1f0c5113bd5b6939b04717df\nauthor MarcoFalke <falke.marco@gmail.com> 1617706024 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1617705813 +0200\n\nfuzz: Fix uninitialized read in test\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiUhgv+L8sVlRNw2RWD2LgqaL7k6PCl98upX5sS/HdeShHlv+QkwNaAUnSdD1GM\nF92BUiVmLCf6BYTAuY+zhWk/UYi2ETAOBPEwYEixVkThDy+4YnIyab4AprgyGDNS\n4WJShKj8KnhdMlOKVnh6Bjc5uoh2ZQNJAwvCme9KKiGG6noFQ9EkjqhVhH8p8bxo\ntgJcbYMvfXsWWO4Fj+UR+8p8W8Ftyz2KL/ylBMLgWUu/zRKm+XWJZiAGmctgCOmb\nAqNUtv4wMYAJByD8AQC0EPw/ZZnOeFfrsAVVFtYMYKzVC3dhobqXD6GXiT5CmCBE\nWgXzshGCLrAOguTwttadxW81+apNb6fJHsq1a5i5VW3On0+S89vl9QN3EMQ9tqle\nhkQzLFugvYDiEK2vrw9tN+dZOGlPCeTYX1DGsECCrvJSbdrn8jBuBpvUX3bs7sox\nwPjWetHt5TW5E9o8ljMYUkd0lpbDBe0VwtVl9r045SJaBUgd86THmfYZNPaCqPcW\nPTn5MMka\n=Fhab\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a7dec77f610607b1f0c5113bd5b6939b04717df",
          "sha": "1a7dec77f610607b1f0c5113bd5b6939b04717df",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a7dec77f610607b1f0c5113bd5b6939b04717df"
        }
      ],
      "message": "fuzz: Fix uninitialized read in test",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-06T10:43:33Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-06T10:47:04Z"
      },
      "sha": "33333755f2edcbe88fcd136f6fef81f94819002e"
    },
    {
      "event": "renamed",
      "id": 4556025130,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDU1NjAyNTEzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4556025130",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T10:45:41Z",
      "rename": {
        "from": "fuzz: Fix uninitialized read in test",
        "to": "fuzz: Fix uninitialized read in i2p test"
      }
    },
    {
      "event": "labeled",
      "id": 4556060338,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1NTYwNjAzMzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4556060338",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T10:53:43Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 814025631,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDAyNTYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814025631",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T10:53:51Z",
      "updated_at": "2021-04-06T10:53:51Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#issuecomment-814025631",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21617"
    },
    {
      "event": "commented",
      "id": 814463590,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDQ2MzU5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814463590",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T21:56:36Z",
      "updated_at": "2021-04-06T21:56:36Z",
      "author_association": "MEMBER",
      "body": "utACK 33333755f2edcbe88fcd136f6fef81f94819002e",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#issuecomment-814463590",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21617"
    },
    {
      "event": "review_requested",
      "id": 4559504601,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50NDU1OTUwNDYwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4559504601",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T23:39:17Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 629696410,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI5Njk2NDEw",
      "url": null,
      "actor": null,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#pullrequestreview-629696410",
      "submitted_at": "2021-04-07T08:26:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
    },
    {
      "event": "reviewed",
      "id": 629736221,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI5NzM2MjIx",
      "url": null,
      "actor": null,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 33333755f2edcbe88fcd136f6fef81f94819002e\r\n\r\nEven without taking the suggestions above, this would fix the uninitialized read - the main purpose of this PR.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#pullrequestreview-629736221",
      "submitted_at": "2021-04-07T08:32:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
    },
    {
      "event": "merged",
      "id": 4561096315,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDU2MTA5NjMxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4561096315",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6154291cf9ab5dbf4951043339fa7eb2cdbb9fac",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6154291cf9ab5dbf4951043339fa7eb2cdbb9fac",
      "created_at": "2021-04-07T08:40:56Z"
    },
    {
      "event": "closed",
      "id": 4561096328,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDU2MTA5NjMyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4561096328",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-07T08:40:56Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4561100655,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTYxMTAwNjU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4561100655",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-07T08:41:45Z"
    },
    {
      "event": "commented",
      "id": 814725694,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDcyNTY5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814725694",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-07T08:42:23Z",
      "updated_at": "2021-04-07T08:42:23Z",
      "author_association": "MEMBER",
      "body": "I merged this to unbreak our valgrind fuzzer. Happy to review the proposed changes in a follow-up pr.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#issuecomment-814725694",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21617"
    },
    {
      "event": "commented",
      "id": 814749300,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDc0OTMwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814749300",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-07T09:12:58Z",
      "updated_at": "2021-04-07T09:12:58Z",
      "author_association": "MEMBER",
      "body": "Followup in https://github.com/bitcoin/bitcoin/pull/21630",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#issuecomment-814749300",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21617"
    },
    {
      "event": "referenced",
      "id": 4562978406,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NjI5Nzg0MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4562978406",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1c3fd05be3a5f80d9ed40e0991635f9ca3eae07",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/e1c3fd05be3a5f80d9ed40e0991635f9ca3eae07",
      "created_at": "2021-04-07T14:45:31Z"
    },
    {
      "event": "referenced",
      "id": 4597992929,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1OTc5OTI5Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4597992929",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c6b30ccb2eee5f80f844f79766591f0a1326ce43",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/c6b30ccb2eee5f80f844f79766591f0a1326ce43",
      "created_at": "2021-04-15T08:50:13Z"
    },
    {
      "event": "locked",
      "id": 7199081505,
      "node_id": "LOE_lADOABII584yvclvzwAAAAGtGUQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199081505",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:14:23Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608422230",
      "pull_request_review_id": 629696410,
      "id": 608422230,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODQyMjIzMA==",
      "diff_hunk": "@@ -7,6 +7,14 @@\n #include <util/rbf.h>\n #include <version.h>\n \n+bool FuzzedSock::Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred ) const",
      "path": "src/test/fuzz/util.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "original_commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: extra white space near the end: `occurred )`",
      "created_at": "2021-04-07T07:52:03Z",
      "updated_at": "2021-04-07T08:26:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#discussion_r608422230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608422230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608429338",
      "pull_request_review_id": 629696410,
      "id": 608429338,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODQyOTMzOA==",
      "diff_hunk": "@@ -7,6 +7,14 @@\n #include <util/rbf.h>\n #include <version.h>\n \n+bool FuzzedSock::Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred ) const\n+{\n+    if (!m_fuzzed_data_provider.ConsumeBool()) {\n+        return false;\n+    }\n+    if (occurred) *occurred = 0;\n+    return true;\n+}",
      "path": "src/test/fuzz/util.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "original_commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "* This would signal a failure without setting `errno` (it was like this even before this PR, but better fix it)\r\n* Would result in either an error or timeout, but never \"the requested event occurred\"\r\n* `!ConsumeBool()` is the same as `ConsumeBool()`\r\n\r\n```suggestion\r\n{\r\n    constexpr std::array wait_errnos{\r\n        EBADF,\r\n        EINTR,\r\n        EINVAL,\r\n    };\r\n    if (m_fuzzed_data_provider.ConsumeBool()) { \r\n        SetFuzzedErrNo(m_fuzzed_data_provider, wait_errnos);\r\n        return false;\r\n    } \r\n    if (occurred) { \r\n        if (m_fuzzed_data_provider.ConsumeBool()) { \r\n            *occurred = requested;\r\n        } else { \r\n            *occurred = 0;\r\n        } \r\n    } \r\n    return true;\r\n}\r\n```",
      "created_at": "2021-04-07T08:02:29Z",
      "updated_at": "2021-04-07T08:26:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#discussion_r608429338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608429338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
        }
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608431181",
      "pull_request_review_id": 629696410,
      "id": 608431181,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODQzMTE4MQ==",
      "diff_hunk": "@@ -738,12 +738,10 @@ class FuzzedSock : public Sock\n         return 0;\n     }\n \n-    bool Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred = nullptr) const override\n-    {\n-        return m_fuzzed_data_provider.ConsumeBool();\n-    }\n+    bool Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred = nullptr) const override;",
      "path": "src/test/fuzz/util.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "original_commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I like separating the interface from the implementation - it makes it more readable for consumers who want to use it without being bothered with implementation details (actually it is better to not see the implementation so that one does not accidentally start relying on undocumented implementation details).\r\n\r\nHere is an extra commit that moves the rest of the `FuzzedSock`'s implementation to `util.cpp`:\r\n\r\nhttps://github.com/vasild/bitcoin/commit/33c203d6878d9b6adee046f36311c58a13e79941\r\n\r\n<details>\r\n<summary>fuzz: split FuzzedSock interface and implementation</summary>\r\n\r\n```diff\r\ncommit 33c203d6878d9b6adee046f36311c58a13e79941 (HEAD -> pull/21617_1617705813_33333755f__2104-fuzzValgrind, vasild/2104-fuzzValgrind)\r\nParent: 33333755f2edcbe88fcd136f6fef81f94819002e\r\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\r\nAuthorDate: Wed Apr 7 10:18:39 2021 +0200\r\nCommit:     Vasil Dimov <vd@FreeBSD.org>\r\nCommitDate: Wed Apr 7 10:18:39 2021 +0200\r\ngpg: Signature made Wed Apr  7 10:18:59 2021 CEST\r\ngpg:                using RSA key E64D8D45614DB07545D9CCC154DF06F64B55CBBF\r\ngpg: Good signature from \"Vasil Dimov <vd@myforest.net>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vd@FreeBSD.org>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vasild@gmail.com>\" [ultimate]\r\n\r\n\r\n    fuzz: split FuzzedSock interface and implementation\r\n\r\ndiff --git a/src/test/fuzz/util.cpp b/src/test/fuzz/util.cpp\r\nindex cf5244e31..2ab227e29 100644\r\n--- a/src/test/fuzz/util.cpp\r\n+++ b/src/test/fuzz/util.cpp\r\n@@ -4,21 +4,194 @@\r\n \r\n #include <test/fuzz/util.h>\r\n #include <test/util/script.h>\r\n #include <util/rbf.h>\r\n #include <version.h>\r\n \r\n+FuzzedSock::FuzzedSock(FuzzedDataProvider& fuzzed_data_provider)\r\n+    : m_fuzzed_data_provider{fuzzed_data_provider}\r\n+{\r\n+    m_socket = fuzzed_data_provider.ConsumeIntegral<SOCKET>();\r\n+}\r\n+\r\n+FuzzedSock::~FuzzedSock()\r\n+{\r\n+    // Sock::~Sock() will be called after FuzzedSock::~FuzzedSock() and it will call\r\n+    // Sock::Reset() (not FuzzedSock::Reset()!) which will call CloseSocket(m_socket).\r\n+    // Avoid closing an arbitrary file descriptor (m_socket is just a random number which\r\n+    // may concide with a real opened file descriptor).\r\n+    Reset();\r\n+}\r\n+\r\n+FuzzedSock& FuzzedSock::operator=(Sock&& other)\r\n+{\r\n+    assert(false && \"Move of Sock into FuzzedSock not allowed.\");\r\n+    return *this;\r\n+}\r\n+\r\n+void FuzzedSock::Reset()\r\n+{\r\n+    m_socket = INVALID_SOCKET;\r\n+}\r\n+\r\n+ssize_t FuzzedSock::Send(const void* data, size_t len, int flags) const\r\n+{\r\n+    constexpr std::array send_errnos{\r\n+        EACCES,\r\n+        EAGAIN,\r\n+        EALREADY,\r\n+        EBADF,\r\n+        ECONNRESET,\r\n+        EDESTADDRREQ,\r\n+        EFAULT,\r\n+        EINTR,\r\n+        EINVAL,\r\n+        EISCONN,\r\n+        EMSGSIZE,\r\n+        ENOBUFS,\r\n+        ENOMEM,\r\n+        ENOTCONN,\r\n+        ENOTSOCK,\r\n+        EOPNOTSUPP,\r\n+        EPIPE,\r\n+        EWOULDBLOCK,\r\n+    };\r\n+    if (m_fuzzed_data_provider.ConsumeBool()) {\r\n+        return len;\r\n+    }\r\n+    const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\r\n+    if (r == -1) {\r\n+        SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\r\n+    }\r\n+    return r;\r\n+}\r\n+\r\n+ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\r\n+{\r\n+    // Have a permanent error at recv_errnos[0] because when the fuzzed data is exhausted\r\n+    // SetFuzzedErrNo() will always return the first element and we want to avoid Recv()\r\n+    // returning -1 and setting errno to EAGAIN repeatedly.\r\n+    constexpr std::array recv_errnos{\r\n+        ECONNREFUSED,\r\n+        EAGAIN,\r\n+        EBADF,\r\n+        EFAULT,\r\n+        EINTR,\r\n+        EINVAL,\r\n+        ENOMEM,\r\n+        ENOTCONN,\r\n+        ENOTSOCK,\r\n+        EWOULDBLOCK,\r\n+    };\r\n+    assert(buf != nullptr || len == 0);\r\n+    if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\r\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\r\n+        if (r == -1) {\r\n+            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\r\n+        }\r\n+        return r;\r\n+    }\r\n+    std::vector<uint8_t> random_bytes;\r\n+    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\r\n+    if (m_peek_data.has_value()) {\r\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\r\n+        random_bytes.assign({m_peek_data.value()});\r\n+        if ((flags & MSG_PEEK) == 0) {\r\n+            m_peek_data.reset();\r\n+        }\r\n+        pad_to_len_bytes = false;\r\n+    } else if ((flags & MSG_PEEK) != 0) {\r\n+        // New call with `MSG_PEEK`.\r\n+        random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(1);\r\n+        if (!random_bytes.empty()) {\r\n+            m_peek_data = random_bytes[0];\r\n+            pad_to_len_bytes = false;\r\n+        }\r\n+    } else {\r\n+        random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\r\n+            m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\r\n+    }\r\n+    if (random_bytes.empty()) {\r\n+        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\r\n+        if (r == -1) {\r\n+            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\r\n+        }\r\n+        return r;\r\n+    }\r\n+    std::memcpy(buf, random_bytes.data(), random_bytes.size());\r\n+    if (pad_to_len_bytes) {\r\n+        if (len > random_bytes.size()) {\r\n+            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\r\n+        }\r\n+        return len;\r\n+    }\r\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\r\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\r\n+    }\r\n+    return random_bytes.size();\r\n+}\r\n+\r\n+int FuzzedSock::Connect(const sockaddr*, socklen_t) const\r\n+{\r\n+    // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\r\n+    // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\r\n+    // returning -1 and setting errno to EAGAIN repeatedly.\r\n+    constexpr std::array connect_errnos{\r\n+        ECONNREFUSED,\r\n+        EAGAIN,\r\n+        ECONNRESET,\r\n+        EHOSTUNREACH,\r\n+        EINPROGRESS,\r\n+        EINTR,\r\n+        ENETUNREACH,\r\n+        ETIMEDOUT,\r\n+    };\r\n+    if (m_fuzzed_data_provider.ConsumeBool()) {\r\n+        SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\r\n+        return -1;\r\n+    }\r\n+    return 0;\r\n+}\r\n+\r\n+int FuzzedSock::GetSockOpt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const\r\n+{\r\n+    constexpr std::array getsockopt_errnos{\r\n+        ENOMEM,\r\n+        ENOBUFS,\r\n+    };\r\n+    if (m_fuzzed_data_provider.ConsumeBool()) {\r\n+        SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\r\n+        return -1;\r\n+    }\r\n+    if (opt_val == nullptr) {\r\n+        return 0;\r\n+    }\r\n+    std::memcpy(opt_val,\r\n+                ConsumeFixedLengthByteVector(m_fuzzed_data_provider, *opt_len).data(),\r\n+                *opt_len);\r\n+    return 0;\r\n+}\r\n+\r\n bool FuzzedSock::Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred ) const\r\n {\r\n     if (!m_fuzzed_data_provider.ConsumeBool()) {\r\n         return false;\r\n     }\r\n     if (occurred) *occurred = 0;\r\n     return true;\r\n }\r\n \r\n+bool FuzzedSock::IsConnected(std::string& errmsg) const\r\n+{\r\n+    if (m_fuzzed_data_provider.ConsumeBool()) {\r\n+        return true;\r\n+    }\r\n+    errmsg = \"disconnected at random by the fuzzer\";\r\n+    return false;\r\n+}\r\n+\r\n void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, bool init_version) noexcept\r\n {\r\n     const ServiceFlags remote_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\r\n     const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\r\n     const int32_t version = fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(MIN_PEER_PROTO_VERSION, std::numeric_limits<int32_t>::max());\r\n     const bool filter_txs = fuzzed_data_provider.ConsumeBool();\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex adcdd7174..8f4f87fbd 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -572,185 +572,31 @@ class FuzzedSock : public Sock\r\n      * If `MSG_PEEK` is used, then our `Recv()` returns some random data as usual, but on the next\r\n      * `Recv()` call we must return the same data, thus we remember it here.\r\n      */\r\n     mutable std::optional<uint8_t> m_peek_data;\r\n \r\n public:\r\n-    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\r\n-    {\r\n-          m_socket = fuzzed_data_provider.ConsumeIntegral<SOCKET>();\r\n-    }\r\n+    explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider);\r\n \r\n-    ~FuzzedSock() override\r\n-    {\r\n-        // Sock::~Sock() will be called after FuzzedSock::~FuzzedSock() and it will call\r\n-        // Sock::Reset() (not FuzzedSock::Reset()!) which will call CloseSocket(m_socket).\r\n-        // Avoid closing an arbitrary file descriptor (m_socket is just a random number which\r\n-        // may concide with a real opened file descriptor).\r\n-        Reset();\r\n-    }\r\n+    ~FuzzedSock() override;\r\n \r\n-    FuzzedSock& operator=(Sock&& other) override\r\n-    {\r\n-        assert(false && \"Move of Sock into FuzzedSock not allowed.\");\r\n-        return *this;\r\n-    }\r\n+    FuzzedSock& operator=(Sock&& other) override;\r\n \r\n-    void Reset() override\r\n-    {\r\n-        m_socket = INVALID_SOCKET;\r\n-    }\r\n+    void Reset() override;\r\n \r\n-    ssize_t Send(const void* data, size_t len, int flags) const override\r\n-    {\r\n-        constexpr std::array send_errnos{\r\n-            EACCES,\r\n-            EAGAIN,\r\n-            EALREADY,\r\n-            EBADF,\r\n-            ECONNRESET,\r\n-            EDESTADDRREQ,\r\n-            EFAULT,\r\n-            EINTR,\r\n-            EINVAL,\r\n-            EISCONN,\r\n-            EMSGSIZE,\r\n-            ENOBUFS,\r\n-            ENOMEM,\r\n-            ENOTCONN,\r\n-            ENOTSOCK,\r\n-            EOPNOTSUPP,\r\n-            EPIPE,\r\n-            EWOULDBLOCK,\r\n-        };\r\n-        if (m_fuzzed_data_provider.ConsumeBool()) {\r\n-            return len;\r\n-        }\r\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(-1, len);\r\n-        if (r == -1) {\r\n-            SetFuzzedErrNo(m_fuzzed_data_provider, send_errnos);\r\n-        }\r\n-        return r;\r\n-    }\r\n+    ssize_t Send(const void* data, size_t len, int flags) const override;\r\n \r\n-    ssize_t Recv(void* buf, size_t len, int flags) const override\r\n-    {\r\n-        // Have a permanent error at recv_errnos[0] because when the fuzzed data is exhausted\r\n-        // SetFuzzedErrNo() will always return the first element and we want to avoid Recv()\r\n-        // returning -1 and setting errno to EAGAIN repeatedly.\r\n-        constexpr std::array recv_errnos{\r\n-            ECONNREFUSED,\r\n-            EAGAIN,\r\n-            EBADF,\r\n-            EFAULT,\r\n-            EINTR,\r\n-            EINVAL,\r\n-            ENOMEM,\r\n-            ENOTCONN,\r\n-            ENOTSOCK,\r\n-            EWOULDBLOCK,\r\n-        };\r\n-        assert(buf != nullptr || len == 0);\r\n-        if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\r\n-            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\r\n-            if (r == -1) {\r\n-                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\r\n-            }\r\n-            return r;\r\n-        }\r\n-        std::vector<uint8_t> random_bytes;\r\n-        bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\r\n-        if (m_peek_data.has_value()) {\r\n-            // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\r\n-            random_bytes.assign({m_peek_data.value()});\r\n-            if ((flags & MSG_PEEK) == 0) {\r\n-                m_peek_data.reset();\r\n-            }\r\n-            pad_to_len_bytes = false;\r\n-        } else if ((flags & MSG_PEEK) != 0) {\r\n-            // New call with `MSG_PEEK`.\r\n-            random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(1);\r\n-            if (!random_bytes.empty()) {\r\n-                m_peek_data = random_bytes[0];\r\n-                pad_to_len_bytes = false;\r\n-            }\r\n-        } else {\r\n-            random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\r\n-                m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\r\n-        }\r\n-        if (random_bytes.empty()) {\r\n-            const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\r\n-            if (r == -1) {\r\n-                SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\r\n-            }\r\n-            return r;\r\n-        }\r\n-        std::memcpy(buf, random_bytes.data(), random_bytes.size());\r\n-        if (pad_to_len_bytes) {\r\n-            if (len > random_bytes.size()) {\r\n-                std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\r\n-            }\r\n-            return len;\r\n-        }\r\n-        if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\r\n-            std::this_thread::sleep_for(std::chrono::milliseconds{2});\r\n-        }\r\n-        return random_bytes.size();\r\n-    }\r\n+    ssize_t Recv(void* buf, size_t len, int flags) const override;\r\n \r\n-    int Connect(const sockaddr*, socklen_t) const override\r\n-    {\r\n-        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\r\n-        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\r\n-        // returning -1 and setting errno to EAGAIN repeatedly.\r\n-        constexpr std::array connect_errnos{\r\n-            ECONNREFUSED,\r\n-            EAGAIN,\r\n-            ECONNRESET,\r\n-            EHOSTUNREACH,\r\n-            EINPROGRESS,\r\n-            EINTR,\r\n-            ENETUNREACH,\r\n-            ETIMEDOUT,\r\n-        };\r\n-        if (m_fuzzed_data_provider.ConsumeBool()) {\r\n-            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\r\n-            return -1;\r\n-        }\r\n-        return 0;\r\n-    }\r\n+    int Connect(const sockaddr*, socklen_t) const override;\r\n \r\n-    int GetSockOpt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\r\n-    {\r\n-        constexpr std::array getsockopt_errnos{\r\n-            ENOMEM,\r\n-            ENOBUFS,\r\n-        };\r\n-        if (m_fuzzed_data_provider.ConsumeBool()) {\r\n-            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\r\n-            return -1;\r\n-        }\r\n-        if (opt_val == nullptr) {\r\n-            return 0;\r\n-        }\r\n-        std::memcpy(opt_val,\r\n-                    ConsumeFixedLengthByteVector(m_fuzzed_data_provider, *opt_len).data(),\r\n-                    *opt_len);\r\n-        return 0;\r\n-    }\r\n+    int GetSockOpt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override;\r\n \r\n     bool Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred = nullptr) const override;\r\n \r\n-    bool IsConnected(std::string& errmsg) const override\r\n-    {\r\n-        if (m_fuzzed_data_provider.ConsumeBool()) {\r\n-            return true;\r\n-        }\r\n-        errmsg = \"disconnected at random by the fuzzer\";\r\n-        return false;\r\n-    }\r\n+    bool IsConnected(std::string& errmsg) const override;\r\n };\r\n \r\n [[nodiscard]] inline FuzzedSock ConsumeSock(FuzzedDataProvider& fuzzed_data_provider)\r\n {\r\n     return FuzzedSock{fuzzed_data_provider};\r\n }\r\n```\r\n</details>\r\n\r\n(feel free to ignore)",
      "created_at": "2021-04-07T08:05:25Z",
      "updated_at": "2021-04-07T08:26:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#discussion_r608431181",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608431181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 741,
      "original_line": 741,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608456113",
      "pull_request_review_id": 629743496,
      "id": 608456113,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODQ1NjExMw==",
      "diff_hunk": "@@ -7,6 +7,14 @@\n #include <util/rbf.h>\n #include <version.h>\n \n+bool FuzzedSock::Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred ) const",
      "path": "src/test/fuzz/util.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "original_commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "in_reply_to_id": 608422230,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch. Someone forgot to run clang-format",
      "created_at": "2021-04-07T08:39:49Z",
      "updated_at": "2021-04-07T08:39:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#discussion_r608456113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608456113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608456958",
      "pull_request_review_id": 629744647,
      "id": 608456958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODQ1Njk1OA==",
      "diff_hunk": "@@ -7,6 +7,14 @@\n #include <util/rbf.h>\n #include <version.h>\n \n+bool FuzzedSock::Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred ) const\n+{\n+    if (!m_fuzzed_data_provider.ConsumeBool()) {\n+        return false;\n+    }\n+    if (occurred) *occurred = 0;\n+    return true;\n+}",
      "path": "src/test/fuzz/util.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "original_commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "in_reply_to_id": 608429338,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> !ConsumeBool() is the same as ConsumeBool()\r\n\r\nI had a slight preference to not invalidate the existing fuzz inputs by using the `!` operator on the bool\r\n\r\nMind taking the other changes to a new pr?",
      "created_at": "2021-04-07T08:41:00Z",
      "updated_at": "2021-04-07T08:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#discussion_r608456958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608456958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
        }
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608457435",
      "pull_request_review_id": 629745321,
      "id": 608457435,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODQ1NzQzNQ==",
      "diff_hunk": "@@ -738,12 +738,10 @@ class FuzzedSock : public Sock\n         return 0;\n     }\n \n-    bool Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred = nullptr) const override\n-    {\n-        return m_fuzzed_data_provider.ConsumeBool();\n-    }\n+    bool Wait(std::chrono::milliseconds timeout, Event requested, Event* occurred = nullptr) const override;",
      "path": "src/test/fuzz/util.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "original_commit_id": "33333755f2edcbe88fcd136f6fef81f94819002e",
      "in_reply_to_id": 608431181,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Concept ACK on the commit. Please open a new pr and ping me for review.",
      "created_at": "2021-04-07T08:41:42Z",
      "updated_at": "2021-04-07T08:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21617#discussion_r608457435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608457435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21617"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 741,
      "original_line": 741,
      "side": "RIGHT"
    }
  ]
}