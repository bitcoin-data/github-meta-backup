{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975",
    "id": 1218161359,
    "node_id": "PR_kwDOABII585Im6rP",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26975",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26975.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26975.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
    "number": 26975,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[PoC] Structure aware fuzzing with libprotobuf-mutator",
    "user": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We currently use `FuzzedDataProvider` and a suite of `Consume*` functions for targets that require input formats other than a byte array. This approach is good for a lot of targets but has issues when it comes to more complex input formats.\r\n* The input corpora consist of custom input serialization formats, which means that the inputs have no meaning outside of the target itself. Seeding or sharing inputs is basically impossible when dealing with custom formats per target, however mutation based fuzzers are particularly effective when provided with an initial seed corpus (coverage guided fuzzers like libFuzzer are able to start from an empty corpus but that is less effective).\r\n* The fuzzer is not able to make useful mutations efficiently, because it only deals with raw bytes and is not aware of the input format. Fuzzers will still be able to create useful mutations, however only after many iterations.\r\n* Changing the target often leads to invalidation of the existing input corpus. For example, if the target is modified to interpret the input data in a more useful way, then the previous input corpus is invalidated, as the serialization format is modified.\r\n\r\nlibFuzzer provides an interface for dealing with structured input formats: `LLVMFuzzerCustomMutator` and `LLVMFuzzerCustomCrossOver`. Using this interface it is possible to curate input corpora with highly structured input formats (e.g. png files, json, encrypted, compressed, base64 encoded). This is described [here](https://github.com/google/fuzzing/blob/master/docs/structure-aware-fuzzing.md) in detail.\r\n\r\n[libprotobuf-mutator](https://github.com/google/libprotobuf-mutator) is a library for mutating protocol buffers, that also provides an interface around libFuzzer's custom mutator API. It allows us to specify input grammars using protobufs and exclusively provides useful mutations (i.e. mutations of the specified input format).\r\n\r\nUsing `libprofobuf-mutator` can address most of the issues of the  Â´FuzzedDataProvider` approach.\r\n* Input corpora exclusively consist of valid protobuf serializations. Meaning that seeding of corpora becomes quite easy, as all you need to do is provide your initial test cases in the protobuf format (i.e. have a script that produces useful initial test cases, similar to `feature_taproot --dumptests` except that it should spit out protobufs instead of json objects). Sharing inputs between targets becomes much easier (e.g. if two targets make use of transactions as inputs, then copying the transactions from one targets corpus to the other can easily be automated).\r\n* By default the protobufs are serialized into a human readable format, which makes debugging of crashes easier and also enables hand-rolling (initial) test cases.\r\n* IMO, writing protobuf definitions to define input grammars is very easy and maintainable. Looking at the protobuf definition gives an immediate overview of the input type a target takes (vs having to understand the combination `FuzzedDataProvider` and `Consume*` calls).\r\n* Modifying the target is possible without invalidating the existing inputs.\r\n* (We could likely get rid of quite a few of our `Consume*` functions meaning that there is less test only code to maintain.)\r\n\r\nI have provided three examples in this PR that make use of `libprotobuf-mutator`.\r\n- Fuzzing mempool acceptance\r\n- Fuzzing the version handshake\r\n- Fuzzing validation (ProcessNewBlock, ProcessNewBlockHeaders, ProcessTransaction)\r\n\r\nFurther reading/watching:\r\n- https://github.com/google/fuzzing/blob/master/docs/structure-aware-fuzzing.md\r\n- https://github.com/google/fuzzing/blob/master/docs/split-inputs.md\r\n-  https://www.youtube.com/watch?v=U60hC16HEDY \r\n- https://media.ccc.de/v/35c3-9579-attacking_chrome_ipc.\r\n\r\n## Building this PR\r\n\r\nFirst clone and build [libprotobuf-mutator](https://github.com/google/libprotobuf-mutator), instruction can be found in their readme.\r\n\r\nThen compile the protobuf definitions in this PR to c++:\r\n```sh\r\ncd src/test/fuzz/proto/\r\nprotoc *.proto --cpp_out .\r\n```\r\n\r\nNext configure and build the proto fuzzer binaries:\r\n```sh\r\n./configure --enable-fuzz --enable-proto-fuzz --with-sanitizers=fuzzer && make\r\n```\r\nIf you did not install the libprotobuf-mutator libraries and headers onto your system, then you might have to set `LDFLAGS` and `CPPFLAGS` to point to your local LPM build.\r\n\r\nIf you manage to build and run the fuzzers, you can inspect the generated inputs with `cat` or any editor of your choosing.\r\n\r\n---\r\n\r\n*Looking for conceptual review*",
    "labels": [],
    "created_at": "2023-01-26T16:57:19Z",
    "updated_at": "2023-05-30T16:32:03Z",
    "closed_at": "2023-05-30T15:13:25Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "ca07a6f822d061a3175f9918695362db5d767744",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "dergoegge:2023-01-lpm-poc",
      "ref": "2023-01-lpm-poc",
      "sha": "90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 315023492,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTUwMjM0OTI=",
        "name": "bitcoin",
        "full_name": "dergoegge/bitcoin",
        "owner": {
          "login": "dergoegge",
          "id": 8077169,
          "node_id": "MDQ6VXNlcjgwNzcxNjk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dergoegge",
          "html_url": "https://github.com/dergoegge",
          "followers_url": "https://api.github.com/users/dergoegge/followers",
          "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
          "organizations_url": "https://api.github.com/users/dergoegge/orgs",
          "repos_url": "https://api.github.com/users/dergoegge/repos",
          "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dergoegge/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dergoegge/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dergoegge/bitcoin",
        "archive_url": "https://api.github.com/repos/dergoegge/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dergoegge/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dergoegge/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dergoegge/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dergoegge/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dergoegge/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dergoegge/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dergoegge/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dergoegge/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dergoegge/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dergoegge/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dergoegge/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dergoegge/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dergoegge/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dergoegge/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dergoegge/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dergoegge/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dergoegge/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dergoegge/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dergoegge/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dergoegge/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dergoegge/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dergoegge/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dergoegge/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dergoegge/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dergoegge/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dergoegge/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dergoegge/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dergoegge/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dergoegge/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dergoegge/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dergoegge/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dergoegge/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dergoegge/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dergoegge/bitcoin/hooks",
        "svn_url": "https://github.com/dergoegge/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 222378,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:23:38Z",
        "created_at": "2020-11-22T11:41:30Z",
        "updated_at": "2023-05-05T12:10:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c2028f98aec397ff239db09d8e1835f13fa18208",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 1003,
    "deletions": 0,
    "changed_files": 14,
    "commits": 4,
    "review_comments": 4,
    "comments": 10
  },
  "events": [
    {
      "event": "commented",
      "id": 1405309040,
      "node_id": "IC_kwDOABII585Tw1Bw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1405309040",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T16:57:22Z",
      "updated_at": "2023-02-01T15:00:37Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [chinggg](https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1412201362) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1405309040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "commented",
      "id": 1405442604,
      "node_id": "IC_kwDOABII585TxVos",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1405442604",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T18:43:37Z",
      "updated_at": "2023-01-26T18:45:23Z",
      "author_association": "MEMBER",
      "body": "Nice.\r\n\r\nRelated:\r\n* https://github.com/bitcoin/bitcoin/issues/17657\r\n* https://github.com/bitcoin/bitcoin/issues/20837\r\n\r\n\r\nQuestions:\r\n\r\n* The fuzz framework was designed to be agnostic of the underlying fuzz engine. Does libprotobuf require libfuzzer?\r\n* How does this integrate into the fuzzing farms (Oss-Fuzz, and the ones based on fuzz/test_runner.py --generate)? we'd likely have to duplicate all fuzzing infra (qa-assets, coverage, CPU farms, ...)?\r\n* How does this deal with fuzzing input that are impossible to represent in protbuf? For example I could imagine a target that uses CallOneOf and conditionally deserializes inside one of its branches to not be representable, at least trivially?\r\n* How does this deal where the target code and the proto format are mismatching?\r\n* What you expect from devs: Should they write a proto fuzz test or a \"normal\" one, or both?\r\n* Do you have real world data on two identical targets, where the protbuf one finds a bug earlier?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1405442604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "commented",
      "id": 1406564847,
      "node_id": "IC_kwDOABII585T1nnv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1406564847",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T14:15:36Z",
      "updated_at": "2023-01-27T14:15:36Z",
      "author_association": "MEMBER",
      "body": "Thanks for linking the issues, i have not seen those before.\r\n\r\n---\r\n\r\n> The fuzz framework was designed to be agnostic of the underlying fuzz engine. Does libprotobuf require libfuzzer?\r\n\r\nNot necessarily, I think LPM should be compatible with any fuzzing engine that has support for something similar to libFuzzer's custom mutator API (e.g. afl++: https://aflplus.plus/docs/custom_mutators/, they even mention LPM in these docs). Writing a wrapper to make that work should be easy enough. Out of the box however, there is only support for libFuzzer.\r\n\r\n> How does this integrate into the fuzzing farms (Oss-Fuzz, and the ones based on fuzz/test_runner.py --generate)?\r\n\r\nI think technically, there should be no reason why this shouldn't just work(tm) on any of the fuzzing farms. As long as libFuzzer is used by the farm, it doesn't need to know about anything protobuf/LPM specific. There are multiple projects on oss-fuzz that make use of LPM (e.g. llvm, envoy). So integration should be quite straight forward, like our other fuzz targets.\r\n\r\n> we'd likely have to duplicate all fuzzing infra (qa-assets, coverage, CPU farms, ...)?\r\n\r\nI don't think so, the corpora could still live in qa-assets and creating coverage reports should still be the same. If the proto fuzzers end up being in separate binaries then all we need to do is tell our fuzzing infra about those binaries (that's at least my understanding, you know more about our infra). I am certainly happy to help make this work with our current infra, if we decide to go this route.\r\n\r\n> How does this deal with fuzzing input that are impossible to represent in protbuf? For example I could imagine a target that uses CallOneOf and conditionally deserializes inside one of its branches to not be representable, at least trivially?\r\n\r\nThe proto fuzzers are intended to only receive well formed protobufs as inputs (afaict it ignores any inputs that don't match the input grammar) and the custom mutator makes sure of that. You wouldn't use `CallOneOf` the way you are describing (at least if I am understanding what you mean correctly). You can use `FuzzedDataProvider` with in a proto fuzz target by having raw bytes in the grammar definition (see the version handshake example, it still uses the fuzzed sock).\r\n\r\n> How does this deal where the target code and the proto format are mismatching?\r\n\r\nI don't understand the question, could you give an example?\r\n\r\n> What you expect from devs: Should they write a proto fuzz test or a \"normal\" one, or both?\r\n\r\nDon't have a solid framework on this yet but some thoughts.\r\n\r\n- It can definitely make sense to do both in some cases. A non-bitcoin example would be fuzzing a json parser, just taking the raw bytes from the fuzzer and interpreting that as a json string has value (i.e malformed garbage shouldn't cause any bugs), however that rarely produces valid (complex) json objects which is where LPM could come in (creating a grammar for json as a protobuf definition is quite easy see: https://source.chromium.org/chromium/chromium/src/+/main:testing/libfuzzer/proto/json.proto).\r\n- For simple targets where non-complex and few inputs are required, input splitting with `FuzzedDataProvider` is probably preferable, however if we have other targets that consume the same/similar inputs it could make sense to use LPM instead (to make sharing of inputs easier).\r\n- Any target that requires complex inputs (e.g. blocks, transactions, sequences of p2p messages, etc.) is likely to be better suited for LPM. That being said, I do think that targets like `process_message(s)` still make sense even if we have LPM targets for the same code, as they are really simple.\r\n- Any target where we might want to evolve the input grammar could be a good usecase for LPM, so that previous inputs aren't invalidated.\r\n\r\n> Do you have real world data on two identical targets, where the protbuf one finds a bug earlier?\r\n\r\nNot yet, gonna try to code up an example.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1406564847",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "commented",
      "id": 1406589419,
      "node_id": "IC_kwDOABII585T1tnr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1406589419",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T14:36:47Z",
      "updated_at": "2023-01-27T14:36:47Z",
      "author_association": "MEMBER",
      "body": "> I don't understand the question, could you give an example?\r\n\r\nAssuming the proto format is `message FuzzOptions { optional int64 max_size_bytes = 1; }`, but the code queries for `optional max_bytes`. I hope this will result in a compile failure and not a run-time `std::nullopt`?\r\n\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1406589419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "commented",
      "id": 1406595165,
      "node_id": "IC_kwDOABII585T1vBd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1406595165",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T14:41:48Z",
      "updated_at": "2023-01-27T14:41:48Z",
      "author_association": "MEMBER",
      "body": "Also, I don't see how this will make it easier to share inputs without more glue code. \r\n\r\nAssume one target is `message _ {required bool _; required Tx _;}` and another target doesn't have the `bool`, so it seems the two targets can't share the inputs, unless by accident or if some translator is written?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1406595165",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "commented",
      "id": 1406763984,
      "node_id": "IC_kwDOABII585T2YPQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1406763984",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T16:45:38Z",
      "updated_at": "2023-01-27T16:45:38Z",
      "author_association": "MEMBER",
      "body": "> Assuming the proto format is message FuzzOptions { optional int64 max_size_bytes = 1; }, but the code queries for optional max_bytes. I hope this will result in a compile failure and not a run-time std::nullopt?\r\n\r\nYes this would cause a compile failure. The proto definitions are compiled to c++, so you can only actually use what's defined in your proto.\r\n\r\n> Also, I don't see how this will make it easier to share inputs without more glue code.\r\n>\r\n> Assume one target is message _ {required bool _; required Tx _;} and another target doesn't have the bool, so it seems the two targets can't share the inputs, unless by accident or if some translator is written?\r\n\r\nYes for sharing we need some sort of glue code, but I think that could be a very generic script that takes two arbitrary proto definitions A and B and their corpora, and then copies values of compatible types from A's corpus into B's. LPM does something similar in its custom cross over function.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1406763984",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "reviewed",
      "id": 1273058024,
      "node_id": "PRR_kwDOABII585L4VLo",
      "url": null,
      "actor": null,
      "commit_id": "b85bb8a30bce814775e384a1878141181c625910",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#pullrequestreview-1273058024",
      "submitted_at": "2023-01-27T16:49:59Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975"
    },
    {
      "event": "commented",
      "id": 1412201362,
      "node_id": "IC_kwDOABII585ULHuS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1412201362",
      "actor": {
        "login": "chinggg",
        "id": 24590067,
        "node_id": "MDQ6VXNlcjI0NTkwMDY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24590067?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chinggg",
        "html_url": "https://github.com/chinggg",
        "followers_url": "https://api.github.com/users/chinggg/followers",
        "following_url": "https://api.github.com/users/chinggg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chinggg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chinggg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chinggg/subscriptions",
        "organizations_url": "https://api.github.com/users/chinggg/orgs",
        "repos_url": "https://api.github.com/users/chinggg/repos",
        "events_url": "https://api.github.com/users/chinggg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chinggg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-01T15:00:34Z",
      "updated_at": "2023-02-01T15:11:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nIt's great to see a draft for structure-aware fuzzing. When I made fuzz targets for transaction handling, I heavily used APIs in `FuzzDataProvider` to create transactions with random inputs/outputs. I think it will be easier to create high-level objects with the help of `libprotobuf-mutator`.\r\n\r\nI have a question about the generation of `.proto` definitions. It seems that these definitions should exactly represent corresponding C++ class definitions. I don't know if there are robust ways to convert C++ class definition to protobuf definitions. If the `.proto` files are manually written, developers should pay attention to ensure their correctness and remember to maintain them when updating C++ code. Nevertheless, I think the protocol of Bitcoin may not change frequently so proto definitions of fundamental concepts like transaction don't require change.",
      "user": {
        "login": "chinggg",
        "id": 24590067,
        "node_id": "MDQ6VXNlcjI0NTkwMDY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24590067?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chinggg",
        "html_url": "https://github.com/chinggg",
        "followers_url": "https://api.github.com/users/chinggg/followers",
        "following_url": "https://api.github.com/users/chinggg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chinggg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chinggg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chinggg/subscriptions",
        "organizations_url": "https://api.github.com/users/chinggg/orgs",
        "repos_url": "https://api.github.com/users/chinggg/repos",
        "events_url": "https://api.github.com/users/chinggg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chinggg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1412201362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "commented",
      "id": 1413639550,
      "node_id": "IC_kwDOABII585UQm1-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1413639550",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-02T12:10:58Z",
      "updated_at": "2023-02-02T12:10:58Z",
      "author_association": "MEMBER",
      "body": "> It seems that these definitions should exactly represent corresponding C++ class definitions. I don't know if there are robust ways to convert C++ class definition to protobuf definitions. If the .proto files are manually written, developers should pay attention to ensure their correctness and remember to maintain them when updating C++ code. \r\n\r\nThey do not need to represent the exact c++ classes, although that can make sense when you require the c++ types as input. For example, the `Script` message type in the proto definitions in this PR could be more expressive than a byte array. Even though the `CScript` c++ type is effectively just a byte array, it would be possible to express a grammar for Script (the language) (or just a subset thereof) as a proto.\r\n\r\nUsually these targets will have one or more conversion functions from protobuf to c++ types. Should the c++ types change, then the compiler would likely fail on the conversion functions, reminding the devs to update/change the proto definitions.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1413639550",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkMGZmMDdmYzczNDE5MTdmNjM1NzFmMzcyOWZhNTRjY2Y1MDFmMTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d0ff07fc7341917f63571f3729fa54ccf501f11",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d0ff07fc7341917f63571f3729fa54ccf501f11",
      "tree": {
        "sha": "e36316489eb27461f2a00e6f28fc44dff1e6c3e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e36316489eb27461f2a00e6f28fc44dff1e6c3e0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ce7b27124f1570195eb5d171bf5b7ca769e333f",
          "sha": "3ce7b27124f1570195eb5d171bf5b7ca769e333f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ce7b27124f1570195eb5d171bf5b7ca769e333f"
        }
      ],
      "message": "[build] Introduce --enable-proto-fuzz, check for LPM libs",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T14:49:44Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T14:49:44Z"
      },
      "sha": "4d0ff07fc7341917f63571f3729fa54ccf501f11"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVhYmI2YzBkMmRmZDE5YWY5NDEzYWVhODg3YzlkMDZmYWJlMjNlYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5abb6c0d2dfd19af9413aea887c9d06fabe23eb4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5abb6c0d2dfd19af9413aea887c9d06fabe23eb4",
      "tree": {
        "sha": "7d4656876008c56add3b569b44ee97cdd3e9b3c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d4656876008c56add3b569b44ee97cdd3e9b3c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d0ff07fc7341917f63571f3729fa54ccf501f11",
          "sha": "4d0ff07fc7341917f63571f3729fa54ccf501f11",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4d0ff07fc7341917f63571f3729fa54ccf501f11"
        }
      ],
      "message": "[proto fuzz] atmp example",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T15:47:01Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T14:52:11Z"
      },
      "sha": "5abb6c0d2dfd19af9413aea887c9d06fabe23eb4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlNjU1ZjUyMjIzNzMwM2NkMzhiMzZlNDQyN2Y0MzdlNDcxNTczYWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e655f522237303cd38b36e4427f437e471573ac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1e655f522237303cd38b36e4427f437e471573ac",
      "tree": {
        "sha": "acfd716570e499bb891d575a5724da549df25039",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acfd716570e499bb891d575a5724da549df25039"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5abb6c0d2dfd19af9413aea887c9d06fabe23eb4",
          "sha": "5abb6c0d2dfd19af9413aea887c9d06fabe23eb4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5abb6c0d2dfd19af9413aea887c9d06fabe23eb4"
        }
      ],
      "message": "[proto fuzz] p2p version handshake example",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T16:01:12Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T14:53:16Z"
      },
      "sha": "1e655f522237303cd38b36e4427f437e471573ac"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwNTA0ZjAwNWRkMTVlN2JmYjZjM2ZhZTdkOTE3ZWNjYjNiMGY2MWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "tree": {
        "sha": "7c53c866b82f7d393a7dd9ce91fa233c26f9cf2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c53c866b82f7d393a7dd9ce91fa233c26f9cf2a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e655f522237303cd38b36e4427f437e471573ac",
          "sha": "1e655f522237303cd38b36e4427f437e471573ac",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1e655f522237303cd38b36e4427f437e471573ac"
        }
      ],
      "message": "[proto fuzz] validation example",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T16:05:58Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-02-02T14:54:00Z"
      },
      "sha": "90504f005dd15e7bfb6c3fae7d917eccb3b0f61a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8422946276,
      "node_id": "HRFPE_lADOABII585c5ETIzwAAAAH2C_Xk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8422946276",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-02T16:08:47Z"
    },
    {
      "event": "commented",
      "id": 1414009495,
      "node_id": "IC_kwDOABII585USBKX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1414009495",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-02T16:21:03Z",
      "updated_at": "2023-02-02T16:21:03Z",
      "author_association": "MEMBER",
      "body": "Added some rough build instructions to the PR description, LPM is no longer included as a subtree.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1414009495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    },
    {
      "event": "closed",
      "id": 9379771914,
      "node_id": "CE_lADOABII585c5ETIzwAAAAIvE_YK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9379771914",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:13:25Z"
    },
    {
      "event": "commented",
      "id": 1568737329,
      "node_id": "IC_kwDOABII585dgQgx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1568737329",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T16:32:02Z",
      "updated_at": "2023-05-30T16:32:02Z",
      "author_association": "MEMBER",
      "body": "Did you find that this was useless in a benchmark, or did you just close for fun :smiling_face_with_tear: ?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#issuecomment-1568737329",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26975"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089192274",
      "pull_request_review_id": 1273058024,
      "id": 1089192274,
      "node_id": "PRRC_kwDOABII585A68FS",
      "diff_hunk": "@@ -0,0 +1,81 @@\n+syntax = \"proto2\";\n+\n+package proto_fuzz;\n+\n+message PrevOut {\n+  // Since we fill in the txid on transactions via post processing, we enable\n+  // the fuzzer to copy those txids into PrevOuts.\n+  required string txid = 1;\n+  required uint32 n = 2;\n+}\n+\n+message Script {\n+  required bytes raw = 1;\n+}\n+\n+message TxInput {\n+  required PrevOut prev_out = 1;\n+  required Script script_sig = 2;\n+  required uint32 sequence = 3;\n+\n+  // scriptWitness\n+  repeated bytes witness_stack = 4;\n+}\n+\n+message TxOutput {\n+  required int64 value = 1;\n+  required Script script_pub_key = 2;\n+}\n+\n+message Transaction {",
      "path": "src/test/fuzz/proto/atmp.proto",
      "position": null,
      "original_position": 30,
      "commit_id": "90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "original_commit_id": "b85bb8a30bce814775e384a1878141181c625910",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Is it possible to de-duplicate proto sections (for example common stuff like a transaction)?",
      "created_at": "2023-01-27T16:49:06Z",
      "updated_at": "2023-01-27T16:49:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#discussion_r1089192274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089192274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089193008",
      "pull_request_review_id": 1273058024,
      "id": 1089193008,
      "node_id": "PRRC_kwDOABII585A68Qw",
      "diff_hunk": "@@ -13,6 +16,9 @@ endif\n TEST_SRCDIR = test\n TEST_BINARY=test/test_bitcoin$(EXEEXT)\n FUZZ_BINARY=test/fuzz/fuzz$(EXEEXT)\n+PROTO_FUZZ_ATMP_BINARY=test/fuzz/proto/atmp$(EXEEXT)\n+PROTO_FUZZ_VERSION_BINARY=test/fuzz/proto/version$(EXEEXT)\n+PROTO_FUZZ_VALIDATION_BINARY=test/fuzz/proto/validation$(EXEEXT)",
      "path": "src/Makefile.test.include",
      "position": 19,
      "original_position": 16,
      "commit_id": "90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "original_commit_id": "b85bb8a30bce814775e384a1878141181c625910",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Would be nice to only have one binary",
      "created_at": "2023-01-27T16:49:52Z",
      "updated_at": "2023-01-27T16:49:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#discussion_r1089193008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089193008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089194872",
      "pull_request_review_id": 1273063041,
      "id": 1089194872,
      "node_id": "PRRC_kwDOABII585A68t4",
      "diff_hunk": "@@ -0,0 +1,81 @@\n+syntax = \"proto2\";\n+\n+package proto_fuzz;\n+\n+message PrevOut {\n+  // Since we fill in the txid on transactions via post processing, we enable\n+  // the fuzzer to copy those txids into PrevOuts.\n+  required string txid = 1;\n+  required uint32 n = 2;\n+}\n+\n+message Script {\n+  required bytes raw = 1;\n+}\n+\n+message TxInput {\n+  required PrevOut prev_out = 1;\n+  required Script script_sig = 2;\n+  required uint32 sequence = 3;\n+\n+  // scriptWitness\n+  repeated bytes witness_stack = 4;\n+}\n+\n+message TxOutput {\n+  required int64 value = 1;\n+  required Script script_pub_key = 2;\n+}\n+\n+message Transaction {",
      "path": "src/test/fuzz/proto/atmp.proto",
      "position": null,
      "original_position": 30,
      "commit_id": "90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "original_commit_id": "b85bb8a30bce814775e384a1878141181c625910",
      "in_reply_to_id": 1089192274,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, afaik you we could have a sort of library of proto definitions that can be reused.",
      "created_at": "2023-01-27T16:51:37Z",
      "updated_at": "2023-01-27T16:51:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#discussion_r1089194872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089194872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094761999",
      "pull_request_review_id": 1281401925,
      "id": 1094761999,
      "node_id": "PRRC_kwDOABII585BQL4P",
      "diff_hunk": "@@ -0,0 +1,81 @@\n+syntax = \"proto2\";\n+\n+package proto_fuzz;\n+\n+message PrevOut {\n+  // Since we fill in the txid on transactions via post processing, we enable\n+  // the fuzzer to copy those txids into PrevOuts.\n+  required string txid = 1;\n+  required uint32 n = 2;\n+}\n+\n+message Script {\n+  required bytes raw = 1;\n+}\n+\n+message TxInput {\n+  required PrevOut prev_out = 1;\n+  required Script script_sig = 2;\n+  required uint32 sequence = 3;\n+\n+  // scriptWitness\n+  repeated bytes witness_stack = 4;\n+}\n+\n+message TxOutput {\n+  required int64 value = 1;\n+  required Script script_pub_key = 2;\n+}\n+\n+message Transaction {",
      "path": "src/test/fuzz/proto/atmp.proto",
      "position": null,
      "original_position": 30,
      "commit_id": "90504f005dd15e7bfb6c3fae7d917eccb3b0f61a",
      "original_commit_id": "b85bb8a30bce814775e384a1878141181c625910",
      "in_reply_to_id": 1089192274,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have de-duplicated the common definitions in the latest push.",
      "created_at": "2023-02-02T16:21:33Z",
      "updated_at": "2023-02-02T16:21:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26975#discussion_r1094761999",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094761999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26975"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    }
  ]
}