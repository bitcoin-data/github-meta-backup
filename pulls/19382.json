{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
    "id": 440292864,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQwMjkyODY0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19382",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19382.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19382.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19382",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19382/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
    "number": 19382,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "span: Add lifetimebound attribute to guard against temporary lifetime issues",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See [here](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0936r0.pdf) for more detail on lifetimebound.\r\n\r\nThis is implemented using preprocesor macros rather than configure checks in order to keep span.h self-contained.\r\n\r\nThe ```[[clang::lifetimebound]]``` syntax was chosen over ```__attribute__((lifetimebound))``` because the former is more flexible and works to guard ```this``` as well as function parameters, and also because at least for now, it's available only in clang.\r\n\r\nThere are currently no violations in our codebase, but this can easily be tested by inserting one like this somewhere and compiling with a modern clang:\r\n```c++\r\nSpan<const int> bad(std::vector<int>{1,2,3});\r\n```\r\n\r\nThe result:\r\n> warning: temporary whose address is used as value of local variable 'bad' will be destroyed at the end of the full-expression [-Wdangling]\r\n    Span<const int> bad(std::vector<int>{1,2,3});\r\n```",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2020-06-25T22:42:56Z",
    "updated_at": "2022-02-15T10:32:52Z",
    "closed_at": "2020-06-26T18:04:08Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "b44e0e2129684b776c3706c87ae50977e3c41e3e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "theuni:lifetimebound",
      "ref": "lifetimebound",
      "sha": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 10302141,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwMjE0MQ==",
        "name": "bitcoin",
        "full_name": "theuni/bitcoin",
        "owner": {
          "login": "theuni",
          "id": 417043,
          "node_id": "MDQ6VXNlcjQxNzA0Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theuni",
          "html_url": "https://github.com/theuni",
          "followers_url": "https://api.github.com/users/theuni/followers",
          "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
          "organizations_url": "https://api.github.com/users/theuni/orgs",
          "repos_url": "https://api.github.com/users/theuni/repos",
          "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theuni/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/theuni/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theuni/bitcoin",
        "archive_url": "https://api.github.com/repos/theuni/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theuni/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theuni/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theuni/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theuni/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theuni/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theuni/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theuni/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theuni/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theuni/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theuni/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theuni/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theuni/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theuni/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theuni/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theuni/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theuni/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theuni/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theuni/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theuni/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theuni/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theuni/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theuni/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theuni/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theuni/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theuni/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theuni/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theuni/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theuni/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theuni/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theuni/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theuni/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theuni/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theuni/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theuni/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theuni/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theuni/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theuni/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theuni/bitcoin/hooks",
        "svn_url": "https://github.com/theuni/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 221845,
        "default_branch": "trivial-next",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T21:44:11Z",
        "created_at": "2013-05-26T18:55:06Z",
        "updated_at": "2022-01-12T04:42:12Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f32f7e907a5eb73e880c567c699569081608ed7a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 7,
    "deletions": 7,
    "changed_files": 1,
    "commits": 2,
    "review_comments": 6,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTdlNWVkYTM4MTQ0MTQ3MzMwMTYzZTdhNTE0MTNhYzAxZDFkNmY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397e5eda38144147330163e7a51413ac01d1d6f5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/397e5eda38144147330163e7a51413ac01d1d6f5",
      "tree": {
        "sha": "58707bac43ce6649040dde8f12686a55e9e474f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58707bac43ce6649040dde8f12686a55e9e474f9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f32f7e907a5eb73e880c567c699569081608ed7a",
          "sha": "f32f7e907a5eb73e880c567c699569081608ed7a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f32f7e907a5eb73e880c567c699569081608ed7a"
        }
      ],
      "message": "span: remove default copy ctor and assignment oper\n\nThese have the effect of disabling the default move constructor and move\noperator. This is generally meaningless for spans due to their simplicity,\nbut consider the (simplified here) internal implementation of .first():\n\n    Span<C> first(std::size_t count) const noexcept {\n        return Span<C>(m_data, count);\n    }\n\nTechnically this creates a new Span object and moves/copies it when it returns,\nbut RVO takes care of optimizing that out.\n\nBecause trivial moves have been implicitly deleted, it falls into the more\ncomplicated conversion rvalue constructor to handle the return.\n\nThe next commit will add an attribute to the conversion constructor to help\ndetect dangling stack references, so we want to make sure that we're not\nsending trivial copies through it.\n\nNOTE: This copy/move is could also be avoided by constructing the return value\nin-place:\n    Span<C> first(std::size_t count) const noexcept {\n        return {m_data, count};\n    }",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T21:50:30Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T21:13:37Z"
      },
      "sha": "397e5eda38144147330163e7a51413ac01d1d6f5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTNiNWFiMzdjYTZmOWM5NDk0ODc3NTNjMDFiNzMwOGJhMGNmYTc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "tree": {
        "sha": "3ec2f58e6e43b6098e4afe92bb9574babde70940",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ec2f58e6e43b6098e4afe92bb9574babde70940"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397e5eda38144147330163e7a51413ac01d1d6f5",
          "sha": "397e5eda38144147330163e7a51413ac01d1d6f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/397e5eda38144147330163e7a51413ac01d1d6f5"
        }
      ],
      "message": "span: add lifetimebound attribute\n\nSee http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0936r0.pdf for\nreference.\n\nThis helps to guard against dangling references caused by construction from\ntemporaries such as:\n\n    Span<const int> sp(std::vector<int>{1,2,3});",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T22:00:32Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T21:25:31Z"
      },
      "sha": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77"
    },
    {
      "event": "reviewed",
      "id": 437931851,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTMxODUx",
      "url": null,
      "actor": null,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#pullrequestreview-437931851",
      "submitted_at": "2020-06-25T23:49:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
    },
    {
      "event": "reviewed",
      "id": 437936987,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTM2OTg3",
      "url": null,
      "actor": null,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. The compile time warning will go away (just like the ASSERT_IF_DEBUG) if we upgrade to std::span, but it seems fine to have additional safeguards in place in the meantime.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#pullrequestreview-437936987",
      "submitted_at": "2020-06-26T00:07:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
    },
    {
      "event": "commented",
      "id": 649906809,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTkwNjgwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649906809",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-26T02:02:09Z",
      "updated_at": "2020-06-26T02:02:09Z",
      "author_association": "MEMBER",
      "body": "> The compile time warning will go away (just like the ASSERT_IF_DEBUG) if we upgrade to std::span, but it seems fine to have additional safeguards in place in the meantime.\r\n\r\nSince clang has already has it implemented, presumably libc++ will ship with this attribute (or keyword) wired up once the standard is finished.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#issuecomment-649906809",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19382"
    },
    {
      "event": "commented",
      "id": 650020632,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDAyMDYzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650020632",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-26T07:18:02Z",
      "updated_at": "2020-06-26T07:18:02Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#issuecomment-650020632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19382"
    },
    {
      "event": "closed",
      "id": 3487606591,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQ4NzYwNjU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3487606591",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-26T18:04:08Z"
    },
    {
      "event": "referenced",
      "id": 4038315472,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMzgzMTU0NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4038315472",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5c0aebfcd42a3effe2496ecef623302da64cd9a3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c0aebfcd42a3effe2496ecef623302da64cd9a3",
      "created_at": "2020-11-25T14:20:07Z"
    },
    {
      "event": "locked",
      "id": 6073800378,
      "node_id": "LOE_lADOABII584mf42VzwAAAAFqBta6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073800378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:32:52Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445898004",
      "pull_request_review_id": 437931851,
      "id": 445898004,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODAwNA==",
      "diff_hunk": "@@ -18,6 +18,12 @@\n #define ASSERT_IF_DEBUG(x)\n #endif\n \n+#if defined(__clang__) && __has_attribute(lifetimebound)",
      "path": "src/span.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems to fail on gcc 4.8:\r\n\r\n```\r\nlibtool: compile:  /usr/bin/ccache g++ -m32 -std=c++11 -DHAVE_CONFIG_H -I. -I../src/config -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I./obj -I./secp256k1/include -DBUILD_BITCOIN_INTERNAL -I/home/travis/build/bitcoin/bitcoin/depends/i686-pc-linux-gnu/share/../include/ -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_FILE_OFFSET_BITS=64 -fstack-reuse=none -Wstack-protector -fstack-protector-all -pipe -O2 -fno-extended-identifiers -fvisibility=hidden -c consensus/merkle.cpp  -fPIC -DPIC -o consensus/.libs/libbitcoinconsensus_la-merkle.o\r\n\r\nIn file included from ./serialize.h:25:0,\r\n\r\n                 from ./script/script.h:11,\r\n\r\n                 from ./primitives/transaction.h:11,\r\n\r\n                 from ./primitives/block.h:9,\r\n\r\n                 from ./consensus/merkle.h:10,\r\n\r\n                 from consensus/merkle.cpp:5:\r\n\r\n./span.h:21:42: error: missing binary operator before token \"(\"\r\n\r\n #if defined(__clang__) && __has_attribute(lifetimebound)\r\n\r\n                                          ^",
      "created_at": "2020-06-25T23:49:53Z",
      "updated_at": "2020-06-25T23:49:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445898004",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445898004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445902464",
      "pull_request_review_id": 437936987,
      "id": 445902464,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjQ2NA==",
      "diff_hunk": "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit 397e5eda38144147330163e7a51413ac01d1d6f5\r\n\r\nIt looks like std::span has no move constructor (https://en.cppreference.com/w/cpp/container/span/span), so shouldn't we do the same?",
      "created_at": "2020-06-26T00:06:06Z",
      "updated_at": "2020-06-26T00:07:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445902464",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445902464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445926227",
      "pull_request_review_id": 437964963,
      "id": 445926227,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyNjIyNw==",
      "diff_hunk": "@@ -18,6 +18,12 @@\n #define ASSERT_IF_DEBUG(x)\n #endif\n \n+#if defined(__clang__) && __has_attribute(lifetimebound)",
      "path": "src/span.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "in_reply_to_id": 445898004,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, will break this up into nested if's.",
      "created_at": "2020-06-26T01:46:42Z",
      "updated_at": "2020-06-26T01:46:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445926227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445926227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445928813",
      "pull_request_review_id": 437967991,
      "id": 445928813,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyODgxMw==",
      "diff_hunk": "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "in_reply_to_id": 445902464,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm. I'm seeing conflicting info on this.\r\n\r\nAccording to the (official?) revision 7 draft, the move constructor was removed in r6. See here: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0122r7.pdf\r\n\r\n If we were to follow that, I believe we would drop our fun rvalue ctor.\r\n\r\nI'm not sure what draft version cppreference is referencing, but I believe it must be an old one.\r\n\r\nlibc++ for example has implemented r7: https://reviews.llvm.org/D49338.\r\n\r\nWill explore more.",
      "created_at": "2020-06-26T01:57:38Z",
      "updated_at": "2020-06-26T01:58:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445928813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445928813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446131251",
      "pull_request_review_id": 438224855,
      "id": 446131251,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMTI1MQ==",
      "diff_hunk": "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "in_reply_to_id": 445902464,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> libc++ for example has implemented r7: https://reviews.llvm.org/D49338.\r\n\r\nlooking at the source code, it shows they are using `= default`, no?\r\n\r\nhttps://github.com/llvm/llvm-project/blame/6fafde0387229d6656faee41100b73615343819a/libcxx/include/span#L70",
      "created_at": "2020-06-26T11:38:01Z",
      "updated_at": "2020-06-26T11:38:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446131251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446131251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446332852",
      "pull_request_review_id": 438494052,
      "id": 446332852,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMjg1Mg==",
      "diff_hunk": "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "path": "src/span.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_commit_id": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "in_reply_to_id": 445902464,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@MarcoFalke Yes, but they also don't have a universal reference constructor like we do.\r\n\r\nThe problem is that return values are passed through a move constructor if they exist, before copy constructors. See [here](https://en.cppreference.com/w/cpp/language/return) under \"Automatic move from local variables and parameters\".\r\n\r\nBecause the default move constructor is removed by adding the default constructor/assignment operator, our return values are passed through our universal constructor as rvalues. That's really not a problem except that we want to minimize what's going through that constructor so that we can apply the lifetimebound attribute to it.\r\n\r\n( Bonus TIL: apparently c++17 does away with this return value path altogether when possible: \"_If expression is a prvalue, the result object is initialized directly by that expression. This does not involve a copy or move constructor when the types match_\" )\r\n\r\nSo there are 2 possible solutions for us (if you're willing to accept that there's something to be solved)\r\n\r\n1. remove the default ctor/assignment operator as I've done here, thus enabling a trivial move constructor for return values to pass through\r\n2. remove our universal reference constructor and replace it with something less greedy\r\n\r\nYour question made me look up the current c++20 draft spec, where I noticed that the universal reference constructor has been removed in a newish revision. So what's on cppreference is actually stale.\r\n\r\nBut that gives us an easy answer to the question above, we should just update our implementation to match the latest draft spec. I'm going to close this and open a new PR with that approach, since it's sufficiently different from what's here.",
      "created_at": "2020-06-26T18:03:18Z",
      "updated_at": "2020-06-26T18:03:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446332852",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446332852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "LEFT"
    }
  ]
}