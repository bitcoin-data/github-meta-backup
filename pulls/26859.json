{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859",
    "id": 1191145918,
    "node_id": "PR_kwDOABII585G_3G-",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26859",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26859.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26859.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/74fea1e088098c4e779fb712fc78aea26022ff32",
    "number": 26859,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: extend ConsumeNetAddr() to return I2P and CJDNS addresses",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In the process of doing so, refactor `ConsumeNetAddr()` to generate the addresses from IPv4, IPv6, Tor, I2P and CJDNS networks in the same way - by preparing some random stream and deserializing from it. Similar code was already found in `RandAddr()`.\r\n\r\n",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2023-01-09T17:14:28Z",
    "updated_at": "2023-05-31T21:38:29Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "dbb9e65cc1dbe97f8d120ee094826be6fe84ca92",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "vasild:ConsumeNetAddr_I2P_CJDNS",
      "ref": "ConsumeNetAddr_I2P_CJDNS",
      "sha": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 211824,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:22:48Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2023-01-31T16:56:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ea41abade4b752d9f72a472cd66d7bf330e46ce2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 88,
    "deletions": 55,
    "changed_files": 6,
    "commits": 1,
    "review_comments": 14,
    "comments": 6
  },
  "events": [
    {
      "event": "commented",
      "id": 1375973693,
      "node_id": "IC_kwDOABII585SA7E9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1375973693",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-09T17:14:30Z",
      "updated_at": "2023-05-31T21:38:29Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1240938678), [mzumsande](https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1278203602), [jonatack](https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1430397018), [chinggg](https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1430748624) |\n| Approach ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1242720921) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27385](https://github.com/bitcoin/bitcoin/pull/27385) (net, refactor: extract Network and BIP155Network logic to node/network by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1375973693",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859"
    },
    {
      "event": "labeled",
      "id": 8183991009,
      "node_id": "LE_lADOABII585a9MHGzwAAAAHnzcrh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8183991009",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-09T17:14:32Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 1240938678,
      "node_id": "PRR_kwDOABII585J9zi2",
      "url": null,
      "actor": null,
      "commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1240938678",
      "submitted_at": "2023-01-09T18:02:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8190326327,
      "node_id": "HRFPE_lADOABII585a9MHGzwAAAAHoLnY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8190326327",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-10T10:16:56Z"
    },
    {
      "event": "commented",
      "id": 1377027348,
      "node_id": "IC_kwDOABII585SE8UU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1377027348",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-10T10:17:44Z",
      "updated_at": "2023-01-10T10:17:44Z",
      "author_association": "MEMBER",
      "body": "`0c8daaf752...46a7c30871`: fix the build on 32 bit archs and add a comment",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1377027348",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859"
    },
    {
      "event": "reviewed",
      "id": 1242720921,
      "node_id": "PRR_kwDOABII585KEmqZ",
      "url": null,
      "actor": null,
      "commit_id": "46a7c3087138371341316cf5b8720aea4c8854f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1242720921",
      "submitted_at": "2023-01-10T17:53:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
    },
    {
      "event": "reviewed",
      "id": 1278203602,
      "node_id": "PRR_kwDOABII585ML9bS",
      "url": null,
      "actor": null,
      "commit_id": "46a7c3087138371341316cf5b8720aea4c8854f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nIt would be good to also update the `netaddress` fuzz target with the added networks. At the minimum, we could check / assert `IsI2P()` for `Network::NET_I2P` there, maybe we could also assert that addresses from Tor, I2P and CJDNS are always valid, which I believe is guaranteed by the creation process?",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1278203602",
      "submitted_at": "2023-01-31T23:59:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0ZmVhMWUwODgwOThjNGU3NzlmYjcxMmZjNzhhZWEyNjAyMmZmMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74fea1e088098c4e779fb712fc78aea26022ff32",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/74fea1e088098c4e779fb712fc78aea26022ff32",
      "tree": {
        "sha": "b672fbd9cbe7f680e3f3268c3f62ee664518eb13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b672fbd9cbe7f680e3f3268c3f62ee664518eb13"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b672fbd9cbe7f680e3f3268c3f62ee664518eb13\nparent 39363a4b945114f5e4718f75098f3036e8fe6a1d\nauthor Vasil Dimov <vd@FreeBSD.org> 1673271082 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1675346580 +0100\n\nfuzz: extend ConsumeNetAddr() to return I2P and CJDNS addresses\n\nIn the process of doing so, refactor `ConsumeNetAddr()` to generate the\naddresses from IPv4, IPv6, Tor, I2P and CJDNS networks in the same way -\nby preparing some random stream and deserializing from it. Similar code\nwas already found in `RandAddr()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmPbwpUACgkQVN8G9ktV\ny79+MR/+LEPsJLQYTC416Irjkka0l9q1nvwUy4cD5fKJTRZYtnIOl4GLFVIqLW98\n2zLoOTWm1pYDO/JCr2kI6kEuo5AiGAwQnwp2O7T6/Cz+XaCXryBghiXJz1jFLYCJ\nx2cLbNrwoQajnAtXEU3q1gNbJ+ozhE1u4y+gtTGrCokVgSIEBh+vtUy2PnZQV9T9\nTZ7lcGvWEUaVjXTYI3VgR6PHgGa3vBDdSUxzR6Jm2+emq6SIHGGGlplTs/6libsi\n0TfiBV99yganoE0h+iK3Ef6JoDZA/lvYiy7I1Yv1LVC60iuWzrNNXo0SRxiYdKKo\nkD0lRcBO5bZ0E13blNrxXhlYhxFPauapBiZWqD+zuxmN60TL4uiL70YTLc2JZTvs\n98Zh1Kix0byaBti7yUf9l3uzWdLJ+foOTGcT/mQ3H13iBN/Lz1ze+PoXdss2B7wJ\nzEzZHHKjIaKItEmHRZ+eeePckl5mQgjfrJdwtRMR6B6jIDzPNxJ/7zaUA8mQVzD4\nGq0jfMF16nexLxF9BysT7wo9RW0E6s10+Bo8k+bQuuLsA8EcHuHBzQT3SqHIoDX3\newlOEg7oEsfZ+ws6RGYvzkPYkicLdYQMGZiP2A9wPe/6iezZUyBi00dXNoq8ieP7\nRFIzoWBQrqm91Zn0xz3aJEw4+EFC5PeRKBJbB/Ys+oTG9EP11EE1Pvovli16G2Q+\n0JaaZZMG85NXvkUGcCoaMEqiKQkkctgqumyl5OjZXI4CT39z2W7dJd5AwZiG35sX\njqy8E5jCgGk9z2vz7ijgP5JXnhG9rLPd2dejiuVX46bXvSjUxaReqlwRp+2vMSf9\n+0qsMAnVL81e3lROChx03k8BmIj8n1shOUC7QC/3ufpm0c73sh6YpOUESNy3awSe\n4lHl4iuGoMBlqgxx2W+qIdWfnZ5KvAwQK5d+WmXQaiciBFJZG2eRMW0JD8CywKLa\n8V3CTEhCpAwXlJxpwd5+QGMrmwjXhk9vHvbHRWeoMUf/kFZDUti9sYMQior6PZap\n0FjAlOx6f2RzAIbrdUMgSfXYnuoZNRS8URlObIo/+syFKFml3qucP2IHAOgPxtfG\nPXjglibJIxoIMrhYbGrkxjFYqoHDR1DKWtt4pA/l+gLb3IzGF9paLHturZORVFAM\n7E8/Xd/tl3tav/F+xhdufFJcodk7alriP00ripuRIHNWqPH8xxC+Q7dGy/Dtn9PY\nrgqiQZ76sBOOU9xl37qsYeEbGWxWOjrzJS2BbaWY2abfG4Pj1pK2oVEQbHl1nvrJ\nNdF4Qw8rUgOJ6AKdFJHtZ15gdAuPUa/QRDWfCT02BtIouPT5CY/WPSuzsIiIIzxD\nSt4+xmjr/yU4BkRT6Wg92PynfOzgxA==\n=8n5I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39363a4b945114f5e4718f75098f3036e8fe6a1d",
          "sha": "39363a4b945114f5e4718f75098f3036e8fe6a1d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39363a4b945114f5e4718f75098f3036e8fe6a1d"
        }
      ],
      "message": "fuzz: extend ConsumeNetAddr() to return I2P and CJDNS addresses\n\nIn the process of doing so, refactor `ConsumeNetAddr()` to generate the\naddresses from IPv4, IPv6, Tor, I2P and CJDNS networks in the same way -\nby preparing some random stream and deserializing from it. Similar code\nwas already found in `RandAddr()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-02-02T14:03:00Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-01-09T13:31:22Z"
      },
      "sha": "74fea1e088098c4e779fb712fc78aea26022ff32"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8421587372,
      "node_id": "HRFPE_lADOABII585a9MHGzwAAAAH19zms",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8421587372",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-02T14:04:09Z"
    },
    {
      "event": "commented",
      "id": 1413801350,
      "node_id": "IC_kwDOABII585UROWG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1413801350",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-02T14:06:46Z",
      "updated_at": "2023-02-02T14:06:46Z",
      "author_association": "MEMBER",
      "body": "`46a7c30871...74fea1e088`: expand `fuzz/netaddress.cpp` with I2P and CJDNS, suggested [above](https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1278203602). Retry a few times to get a valid address inside `RandAddr()`, [discussion](https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1092609908).",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1413801350",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859"
    },
    {
      "event": "reviewed",
      "id": 1281852723,
      "node_id": "PRR_kwDOABII585MZ4Uz",
      "url": null,
      "actor": null,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#pullrequestreview-1281852723",
      "submitted_at": "2023-02-02T20:30:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
    },
    {
      "event": "commented",
      "id": 1425660645,
      "node_id": "IC_kwDOABII585U-drl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1425660645",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-10T11:23:09Z",
      "updated_at": "2023-02-10T11:23:09Z",
      "author_association": "MEMBER",
      "body": "Don't merge this before the problems it uncovered are fixed by https://github.com/bitcoin/bitcoin/pull/27071 (the CI is failing anyway).",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1425660645",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859"
    },
    {
      "event": "commented",
      "id": 1430397018,
      "node_id": "IC_kwDOABII585VQiBa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1430397018",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T21:22:59Z",
      "updated_at": "2023-02-14T21:22:59Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Reviewed prerequisite PR #27071.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1430397018",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859"
    },
    {
      "event": "commented",
      "id": 1430748624,
      "node_id": "IC_kwDOABII585VR33Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1430748624",
      "actor": {
        "login": "chinggg",
        "id": 24590067,
        "node_id": "MDQ6VXNlcjI0NTkwMDY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24590067?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chinggg",
        "html_url": "https://github.com/chinggg",
        "followers_url": "https://api.github.com/users/chinggg/followers",
        "following_url": "https://api.github.com/users/chinggg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chinggg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chinggg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chinggg/subscriptions",
        "organizations_url": "https://api.github.com/users/chinggg/orgs",
        "repos_url": "https://api.github.com/users/chinggg/repos",
        "events_url": "https://api.github.com/users/chinggg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chinggg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-15T04:44:06Z",
      "updated_at": "2023-02-15T04:44:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "chinggg",
        "id": 24590067,
        "node_id": "MDQ6VXNlcjI0NTkwMDY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24590067?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chinggg",
        "html_url": "https://github.com/chinggg",
        "followers_url": "https://api.github.com/users/chinggg/followers",
        "following_url": "https://api.github.com/users/chinggg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chinggg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chinggg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chinggg/subscriptions",
        "organizations_url": "https://api.github.com/users/chinggg/orgs",
        "repos_url": "https://api.github.com/users/chinggg/repos",
        "events_url": "https://api.github.com/users/chinggg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chinggg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#issuecomment-1430748624",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26859"
    },
    {
      "event": "convert_to_draft",
      "id": 9094298596,
      "node_id": "CTDE_lADOABII585a9MHGzwAAAAIeD_vk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9094298596",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T16:17:07Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1064933386",
      "pull_request_review_id": 1240938678,
      "id": 1064933386,
      "node_id": "PRRC_kwDOABII584_eZgK",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think consuming addresses from `FastRandomContext` has much upside in fuzzing. Especially after this PR since `ConsumeNetAddr` will now produce addrs of any kind. I think you were the author of `RandAddr` so maybe you can elaborate on why you added this back then.",
      "created_at": "2023-01-09T18:00:17Z",
      "updated_at": "2023-01-09T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1064933386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1064933386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1064963962",
      "pull_request_review_id": 1240984583,
      "id": 1064963962,
      "node_id": "PRRC_kwDOABII584_eg96",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, because the addrman tests (that use `RandAddr()`) need many many many addresses. If all are generated from the fuzzer input, they exhaust it very quickly.",
      "created_at": "2023-01-09T18:27:06Z",
      "updated_at": "2023-01-09T18:27:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1064963962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1064963962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065529738",
      "pull_request_review_id": 1241816256,
      "id": 1065529738,
      "node_id": "PRRC_kwDOABII584_grGK",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here is the relevant discussion wrt generating addresses from `FastRandomContext`: https://github.com/bitcoin/bitcoin/pull/21129#discussion_r675972823",
      "created_at": "2023-01-10T09:24:19Z",
      "updated_at": "2023-01-10T09:24:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1065529738",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065529738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065590310",
      "pull_request_review_id": 1241905091,
      "id": 1065590310,
      "node_id": "PRRC_kwDOABII584_g54m",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment to `ConsumeNetAddr()` to explain this.",
      "created_at": "2023-01-10T10:18:28Z",
      "updated_at": "2023-01-10T10:18:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1065590310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065590310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065592993",
      "pull_request_review_id": 1241908977,
      "id": 1065592993,
      "node_id": "PRRC_kwDOABII584_g6ih",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah I see, thanks for linking!\r\n\r\nI'm still skeptical that consuming from `FastRandomContext` is useful in this context and I would speculate that leaving the addrs blank or providing some valid dummies is probably just as useful.\r\n\r\nIn any case, I guess this isn't really the concern of this PR. I was about to suggest that you add a comment to `ConsumeNetAddr` stating that for most targets not consuming from `FastRandomContext` is preferable but I see that you just did that on the latest push :)",
      "created_at": "2023-01-10T10:20:48Z",
      "updated_at": "2023-01-10T10:20:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1065592993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065592993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065603812",
      "pull_request_review_id": 1241924943,
      "id": 1065603812,
      "node_id": "PRRC_kwDOABII584_g9Lk",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The test that fills addrman needs different addresses. This is why leaving them blank (e.g. `0.0.0.0`) does not suffice. `FastRandomContext` is a convenient way to generate \"unlimited\" amount of (mostly) valid, different, dummies ;-)",
      "created_at": "2023-01-10T10:30:48Z",
      "updated_at": "2023-01-10T10:30:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1065603812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1065603812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1092609908",
      "pull_request_review_id": 1278203331,
      "id": 1092609908,
      "node_id": "PRRC_kwDOABII585BH-d0",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To add to this, the idea of `addrman_serdeser` is to be able to fill up a large fraction of AddrMan, for which we need a large variety of addresses because similar addresses will collide with each other.\r\n\r\nThe \"(mostly) valid,\" is changed by this a little bit though: I think we'll now fill addrman with less addresses because 1 in 6 addresses will be of type `NET_INTERNAL` which is invalid and not accepted to AddrMan.",
      "created_at": "2023-01-31T23:59:05Z",
      "updated_at": "2023-01-31T23:59:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1092609908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1092609908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094582264",
      "pull_request_review_id": 1281134312,
      "id": 1094582264,
      "node_id": "PRRC_kwDOABII585BPf_4",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`RandAddr()` could have returned `NET_INTERNAL` also before (if it called `ConsumeNetAddr()`), but you are right that this has little value because near the end `RandAddr()` will convert any invalid to always-the-same-`5.5.5.5`. I added a few retries to try to avoid that.",
      "created_at": "2023-02-02T14:11:01Z",
      "updated_at": "2023-02-02T14:11:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1094582264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094582264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095056910",
      "pull_request_review_id": 1281852723,
      "id": 1095056910,
      "node_id": "PRRC_kwDOABII585BRT4O",
      "diff_hunk": "@@ -25,29 +25,57 @@\n \n class CNode;\n \n-CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext* rand) noexcept\n {\n-    const Network network = fuzzed_data_provider.PickValueInArray({Network::NET_IPV4, Network::NET_IPV6, Network::NET_INTERNAL, Network::NET_ONION});\n-    CNetAddr net_addr;\n-    if (network == Network::NET_IPV4) {\n-        in_addr v4_addr = {};\n-        v4_addr.s_addr = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n-        net_addr = CNetAddr{v4_addr};\n-    } else if (network == Network::NET_IPV6) {\n-        if (fuzzed_data_provider.remaining_bytes() >= 16) {\n-            in6_addr v6_addr = {};\n-            memcpy(v6_addr.s6_addr, fuzzed_data_provider.ConsumeBytes<uint8_t>(16).data(), 16);\n-            net_addr = CNetAddr{v6_addr, fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    struct NetAux {\n+        Network net;\n+        CNetAddr::BIP155Network bip155;\n+        size_t len;\n+    };\n+\n+    static constexpr std::array<NetAux, 6> nets{\n+        NetAux{.net = Network::NET_IPV4, .bip155 = CNetAddr::BIP155Network::IPV4, .len = ADDR_IPV4_SIZE},\n+        NetAux{.net = Network::NET_IPV6, .bip155 = CNetAddr::BIP155Network::IPV6, .len = ADDR_IPV6_SIZE},\n+        NetAux{.net = Network::NET_ONION, .bip155 = CNetAddr::BIP155Network::TORV3, .len = ADDR_TORV3_SIZE},\n+        NetAux{.net = Network::NET_I2P, .bip155 = CNetAddr::BIP155Network::I2P, .len = ADDR_I2P_SIZE},\n+        NetAux{.net = Network::NET_CJDNS, .bip155 = CNetAddr::BIP155Network::CJDNS, .len = ADDR_CJDNS_SIZE},\n+        NetAux{.net = Network::NET_INTERNAL, .bip155 = CNetAddr::BIP155Network{0}, .len = 0},\n+    };\n+\n+    const size_t i{rand == nullptr\n+        ? fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, nets.size() - 1)\n+        : static_cast<size_t>(rand->randrange(nets.size()))};\n+\n+    const auto& aux = nets[i];\n+\n+    CNetAddr addr;\n+\n+    if (aux.net == Network::NET_INTERNAL) {\n+        if (rand == nullptr) {\n+            addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n+        } else {\n+            const auto v = rand->randbytes(32);\n+            addr.SetInternal(std::string{v.begin(), v.end()});\n         }\n-    } else if (network == Network::NET_INTERNAL) {\n-        net_addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n-    } else if (network == Network::NET_ONION) {\n-        auto pub_key{fuzzed_data_provider.ConsumeBytes<uint8_t>(ADDR_TORV3_SIZE)};\n-        pub_key.resize(ADDR_TORV3_SIZE);\n-        const bool ok{net_addr.SetSpecial(OnionToString(pub_key))};\n-        assert(ok);\n+        return addr;\n     }\n-    return net_addr;\n+\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(aux.bip155);\n+\n+    std::vector<uint8_t> data;\n+    if (rand == nullptr) {\n+        data = fuzzed_data_provider.ConsumeBytes<uint8_t>(aux.len);\n+        data.resize(aux.len);\n+    } else {\n+        data = rand->randbytes(aux.len);\n+    }\n+    s << data;\n+\n+    s >> addr;",
      "path": "src/test/fuzz/util/net.cpp",
      "position": 72,
      "original_position": 72,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I tried to understand the CI fail: \r\nThe process of unserializing can change the network into `NET_UNROUTABLE`, for example if a CJDNS address with the wrong prefix was generated. As a result of that, the `fuzz/banman` target can hit https://github.com/bitcoin/bitcoin/blob/7753efcbcf3ca2e1b46f167936e11cc580e28c7a/src/test/fuzz/banman.cpp#L112\r\nbecause while converting the unroutable address to a `CSubNet`, no netmask is added as for [IPv6](https://github.com/bitcoin/bitcoin/blob/7753efcbcf3ca2e1b46f167936e11cc580e28c7a/src/netaddress.cpp#L1023), but after serializing / unserializing via banlist, it's no longer seen as unroutable but IPv6 and gets a /128 netmask.",
      "created_at": "2023-02-02T20:30:04Z",
      "updated_at": "2023-02-02T20:30:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1095056910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095056910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095061628",
      "pull_request_review_id": 1281859711,
      "id": 1095061628,
      "node_id": "PRRC_kwDOABII585BRVB8",
      "diff_hunk": "@@ -66,23 +66,7 @@ CNetAddr RandAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext& f\n     if (fuzzed_data_provider.remaining_bytes() > 1 && fuzzed_data_provider.ConsumeBool()) {\n         addr = ConsumeNetAddr(fuzzed_data_provider);\n     } else {\n-        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n-        static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n-                                                               {2, ADDR_IPV6_SIZE},\n-                                                               {4, ADDR_TORV3_SIZE},\n-                                                               {5, ADDR_I2P_SIZE},\n-                                                               {6, ADDR_CJDNS_SIZE}};\n-        uint8_t net = fast_random_context.randrange(5) + 1; // [1..5]\n-        if (net == 3) {\n-            net = 6;\n-        }\n-\n-        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n-\n-        s << net;\n-        s << fast_random_context.randbytes(net_len_map.at(net));\n-\n-        s >> addr;\n+        addr = ConsumeNetAddr(fuzzed_data_provider, &fast_random_context);",
      "path": "src/test/fuzz/addrman.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "0c8daaf75292394dd0a37038a3713e9f28a9d5e6",
      "in_reply_to_id": 1064933386,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh, right, i missed that. Retrying a few times makes sense to me.",
      "created_at": "2023-02-02T20:35:47Z",
      "updated_at": "2023-02-02T20:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1095061628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095061628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095199055",
      "pull_request_review_id": 1282064115,
      "id": 1095199055,
      "node_id": "PRRC_kwDOABII585BR2lP",
      "diff_hunk": "@@ -25,29 +25,57 @@\n \n class CNode;\n \n-CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext* rand) noexcept\n {\n-    const Network network = fuzzed_data_provider.PickValueInArray({Network::NET_IPV4, Network::NET_IPV6, Network::NET_INTERNAL, Network::NET_ONION});\n-    CNetAddr net_addr;\n-    if (network == Network::NET_IPV4) {\n-        in_addr v4_addr = {};\n-        v4_addr.s_addr = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n-        net_addr = CNetAddr{v4_addr};\n-    } else if (network == Network::NET_IPV6) {\n-        if (fuzzed_data_provider.remaining_bytes() >= 16) {\n-            in6_addr v6_addr = {};\n-            memcpy(v6_addr.s6_addr, fuzzed_data_provider.ConsumeBytes<uint8_t>(16).data(), 16);\n-            net_addr = CNetAddr{v6_addr, fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    struct NetAux {\n+        Network net;\n+        CNetAddr::BIP155Network bip155;\n+        size_t len;\n+    };\n+\n+    static constexpr std::array<NetAux, 6> nets{\n+        NetAux{.net = Network::NET_IPV4, .bip155 = CNetAddr::BIP155Network::IPV4, .len = ADDR_IPV4_SIZE},\n+        NetAux{.net = Network::NET_IPV6, .bip155 = CNetAddr::BIP155Network::IPV6, .len = ADDR_IPV6_SIZE},\n+        NetAux{.net = Network::NET_ONION, .bip155 = CNetAddr::BIP155Network::TORV3, .len = ADDR_TORV3_SIZE},\n+        NetAux{.net = Network::NET_I2P, .bip155 = CNetAddr::BIP155Network::I2P, .len = ADDR_I2P_SIZE},\n+        NetAux{.net = Network::NET_CJDNS, .bip155 = CNetAddr::BIP155Network::CJDNS, .len = ADDR_CJDNS_SIZE},\n+        NetAux{.net = Network::NET_INTERNAL, .bip155 = CNetAddr::BIP155Network{0}, .len = 0},\n+    };\n+\n+    const size_t i{rand == nullptr\n+        ? fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, nets.size() - 1)\n+        : static_cast<size_t>(rand->randrange(nets.size()))};\n+\n+    const auto& aux = nets[i];\n+\n+    CNetAddr addr;\n+\n+    if (aux.net == Network::NET_INTERNAL) {\n+        if (rand == nullptr) {\n+            addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n+        } else {\n+            const auto v = rand->randbytes(32);\n+            addr.SetInternal(std::string{v.begin(), v.end()});\n         }\n-    } else if (network == Network::NET_INTERNAL) {\n-        net_addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n-    } else if (network == Network::NET_ONION) {\n-        auto pub_key{fuzzed_data_provider.ConsumeBytes<uint8_t>(ADDR_TORV3_SIZE)};\n-        pub_key.resize(ADDR_TORV3_SIZE);\n-        const bool ok{net_addr.SetSpecial(OnionToString(pub_key))};\n-        assert(ok);\n+        return addr;\n     }\n-    return net_addr;\n+\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(aux.bip155);\n+\n+    std::vector<uint8_t> data;\n+    if (rand == nullptr) {\n+        data = fuzzed_data_provider.ConsumeBytes<uint8_t>(aux.len);\n+        data.resize(aux.len);\n+    } else {\n+        data = rand->randbytes(aux.len);\n+    }\n+    s << data;\n+\n+    s >> addr;",
      "path": "src/test/fuzz/util/net.cpp",
      "position": 72,
      "original_position": 72,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "in_reply_to_id": 1095056910,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly unrelated, but while looking into this I got the impression that banning CJDNS peers doesn't work at all currently (no `MaybeFlipIPv6toCJDNS`). I might try to add this possibility in another PR.",
      "created_at": "2023-02-02T23:29:22Z",
      "updated_at": "2023-02-02T23:29:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1095199055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095199055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095876501",
      "pull_request_review_id": 1283085959,
      "id": 1095876501,
      "node_id": "PRRC_kwDOABII585BUb-V",
      "diff_hunk": "@@ -25,29 +25,57 @@\n \n class CNode;\n \n-CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext* rand) noexcept\n {\n-    const Network network = fuzzed_data_provider.PickValueInArray({Network::NET_IPV4, Network::NET_IPV6, Network::NET_INTERNAL, Network::NET_ONION});\n-    CNetAddr net_addr;\n-    if (network == Network::NET_IPV4) {\n-        in_addr v4_addr = {};\n-        v4_addr.s_addr = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n-        net_addr = CNetAddr{v4_addr};\n-    } else if (network == Network::NET_IPV6) {\n-        if (fuzzed_data_provider.remaining_bytes() >= 16) {\n-            in6_addr v6_addr = {};\n-            memcpy(v6_addr.s6_addr, fuzzed_data_provider.ConsumeBytes<uint8_t>(16).data(), 16);\n-            net_addr = CNetAddr{v6_addr, fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    struct NetAux {\n+        Network net;\n+        CNetAddr::BIP155Network bip155;\n+        size_t len;\n+    };\n+\n+    static constexpr std::array<NetAux, 6> nets{\n+        NetAux{.net = Network::NET_IPV4, .bip155 = CNetAddr::BIP155Network::IPV4, .len = ADDR_IPV4_SIZE},\n+        NetAux{.net = Network::NET_IPV6, .bip155 = CNetAddr::BIP155Network::IPV6, .len = ADDR_IPV6_SIZE},\n+        NetAux{.net = Network::NET_ONION, .bip155 = CNetAddr::BIP155Network::TORV3, .len = ADDR_TORV3_SIZE},\n+        NetAux{.net = Network::NET_I2P, .bip155 = CNetAddr::BIP155Network::I2P, .len = ADDR_I2P_SIZE},\n+        NetAux{.net = Network::NET_CJDNS, .bip155 = CNetAddr::BIP155Network::CJDNS, .len = ADDR_CJDNS_SIZE},\n+        NetAux{.net = Network::NET_INTERNAL, .bip155 = CNetAddr::BIP155Network{0}, .len = 0},\n+    };\n+\n+    const size_t i{rand == nullptr\n+        ? fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, nets.size() - 1)\n+        : static_cast<size_t>(rand->randrange(nets.size()))};\n+\n+    const auto& aux = nets[i];\n+\n+    CNetAddr addr;\n+\n+    if (aux.net == Network::NET_INTERNAL) {\n+        if (rand == nullptr) {\n+            addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n+        } else {\n+            const auto v = rand->randbytes(32);\n+            addr.SetInternal(std::string{v.begin(), v.end()});\n         }\n-    } else if (network == Network::NET_INTERNAL) {\n-        net_addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n-    } else if (network == Network::NET_ONION) {\n-        auto pub_key{fuzzed_data_provider.ConsumeBytes<uint8_t>(ADDR_TORV3_SIZE)};\n-        pub_key.resize(ADDR_TORV3_SIZE);\n-        const bool ok{net_addr.SetSpecial(OnionToString(pub_key))};\n-        assert(ok);\n+        return addr;\n     }\n-    return net_addr;\n+\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(aux.bip155);\n+\n+    std::vector<uint8_t> data;\n+    if (rand == nullptr) {\n+        data = fuzzed_data_provider.ConsumeBytes<uint8_t>(aux.len);\n+        data.resize(aux.len);\n+    } else {\n+        data = rand->randbytes(aux.len);\n+    }\n+    s << data;\n+\n+    s >> addr;",
      "path": "src/test/fuzz/util/net.cpp",
      "position": 72,
      "original_position": 72,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "in_reply_to_id": 1095056910,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, this PR uncovered a problem elsewhere!\r\n\r\nYou are right in your analysis (except that `NET_UNROUTABLE` is not involved): the test bans `CNetAddr{.m_net = NET_CJDNS, m_addr = 91b4:919d...}` (that is `!IsValid()` because it does not start with `fc`). Then it gets serialized in `fuzzed_banlist.json` like:\r\n```json\r\n        {   \r\n            \"version\": 1,\r\n            \"ban_created\": 2984688890,\r\n            \"banned_until\": 3982933363,\r\n            \"address\": \"91b4:919d:1191:9140:0:c4:207f:7f00\"\r\n        }   \r\n```\r\nand then of course, after unserialize ends up as an IPv6 address in `banmap_read`. This is something I have overlooked wrt `CJDNS` and `banlist.json`.\r\n\r\nSo, two issues:\r\n\r\n1. How to handle an attempt to ban an address that is `!IsValid()`?\r\n    * Refuse and change `BanMan::Ban()` to return `bool` / failure, or\r\n    * Don't change anything, leave it as it is now.\r\n\r\n2. How to survive CJDNS addresses through banman ser/unser aka `banlist.json`?\r\n    * Save the network explicitly in a new field in the JSON, or\r\n    * During unserialize maybe flip an IPv6 address that starts with `fc` to CJDNS type if `-cjdnsreachable` (but this would mean the contents of `banlist.json` could be interpreted differently based on the environment where it is loaded).",
      "created_at": "2023-02-03T14:41:24Z",
      "updated_at": "2023-02-03T14:41:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1095876501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1095876501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096301119",
      "pull_request_review_id": 1283744082,
      "id": 1096301119,
      "node_id": "PRRC_kwDOABII585BWDo_",
      "diff_hunk": "@@ -25,29 +25,57 @@\n \n class CNode;\n \n-CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext* rand) noexcept\n {\n-    const Network network = fuzzed_data_provider.PickValueInArray({Network::NET_IPV4, Network::NET_IPV6, Network::NET_INTERNAL, Network::NET_ONION});\n-    CNetAddr net_addr;\n-    if (network == Network::NET_IPV4) {\n-        in_addr v4_addr = {};\n-        v4_addr.s_addr = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n-        net_addr = CNetAddr{v4_addr};\n-    } else if (network == Network::NET_IPV6) {\n-        if (fuzzed_data_provider.remaining_bytes() >= 16) {\n-            in6_addr v6_addr = {};\n-            memcpy(v6_addr.s6_addr, fuzzed_data_provider.ConsumeBytes<uint8_t>(16).data(), 16);\n-            net_addr = CNetAddr{v6_addr, fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    struct NetAux {\n+        Network net;\n+        CNetAddr::BIP155Network bip155;\n+        size_t len;\n+    };\n+\n+    static constexpr std::array<NetAux, 6> nets{\n+        NetAux{.net = Network::NET_IPV4, .bip155 = CNetAddr::BIP155Network::IPV4, .len = ADDR_IPV4_SIZE},\n+        NetAux{.net = Network::NET_IPV6, .bip155 = CNetAddr::BIP155Network::IPV6, .len = ADDR_IPV6_SIZE},\n+        NetAux{.net = Network::NET_ONION, .bip155 = CNetAddr::BIP155Network::TORV3, .len = ADDR_TORV3_SIZE},\n+        NetAux{.net = Network::NET_I2P, .bip155 = CNetAddr::BIP155Network::I2P, .len = ADDR_I2P_SIZE},\n+        NetAux{.net = Network::NET_CJDNS, .bip155 = CNetAddr::BIP155Network::CJDNS, .len = ADDR_CJDNS_SIZE},\n+        NetAux{.net = Network::NET_INTERNAL, .bip155 = CNetAddr::BIP155Network{0}, .len = 0},\n+    };\n+\n+    const size_t i{rand == nullptr\n+        ? fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, nets.size() - 1)\n+        : static_cast<size_t>(rand->randrange(nets.size()))};\n+\n+    const auto& aux = nets[i];\n+\n+    CNetAddr addr;\n+\n+    if (aux.net == Network::NET_INTERNAL) {\n+        if (rand == nullptr) {\n+            addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n+        } else {\n+            const auto v = rand->randbytes(32);\n+            addr.SetInternal(std::string{v.begin(), v.end()});\n         }\n-    } else if (network == Network::NET_INTERNAL) {\n-        net_addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n-    } else if (network == Network::NET_ONION) {\n-        auto pub_key{fuzzed_data_provider.ConsumeBytes<uint8_t>(ADDR_TORV3_SIZE)};\n-        pub_key.resize(ADDR_TORV3_SIZE);\n-        const bool ok{net_addr.SetSpecial(OnionToString(pub_key))};\n-        assert(ok);\n+        return addr;\n     }\n-    return net_addr;\n+\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(aux.bip155);\n+\n+    std::vector<uint8_t> data;\n+    if (rand == nullptr) {\n+        data = fuzzed_data_provider.ConsumeBytes<uint8_t>(aux.len);\n+        data.resize(aux.len);\n+    } else {\n+        data = rand->randbytes(aux.len);\n+    }\n+    s << data;\n+\n+    s >> addr;",
      "path": "src/test/fuzz/util/net.cpp",
      "position": 72,
      "original_position": 72,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "in_reply_to_id": 1095056910,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that the fuzz test will not only fail on invalid addresses, it will also fail on valid CJDNS addresses for the same reason. The important thing is that IPv6 addresses will get the `/128` netmask, other networks won't, and if the address, valid or not, is re-interpreted as IPv6 after unserialization of `banlist.json`, the assert will fail.\r\n\r\n> During unserialize maybe flip an IPv6 address that starts with fc to CJDNS type if -cjdnsreachable (but this would mean the contents of banlist.json could be interpreted differently based on the environment where it is loaded).\r\n\r\nI had this in mind, and I verified that banning CJDNS peers will work that way. The different interpretation may not a huge problem, because regular IPv6 peers can't be from that reserved range, so there would be no risk of banning the wrong peer after disabling `-cjdnsreachable`. On the other hand, we would need some logic to deal with the fact that when interpreted as `IPv6`, the address gets a `/128` mask and switching back to `-cjdnsreachable` won't work anymore, so maybe the cleanest solution would be to save the network explicitly?\r\n",
      "created_at": "2023-02-03T21:31:16Z",
      "updated_at": "2023-02-03T21:31:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1096301119",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096301119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102637075",
      "pull_request_review_id": 1292961549,
      "id": 1102637075,
      "node_id": "PRRC_kwDOABII585BuOgT",
      "diff_hunk": "@@ -25,29 +25,57 @@\n \n class CNode;\n \n-CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider, FastRandomContext* rand) noexcept\n {\n-    const Network network = fuzzed_data_provider.PickValueInArray({Network::NET_IPV4, Network::NET_IPV6, Network::NET_INTERNAL, Network::NET_ONION});\n-    CNetAddr net_addr;\n-    if (network == Network::NET_IPV4) {\n-        in_addr v4_addr = {};\n-        v4_addr.s_addr = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n-        net_addr = CNetAddr{v4_addr};\n-    } else if (network == Network::NET_IPV6) {\n-        if (fuzzed_data_provider.remaining_bytes() >= 16) {\n-            in6_addr v6_addr = {};\n-            memcpy(v6_addr.s6_addr, fuzzed_data_provider.ConsumeBytes<uint8_t>(16).data(), 16);\n-            net_addr = CNetAddr{v6_addr, fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+    struct NetAux {\n+        Network net;\n+        CNetAddr::BIP155Network bip155;\n+        size_t len;\n+    };\n+\n+    static constexpr std::array<NetAux, 6> nets{\n+        NetAux{.net = Network::NET_IPV4, .bip155 = CNetAddr::BIP155Network::IPV4, .len = ADDR_IPV4_SIZE},\n+        NetAux{.net = Network::NET_IPV6, .bip155 = CNetAddr::BIP155Network::IPV6, .len = ADDR_IPV6_SIZE},\n+        NetAux{.net = Network::NET_ONION, .bip155 = CNetAddr::BIP155Network::TORV3, .len = ADDR_TORV3_SIZE},\n+        NetAux{.net = Network::NET_I2P, .bip155 = CNetAddr::BIP155Network::I2P, .len = ADDR_I2P_SIZE},\n+        NetAux{.net = Network::NET_CJDNS, .bip155 = CNetAddr::BIP155Network::CJDNS, .len = ADDR_CJDNS_SIZE},\n+        NetAux{.net = Network::NET_INTERNAL, .bip155 = CNetAddr::BIP155Network{0}, .len = 0},\n+    };\n+\n+    const size_t i{rand == nullptr\n+        ? fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, nets.size() - 1)\n+        : static_cast<size_t>(rand->randrange(nets.size()))};\n+\n+    const auto& aux = nets[i];\n+\n+    CNetAddr addr;\n+\n+    if (aux.net == Network::NET_INTERNAL) {\n+        if (rand == nullptr) {\n+            addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n+        } else {\n+            const auto v = rand->randbytes(32);\n+            addr.SetInternal(std::string{v.begin(), v.end()});\n         }\n-    } else if (network == Network::NET_INTERNAL) {\n-        net_addr.SetInternal(fuzzed_data_provider.ConsumeBytesAsString(32));\n-    } else if (network == Network::NET_ONION) {\n-        auto pub_key{fuzzed_data_provider.ConsumeBytes<uint8_t>(ADDR_TORV3_SIZE)};\n-        pub_key.resize(ADDR_TORV3_SIZE);\n-        const bool ok{net_addr.SetSpecial(OnionToString(pub_key))};\n-        assert(ok);\n+        return addr;\n     }\n-    return net_addr;\n+\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(aux.bip155);\n+\n+    std::vector<uint8_t> data;\n+    if (rand == nullptr) {\n+        data = fuzzed_data_provider.ConsumeBytes<uint8_t>(aux.len);\n+        data.resize(aux.len);\n+    } else {\n+        data = rand->randbytes(aux.len);\n+    }\n+    s << data;\n+\n+    s >> addr;",
      "path": "src/test/fuzz/util/net.cpp",
      "position": 72,
      "original_position": 72,
      "commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "original_commit_id": "74fea1e088098c4e779fb712fc78aea26022ff32",
      "in_reply_to_id": 1095056910,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This turned out to be somewhat involved change. Opened a PR at https://github.com/bitcoin/bitcoin/pull/27071.",
      "created_at": "2023-02-10T11:21:45Z",
      "updated_at": "2023-02-10T11:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26859#discussion_r1102637075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102637075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26859"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    }
  ]
}