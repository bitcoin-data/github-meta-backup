{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26132",
    "id": 1061338843,
    "node_id": "PR_kwDOABII584_Qr7b",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26132",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26132.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26132.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26132",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26132/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26132/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26132/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fad61573ed547615f73710cb59b2fb0ecafed127",
    "number": 26132,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "wallet: Fix nNextResend data race in ResubmitWalletTransactions",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Now that `ResubmitWalletTransactions` is called from more than one thread, it is no longer thread-safe.\r\n\r\nIntroduced in 5291933fedceb9df16eb9e4627b1d7386b53ba07.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
      "id": 7150037,
      "node_id": "MI_kwDOABII584AbRnV",
      "number": 54,
      "state": "closed",
      "title": "24.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 159,
      "created_at": "2021-09-14T08:27:02Z",
      "updated_at": "2022-11-29T15:44:44Z",
      "closed_at": "2022-11-29T15:44:44Z"
    },
    "created_at": "2022-09-20T09:52:40Z",
    "updated_at": "2022-09-21T07:57:25Z",
    "closed_at": "2022-09-20T22:48:55Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-09-20T22:48:55Z",
    "merge_commit_sha": "9e2a2b88d5cae247bd2dd5aa32743198a5d4841b",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2209-wallet-race-ðŸ’†",
      "ref": "2209-wallet-race-ðŸ’†",
      "sha": "fad61573ed547615f73710cb59b2fb0ecafed127",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205802,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:04Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "71ac70d8779f8ad75d9b7bc6d52920be8b0133e5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26132"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 4,
    "deletions": 4,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 0,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZDYxNTczZWQ1NDc2MTVmNzM3MTBjYjU5YjJmYjBlY2FmZWQxMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad61573ed547615f73710cb59b2fb0ecafed127",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fad61573ed547615f73710cb59b2fb0ecafed127",
      "tree": {
        "sha": "5611db7e38983068c06d9ee242fbaa3be176b52c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5611db7e38983068c06d9ee242fbaa3be176b52c"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 5611db7e38983068c06d9ee242fbaa3be176b52c\nparent 9f650062fc4350d8c50ac8890cddd4d99f20f895\nauthor MacroFake <falke.marco@gmail.com> 1663668384 +0200\ncommitter MacroFake <falke.marco@gmail.com> 1663667397 +0200\n\nFix nNextResend data race in ResubmitWalletTransactions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgOhAv8DBPMLj7lu9fcFUpdRjOwu2Pmcch6evF4MCgT0LGfEDyf7yL0foV67QVJ\nmKPQFczxpESgqc3cliuz5Rj6Ai3xoZG62tiq1sPlQZQ7rjKBspFyXZ0UFepInbI+\ntoHMhPykmG7R85u+bfXFB+X2XGPeex+k9y45OHjarneCdZ4dWietkt6xT4D/GXZt\na0Y0Rm4BwgnBQgBptBxNevFTQoB976dJiMvGB4vSQOmnkeWz31S1gS545Xxdo+aE\nb4fE2laB6E5yYbcO8nz9V8mfZiO+y/t5eThyH5OEPQAub2+mCvAAGMPXpz+sw3sz\npueDN/zTWodnB6Y26qQTctLVvWZzPJtaDv/K1F0c9RMRdytXjeyhZf7dqce+FPT4\nmB4JCj6SC5ygTENpcPicza3rjHx9Q6cd7ZvCQmeGE1hfUAtx2IEl2E2qZlzTkKdh\nTXXvu3e52OXPCmcVbVwaYY4RDkrRmgGplArq2S01MRoLbfslTCJyX1Dgsthw+GJ+\nEX1MqDgf\n=j2El\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f650062fc4350d8c50ac8890cddd4d99f20f895",
          "sha": "9f650062fc4350d8c50ac8890cddd4d99f20f895",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9f650062fc4350d8c50ac8890cddd4d99f20f895"
        }
      ],
      "message": "Fix nNextResend data race in ResubmitWalletTransactions",
      "committer": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-09-20T09:49:57Z"
      },
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-09-20T10:06:24Z"
      },
      "sha": "fad61573ed547615f73710cb59b2fb0ecafed127"
    },
    {
      "event": "milestoned",
      "id": 7420625877,
      "node_id": "MIE_lADOABII585SM_HRzwAAAAG6TcPV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7420625877",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T09:53:40Z",
      "milestone": {
        "title": "24.0"
      }
    },
    {
      "event": "labeled",
      "id": 7420634700,
      "node_id": "LE_lADOABII585SM_HRzwAAAAG6TeZM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7420634700",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T09:54:47Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 1252125950,
      "node_id": "IC_kwDOABII585Koez-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252125950",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T10:03:17Z",
      "updated_at": "2022-09-20T10:03:17Z",
      "author_association": "MEMBER",
      "body": "To reproduce (intermittently) on a fresh install of Ubuntu Kinetic:\r\n\r\nInstall: `export DEBIAN_FRONTEND=noninteractive && apt update && apt install curl wget htop git vim ccache -y && git clone https://github.com/bitcoin/bitcoin.git ./bitcoin-core && cd bitcoin-core && apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-dev libsqlite3-dev -y && ./autogen.sh && ./configure --with-sanitizers=thread && make -j $(nproc)`\r\n\r\nThen run the functional test, to get an error similar to this one:\r\n\r\n```\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/bitcoin-core/test/functional/wallet_taproot.py\", line 477, in <module>\r\n    WalletTaprootTest().main()\r\n  File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 156, in main\r\n    exit_code = self.shutdown()\r\n  File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 311, in shutdown\r\n    self.stop_nodes()\r\n  File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 567, in stop_nodes\r\n    node.stop_node(wait=wait, wait_until_stopped=False)\r\n  File \"/bitcoin-core/test/functional/test_framework/test_node.py\", line 352, in stop_node\r\n    raise AssertionError(\"Unexpected stderr {} != {}\".format(stderr, expected_stderr))\r\nAssertionError: Unexpected stderr ==================\r\nWARNING: ThreadSanitizer: data race (pid=45264)\r\n  Write of size 8 at 0x7b6400010948 by thread T12 (mutexes: write M131954):\r\n    #0 wallet::CWallet::ResubmitWalletTransactions(bool, bool) wallet/wallet.cpp:1940 (bitcoind+0x6651d9)\r\n    #1 operator() wallet/rpc/backup.cpp:1694 (bitcoind+0x74c065)\r\n    #2 __invoke_impl<UniValue, wallet::importdescriptors()::<lambda(const RPCHelpMan&, const JSONRPCRequest&)>&, const RPCHelpMan&, const JSONRPCRequest&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x74d224)\r\n    #3 __invoke_r<UniValue, wallet::importdescriptors()::<lambda(const RPCHelpMan&, const JSONRPCRequest&)>&, const RPCHelpMan&, const JSONRPCRequest&> /usr/include/c++/12/bits/invoke.h:116 (bitcoind+0x74d224)\r\n    #4 _M_invoke /usr/include/c++/12/bits/std_function.h:291 (bitcoind+0x74d224)\r\n    #5 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x88cecb)\r\n    #6 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const rpc/util.cpp:585 (bitcoind+0x88cecb)\r\n    #7 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}::operator()(JSONRPCRequest const&, UniValue&, bool) const rpc/server.h:109 (bitcoind+0x2f83f7)\r\n    #8 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x2f8ad4)\r\n    #9 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x2f8ad4)\r\n    #10 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x2f8ad4)\r\n    #11 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x5a5b17)\r\n    #12 operator() wallet/interfaces.cpp:541 (bitcoind+0x5a5b17)\r\n    #13 __invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x5a5d7c)\r\n    #14 __invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x5a5d7c)\r\n    #15 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x5a5d7c)\r\n    #16 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x275868)\r\n    #17 operator() node/interfaces.cpp:469 (bitcoind+0x275868)\r\n    #18 __invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(const CRPCCommand&)::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x275868)\r\n    #19 __invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(const CRPCCommand&)::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x275868)\r\n    #20 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x275868)\r\n    #21 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x3d76e0)\r\n    #22 ExecuteCommand rpc/server.cpp:476 (bitcoind+0x3d76e0)\r\n    #23 ExecuteCommands rpc/server.cpp:440 (bitcoind+0x3d8916)\r\n    #24 CRPCTable::execute(JSONRPCRequest const&) const rpc/server.cpp:460 (bitcoind+0x3d8916)\r\n    #25 HTTPReq_JSONRPC src/httprpc.cpp:201 (bitcoind+0x533595)\r\n    #26 operator() src/httprpc.cpp:300 (bitcoind+0x534338)\r\n    #27 __invoke_impl<bool, StartHTTPRPC(const std::any&)::<lambda(HTTPRequest*, const std::string&)>&, HTTPRequest*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x534338)\r\n    #28 __invoke_r<bool, StartHTTPRPC(const std::any&)::<lambda(HTTPRequest*, const std::string&)>&, HTTPRequest*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x534338)\r\n    #29 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x534338)\r\n    #30 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x548adb)\r\n    #31 HTTPWorkItem::operator()() src/httpserver.cpp:56 (bitcoind+0x548adb)\r\n    #32 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111 (bitcoind+0x548adb)\r\n    #33 HTTPWorkQueueRun src/httpserver.cpp:343 (bitcoind+0x5410ba)\r\n    #34 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x547404)\r\n    #35 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/include/c++/12/bits/invoke.h:96 (bitcoind+0x547404)\r\n    #36 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/include/c++/12/bits/std_thread.h:252 (bitcoind+0x547404)\r\n    #37 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::operator()() /usr/include/c++/12/bits/std_thread.h:259 (bitcoind+0x547404)\r\n    #38 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> > >::_M_run() /usr/include/c++/12/bits/std_thread.h:210 (bitcoind+0x547404)\r\n    #39 <null> <null> (libstdc++.so.6+0xdc3a2)\r\n\r\n  Previous read of size 8 at 0x7b6400010948 by thread T8:\r\n    #0 wallet::CWallet::ResubmitWalletTransactions(bool, bool) wallet/wallet.cpp:1938 (bitcoind+0x6651af)\r\n    #1 wallet::MaybeResendWalletTxs(wallet::WalletContext&) wallet/wallet.cpp:1976 (bitcoind+0x665626)\r\n    #2 operator() wallet/load.cpp:154 (bitcoind+0x5c57f5)\r\n    #3 __invoke_impl<void, wallet::StartWallets(WalletContext&, CScheduler&)::<lambda()>&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x5c57f5)\r\n    #4 __invoke_r<void, wallet::StartWallets(WalletContext&, CScheduler&)::<lambda()>&> /usr/include/c++/12/bits/invoke.h:111 (bitcoind+0x5c57f5)\r\n    #5 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x5c57f5)\r\n    #6 std::function<void ()>::operator()() const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x893653)\r\n    #7 Repeat src/scheduler.cpp:106 (bitcoind+0x893653)\r\n    #8 operator() src/scheduler.cpp:107 (bitcoind+0x893c60)\r\n    #9 __invoke_impl<void, Repeat(CScheduler&, CScheduler::Function, std::chrono::milliseconds)::<lambda()>&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x893c60)\r\n    #10 __invoke_r<void, Repeat(CScheduler&, CScheduler::Function, std::chrono::milliseconds)::<lambda()>&> /usr/include/c++/12/bits/invoke.h:111 (bitcoind+0x893c60)\r\n    #11 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x893c60)\r\n    #12 std::function<void ()>::operator()() const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x893184)\r\n    #13 CScheduler::serviceQueue() src/scheduler.cpp:62 (bitcoind+0x893184)\r\n    #14 operator() src/init.cpp:1154 (bitcoind+0x123c28)\r\n    #15 __invoke_impl<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()>&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x123c28)\r\n    #16 __invoke_r<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()>&> /usr/include/c++/12/bits/invoke.h:111 (bitcoind+0x123c28)\r\n    #17 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x123c28)\r\n    #18 std::function<void ()>::operator()() const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x96e362)\r\n    #19 util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) util/thread.cpp:21 (bitcoind+0x96e362)\r\n    #20 __invoke_impl<void, void (*)(std::basic_string_view<char>, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x128ca6)\r\n    #21 __invoke<void (*)(std::basic_string_view<char>, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > /usr/include/c++/12/bits/invoke.h:96 (bitcoind+0x128ca6)\r\n    #22 _M_invoke<0, 1, 2> /usr/include/c++/12/bits/std_thread.h:252 (bitcoind+0x128ca6)\r\n    #23 operator() /usr/include/c++/12/bits/std_thread.h:259 (bitcoind+0x128ca6)\r\n    #24 _M_run /usr/include/c++/12/bits/std_thread.h:210 (bitcoind+0x128ca6)\r\n    #25 <null> <null> (libstdc++.so.6+0xdc3a2)\r\n\r\n  Location is heap block of size 1048 at 0x7b6400010900 allocated by thread T10:\r\n    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.2+0x8d659)\r\n    #1 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase> >, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str> >&) wallet/wallet.cpp:2792 (bitcoind+0x6870e4)\r\n    #2 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str> >&) wallet/wallet.cpp:324 (bitcoind+0x68b40b)\r\n    #3 operator() wallet/rpc/wallet.cpp:392 (bitcoind+0x5e5d9e)\r\n    #4 __invoke_impl<UniValue, wallet::createwallet()::<lambda(const RPCHelpMan&, const JSONRPCRequest&)>&, const RPCHelpMan&, const JSONRPCRequest&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x5e6de4)\r\n    #5 __invoke_r<UniValue, wallet::createwallet()::<lambda(const RPCHelpMan&, const JSONRPCRequest&)>&, const RPCHelpMan&, const JSONRPCRequest&> /usr/include/c++/12/bits/invoke.h:116 (bitcoind+0x5e6de4)\r\n    #6 _M_invoke /usr/include/c++/12/bits/std_function.h:291 (bitcoind+0x5e6de4)\r\n    #7 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x88cecb)\r\n    #8 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const rpc/util.cpp:585 (bitcoind+0x88cecb)\r\n    #9 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}::operator()(JSONRPCRequest const&, UniValue&, bool) const rpc/server.h:109 (bitcoind+0x2f83f7)\r\n    #10 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x2f8ad4)\r\n    #11 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x2f8ad4)\r\n    #12 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x2f8ad4)\r\n    #13 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x5a5b17)\r\n    #14 operator() wallet/interfaces.cpp:541 (bitcoind+0x5a5b17)\r\n    #15 __invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x5a5d7c)\r\n    #16 __invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x5a5d7c)\r\n    #17 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x5a5d7c)\r\n    #18 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x275868)\r\n    #19 operator() node/interfaces.cpp:469 (bitcoind+0x275868)\r\n    #20 __invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(const CRPCCommand&)::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x275868)\r\n    #21 __invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(const CRPCCommand&)::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x275868)\r\n    #22 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x275868)\r\n    #23 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x3d76e0)\r\n    #24 ExecuteCommand rpc/server.cpp:476 (bitcoind+0x3d76e0)\r\n    #25 ExecuteCommands rpc/server.cpp:440 (bitcoind+0x3d8916)\r\n    #26 CRPCTable::execute(JSONRPCRequest const&) const rpc/server.cpp:460 (bitcoind+0x3d8916)\r\n    #27 HTTPReq_JSONRPC src/httprpc.cpp:201 (bitcoind+0x533595)\r\n    #28 operator() src/httprpc.cpp:300 (bitcoind+0x534338)\r\n    #29 __invoke_impl<bool, StartHTTPRPC(const std::any&)::<lambda(HTTPRequest*, const std::string&)>&, HTTPRequest*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x534338)\r\n    #30 __invoke_r<bool, StartHTTPRPC(const std::any&)::<lambda(HTTPRequest*, const std::string&)>&, HTTPRequest*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x534338)\r\n    #31 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x534338)\r\n    #32 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x548adb)\r\n    #33 HTTPWorkItem::operator()() src/httpserver.cpp:56 (bitcoind+0x548adb)\r\n    #34 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111 (bitcoind+0x548adb)\r\n    #35 HTTPWorkQueueRun src/httpserver.cpp:343 (bitcoind+0x5410ba)\r\n    #36 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x547404)\r\n    #37 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/include/c++/12/bits/invoke.h:96 (bitcoind+0x547404)\r\n    #38 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/include/c++/12/bits/std_thread.h:252 (bitcoind+0x547404)\r\n    #39 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::operator()() /usr/include/c++/12/bits/std_thread.h:259 (bitcoind+0x547404)\r\n    #40 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> > >::_M_run() /usr/include/c++/12/bits/std_thread.h:210 (bitcoind+0x547404)\r\n    #41 <null> <null> (libstdc++.so.6+0xdc3a2)\r\n\r\n  Mutex M131954 (0x7b6400010aa0) created at:\r\n    #0 pthread_mutex_lock ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4324 (libtsan.so.2+0x59bcf)\r\n    #1 __gthread_mutex_lock /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:749 (bitcoind+0x664e34)\r\n    #2 __gthread_recursive_mutex_lock /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:811 (bitcoind+0x664e34)\r\n    #3 std::recursive_mutex::lock() /usr/include/c++/12/mutex:108 (bitcoind+0x664e34)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/include/c++/12/bits/unique_lock.h:139 (bitcoind+0x664e34)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::Enter(char const*, char const*, int) sync.h:162 (bitcoind+0x664e34)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::UniqueLock(AnnotatedMixin<std::recursive_mutex>&, char const*, char const*, int, bool) sync.h:181 (bitcoind+0x664e34)\r\n    #7 wallet::CWallet::LoadWallet() wallet/wallet.cpp:2219 (bitcoind+0x665f04)\r\n    #8 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase> >, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str> >&) wallet/wallet.cpp:2794 (bitcoind+0x6871b8)\r\n    #9 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str> >&) wallet/wallet.cpp:324 (bitcoind+0x68b40b)\r\n    #10 operator() wallet/rpc/wallet.cpp:392 (bitcoind+0x5e5d9e)\r\n    #11 __invoke_impl<UniValue, wallet::createwallet()::<lambda(const RPCHelpMan&, const JSONRPCRequest&)>&, const RPCHelpMan&, const JSONRPCRequest&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x5e6de4)\r\n    #12 __invoke_r<UniValue, wallet::createwallet()::<lambda(const RPCHelpMan&, const JSONRPCRequest&)>&, const RPCHelpMan&, const JSONRPCRequest&> /usr/include/c++/12/bits/invoke.h:116 (bitcoind+0x5e6de4)\r\n    #13 _M_invoke /usr/include/c++/12/bits/std_function.h:291 (bitcoind+0x5e6de4)\r\n    #14 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x88cecb)\r\n    #15 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const rpc/util.cpp:585 (bitcoind+0x88cecb)\r\n    #16 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}::operator()(JSONRPCRequest const&, UniValue&, bool) const rpc/server.h:109 (bitcoind+0x2f83f7)\r\n    #17 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x2f8ad4)\r\n    #18 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x2f8ad4)\r\n    #19 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x2f8ad4)\r\n    #20 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x5a5b17)\r\n    #21 operator() wallet/interfaces.cpp:541 (bitcoind+0x5a5b17)\r\n    #22 __invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x5a5d7c)\r\n    #23 __invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x5a5d7c)\r\n    #24 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x5a5d7c)\r\n    #25 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x275868)\r\n    #26 operator() node/interfaces.cpp:469 (bitcoind+0x275868)\r\n    #27 __invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(const CRPCCommand&)::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x275868)\r\n    #28 __invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(const CRPCCommand&)::<lambda(const JSONRPCRequest&, UniValue&, bool)>&, const JSONRPCRequest&, UniValue&, bool> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x275868)\r\n    #29 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x275868)\r\n    #30 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x3d76e0)\r\n    #31 ExecuteCommand rpc/server.cpp:476 (bitcoind+0x3d76e0)\r\n    #32 ExecuteCommands rpc/server.cpp:440 (bitcoind+0x3d8916)\r\n    #33 CRPCTable::execute(JSONRPCRequest const&) const rpc/server.cpp:460 (bitcoind+0x3d8916)\r\n    #34 HTTPReq_JSONRPC src/httprpc.cpp:201 (bitcoind+0x533595)\r\n    #35 operator() src/httprpc.cpp:300 (bitcoind+0x534338)\r\n    #36 __invoke_impl<bool, StartHTTPRPC(const std::any&)::<lambda(HTTPRequest*, const std::string&)>&, HTTPRequest*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x534338)\r\n    #37 __invoke_r<bool, StartHTTPRPC(const std::any&)::<lambda(HTTPRequest*, const std::string&)>&, HTTPRequest*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> /usr/include/c++/12/bits/invoke.h:114 (bitcoind+0x534338)\r\n    #38 _M_invoke /usr/include/c++/12/bits/std_function.h:290 (bitcoind+0x534338)\r\n    #39 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /usr/include/c++/12/bits/std_function.h:591 (bitcoind+0x548adb)\r\n    #40 HTTPWorkItem::operator()() src/httpserver.cpp:56 (bitcoind+0x548adb)\r\n    #41 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111 (bitcoind+0x548adb)\r\n    #42 HTTPWorkQueueRun src/httpserver.cpp:343 (bitcoind+0x5410ba)\r\n    #43 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/include/c++/12/bits/invoke.h:61 (bitcoind+0x547404)\r\n    #44 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/include/c++/12/bits/invoke.h:96 (bitcoind+0x547404)\r\n    #45 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/include/c++/12/bits/std_thread.h:252 (bitcoind+0x547404)\r\n    #46 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::operator()() /usr/include/c++/12/bits/std_thread.h:259 (bitcoind+0x547404)\r\n    #47 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> > >::_M_run() /usr/include/c++/12/bits/std_thread.h:210 (bitcoind+0x547404)\r\n    #48 <null> <null> (libstdc++.so.6+0xdc3a2)\r\n\r\n  Thread T12 'b-httpworker.2' (tid=45400, running) created by main thread at:\r\n    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1001 (libtsan.so.2+0x63a69)\r\n    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc478)\r\n    #2 std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/include/c++/12/bits/vector.tcc:123 (bitcoind+0x5415c1)\r\n    #3 StartHTTPServer() src/httpserver.cpp:433 (bitcoind+0x5415c1)\r\n    #4 AppInitServers src/init.cpp:650 (bitcoind+0x128924)\r\n    #5 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1188 (bitcoind+0x13bed7)\r\n    #6 AppInit src/bitcoind.cpp:234 (bitcoind+0x104de2)\r\n    #7 main src/bitcoind.cpp:278 (bitcoind+0x104de2)\r\n\r\n  Thread T8 'b-scheduler' (tid=45361, running) created by main thread at:\r\n    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1001 (libtsan.so.2+0x63a69)\r\n    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc478)\r\n    #2 AppInit src/bitcoind.cpp:234 (bitcoind+0x104de2)\r\n    #3 main src/bitcoind.cpp:278 (bitcoind+0x104de2)\r\n\r\n  Thread T10 'b-httpworker.0' (tid=45398, running) created by main thread at:\r\n    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1001 (libtsan.so.2+0x63a69)\r\n    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc478)\r\n    #2 std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/include/c++/12/bits/vector.tcc:123 (bitcoind+0x5415c1)\r\n    #3 StartHTTPServer() src/httpserver.cpp:433 (bitcoind+0x5415c1)\r\n    #4 AppInitServers src/init.cpp:650 (bitcoind+0x128924)\r\n    #5 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1188 (bitcoind+0x13bed7)\r\n    #6 AppInit src/bitcoind.cpp:234 (bitcoind+0x104de2)\r\n    #7 main src/bitcoind.cpp:278 (bitcoind+0x104de2)\r\n\r\nSUMMARY: ThreadSanitizer: data race wallet/wallet.cpp:1940 in wallet::CWallet::ResubmitWalletTransactions(bool, bool)\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26132#issuecomment-1252125950",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26132"
    },
    {
      "event": "reviewed",
      "id": 1113534000,
      "node_id": "PRR_kwDOABII585CXy4w",
      "url": null,
      "actor": null,
      "commit_id": "fad61573ed547615f73710cb59b2fb0ecafed127",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fad61573ed547615f73710cb59b2fb0ecafed127",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26132#pullrequestreview-1113534000",
      "submitted_at": "2022-09-20T10:14:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26132"
    },
    {
      "event": "review_requested",
      "id": 7423246914,
      "node_id": "RRE_lADOABII585SM_HRzwAAAAG6dcJC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7423246914",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T15:07:02Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1114019157,
      "node_id": "PRR_kwDOABII585CZpVV",
      "url": null,
      "actor": null,
      "commit_id": "fad61573ed547615f73710cb59b2fb0ecafed127",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "It fixes the data race UB, but I'm not sure this is a complete solution. Shouldn't `if (!force && GetTime() < m_next_resend) return;` and `m_next_resend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);` be executed atomically as well, since we wouldn't want two simultaneous threads to be able to both resubmit?\r\n\r\nTo improve, as I [suggested before](https://github.com/bitcoin/bitcoin/pull/25768/files#r962828563) I think we should have a follow-up PR that moves the logic that checks and updates `m_next_resend` out of `ResubmitWalletTransactions()` and into `MaybeResendWalletTxs()` (I started working on this, as well as addressing some other leftover review comments from #25768)\r\n\r\nIn the meanwhile, we _could_ put `if (!force && GetTime() < m_next_resend) return;` and `m_next_resend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);` under a mutex for a more lightweight fix?\r\n\r\nHowever, I think the current data race UB fix in fad61573e is the most critical to get into v24, so: ACK fad61573e - but open to further improvements. ",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26132#pullrequestreview-1114019157",
      "submitted_at": "2022-09-20T15:11:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26132"
    },
    {
      "event": "commented",
      "id": 1252532884,
      "node_id": "IC_kwDOABII585KqCKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252532884",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T15:31:56Z",
      "updated_at": "2022-09-20T15:31:56Z",
      "author_association": "MEMBER",
      "body": "> we wouldn't want two simultaneous threads to be able to both resubmit\r\n\r\nI don't think this can be prevented. There is still only one scheduler thread, so the only way this could happen is when another thread calls this with `force=True`. In that case the scheduler thread might run this first, then the thread with `force=True`, thus it will be run twice successively.\r\n\r\nIt is true that a mutex will avoid a successive double-call if the thread with `force=True` runs first, then the scheduler thread. With `std::atomic` you might run into a (very) rare race where it is called twice. Though, given that this generally can't be avoided I don't think it is worth it to put under a mutex.\r\n\r\nPutting it under the cs_wallet mutex (and reverting fbba4a131647c991afc53b6a3dfb9721f5c430b2) would likely cause a performance regression.\r\n\r\nHowever, I am happy to switch to a dedicated mutes if reviewers think it is worth it.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26132#issuecomment-1252532884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26132"
    },
    {
      "event": "commented",
      "id": 1252987353,
      "node_id": "IC_kwDOABII585KrxHZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252987353",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T22:38:01Z",
      "updated_at": "2022-09-20T22:38:01Z",
      "author_association": "MEMBER",
      "body": "ACK fad61573ed547615f73710cb59b2fb0ecafed127",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26132#issuecomment-1252987353",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26132"
    },
    {
      "event": "merged",
      "id": 7426129320,
      "node_id": "ME_lADOABII585SM_HRzwAAAAG6ob2o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7426129320",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9e2a2b88d5cae247bd2dd5aa32743198a5d4841b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e2a2b88d5cae247bd2dd5aa32743198a5d4841b",
      "created_at": "2022-09-20T22:48:55Z"
    },
    {
      "event": "closed",
      "id": 7426129335,
      "node_id": "CE_lADOABII585SM_HRzwAAAAG6ob23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7426129335",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T22:48:55Z"
    },
    {
      "event": "labeled",
      "id": 7427917609,
      "node_id": "LE_lADOABII585SM_HRzwAAAAG6vQcp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7427917609",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-21T06:50:35Z",
      "label": {
        "name": "Needs backport (24.x)",
        "color": "dd7200"
      }
    },
    {
      "event": "unlabeled",
      "id": 7427921663,
      "node_id": "UNLE_lADOABII585SM_HRzwAAAAG6vRb_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7427921663",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-21T06:51:17Z",
      "label": {
        "name": "Needs backport (24.x)",
        "color": "dd7200"
      }
    },
    {
      "event": "referenced",
      "id": 7428392522,
      "node_id": "REFE_lADOABII585SM_HRzwAAAAG6xEZK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7428392522",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ce3cb2bbe79cf33e495ea97a1d4fa4b61ad74ab9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce3cb2bbe79cf33e495ea97a1d4fa4b61ad74ab9",
      "created_at": "2022-09-21T07:57:12Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 7428394081,
      "node_id": "HRDE_lADOABII585SM_HRzwAAAAG6xExh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7428394081",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-21T07:57:25Z"
    },
    {
      "event": "referenced",
      "id": 7443957001,
      "node_id": "REFE_lADOABII585SM_HRzwAAAAG7scUJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7443957001",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e2e4dc2e5e74226ddd4d34d15bb9be6d50ed7276",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/e2e4dc2e5e74226ddd4d34d15bb9be6d50ed7276",
      "created_at": "2022-09-23T01:54:22Z"
    }
  ],
  "comments": []
}