{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145",
    "id": 114034126,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE0MDM0MTI2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10145",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/10145.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/10145.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
    "number": 10145,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Separate Contextual checks and handling & switch on enum in net_processing.cpp ",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "edit 0: Updated to reflect updates mentioned in https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291632820\r\n\r\nThis PR separates ProcessMessage into two functions, ContextualProcessMessage and ~ProcessMessage~ _Process*Message_. This helps with readability, verifiability, and maintainability of the code.\r\n\r\nContextualProcessMessage generates a list of context dependent \"whitelists\", all of which must pass for the incoming message before a call to ProcessMessage may be made. If the whitelists fail, the code that follows should be identical to the previous behavior. The choice of whitelists over blacklists is because it is better to explicitly enable the behaviors desired, rather than to try to block the potential bad features (e.g., adding something unsafe and new won't be permitted in unstudied contexts). This design should be extensible for adding new features (~up to 64 netmsgs total~ unlimited network messages) as well as new contexts (easy to add new whitelists). There should be very little overhead to check these whitelists as it is all ~bitwise~ _bool array lookups_.\r\n\r\n~ProcessMessage now uses an enum to switch to~ _Dispatch is now done using a std::map lookup to get_ the appropriate handler, and is semi \"stateless\" _(the map is const)_. This makes it easier to verify the code and make dispatch more modular.\r\n\r\n\r\nI haven't benchmarked that the conversion from string->~enum~_std::pair<handler_t, whitelist_index>_ has any performance implication, negative or positive. In theory this code could be faster given fewer branch mispredictions due to the ~switch~_function pointer call_. Another PR could improve the lookup algorithm ~(trivially, inlining getAllNetMessageTypes might help the compiler a lot)~, but unless it is exotic it should be compatible with this design _by replacing the map with the desired scheme_. ~I didn't think there was something obviously faster than the linear lookup, because n is small.~ _A std::map lookup should be fairly fast, but perhaps a custom map could be faster._\r\n\r\n~The correctness of this code is dependent on NetMsgTypeEnum::tag and allNetMessageTypes having the same index order. It would be nice to verify this property at compile time, which should be possible with some recursive constexpr static_assert magic. The default return of ProcessNewMessage is now also false, because the last return is unreachable.~\r\n\r\nSee #9608 and https://github.com/theuni/bitcoin/commit/f1e4e281e3f1eb884f8010ac941c82752174bdbe for related work/alternatives.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-04-03T22:13:28Z",
    "updated_at": "2021-12-16T14:54:38Z",
    "closed_at": "2018-08-25T16:31:22Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "5a37efa74a2f8b3ed0a1962ab68a22230b1f40dc",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "JeremyRubin:netprocessing_enum_rebased",
      "ref": "netprocessing_enum_rebased",
      "sha": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53111803,
        "node_id": "MDEwOlJlcG9zaXRvcnk1MzExMTgwMw==",
        "name": "bitcoin",
        "full_name": "JeremyRubin/bitcoin",
        "owner": {
          "login": "JeremyRubin",
          "id": 886523,
          "node_id": "MDQ6VXNlcjg4NjUyMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JeremyRubin",
          "html_url": "https://github.com/JeremyRubin",
          "followers_url": "https://api.github.com/users/JeremyRubin/followers",
          "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
          "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
          "repos_url": "https://api.github.com/users/JeremyRubin/repos",
          "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/JeremyRubin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/JeremyRubin/bitcoin",
        "archive_url": "https://api.github.com/repos/JeremyRubin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/JeremyRubin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/JeremyRubin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/JeremyRubin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/JeremyRubin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/JeremyRubin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/JeremyRubin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/JeremyRubin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/JeremyRubin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/JeremyRubin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/JeremyRubin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/JeremyRubin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/JeremyRubin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/JeremyRubin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/JeremyRubin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/JeremyRubin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/JeremyRubin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/JeremyRubin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/JeremyRubin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/JeremyRubin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/JeremyRubin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/JeremyRubin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/JeremyRubin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/JeremyRubin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/JeremyRubin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/JeremyRubin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/JeremyRubin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/JeremyRubin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/JeremyRubin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:JeremyRubin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/JeremyRubin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/JeremyRubin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/JeremyRubin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/JeremyRubin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/JeremyRubin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/JeremyRubin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/JeremyRubin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/JeremyRubin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/JeremyRubin/bitcoin/hooks",
        "svn_url": "https://github.com/JeremyRubin/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 7,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 203232,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-01-04T19:39:36Z",
        "created_at": "2016-03-04T06:06:13Z",
        "updated_at": "2023-01-05T18:14:42Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "efae3663a772169f9ef5172d76f938e0bb02eca4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T22:16:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 261,
    "deletions": 102,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 7,
    "comments": 15
  },
  "events": [
    {
      "event": "commented",
      "id": 291291673,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI5MTY3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291291673",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:23:32Z",
      "updated_at": "2017-04-03T22:23:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't get the bitfield stuff here. Why?  It adds a lot of code with indirect effects, and means that we cannot use a perfect hash to set the enum value (e.g. stuck with a map of strings at best, though this code doesn't do that). ",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291291673",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "commented",
      "id": 291294719,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI5NDcxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291294719",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:39:25Z",
      "updated_at": "2017-04-03T22:39:25Z",
      "author_association": "MEMBER",
      "body": "@gmaxwell I agree. I asked @JeremyRubin to check my logic in https://github.com/theuni/bitcoin/commit/f1e4e281e3f1eb884f8010ac941c82752174bdbe, and after reviewing, he wanted to take a stab at a more direct mapping for the initial filter.\r\n\r\nThis is an interesting approach, but I think this is much less clear than f1e4e281e3f1eb884f8010ac941c82752174bdbe, and it tangles the rules up with the enum values.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291294719",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "mentioned",
      "id": 1027391215,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAyNzM5MTIxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027391215",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:39:25Z"
    },
    {
      "event": "subscribed",
      "id": 1027391216,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMjczOTEyMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027391216",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:39:25Z"
    },
    {
      "event": "mentioned",
      "id": 1027391217,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAyNzM5MTIxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027391217",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:39:25Z"
    },
    {
      "event": "subscribed",
      "id": 1027391218,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMjczOTEyMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027391218",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:39:25Z"
    },
    {
      "event": "commented",
      "id": 291295072,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI5NTA3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291295072",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:41:12Z",
      "updated_at": "2017-04-04T00:51:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's actually trivial to make this work very well with a perfect hash and\r\nthis implementation doesn't add any network dependency on the order. If you\r\nhave a perfect hash available I could demonstrate :)\r\n\r\nThe bitwise stuff is the set of current policies. It's much more explicit\r\nabout which operations are allowed in which contexts compared to a list of\r\nconditionals. There might be a better way to aggregate those rules\r\ntogether, but those are the rules. Blacklists would be shorter (I used one\r\nfor the bloom stuff, now that I think of it), but it's generally easier to\r\naudit what is permitted rather than what is not.\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291295072",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "mentioned",
      "id": 1027393174,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAyNzM5MzE3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027393174",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:41:13Z"
    },
    {
      "event": "subscribed",
      "id": 1027393175,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMjczOTMxNzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027393175",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T22:41:13Z"
    },
    {
      "event": "commented",
      "id": 291309935,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTMwOTkzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291309935",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T23:16:55Z",
      "updated_at": "2017-04-03T23:17:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If you have a perfect hash available \r\n\r\ngperf works in a pinch\r\n\r\ncat protocol.cpp | grep '^const char *' | cut -d'\"' -f2 | sort | gperf -lCcE\r\n\r\n> . It's much more explicit about which operations are allowed in which contexts compared to a list of conditionals.\r\n\r\n/Generally/ moving function preconditions far away from their code results in defects. When its something that applies basically universally (like the check for the version handshake finishing), then it can make sense... but I think having if (importing) return; at the top of a message handling function is a lot more maintainable than what is effectively an additional state machine.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291309935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "labeled",
      "id": 1027456973,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEwMjc0NTY5NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027456973",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-03T23:31:05Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 291374007,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTM3NDAwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291374007",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T02:12:05Z",
      "updated_at": "2017-04-04T02:12:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> cat protocol.cpp | grep '^const char *' | cut -d'\"' -f2 | sort | gperf -lCcE\r\n\r\nAs promised, perfect hashing patch in https://github.com/JeremyRubin/bitcoin/tree/perfect_hashing (a little bit less clean than it could be, because I didn't want to modify protocol.h, but you get the idea). \r\n\r\nIt's like 8 lines of code. At initialize you just fill up a translation table to map the perfect hashes. Note that I slightly tweaked the API of the gperf hash to return the hash key and max+1 on fail to make this design easier.\r\n\r\nWhat's nice about the translation table is it could be modified to store the function pointers to the handlers directly as well, skipping the jump table/switch.\r\n\r\n> /Generally/ moving function preconditions far away from their code results in defects. When its something that applies basically universally (like the check for the version handshake finishing), then it can make sense... but I think having if (importing) return; at the top of a message handling function is a lot more maintainable than what is effectively an additional state machine.\r\n\r\nI'm mixed on this one. I agree that having preconditions closer to the code can be good; but it's also good to have a non-exposed function which only takes sanitized inputs, and do the sanitizing elsewhere. I agree with the state machine comment, but that was the existing state of the code: there is currently an implicit state machine on what order messages were allowed to come in. This PR makes it more explicit; if you want to make it even more explicit (e.g., ProtocolStateMachine class I think that would be great :)). This at least makes it really easy to do whatever you want with the actual dispatch as it is state independent.\r\n\r\nI don't think it's more maintainable to have repeated preconditions throughout the code, because then it is easier to forget to check a precondition in a handler and you repeat precondition checking code, leading to more opportunity for error. It's a trade off.\r\n\r\nIt is possible to re-check these preconditions if critical, which would maybe be \"the best/worst\" of both worlds.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291374007",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "commented",
      "id": 291405594,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQwNTU5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291405594",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T06:27:52Z",
      "updated_at": "2017-04-04T06:40:58Z",
      "author_association": "MEMBER",
      "body": "A serious drawback of perfect hashing is that it makes it hard to add message types, especially in PRs or third-party patches. It reduces flexibility.\r\n\r\nUnless it can be clearly shown from performance results that matching a small string in e.g. a sorted table or run-time constructed hash is really a performance sink, and given the small number of small messages I would be really surprised (12 bytes isn't even two 64-bit words!), I'd prefer if adding a message type was just adding a line. \r\n\r\n> ProtocolStateMachine \r\n\r\nIf you go this way, I don't think there should be one protocol state machine. Different concerns (e.g. initial negotiation, handling pings, handling transactions, handling blocks, handling filters) could be separate state machines that handle groups of messages (this was @sipa's idea). Creating a separate handler class for every message type would be typical OOP overkill, but for separate concerns I think it'd make sense and would help untangle the current labyrinth.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291405594",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "mentioned",
      "id": 1027826673,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAyNzgyNjY3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027826673",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T06:40:58Z"
    },
    {
      "event": "subscribed",
      "id": 1027826674,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMjc4MjY2NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1027826674",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T06:40:58Z"
    },
    {
      "event": "commented",
      "id": 291413416,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQxMzQxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291413416",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T07:07:29Z",
      "updated_at": "2017-04-04T07:07:29Z",
      "author_association": "MEMBER",
      "body": "I think using a perfect hash is unnecessary overkill here.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291413416",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1029127253,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTAyOTEyNzI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1029127253",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T20:29:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1029180234,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTAyOTE4MDIzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1029180234",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T21:02:54Z"
    },
    {
      "event": "commented",
      "id": 291632820,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYzMjgyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291632820",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T21:09:50Z",
      "updated_at": "2017-04-04T21:09:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ultimately if we want to check preconditions, it can't hurt to check some general preconditions in ContextualProcessMessage which apply to either the ProcessMessage state machine (e.g., that only one version may be received) or affect more than one handler. Individual handlers that rely on global preconditions should also re-check these global preconditions to harden them against a failure in ContextualProcessMessage.\r\n\r\nI pushed up a better version. \r\n\r\nMore Modular:\r\n  - there is no external dependency on the value of message types in the enum\r\n  - Each handler is a separate function (this duplicates/replaces some of @jtimon's work)\r\n\r\nCleaner:\r\n  - The whitelists are now a std::array<bool, ...> rather than (previously) a uint64_t, so no masking just indexing\r\n  - Identifiers are renamed to be a bit more clear\r\n  - whitelists are now separated into global and connection specific\r\n  - diff is easier to read\r\n\r\nMore Extensible:\r\n  - The whitelists are now a std::array<bool, ...> rather than (previously) a uint64_t, so no refactoring needed to have more than 64 messages. Adding new whitelists is also easier/cleaner.\r\n  - The use of the function pointers/whitelist arrays makes future work easier, including having per-node handler tables/whitelists (e.g., if a client says it is SPV disable certain operations).\r\n\r\n\r\nold version exists at https://github.com/jeremyrubin/bitcoin/tree/netprocessing_enum_backup for reference.\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291632820",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "mentioned",
      "id": 1029191061,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAyOTE5MTA2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1029191061",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T21:09:50Z"
    },
    {
      "event": "subscribed",
      "id": 1029191063,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMjkxOTEwNjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1029191063",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-04T21:09:50Z"
    },
    {
      "event": "commented",
      "id": 291922420,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTkyMjQyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291922420",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-05T16:44:17Z",
      "updated_at": "2017-04-05T16:48:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "I only looked fast at the changes and read the rest of the comments, but this does way more than #9608 , even if #9608 would rebase on top of https://github.com/theuni/bitcoin/commit/f1e4e281e3f1eb884f8010ac941c82752174bdbe (which at a glance look like something good to do before #9608, but I haven't reviewed it deeply because I'm not that familiar with the network code).\r\n\r\n#9608 is very easy to review and trivial to rebase (or re-write) and personally I think it makes the network code easier to read for people like me (perhaps combined with https://github.com/theuni/bitcoin/commit/f1e4e281e3f1eb884f8010ac941c82752174bdbe even more, I haven't tried combining them). In contrast, it seems like this PR would make harder for me to read at a glance (or maybe not, or maybe it is still worth it, I honestly don't know). Although I've written #9608 (which as said is trivial to write IMO, just a little bit painful [could have been lesss painful if I still used eclipse http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2FgettingStarted%2Fqs-ExtractMethod.htm ]), I don't feel very capacitated to review this PR or even https://github.com/theuni/bitcoin/commit/f1e4e281e3f1eb884f8010ac941c82752174bdbe which looks much simpler.\r\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-291922420",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYjM4OWIwZTdlNTc1MzRhMmE0YjE4YTJmZWFkNzBjMjRkZDY5Y2Vk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "tree": {
        "sha": "7b9eaf3e957d8e4f3f59b94243434772ec257cf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b9eaf3e957d8e4f3f59b94243434772ec257cf5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba05971bf4e7b9647002aa39ceb384339995195e",
          "sha": "ba05971bf4e7b9647002aa39ceb384339995195e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ba05971bf4e7b9647002aa39ceb384339995195e"
        }
      ],
      "message": "Separate Contextual checks and handling in net_processing.cpp.",
      "committer": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-09-05T20:38:56Z"
      },
      "author": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-03-31T19:51:48Z"
      },
      "sha": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1235662036,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTIzNTY2MjAzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1235662036",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-05T20:39:32Z"
    },
    {
      "event": "commented",
      "id": 327332283,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMzMjI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327332283",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-05T23:34:27Z",
      "updated_at": "2017-09-05T23:34:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "rebased to 1b389b0",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-327332283",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "reviewed",
      "id": 60987891,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA5ODc4OTE=",
      "url": null,
      "actor": null,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Light utACK 1b389b0e7e57534a2a4b18a2fead70c24dd69ced. Light because I didn't spend as much time as I would like verifying changes in this PR don't change current behavior. Will spend more time when there are concept acks for the overall approach.\r\n\r\nI think this is a nice improvement. The logic and explanations in ContextProcessMessage make it easier to understand why various checks are being done. The centralized whitelists should make it easier to add new message types with correct checking in the future because you can see at a glance how all the existing message types behave. The separate message handling functions make code more navigable.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#pullrequestreview-60987891",
      "submitted_at": "2017-09-06T19:17:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
    },
    {
      "event": "commented",
      "id": 331574431,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTU3NDQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331574431",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-22T22:25:05Z",
      "updated_at": "2017-09-22T22:25:05Z",
      "author_association": "MEMBER",
      "body": "I've thought about this a good bit lately, sorry for the delayed response.\r\n\r\nAfter rewriting this about a dozen different ways now, I'm now convinced that the approach in #9608 is the way to go.\r\n\r\nA dispatcher with registered functions and a state checker (like you've done here, and like I attempted as well) seems like the obviously correct approach, but once implemented, it's far less straightforward than the simplistic #9608.\r\n\r\nWe can avoid some duplication and keep some of the whitelist functionality here with a few helper functions like CanProcessWhileImporting(command).\r\n\r\nA dumb if/then/else parser seems icky, but I think it's the least likely to cause us issues in the future :(",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-331574431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "commented",
      "id": 331587174,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTU4NzE3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331587174",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-23T00:16:17Z",
      "updated_at": "2017-09-23T00:16:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> A dumb if/then/else parser seems icky, but I think it's the least likely to cause us issues in the future :(\r\n\r\nCan you clarify the kinds of future issues you're worried about? I think something like #9608 is more likely to cause issues. I think verifying correctness of changes to the processing logic is more complicated under #9608. I'd love to understand what other future considerations you're making though.\r\n\r\n\r\n> A dispatcher with registered functions and a state checker (like you've done here, and like I attempted as well) seems like the obviously correct approach, but once implemented, it's far less straightforward than the simplistic #9608.\r\n\r\nI think that there may be a similarity bias. #9608 is more similar to the existing code, which makes it more straightforward. But my guess would be that #10145 is much easier to understand for anyone new to the project/seeing the code for the first time.\r\n\r\n\r\n<hr>\r\n\r\nPersonally, I think this design has the following benefits over the 'simpler' design:\r\n\r\n- Easier to 'prove correct' design/write exhaustive tests for\r\n- Extensible to per connection handler tables\r\n- Extensible to middlewares (e.g., a statistics middleware or maybe an encryption one)\r\n- Easier to add new message types & less chance of hitting an unforseen edge case\r\n- Lower latency dispatch\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-331587174",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "commented",
      "id": 332001769,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjAwMTc2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332001769",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-25T20:26:18Z",
      "updated_at": "2017-09-25T20:26:18Z",
      "author_association": "MEMBER",
      "body": "> Can you clarify the kinds of future issues you're worried about? I think something like #9608 is more likely to cause issues. I think verifying correctness of changes to the processing logic is more complicated under #9608. I'd love to understand what other future considerations you're making though.\r\n\r\nBecause of all of the pesky interactions with our own state, we can only go so far in laying out the rules up-front.\r\n\r\nFor example, someone could be forgiven for assuming (based on the whitelist here) that INVs are processed while importing/reindexing, though in reality, there's only a tiny wallet interaction.\r\n\r\nSimilarly, IsInitialBlockDownload() isn't handled by the dispatcher, leaving it up to individual messages to decide. And that's as it should be, because each message will have their own criteria for that.\r\n\r\nSo if the rules can't be completely enumerated, we're only spreading them out and adding more places to check (or miss). The current behavior (and that of #9608) is to only check for proper handshake behavior outside of individual message parsing. That basically boils down to:\r\n```c++\r\nif (!node->nVersion && strCommand != NetMsgType::VERSION) return;\r\nelse if (!node->fSuccessfullyConnected && strCommand != NetMsgType::VERACK) return;\r\nDispatch(strCommand);\r\n```\r\n\r\nI might be convinced that a slimmed-down version of this that only performed ^^ checks before dispatching would be reasonable.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-332001769",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "labeled",
      "id": 1665121932,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2NjUxMjE5MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1665121932",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-06T02:47:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 1809048835,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MDkwNDg4MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809048835",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "021dce935af25adc17ae04a721d5f74a2ea1ca76",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021dce935af25adc17ae04a721d5f74a2ea1ca76",
      "created_at": "2018-08-25T16:19:40Z"
    },
    {
      "event": "commented",
      "id": 415980891,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk4MDg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415980891",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T16:31:22Z",
      "updated_at": "2018-08-25T16:31:22Z",
      "author_association": "MEMBER",
      "body": "Closing for now. Let me know when you want to continue working on this",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-415980891",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "closed",
      "id": 1809053249,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTgwOTA1MzI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809053249",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T16:31:22Z"
    },
    {
      "event": "commented",
      "id": 421811184,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTgxMTE4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421811184",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-16T18:43:41Z",
      "updated_at": "2018-09-16T18:43:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke my read was that there was not consensus that this approach was welcome.\r\n\r\nIf it's worth refreshing, I'd be happy to.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#issuecomment-421811184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10145"
    },
    {
      "event": "mentioned",
      "id": 1848444306,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg0ODQ0NDMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1848444306",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-16T18:43:41Z"
    },
    {
      "event": "subscribed",
      "id": 1848444307,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NDg0NDQzMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1848444307",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-16T18:43:41Z"
    },
    {
      "event": "unlabeled",
      "id": 2741497700,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc0MTQ5NzcwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2741497700",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-24T16:51:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 2979412618,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5Nzk0MTI2MTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2979412618",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c2611736692281ebb9800dc39eeb518f71dd0b54",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c2611736692281ebb9800dc39eeb518f71dd0b54",
      "created_at": "2020-01-25T17:02:20Z"
    },
    {
      "event": "referenced",
      "id": 2995510697,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5OTU1MTA2OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2995510697",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "31066138c0f118e9df02bf62465bc3bf46204584",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/31066138c0f118e9df02bf62465bc3bf46204584",
      "created_at": "2020-01-31T01:27:51Z"
    },
    {
      "event": "referenced",
      "id": 3001542826,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwMDE1NDI4MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3001542826",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e5e3572e9d910b78b5d917f844dbccd174a69f2f",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/e5e3572e9d910b78b5d917f844dbccd174a69f2f",
      "created_at": "2020-02-03T10:08:25Z"
    },
    {
      "event": "referenced",
      "id": 3516013207,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MTYwMTMyMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3516013207",
      "actor": {
        "login": "FornaxA",
        "id": 25762277,
        "node_id": "MDQ6VXNlcjI1NzYyMjc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/25762277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FornaxA",
        "html_url": "https://github.com/FornaxA",
        "followers_url": "https://api.github.com/users/FornaxA/followers",
        "following_url": "https://api.github.com/users/FornaxA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FornaxA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FornaxA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FornaxA/subscriptions",
        "organizations_url": "https://api.github.com/users/FornaxA/orgs",
        "repos_url": "https://api.github.com/users/FornaxA/repos",
        "events_url": "https://api.github.com/users/FornaxA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FornaxA/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fa74145cee17e550e9db6b556647718830501d92",
      "commit_url": "https://api.github.com/repos/ioncoincore/ion/commits/fa74145cee17e550e9db6b556647718830501d92",
      "created_at": "2020-07-06T13:45:27Z"
    },
    {
      "event": "referenced",
      "id": 4517981743,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1MTc5ODE3NDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4517981743",
      "actor": {
        "login": "ckti",
        "id": 7046769,
        "node_id": "MDQ6VXNlcjcwNDY3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7046769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ckti",
        "html_url": "https://github.com/ckti",
        "followers_url": "https://api.github.com/users/ckti/followers",
        "following_url": "https://api.github.com/users/ckti/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ckti/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ckti/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ckti/subscriptions",
        "organizations_url": "https://api.github.com/users/ckti/orgs",
        "repos_url": "https://api.github.com/users/ckti/repos",
        "events_url": "https://api.github.com/users/ckti/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ckti/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "77002d09097d4aef0f724877064bedabdc63b962",
      "commit_url": "https://api.github.com/repos/ckti-ioncore-current/ion/commits/77002d09097d4aef0f724877064bedabdc63b962",
      "created_at": "2021-03-28T10:03:04Z"
    },
    {
      "event": "locked",
      "id": 5778918348,
      "node_id": "LOE_lADOABII584NDtoDzwAAAAFYc0vM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778918348",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:54:38Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137334628",
      "pull_request_review_id": 60987891,
      "id": 137334628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzMzNDYyOA==",
      "diff_hunk": "@@ -1172,31 +1172,13 @@ inline void static SendBlockTransactions(const CBlock& block, const BlockTransac\n     connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCKTXN, resp));\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n-{\n-    LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->GetId());\n-    if (gArgs.IsArgSet(\"-dropmessagestest\") && GetRand(gArgs.GetArg(\"-dropmessagestest\", 0)) == 0)\n-    {\n-        LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n-        return true;\n-    }\n-\n-\n-    if (!(pfrom->GetLocalServices() & NODE_BLOOM) &&\n-              (strCommand == NetMsgType::FILTERLOAD ||\n-               strCommand == NetMsgType::FILTERADD))\n-    {\n-        if (pfrom->nVersion >= NO_BLOOM_VERSION) {\n-            LOCK(cs_main);\n-            Misbehaving(pfrom->GetId(), 100);\n-            return false;\n-        } else {\n-            pfrom->fDisconnect = true;\n-            return false;\n-        }\n-    }\n+static bool ContextualProcessMessage(CNode* pfrom, const std::string&",
      "path": "src/net_processing.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe leave this as ProcessMessage instead of renaming to ContextualProcessMessage. \"Contextual\" doesn't seem that elucidating, and the PR could be a little smaller without this change.",
      "created_at": "2017-09-06T17:24:02Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137334628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137334628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1175,
      "original_line": 1175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137335652",
      "pull_request_review_id": 60987891,
      "id": 137335652,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzMzNTY1Mg==",
      "diff_hunk": "@@ -1172,31 +1172,13 @@ inline void static SendBlockTransactions(const CBlock& block, const BlockTransac\n     connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCKTXN, resp));\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n-{\n-    LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->GetId());\n-    if (gArgs.IsArgSet(\"-dropmessagestest\") && GetRand(gArgs.GetArg(\"-dropmessagestest\", 0)) == 0)\n-    {\n-        LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n-        return true;\n-    }\n-\n-\n-    if (!(pfrom->GetLocalServices() & NODE_BLOOM) &&\n-              (strCommand == NetMsgType::FILTERLOAD ||\n-               strCommand == NetMsgType::FILTERADD))\n-    {\n-        if (pfrom->nVersion >= NO_BLOOM_VERSION) {\n-            LOCK(cs_main);\n-            Misbehaving(pfrom->GetId(), 100);\n-            return false;\n-        } else {\n-            pfrom->fDisconnect = true;\n-            return false;\n-        }\n-    }\n+static bool ContextualProcessMessage(CNode* pfrom, const std::string&\n+        strCommand, CDataStream& vRecv, int64_t nTimeReceived, const\n+        CChainParams& chainparams, CConnman& connman, const std::atomic<bool>&\n+        interruptMsgProc);\n+namespace ProcessMessageHandler {",
      "path": "src/net_processing.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style guide probably changed since this PR was written, but currently says to use a snake_case name for a namespace, put the brace on the next line, and not indent the contents. Could maybe name this \"handlers\" instead of \"handler\" too since it is a collection of handlers.",
      "created_at": "2017-09-06T17:28:06Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137335652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137335652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1179,
      "original_line": 1179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137340640",
      "pull_request_review_id": 60987891,
      "id": 137340640,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM0MDY0MA==",
      "diff_hunk": "@@ -1218,19 +1200,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 LogPrint(BCLog::NET, \"Unparseable reject message received\\n\");\n             }\n         }\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::VERSION)\n+static bool ProcessVersionMessage(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)",
      "path": "src/net_processing.cpp",
      "position": 46,
      "original_position": 46,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You might be able to cut down on the size of the PR by making these handlers classes instead of functions. E.g. you wouldn't need to repeat these pfrom, vRecv, nTimeReceived declarations because they could be members initialized by an inherited constructor. strCommand variables could be static members, so PushMessage calls wouldn't need to change. And you could replace handler_registry table with initialization from a flat list of handler classes.\r\n\r\nI could imagine other reviewers liking functions more than classes though, and the differences are pretty superficial, so should just consider this a tentative suggestion.",
      "created_at": "2017-09-06T17:47:11Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137340640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137340640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1206,
      "original_line": 1206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137343501",
      "pull_request_review_id": 60987891,
      "id": 137343501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM0MzUwMQ==",
      "diff_hunk": "@@ -2612,20 +2581,210 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             LogPrint(BCLog::NET, \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->GetId());\n         }\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::NOTFOUND) {\n+    static bool ProcessNotFoundMessage(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+    {\n         // We do not care about the NOTFOUND message, but logging an Unknown Command\n         // message would be undesirable as we transmit it ourselves.\n+        return true;\n     }\n \n-    else {\n-        // Ignore unknown commands for extensibility\n-        LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n+    // Message Indexes do not have to be in order\n+    // For whitelist size correctness INDEX_COUNT must come last\n+    enum whitelist_index : uint64_t {\n+        // Message Tags\n+        VERSION,\n+        VERACK,\n+        ADDR,\n+        INV,\n+        GETDATA,\n+        MERKLEBLOCK,\n+        GETBLOCKS,\n+        GETHEADERS,\n+        TX,\n+        HEADERS,\n+        BLOCK,\n+        GETADDR,\n+        MEMPOOL,\n+        PING,\n+        PONG,\n+        NOTFOUND,\n+        FILTERLOAD,\n+        FILTERADD,\n+        FILTERCLEAR,\n+        REJECT,\n+        SENDHEADERS,\n+        FEEFILTER,\n+        SENDCMPCT,\n+        CMPCTBLOCK,\n+        GETBLOCKTXN,\n+        BLOCKTXN,\n+        // Unknown Index\n+        MSG_TYPE_UNKNOWN,\n+        // Size\n+        INDEX_COUNT,",
      "path": "src/net_processing.cpp",
      "position": 460,
      "original_position": 460,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a comment here that this must be last.",
      "created_at": "2017-09-06T17:57:43Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137343501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137343501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2627,
      "original_line": 2627,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137345472",
      "pull_request_review_id": 60987891,
      "id": 137345472,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM0NTQ3Mg==",
      "diff_hunk": "@@ -2612,20 +2581,210 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             LogPrint(BCLog::NET, \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->GetId());\n         }\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::NOTFOUND) {\n+    static bool ProcessNotFoundMessage(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+    {\n         // We do not care about the NOTFOUND message, but logging an Unknown Command\n         // message would be undesirable as we transmit it ourselves.\n+        return true;\n     }\n \n-    else {\n-        // Ignore unknown commands for extensibility\n-        LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n+    // Message Indexes do not have to be in order\n+    // For whitelist size correctness INDEX_COUNT must come last\n+    enum whitelist_index : uint64_t {\n+        // Message Tags\n+        VERSION,\n+        VERACK,\n+        ADDR,\n+        INV,\n+        GETDATA,\n+        MERKLEBLOCK,\n+        GETBLOCKS,\n+        GETHEADERS,\n+        TX,\n+        HEADERS,\n+        BLOCK,\n+        GETADDR,\n+        MEMPOOL,\n+        PING,\n+        PONG,\n+        NOTFOUND,\n+        FILTERLOAD,\n+        FILTERADD,\n+        FILTERCLEAR,\n+        REJECT,\n+        SENDHEADERS,\n+        FEEFILTER,\n+        SENDCMPCT,\n+        CMPCTBLOCK,\n+        GETBLOCKTXN,\n+        BLOCKTXN,\n+        // Unknown Index\n+        MSG_TYPE_UNKNOWN,\n+        // Size\n+        INDEX_COUNT,\n+    };\n+\n+    typedef std::function<bool(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)> handler_t;\n+\n+\n+    static const std::map<std::string, std::pair<handler_t, whitelist_index>> handler_registry =\n+    { { NetMsgType::VERSION,     { ProcessVersionMessage,      VERSION     } },\n+    {   NetMsgType::VERACK,      { ProcessVerackMessage,       VERACK      } },\n+    {   NetMsgType::ADDR,        { ProcessAddrMessage,         ADDR        } },\n+    {   NetMsgType::INV,         { ProcessInvMessage,          INV         } },\n+    {   NetMsgType::GETDATA,     { ProcessGetDataMessage,      GETDATA     } },\n+    {   NetMsgType::MERKLEBLOCK, { nullptr,                    MERKLEBLOCK } },\n+    {   NetMsgType::GETBLOCKS,   { ProcessGetBlocksMessage,    GETBLOCKS   } },\n+    {   NetMsgType::GETHEADERS,  { ProcessGetHeadersMessage,   GETHEADERS  } },\n+    {   NetMsgType::TX,          { ProcessTxMessage,           TX          } },\n+    {   NetMsgType::HEADERS,     { ProcessHeadersMessage,      HEADERS     } },\n+    {   NetMsgType::BLOCK,       { ProcessBlockMessage,        BLOCK       } },\n+    {   NetMsgType::GETADDR,     { ProcessGetAddrMessage,      GETADDR     } },\n+    {   NetMsgType::MEMPOOL,     { ProcessMempoolMessage,      MEMPOOL     } },\n+    {   NetMsgType::PING,        { ProcessPingMessage,         PING        } },\n+    {   NetMsgType::PONG,        { ProcessPongMessage,         PONG        } },\n+    {   NetMsgType::NOTFOUND,    { ProcessNotFoundMessage,     NOTFOUND    } },\n+    {   NetMsgType::FILTERLOAD,  { ProcessFilterLoadMessage,   FILTERLOAD  } },\n+    {   NetMsgType::FILTERADD,   { ProcessFilterAddMessage,    FILTERADD   } },\n+    {   NetMsgType::FILTERCLEAR, { ProcessFilterClearMessage,  FILTERCLEAR } },\n+    {   NetMsgType::REJECT,      { ProcessRejectMessage,       REJECT      } },\n+    {   NetMsgType::SENDHEADERS, { ProcessSendHeadersMessage,  SENDHEADERS } },\n+    {   NetMsgType::FEEFILTER,   { ProcessFeeFilterMessage,    FEEFILTER   } },\n+    {   NetMsgType::SENDCMPCT,   { ProcessSendCompactMessage,  SENDCMPCT   } },\n+    {   NetMsgType::CMPCTBLOCK,  { ProcessCompactBlockMessage, CMPCTBLOCK  } },\n+    {   NetMsgType::GETBLOCKTXN, { ProcessGetBlockTxnMessage,  GETBLOCKTXN } },\n+    {   NetMsgType::BLOCKTXN,    { ProcessBlockTxnMessage,     BLOCKTXN    } } };\n+\n+    static const std::pair<handler_t, whitelist_index> failed_lookup {nullptr, MSG_TYPE_UNKNOWN};\n+    const std::pair<handler_t, whitelist_index>& lookup(const std::string& strCommand) {\n+        auto it = handler_registry.find(strCommand);\n+        if (it == handler_registry.end())\n+            return failed_lookup;\n+        return it->second;\n     }\n \n \n \n+    //! Message Processing Whitelists (default init 0)\n+    //! Not const for initialization\n+    static std::array<bool, INDEX_COUNT> KNOWN_MESSAGES {};",
      "path": "src/net_processing.cpp",
      "position": 506,
      "original_position": 506,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No good reason not to make these constant, I think. You can assign them values at initialization by returning from a function or lambda.",
      "created_at": "2017-09-06T18:05:10Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137345472",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137345472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2673,
      "original_line": 2673,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137354361",
      "pull_request_review_id": 60987891,
      "id": 137354361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM1NDM2MQ==",
      "diff_hunk": "@@ -2612,20 +2581,210 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             LogPrint(BCLog::NET, \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->GetId());\n         }\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::NOTFOUND) {\n+    static bool ProcessNotFoundMessage(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+    {\n         // We do not care about the NOTFOUND message, but logging an Unknown Command\n         // message would be undesirable as we transmit it ourselves.\n+        return true;\n     }\n \n-    else {\n-        // Ignore unknown commands for extensibility\n-        LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n+    // Message Indexes do not have to be in order\n+    // For whitelist size correctness INDEX_COUNT must come last\n+    enum whitelist_index : uint64_t {\n+        // Message Tags\n+        VERSION,\n+        VERACK,\n+        ADDR,\n+        INV,\n+        GETDATA,\n+        MERKLEBLOCK,\n+        GETBLOCKS,\n+        GETHEADERS,\n+        TX,\n+        HEADERS,\n+        BLOCK,\n+        GETADDR,\n+        MEMPOOL,\n+        PING,\n+        PONG,\n+        NOTFOUND,\n+        FILTERLOAD,\n+        FILTERADD,\n+        FILTERCLEAR,\n+        REJECT,\n+        SENDHEADERS,\n+        FEEFILTER,\n+        SENDCMPCT,\n+        CMPCTBLOCK,\n+        GETBLOCKTXN,\n+        BLOCKTXN,\n+        // Unknown Index\n+        MSG_TYPE_UNKNOWN,\n+        // Size\n+        INDEX_COUNT,\n+    };\n+\n+    typedef std::function<bool(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)> handler_t;\n+\n+\n+    static const std::map<std::string, std::pair<handler_t, whitelist_index>> handler_registry =\n+    { { NetMsgType::VERSION,     { ProcessVersionMessage,      VERSION     } },\n+    {   NetMsgType::VERACK,      { ProcessVerackMessage,       VERACK      } },\n+    {   NetMsgType::ADDR,        { ProcessAddrMessage,         ADDR        } },\n+    {   NetMsgType::INV,         { ProcessInvMessage,          INV         } },\n+    {   NetMsgType::GETDATA,     { ProcessGetDataMessage,      GETDATA     } },\n+    {   NetMsgType::MERKLEBLOCK, { nullptr,                    MERKLEBLOCK } },\n+    {   NetMsgType::GETBLOCKS,   { ProcessGetBlocksMessage,    GETBLOCKS   } },\n+    {   NetMsgType::GETHEADERS,  { ProcessGetHeadersMessage,   GETHEADERS  } },\n+    {   NetMsgType::TX,          { ProcessTxMessage,           TX          } },\n+    {   NetMsgType::HEADERS,     { ProcessHeadersMessage,      HEADERS     } },\n+    {   NetMsgType::BLOCK,       { ProcessBlockMessage,        BLOCK       } },\n+    {   NetMsgType::GETADDR,     { ProcessGetAddrMessage,      GETADDR     } },\n+    {   NetMsgType::MEMPOOL,     { ProcessMempoolMessage,      MEMPOOL     } },\n+    {   NetMsgType::PING,        { ProcessPingMessage,         PING        } },\n+    {   NetMsgType::PONG,        { ProcessPongMessage,         PONG        } },\n+    {   NetMsgType::NOTFOUND,    { ProcessNotFoundMessage,     NOTFOUND    } },\n+    {   NetMsgType::FILTERLOAD,  { ProcessFilterLoadMessage,   FILTERLOAD  } },\n+    {   NetMsgType::FILTERADD,   { ProcessFilterAddMessage,    FILTERADD   } },\n+    {   NetMsgType::FILTERCLEAR, { ProcessFilterClearMessage,  FILTERCLEAR } },\n+    {   NetMsgType::REJECT,      { ProcessRejectMessage,       REJECT      } },\n+    {   NetMsgType::SENDHEADERS, { ProcessSendHeadersMessage,  SENDHEADERS } },\n+    {   NetMsgType::FEEFILTER,   { ProcessFeeFilterMessage,    FEEFILTER   } },\n+    {   NetMsgType::SENDCMPCT,   { ProcessSendCompactMessage,  SENDCMPCT   } },\n+    {   NetMsgType::CMPCTBLOCK,  { ProcessCompactBlockMessage, CMPCTBLOCK  } },\n+    {   NetMsgType::GETBLOCKTXN, { ProcessGetBlockTxnMessage,  GETBLOCKTXN } },\n+    {   NetMsgType::BLOCKTXN,    { ProcessBlockTxnMessage,     BLOCKTXN    } } };\n+\n+    static const std::pair<handler_t, whitelist_index> failed_lookup {nullptr, MSG_TYPE_UNKNOWN};\n+    const std::pair<handler_t, whitelist_index>& lookup(const std::string& strCommand) {\n+        auto it = handler_registry.find(strCommand);\n+        if (it == handler_registry.end())\n+            return failed_lookup;\n+        return it->second;\n     }\n \n \n \n+    //! Message Processing Whitelists (default init 0)\n+    //! Not const for initialization\n+    static std::array<bool, INDEX_COUNT> KNOWN_MESSAGES {};\n+    static std::array<bool, INDEX_COUNT> WHILE_IMPORT {};\n+    static std::array<bool, INDEX_COUNT> BEFORE_VERACK {};\n+    static std::array<bool, INDEX_COUNT> BEFORE_VERSION {};\n+    static std::array<bool, INDEX_COUNT> AFTER_VERACK {};\n+    static std::array<bool, INDEX_COUNT> NO_REQUIRE_BLOOM {};\n+\n+    bool init_whitelists() {\n+        for (auto x : { VERSION, VERACK, ADDR, INV, GETDATA, MERKLEBLOCK,",
      "path": "src/net_processing.cpp",
      "position": 514,
      "original_position": 514,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you initialize this from the registry table instead of listing all the messages again?",
      "created_at": "2017-09-06T18:36:46Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137354361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137354361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2681,
      "original_line": 2681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137355038",
      "pull_request_review_id": 60987891,
      "id": 137355038,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM1NTAzOA==",
      "diff_hunk": "@@ -2612,20 +2581,210 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             LogPrint(BCLog::NET, \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->GetId());\n         }\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::NOTFOUND) {\n+    static bool ProcessNotFoundMessage(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+    {\n         // We do not care about the NOTFOUND message, but logging an Unknown Command\n         // message would be undesirable as we transmit it ourselves.\n+        return true;\n     }\n \n-    else {\n-        // Ignore unknown commands for extensibility\n-        LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n+    // Message Indexes do not have to be in order\n+    // For whitelist size correctness INDEX_COUNT must come last\n+    enum whitelist_index : uint64_t {\n+        // Message Tags\n+        VERSION,\n+        VERACK,\n+        ADDR,\n+        INV,\n+        GETDATA,\n+        MERKLEBLOCK,\n+        GETBLOCKS,\n+        GETHEADERS,\n+        TX,\n+        HEADERS,\n+        BLOCK,\n+        GETADDR,\n+        MEMPOOL,\n+        PING,\n+        PONG,\n+        NOTFOUND,\n+        FILTERLOAD,\n+        FILTERADD,\n+        FILTERCLEAR,\n+        REJECT,\n+        SENDHEADERS,\n+        FEEFILTER,\n+        SENDCMPCT,\n+        CMPCTBLOCK,\n+        GETBLOCKTXN,\n+        BLOCKTXN,\n+        // Unknown Index\n+        MSG_TYPE_UNKNOWN,\n+        // Size\n+        INDEX_COUNT,\n+    };\n+\n+    typedef std::function<bool(CNode* pfrom, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)> handler_t;\n+\n+\n+    static const std::map<std::string, std::pair<handler_t, whitelist_index>> handler_registry =\n+    { { NetMsgType::VERSION,     { ProcessVersionMessage,      VERSION     } },\n+    {   NetMsgType::VERACK,      { ProcessVerackMessage,       VERACK      } },\n+    {   NetMsgType::ADDR,        { ProcessAddrMessage,         ADDR        } },\n+    {   NetMsgType::INV,         { ProcessInvMessage,          INV         } },\n+    {   NetMsgType::GETDATA,     { ProcessGetDataMessage,      GETDATA     } },\n+    {   NetMsgType::MERKLEBLOCK, { nullptr,                    MERKLEBLOCK } },\n+    {   NetMsgType::GETBLOCKS,   { ProcessGetBlocksMessage,    GETBLOCKS   } },\n+    {   NetMsgType::GETHEADERS,  { ProcessGetHeadersMessage,   GETHEADERS  } },\n+    {   NetMsgType::TX,          { ProcessTxMessage,           TX          } },\n+    {   NetMsgType::HEADERS,     { ProcessHeadersMessage,      HEADERS     } },\n+    {   NetMsgType::BLOCK,       { ProcessBlockMessage,        BLOCK       } },\n+    {   NetMsgType::GETADDR,     { ProcessGetAddrMessage,      GETADDR     } },\n+    {   NetMsgType::MEMPOOL,     { ProcessMempoolMessage,      MEMPOOL     } },\n+    {   NetMsgType::PING,        { ProcessPingMessage,         PING        } },\n+    {   NetMsgType::PONG,        { ProcessPongMessage,         PONG        } },\n+    {   NetMsgType::NOTFOUND,    { ProcessNotFoundMessage,     NOTFOUND    } },\n+    {   NetMsgType::FILTERLOAD,  { ProcessFilterLoadMessage,   FILTERLOAD  } },\n+    {   NetMsgType::FILTERADD,   { ProcessFilterAddMessage,    FILTERADD   } },\n+    {   NetMsgType::FILTERCLEAR, { ProcessFilterClearMessage,  FILTERCLEAR } },\n+    {   NetMsgType::REJECT,      { ProcessRejectMessage,       REJECT      } },\n+    {   NetMsgType::SENDHEADERS, { ProcessSendHeadersMessage,  SENDHEADERS } },\n+    {   NetMsgType::FEEFILTER,   { ProcessFeeFilterMessage,    FEEFILTER   } },\n+    {   NetMsgType::SENDCMPCT,   { ProcessSendCompactMessage,  SENDCMPCT   } },\n+    {   NetMsgType::CMPCTBLOCK,  { ProcessCompactBlockMessage, CMPCTBLOCK  } },\n+    {   NetMsgType::GETBLOCKTXN, { ProcessGetBlockTxnMessage,  GETBLOCKTXN } },\n+    {   NetMsgType::BLOCKTXN,    { ProcessBlockTxnMessage,     BLOCKTXN    } } };\n+\n+    static const std::pair<handler_t, whitelist_index> failed_lookup {nullptr, MSG_TYPE_UNKNOWN};\n+    const std::pair<handler_t, whitelist_index>& lookup(const std::string& strCommand) {\n+        auto it = handler_registry.find(strCommand);\n+        if (it == handler_registry.end())\n+            return failed_lookup;\n+        return it->second;\n     }\n \n \n \n+    //! Message Processing Whitelists (default init 0)\n+    //! Not const for initialization\n+    static std::array<bool, INDEX_COUNT> KNOWN_MESSAGES {};",
      "path": "src/net_processing.cpp",
      "position": 506,
      "original_position": 506,
      "commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "original_commit_id": "1b389b0e7e57534a2a4b18a2fead70c24dd69ced",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be good to have comments describing what each whitelist does, and maybe the types of messages make sense to have in the whitelist. For example, it's not immediately obvious which messages should go in KNOWN_MESSAGES (all the message types, or only the messages types with handlers).\r\n\r\nAlternately could add an overall comment here pointing to the ContextualProcessMessage function for specifics on what the whitelists do.",
      "created_at": "2017-09-06T18:39:26Z",
      "updated_at": "2017-09-06T19:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10145#discussion_r137355038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137355038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10145"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2673,
      "original_line": 2673,
      "side": "RIGHT"
    }
  ]
}