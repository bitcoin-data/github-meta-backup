{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232",
    "id": 837726353,
    "node_id": "PR_kwDOABII584x7rCR",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24232",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24232.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24232.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ac8c9d809214bd8dcdacdb66127cabf49788e097",
    "number": 24232,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "assumeutxo: add init and completion logic",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11) (parent PR: #15606) \r\n\r\n---\r\n\r\nThis changeset adds logic for detecting and activating snapshot chainstates on start, and for completing the snapshot validation process once the background chainstate reaches the base block of the assumed-valid chain. It also handles removing the snapshot chainstate data on-disk in the event that the snapshot fails to validate.\r\n\r\nAs detailed in [assumeutxo.md](https://github.com/bitcoin/bitcoin/blob/master/doc/assumeutxo.md#background-chainstate-hits-snapshot-base-block):\r\n\r\n> Once the tip of the background chainstate hits the base block of the snapshot chainstate, we stop use of the background chainstate by setting m_stop_use, in CompleteSnapshotValidation(), which is checked in ActivateBestChain()). We hash the background chainstate's UTXO set contents and ensure it matches the compiled value in CMainParams::m_assumeutxo_data.\r\n> \r\n> The background chainstate data lingers on disk until shutdown, when in ChainstateManager::Reset(), the background chainstate is cleaned up with ValidatedSnapshotShutdownCleanup(), which renames the chainstate_[hash] datadir as chainstate.\r\n>\r\n> **Failure consideration**: if bitcoind unexpectedly halts after m_stop_use is set on the background chainstate but before CompleteSnapshotValidation() can finish, the need to complete snapshot validation will be detected on subsequent init by ChainstateManager::CheckForUncleanShutdown().\r\n\r\n---\r\n\r\n~~Most of this change is unittested, though some logic (anything assuming on-disk leveldb data) can't be tested without some rework of unittest setup, given in-memory leveldb instances are used. I can look into how difficult this would be.~~\r\n\r\nThis change adds the ability to unittest using on-disk leveldb coins dbs.\r\n\r\n#### Possible follow-ups\r\n\r\n- [ ] Unify `CDBWrapper::{m_path,m_is_memory}`: https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855354180",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "created_at": "2022-02-01T22:13:23Z",
    "updated_at": "2022-08-01T15:12:14Z",
    "closed_at": "2022-07-21T13:41:15Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "a6e7848ced39ebf23ac2e8a63e7151f7c6c53a38",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "jamesob:2022-02-au-init-and-completion",
      "ref": "2022-02-au-init-and-completion",
      "sha": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252891,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T19:20:56Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2023-05-05T06:31:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5c82ca3365f6451d342c94cedc3f9b015598e9c2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1278,
    "deletions": 262,
    "changed_files": 19,
    "commits": 18,
    "review_comments": 242,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 5992027079,
      "node_id": "LE_lADOABII585C1PykzwAAAAFlJxPH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5992027079",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T00:11:02Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "labeled",
      "id": 5992027083,
      "node_id": "LE_lADOABII585C1PykzwAAAAFlJxPL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5992027083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T00:11:02Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 1027550061,
      "node_id": "IC_kwDOABII5849Pytt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1027550061",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T03:54:04Z",
      "updated_at": "2022-07-21T11:31:40Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25598](https://github.com/bitcoin/bitcoin/pull/25598) (doc: assumeutxo: format tables to be aligned in plain-text by theStack)\n* [#25564](https://github.com/bitcoin/bitcoin/pull/25564) (Move DEFAULT_MAX_ORPHAN_TRANSACTIONS to node/txorphanage.h by MarcoFalke)\n* [#25527](https://github.com/bitcoin/bitcoin/pull/25527) ([kernel 3c/n] Decouple validation cache initialization from `ArgsManager` by dongcarl)\n* [#25077](https://github.com/bitcoin/bitcoin/pull/25077) (Fix chain tip data race and corrupt rest response by MarcoFalke)\n* [#25038](https://github.com/bitcoin/bitcoin/pull/25038) (policy: nVersion=3 and Package RBF by glozow)\n* [#22663](https://github.com/bitcoin/bitcoin/pull/22663) (dbwrapper: properly destroy objects in case CDBWrapper ctor throws by Crypt-iQ)\n* [#19888](https://github.com/bitcoin/bitcoin/pull/19888) (rpc, test: Improve getblockstats for unspendables by fjahr)\n* [#17786](https://github.com/bitcoin/bitcoin/pull/17786) (refactor: Nuke policy/fees->mempool circular dependencies by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1027550061",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "reviewed",
      "id": 870119022,
      "node_id": "PRR_kwDOABII584z3PZu",
      "url": null,
      "actor": null,
      "commit_id": "08f4bf18b165464dea801b81cf857a9fd398e8e7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks like there are test failures",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-870119022",
      "submitted_at": "2022-02-02T06:12:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5996504448,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFla2WA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5996504448",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T15:11:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5996509520,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFla3lQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5996509520",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T15:12:08Z"
    },
    {
      "event": "commented",
      "id": 1028043521,
      "node_id": "IC_kwDOABII5849RrMB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1028043521",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T15:15:14Z",
      "updated_at": "2022-02-02T15:15:14Z",
      "author_association": "MEMBER",
      "body": "Thanks for the quick feedback Mco. \r\n\r\nThe test failure was actually due to removing a commit that I'd forgotten the use for. Basically, because we're now calling MaybeRebalanceCaches in LoadChainstate, that prompts a FlushStateToDisk call before the block index is loaded, which trips some UB. \r\n\r\nThe bounds check in https://github.com/bitcoin/bitcoin/pull/24232/commits/d70b8de51e54061e9ef045366f4a7651678dd82a fixes this.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1028043521",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5996635304,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFlbWSo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5996635304",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T15:29:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5998274575,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFlhmgP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5998274575",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T19:54:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5998349654,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFlh41W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5998349654",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T20:08:25Z"
    },
    {
      "event": "reviewed",
      "id": 871973254,
      "node_id": "PRR_kwDOABII584z-UGG",
      "url": null,
      "actor": null,
      "commit_id": "7e2b212f9448a9b57df173a161686e33ac4c7d4e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-871973254",
      "submitted_at": "2022-02-03T15:04:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 871973518,
      "node_id": "PRR_kwDOABII584z-UKO",
      "url": null,
      "actor": null,
      "commit_id": "7e2b212f9448a9b57df173a161686e33ac4c7d4e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-871973518",
      "submitted_at": "2022-02-03T19:03:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6023286288,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFnBA4Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6023286288",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-08T00:59:27Z"
    },
    {
      "event": "commented",
      "id": 1032104129,
      "node_id": "IC_kwDOABII5849hKjB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1032104129",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-08T01:01:58Z",
      "updated_at": "2022-02-08T01:01:58Z",
      "author_association": "MEMBER",
      "body": "Okay, I've pushed a revision that addresses my previous comments and more comprehensively (that is to say: at all) tests the major failure modes. I had to parameterize the shutdown behavior during snapshot completion to get this to work within the unittests.\r\n\r\nPending CI pass, this should be ready for continued review. ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1032104129",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6023898697,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFnDWZJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6023898697",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-08T04:18:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6029844757,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFnaCEV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6029844757",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-08T21:04:01Z"
    },
    {
      "event": "commented",
      "id": 1033170229,
      "node_id": "IC_kwDOABII5849lO01",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1033170229",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-08T23:36:36Z",
      "updated_at": "2022-02-08T23:36:36Z",
      "author_association": "MEMBER",
      "body": "Alright, CI is finally passing. I had to add https://github.com/bitcoin/bitcoin/pull/24232/commits/5d5dfaa7a647307f58acdd1909fc8f34c1787f82 because an existing unittest that advanced an IBD chain past the snapshot it generated started failing. This isn't something that should happen in practice, but was done to test an unrelated feature (`UpdateTip` behavior on a background chainstate).\r\n\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1033170229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "added_to_project",
      "id": 6033666711,
      "node_id": "ATPE_lADOABII585C1PykzwAAAAFnonKX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6033666711",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-09T11:36:20Z",
      "project_card": {
        "id": 77433395,
        "url": "https://api.github.com/projects/columns/cards/77433395",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "labeled",
      "id": 6088103881,
      "node_id": "LE_lADOABII585C1PykzwAAAAFq4RfJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6088103881",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T07:38:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 901614980,
      "node_id": "PRR_kwDOABII5841vY2E",
      "url": null,
      "actor": null,
      "commit_id": "9f89221913d8230b62cc3959fbb5ab4d220d91f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-901614980",
      "submitted_at": "2022-03-07T12:20:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6196456553,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAFxVmxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6196456553",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T16:52:25Z"
    },
    {
      "event": "commented",
      "id": 1060910677,
      "node_id": "IC_kwDOABII584_PDZV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1060910677",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T17:00:22Z",
      "updated_at": "2022-03-07T17:00:22Z",
      "author_association": "MEMBER",
      "body": "Alright, have rebased; basically I just took the old `ChainstateManager::Reset()` method and renamed it to `cleanup()`, and applied @jonatack -style changes (lock assertion/annotation vs. LOCK). ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1060910677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "mentioned",
      "id": 6196512361,
      "node_id": "MEE_lADOABII585C1PykzwAAAAFxV0Zp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6196512361",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T17:00:23Z"
    },
    {
      "event": "subscribed",
      "id": 6196512367,
      "node_id": "SE_lADOABII585C1PykzwAAAAFxV0Zv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6196512367",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T17:00:23Z"
    },
    {
      "event": "unlabeled",
      "id": 6197250458,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAFxYoma",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6197250458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T18:57:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1064393819,
      "node_id": "IC_kwDOABII584_cVxb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064393819",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-10T19:02:36Z",
      "updated_at": "2022-03-10T19:02:36Z",
      "author_association": "MEMBER",
      "body": "Planning to review soon.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1064393819",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "reviewed",
      "id": 918071823,
      "node_id": "PRR_kwDOABII5842uKoP",
      "url": null,
      "actor": null,
      "commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Started review (will update list below with progress).\r\n- [X] becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1 init: add utxo snapshot detection (1/11)\r\n- [X] fe09582ec34ff4d19bb2aa490ffd6ccca95e8480 validation: tear down snapshot datadirs upon validation failure (2/11)\r\n- [X] d8f32839cfbc8cbfe194d190bdc19fb3c4d6e32a add ChainstateManager.getSnapshot{Height,BaseBlock}() (3/11)\r\n- [X] b28ed6628850f2f4eceb33c059c0d9997972bbc0 db: add StoragePath() to CDBWrapper and CCoinsViewDB (4/11)\r\n- [X] 1aeca9ae4d9938a9ae5a06dbe16d8b1cd40b9960 blockmanager: avoid undefined behavior during FlushBlockFile (5/11)\r\n- [X] c703836160f3eca8073c22a1531bb98ad9666999 validation: add CChainState::m_stop_use and ChainMan::isUsable (6/11)\r\n- [X] bf36616fc62f668c45d30449fb5b7c2c84a73a99 add CChainState::HasCoinsViews() (7/11)\r\n- [x] 328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846 validation: add ChainMan logic for completing UTXO snapshot validation (8/11)\r\n- [x] b1c55101c2883bf03777c320cec3b05b58454a53 move-only: test: make snapshot chainstate setup reusable (9/11)\r\n- [x] 9916bb825f6ef69f6c906dd4154309df07aa9d03 test: add reset_chainstate parameter for snapshot unittests (10/11)\r\n- [ ] 51d0dd34ecfb42d80707ec6cf788f0e63e30439f test: add testcases for snapshot completion (11/11)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-918071823",
      "submitted_at": "2022-03-23T03:22:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 920636521,
      "node_id": "PRR_kwDOABII584238xp",
      "url": null,
      "actor": null,
      "commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Now reviewed the full PR, but will wait for answers to some questions before adding ACK.\r\n\r\nI do think this PR could be merged in its current form, but some things, particularly detecting chainstate directories on startup, and renaming snapshot chainstate directory when its validated could be handled in a more robust way. So would want to clean these things up or find out what future plans may be.\r\n\r\nOverall this looks very good. Could be a candidate for review club, I think.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-920636521",
      "submitted_at": "2022-03-25T15:45:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 932225971,
      "node_id": "PRR_kwDOABII5843kKOz",
      "url": null,
      "actor": null,
      "commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed until bf36616",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-932225971",
      "submitted_at": "2022-04-05T17:48:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "labeled",
      "id": 6381590385,
      "node_id": "LE_lADOABII585C1PykzwAAAAF8X1dx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6381590385",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T16:28:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 934846730,
      "node_id": "PRR_kwDOABII5843uKEK",
      "url": null,
      "actor": null,
      "commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-934846730",
      "submitted_at": "2022-04-07T10:34:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 936652174,
      "node_id": "PRR_kwDOABII58431C2O",
      "url": null,
      "actor": null,
      "commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed 328aa05c, I think a commit can be added to update `bitcoin/assumeutxo.md` in consequence, the subsection \"Background chainstate hits snapshots base block\". Especially, the chainstate directories/caches dance done in function of completion success or failure.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-936652174",
      "submitted_at": "2022-04-08T17:05:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 941494747,
      "node_id": "PRR_kwDOABII5844HhHb",
      "url": null,
      "actor": null,
      "commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks to everyone (esp. @ryanofsky) for the feedback so far.\r\n\r\nI'm about to push the latest iteration of this branch. The one bit of feedback I'm not incorporating (yet) is the rename of the leveldb dir `chainstate_[blockhash]` to `chainstate_snapshot`, mostly because introducing a non-leveldb file (`blockhash` or whatever we eventually call it) complicates the `DestroyDB`/`removeSnapshotDatadir` process, since it's a non-leveldb file that leaves the directory dangling after the `leveldb::DestroyDB` call. But that said, I do want to go that route at some point.\r\n\r\nSome notable changes resulting from the feedback so far:\r\n- I've added utilities to create the coinsdb on disk (instead of in memory) within unittests; previously all chainstate data has been in memory for unittests, but this made testing snapshot cleanup basically impossible. I think having the default case be for coinsdb to be persisted to disk makes the tests more realistic anyway, which is good.\r\n- Based upon Russ' good feedback, the unnecessary background validation chainstate data is now deleted at subsequent initialization (instead of at shutdown). It's plausible to me that we may be able to do this \"inline\" with snapshot validation, but I'll have to look into that and spend a few more days testing it.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-941494747",
      "submitted_at": "2022-04-13T22:41:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6430772640,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAF_Tc2g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6430772640",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-13T22:42:58Z"
    },
    {
      "event": "unlabeled",
      "id": 6431046712,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAF_Ufw4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6431046712",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T00:17:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6467472556,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGBfcys",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6467472556",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-21T02:26:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6467500576,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGBfjog",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6467500576",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-21T02:36:11Z"
    },
    {
      "event": "review_requested",
      "id": 6467518999,
      "node_id": "RRE_lADOABII585C1PykzwAAAAGBfoIX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6467518999",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-21T02:43:00Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 6467519106,
      "node_id": "RRE_lADOABII585C1PykzwAAAAGBfoKC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6467519106",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-21T02:43:03Z",
      "requested_reviewer": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 6467519160,
      "node_id": "RRE_lADOABII585C1PykzwAAAAGBfoK4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6467519160",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-21T02:43:04Z",
      "requested_reviewer": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 948636856,
      "node_id": "PRR_kwDOABII5844iwy4",
      "url": null,
      "actor": null,
      "commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-948636856",
      "submitted_at": "2022-04-21T13:36:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 948865074,
      "node_id": "PRR_kwDOABII5844jogy",
      "url": null,
      "actor": null,
      "commit_id": "559b1ec7242f4636b03aa39b1ec1b629ff1414d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "This looks great! It is much simpler than I remember it previously.\r\n\r\nI left some suggestions below (all minor, feel free to ignore them), and so far I reviewed all the non-test changes. I want to spend a little more time looking at the last commit, then review the tests, too.\r\n\r\n- [X] 98fc81fbaaa02792b94264680cc0062ccfde9698 db: add StoragePath, Options to CDBWrapper/CCoinsViewDB (1/15)\r\n- [X] f427976e6a3e024564fa824cc0578ee9b1285198 validation: add CChainState::destroyCoinsDB (2/15)\r\n- [X] da4aaba0073108092f0dd0e02753eea253395c4e validation: rename snapshot chainstate dir (3/15)\r\n- [X] 94a484340be246e38ba40644f4e2ba1913d22240 init: add utxo snapshot detection (4/15)\r\n- [X] 5e8879c402b23f8c3b71287a1f4393caa73dfcbd validation: remove snapshot datadirs upon validation failure (5/15)\r\n- [X] 89f3fc8c9205c34a28c5b892a979a9513cce0905 add ChainstateManager.getSnapshot{BaseHeight,BaseBlock}() (6/15)\r\n- [X] f2abfde9f425c90bd6580ada35df94b35e130462 blockmanager: avoid undefined behavior during FlushBlockFile (7/15)\r\n- [X] 70455311b695e65b847031a90fa870ab50519b48 validation: add CChainState::m_stop_use and ChainMan::isUsable (8/15)\r\n- [X] c4774650050118c8659a636c2d826c3ee8a9b5bd add CChainState::HasCoinsViews() (9/15)\r\n- [X] 2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d validation: add ChainMan logic for completing UTXO snapshot validation (10/15)\r\n- [ ] 223561af0854347c6e10ee81650cbeec7b0c0284 move-only: test: make snapshot chainstate setup reusable (11/15)\r\n- [ ] c11d0ac32c5f150bfecd023fd455fbd916b93622 test: add reset_chainstate parameter for snapshot unittests (12/15)\r\n- [ ] 26f6e02888f2cf3ea164c2780368d721736ec8c5 test: allow coinsdb to reside on-disk in tests (13/15)\r\n- [ ] e02233a2b109ad4ac59a5a0cfbd83189cd2f4c61 test: add testcases for snapshot completion (14/15)\r\n- [ ] 559b1ec7242f4636b03aa39b1ec1b629ff1414d7 docs: update assumeutxo.md (15/15)\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-948865074",
      "submitted_at": "2022-04-21T18:07:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 953596131,
      "node_id": "PRR_kwDOABII58441rjj",
      "url": null,
      "actor": null,
      "commit_id": "559b1ec7242f4636b03aa39b1ec1b629ff1414d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Few more review comments for the last code commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nSuggestion for PR description: Maybe add 2-3 sentences saying what assumeutxo functionality was already merged before this PR, and what changes are left to implement after this. It's easy to forget where these changes fit into the bigger picture, and helpful to be reminded!",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-953596131",
      "submitted_at": "2022-04-26T18:04:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "labeled",
      "id": 6514076878,
      "node_id": "LE_lADOABII585C1PykzwAAAAGEROzO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6514076878",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T10:52:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6523629459,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGE1q-T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6523629459",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T14:03:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6523878329,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGE2nu5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6523878329",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T14:33:52Z"
    },
    {
      "event": "reviewed",
      "id": 955429305,
      "node_id": "PRR_kwDOABII58448rG5",
      "url": null,
      "actor": null,
      "commit_id": "725e55e22bc98b8f88911d246631555897307c05",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "[`au.init.4`](https://github.com/jamesob/bitcoin/tree/au.init.4) -> [`au.init.6`](https://github.com/jamesob/bitcoin/tree/au.init.6)\r\n\r\n[View range diff on GitHub](https://github.com/jamesob/bitcoin/compare/au.init.4..au.init.6)\r\n\r\nThanks so much for the continued and good review @ryanofsky. I've pushed (another) big update, but thankfully I think this PR is in better shape than ever.\r\n\r\nNamely, we're now able to test the entire snapshot cleanup process from within the cpp tests, including filesystem operations and even a simulated node restart. This is a big improvement IMO, since we are now testing the full assumeutxo lifecycle from within cpp tests.\r\n\r\nOther changes include\r\n- removing unnecessary `m_snapshot_validated` state, \r\n- avoiding the confusing `continue`-based `init.cpp` control flow for reinitializing the new chainstate after snapshot cleanup - all that is contained within `LoadSnapshot()` now,\r\n- catching all `fs::filesystem_error`s where applicable (and moving these calls out of asserts),\r\n- adding the ability to store block tree db on-disk from cpp tests,\r\n- removing the controversial `lowerCamelCase` method naming (see #24846),\r\n- better assurance that leveldb objects are destructed before any fs operations (delete, rename)\r\n\r\nI think this PR is in a good place, but I see that it needs another rebase so I'll start on that now...",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-955429305",
      "submitted_at": "2022-04-29T15:28:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6526063386,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGE-9Ma",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6526063386",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:17:35Z"
    },
    {
      "event": "unlabeled",
      "id": 6526115982,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGE_KCO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6526115982",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:24:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6526208637,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGE_gp9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6526208637",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:40:59Z"
    },
    {
      "event": "labeled",
      "id": 6603553274,
      "node_id": "LE_lADOABII585C1PykzwAAAAGJmjn6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6603553274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-13T07:39:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6617003958,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGKZ3e2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6617003958",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:03:32Z"
    },
    {
      "event": "unlabeled",
      "id": 6617103775,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGKaP2f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6617103775",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:15:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6650807170,
      "node_id": "LE_lADOABII585C1PykzwAAAAGMa0OC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6650807170",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T13:40:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6663423320,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGNK8VY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6663423320",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T18:44:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6663458998,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGNLFC2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6663458998",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T18:51:17Z"
    },
    {
      "event": "unlabeled",
      "id": 6663469238,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGNLHi2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6663469238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T18:52:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6728803321,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGREWP5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6728803321",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T14:17:28Z"
    },
    {
      "event": "labeled",
      "id": 6730641009,
      "node_id": "LE_lADOABII585C1PykzwAAAAGRLW5x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6730641009",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T18:38:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 961997466,
      "node_id": "PRR_kwDOABII5845Vuqa",
      "url": null,
      "actor": null,
      "commit_id": "d988631b50b8b10a8dadae00fe61ebd32058a9d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK d988631b50b8b10a8dadae00fe61ebd32058a9d1. This is looking very good. The changes seem even more straightforward than before and the new tests are pretty clean and seem to cover the basic functionality well.\r\n\r\nI think I'd still question the design decision (https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861875528) not to delete the background chainstate after it's been validated until the next restart. IMO this makes things awkward in both the code and the tests because it adds an extra initialization side-quest that has to rehash the utxo set after it was already hashed, repeat initialization that was already done, and add hacky test code simulating a restart in order to reach this code path. I think if you just deleted the background chainstate and renamed the snapshot chainstate over it right after verifying the background chainstate, everything would be more straightforward. I don't see why it should be a problem because higher level code can already deal with switching to a new chainstate when the snapshot is loaded, so just unloading and reloading the chainstates without even changing which one is active seems like an easier problem. This does seems like something could be addressed in a followup, though.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-961997466",
      "submitted_at": "2022-06-03T02:18:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "commented",
      "id": 1155702542,
      "node_id": "IC_kwDOABII585E4p8O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1155702542",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-14T20:53:36Z",
      "updated_at": "2022-06-14T20:55:08Z",
      "author_association": "MEMBER",
      "body": "Thanks for the comprehensive feedback, @ryanofsky. Many good suggestions here. I just wanted to leave a quick comment to note that I'm in process of incorporating them - there are quite a few commits to touch up.\r\n\r\nI want to evaluate your suggestion that we do the chainstate swap/data deletion \"inline\" with the background chainstate connecting up with the snapshot base block, but I'm going to get your other (simpler) suggestions integrated first. As you note, I do think this is something that could be changed in future PRs if desired. But hopefully by the end of the week I should have a better idea about its feasibility. \r\n\r\nMy only conceptual hangup at the moment is that we will need to do some kind of hacky DisconnectTippish thing of the snapshot base block to ensure that if the cleanup process isn't started or doesn't complete before shutdown, that we are able to catch it on subsequent boot. Maybe that's cleaner than the cost of some of the almost-duplicated code in this approach. But in either case, we need to handle the possibility that snapshot validation wasn't completed properly before shutdown and must be on subsequent init.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1155702542",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "mentioned",
      "id": 6807864637,
      "node_id": "MEE_lADOABII585C1PykzwAAAAGVx8U9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6807864637",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-14T20:53:36Z"
    },
    {
      "event": "subscribed",
      "id": 6807864647,
      "node_id": "SE_lADOABII585C1PykzwAAAAGVx8VH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6807864647",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-14T20:53:36Z"
    },
    {
      "event": "commented",
      "id": 1155903646,
      "node_id": "IC_kwDOABII585E5bCe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1155903646",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-15T02:19:58Z",
      "updated_at": "2022-06-15T02:19:58Z",
      "author_association": "MEMBER",
      "body": "> My only conceptual hangup at the moment is that we will need to do some kind of hacky DisconnectTippish thing of the snapshot base block to ensure that if the cleanup process isn't started or doesn't complete before shutdown, that we are able to catch it on subsequent boot.\r\n\r\nI guess the last block on the background chain being connected is what triggers validating the background utxo set and deleting it, so you would want to leave the last block disconnected in order to trigger it again in case this is interrupted. This seems reasonable. Also seems reasonable that there could be some different trigger. I think the main improvement would be that if the backround validation and cleanup code is more integrated into normal block processing, init code can be simpler, and users wouldn't have a reason to stop and restart their nodes.\r\n\r\nThis seems reasonable. Also seems just as reasonable that there could be another that says if starting up and the background chain is fully downloaded, validate and delete it. ",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1155903646",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6850703294,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGYVW--",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6850703294",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T20:13:04Z"
    },
    {
      "event": "unlabeled",
      "id": 6851140325,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGYXBrl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6851140325",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T21:09:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6853069872,
      "node_id": "LE_lADOABII585C1PykzwAAAAGYeYww",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6853069872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-22T05:32:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6857551485,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGYve59",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6857551485",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-22T15:29:10Z"
    },
    {
      "event": "unlabeled",
      "id": 6857960548,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGYxCxk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6857960548",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-22T16:08:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6858481965,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGYzCEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6858481965",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-22T17:07:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6860237314,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGY5uoC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6860237314",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-22T21:38:45Z"
    },
    {
      "event": "reviewed",
      "id": 1007902467,
      "node_id": "PRR_kwDOABII5848E18D",
      "url": null,
      "actor": null,
      "commit_id": "1183a05ae285817eee758e1fcc29e43ab5ad284e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for all the feedback there @ryanofsky. It took me much longer than I expected to address everything.\r\n\r\nI am not going to address your recommendation here to swap out the chainstate data \"inline\" immediately after snapshot validation (vs. current approach of waiting until subsequent startup) because of the combination of two things:\r\n\r\n- I'm running out of steam on assumeutxo. I have been working on this feature for 3 years and it isn't even existentially important to bitcoin. I have other stuff that is probably more valuable for me to work on and I'm pretty close to burnt out on this project.\r\n- I don't see that approach as being substantially safer or more correct. In fact, making such a dramatic change as swapping out directories and reinitializing chainstates \"in flight\" seems fairly daring to me, vs. just halting use of one of the chainstates and doing the janitorial work at some point when the user is stopping/starting the bitcoind process.\r\n\r\nI want to heartily thank you for your continued review of this PR, and I want to apologize for being so demoralized by the length of this project.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1007902467",
      "submitted_at": "2022-06-23T14:35:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6866984291,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGZTd1j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6866984291",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-23T14:35:55Z"
    },
    {
      "event": "reviewed",
      "id": 1017143592,
      "node_id": "PRR_kwDOABII5848oGEo",
      "url": null,
      "actor": null,
      "commit_id": "2abc1b1a4c31eb97382e18d2fe50974042c4b162",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1017143592",
      "submitted_at": "2022-06-23T14:44:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 1017864813,
      "node_id": "PRR_kwDOABII5848q2Jt",
      "url": null,
      "actor": null,
      "commit_id": "2abc1b1a4c31eb97382e18d2fe50974042c4b162",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed until 2abc1b1, should review other commits soon.\r\n\r\n> I'm running out of steam on assumeutxo. I have been working on this feature for 3 years and it isn't even existentially important to bitcoin. I have other stuff that is probably more valuable for me to work on and I'm pretty close to burnt out on this project\r\n\r\nI still think assumeutxo is an interesting project to work on, especially to guarantee a smooth initial syncing process. If we aim to keep onboarding new full-nodes users in the coming decade to strengthen network decentralization it's more than nice to get assumeutxo in our feature set. It's also works well with a potential utreexo integration in core.\r\n\r\nI would be interested to see a clear project status to know where to focus review time, neither the board or the meta-PR sounds to provide this information. I think it would also help to cut PRs in smaller chunks, even if there are not conceptually hard like this one. Hopefully assumeutxo should be close from a v0.1 release.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1017864813",
      "submitted_at": "2022-06-24T02:31:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "labeled",
      "id": 6872274093,
      "node_id": "LE_lADOABII585C1PykzwAAAAGZnpSt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6872274093",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-24T07:54:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6896806008,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGbFOh4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6896806008",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T19:35:59Z"
    },
    {
      "event": "reviewed",
      "id": 1022301395,
      "node_id": "PRR_kwDOABII58487xTT",
      "url": null,
      "actor": null,
      "commit_id": "d003388b07ed567a99f8c23f8a273145de6aa012",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for your review and encouragement, @ariard.\r\n\r\n> I think it would also help to cut PRs in smaller chunks, even if there are not conceptually hard like this one.\r\n\r\nIn principle, I agree, and that's how I started the project. But I have found that even small PRs take months to merge (e.g. https://github.com/bitcoin/bitcoin/pull/23997 has been open for 6 months), and I have found that sadly the process encourages bundling large changesets together because otherwise progress feels impossibly slow. \r\n\r\nI have considered at various points doing the remainder of assumeutxo in a single PR because then at least review/test time could be consolidated on one changeset instead of a painfully lengthy series of smaller changes, each of which seems to take nearly half a year to get in.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1022301395",
      "submitted_at": "2022-06-28T19:41:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "commented",
      "id": 1169186511,
      "node_id": "IC_kwDOABII585FsF7P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169186511",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:13:54Z",
      "updated_at": "2022-06-28T20:13:54Z",
      "author_association": "MEMBER",
      "body": "> I would be interested to see a clear project status to know where to focus review time, neither the board or the meta-PR sounds to provide this information.\r\n\r\nI have added an updated project status list on the parent PR (https://github.com/bitcoin/bitcoin/pull/15606#issue-421531882, cc @ariard). Please let me know if there's anything I can add that would be helpful. Only about half the subtasks are complete so far, but (I hope) we are farther along than halfway, as after this PR and #24008 are merged, most of the tricky logic and refactoring will be done.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1169186511",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "mentioned",
      "id": 6897017959,
      "node_id": "MEE_lADOABII585C1PykzwAAAAGbGCRn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6897017959",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:13:54Z"
    },
    {
      "event": "subscribed",
      "id": 6897017967,
      "node_id": "SE_lADOABII585C1PykzwAAAAGbGCRv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6897017967",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:13:54Z"
    },
    {
      "event": "unlabeled",
      "id": 6897167076,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGbGmrk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6897167076",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:38:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1027855054,
      "node_id": "PRR_kwDOABII5849Q9LO",
      "url": null,
      "actor": null,
      "commit_id": "d003388b07ed567a99f8c23f8a273145de6aa012",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed all the code changes until cbcc8bc.\r\nStill have to check the correctness between the operations model laid out in `assumeutxo.md` and the code and the test coverage/changes.\r\n\r\n_______\r\n\r\n> In principle, I agree, and that's how I started the project. But I have found that even small PRs take months to merge (e.g. https://github.com/bitcoin/bitcoin/pull/23997 has been open for 6 months), and I have found that sadly the process encourages bundling large changesets together because otherwise progress feels impossibly slow. \r\n\r\nI understand that core review process might sounds slow and that large changesets are a way to keep the ball rolling forward from a PR author perspective. However, I think large changesets  might also produce the downside that they're are likely to discourage reviewers to get engaged, as the context for them to consider and evaluate is bigger. \r\n\r\nI would advise to split this PR in two chunks, one the logic for detecting and activating snapshot chainstates on start, the other one the logic to complete the snapshot validation process. Especially, the latter one, as it's modifying `ActivateBestChain()`, even superficially, it's one of the most critical path of the codebase and I think it's worthy of more scrutiny.\r\n\r\nThough more generally, about the assumeutxo project itself, I think a majority of the contributors who partaked in the design of assumeutxo are not or less active anymore. Minding that the project is context-rich with changes in the validation engine, the caches, the disk I/O , the init sequence and the indexes, I think it's a pretty high bar to attract review. I would say assumeutxo would benefit from a renewed evangelism about why it matters and the upsides for the Bitcoin ecosystem as whole. I think it could be reasonable to give regular updates about the state of the project at meetings, the updated project status list sounds a good start.\r\n\r\nLast, I believe a lot of opened PRs about validation and indexes could benefit from your review bandwidth. Speaking for myself, I always seek to have a positive review balance sheet between how much bandwidth I'm providing to the project and how much I'm requesting for my own PRs.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1027855054",
      "submitted_at": "2022-07-04T22:06:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "reviewed",
      "id": 1030494337,
      "node_id": "PRR_kwDOABII5849bBiB",
      "url": null,
      "actor": null,
      "commit_id": "d003388b07ed567a99f8c23f8a273145de6aa012",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK d003388b07ed567a99f8c23f8a273145de6aa012. A lot of changes and cleanups since last review like simplifying the InitializeChainstate method. This looks very good and puts all the code needed to validate and clean up snapshots into place. I left more review comments, but they aren't important and can be ignored",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1030494337",
      "submitted_at": "2022-07-06T20:15:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "labeled",
      "id": 7023996592,
      "node_id": "LE_lADOABII585C1PykzwAAAAGiqa6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7023996592",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T21:16:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7030098860,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGjBsus",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7030098860",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T14:43:25Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2NTY3OGQzODM2Mjk3NzE1OGJjNzU3NzIxODk3NjJhOWNjZTliMTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d65678d38362977158bc75772189762a9cce9b12",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d65678d38362977158bc75772189762a9cce9b12",
      "tree": {
        "sha": "5e8e383d569c71b1497414c15fae9ff105baf820",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e8e383d569c71b1497414c15fae9ff105baf820"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c82ca3365f6451d342c94cedc3f9b015598e9c2",
          "sha": "5c82ca3365f6451d342c94cedc3f9b015598e9c2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5c82ca3365f6451d342c94cedc3f9b015598e9c2"
        }
      ],
      "message": "db: add StoragePath to CDBWrapper/CCoinsViewDB\n\nThis is used in subsequent commits. It allows us to clean up UTXO\nsnapshot chainstate after background validation completes.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:03:51Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-01T21:22:00Z"
      },
      "sha": "d65678d38362977158bc75772189762a9cce9b12"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1ZGI5Y2NiMmYwNDQyYmQ3NGVjNjA1ZTgzNGY1NGNlMTUwODZkMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05db9ccb2f0442bd74ec605e834f54ce15086d2f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/05db9ccb2f0442bd74ec605e834f54ce15086d2f",
      "tree": {
        "sha": "0bf936be25d5f1241d832f6e68c16aeae012876b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bf936be25d5f1241d832f6e68c16aeae012876b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d65678d38362977158bc75772189762a9cce9b12",
          "sha": "d65678d38362977158bc75772189762a9cce9b12",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d65678d38362977158bc75772189762a9cce9b12"
        }
      ],
      "message": "validation: rename snapshot chainstate dir\n\nThis changes the snapshot's leveldb chainstate dir name from\n`chainstate_[blockhash]` to `chainstate_snapshot`. This simplifies\nlater logic that loads snapshot data, and enforces the limitation\nof a single snapshot at any given time.\n\nSince we still need to persis the blockhash of the base block, we\nwrite that out to a file (`chainstate_snapshot/base_blockhash`) for\nlater use during initialization, so that we can reinitialize the\nsnapshot chainstate.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:03:53Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-20T18:59:02Z"
      },
      "sha": "05db9ccb2f0442bd74ec605e834f54ce15086d2f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJmZGQyOTk1NmRiMjEzNTQzMDU3YzY3NGQ5Mjc0OTY1ZWU1OGY0NzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fdd29956db213543057c674d9274965ee58f471",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2fdd29956db213543057c674d9274965ee58f471",
      "tree": {
        "sha": "8eb8419efbae40d6ab5a7d2f0ac63ac79fd4fcba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8eb8419efbae40d6ab5a7d2f0ac63ac79fd4fcba"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05db9ccb2f0442bd74ec605e834f54ce15086d2f",
          "sha": "05db9ccb2f0442bd74ec605e834f54ce15086d2f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/05db9ccb2f0442bd74ec605e834f54ce15086d2f"
        }
      ],
      "message": "init: add utxo snapshot detection\n\nAdd functionality for activating a snapshot-based chainstate if one is\ndetected on-disk.\n\nAlso cautiously initialize chainstate cache usages so that we don't\nsomehow blow past our cache allowances during initialization, then\nrebalance at the end of init.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-20T21:40:01Z"
      },
      "sha": "2fdd29956db213543057c674d9274965ee58f471"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ3NjE1NzNkZTY3OGU2ZDBjOTAzMzkxZDY1Y2EyYTVjMDVmYzgzZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4761573de678e6d0c903391d65ca2a5c05fc83d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4761573de678e6d0c903391d65ca2a5c05fc83d9",
      "tree": {
        "sha": "81f423f6cacfdd12ed094e8245ee7ce9ae55c5dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81f423f6cacfdd12ed094e8245ee7ce9ae55c5dd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fdd29956db213543057c674d9274965ee58f471",
          "sha": "2fdd29956db213543057c674d9274965ee58f471",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2fdd29956db213543057c674d9274965ee58f471"
        }
      ],
      "message": "add utilities for deleting on-disk leveldb data\n\nUsed in later commits to remove leveldb directories for\n- invalid snapshot chainstates, and\n- background-vaildation chainstates that have finished serving their\n  purpose.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-29T13:02:02Z"
      },
      "sha": "4761573de678e6d0c903391d65ca2a5c05fc83d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1ZmQyNTMyZDY3ZGVlMDgxYjBkMzJjZmEzYWE1YWZjNmY2Mjk3YTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95fd2532d67dee081b0d32cfa3aa5afc6f6297a0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95fd2532d67dee081b0d32cfa3aa5afc6f6297a0",
      "tree": {
        "sha": "f836af59b9db9858e4f449db5c7b2ebc2be7dc51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f836af59b9db9858e4f449db5c7b2ebc2be7dc51"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4761573de678e6d0c903391d65ca2a5c05fc83d9",
          "sha": "4761573de678e6d0c903391d65ca2a5c05fc83d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4761573de678e6d0c903391d65ca2a5c05fc83d9"
        }
      ],
      "message": "validation: remove snapshot datadirs upon validation failure\n\nIf a UTXO snapshot fails to validate, don't leave the resulting datadir\non disk as this will confuse initialization on next startup and we'll\nget an assertion error.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-08-17T20:23:02Z"
      },
      "sha": "95fd2532d67dee081b0d32cfa3aa5afc6f6297a0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY4ZmNkMzU1MDYwMzM2NWM5ZTRjYTIwMjNmMWEyOWYzZDkyNTdmYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68fcd3550603365c9e4ca2023f1a29f3d9257fba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/68fcd3550603365c9e4ca2023f1a29f3d9257fba",
      "tree": {
        "sha": "2b78f52059d544096c76a0ac6d4c32c12a1f680d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b78f52059d544096c76a0ac6d4c32c12a1f680d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95fd2532d67dee081b0d32cfa3aa5afc6f6297a0",
          "sha": "95fd2532d67dee081b0d32cfa3aa5afc6f6297a0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95fd2532d67dee081b0d32cfa3aa5afc6f6297a0"
        }
      ],
      "message": "add ChainstateManager.GetSnapshot{BaseHeight,BaseBlock}()\n\nFor use in later commits.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-28T20:59:18Z"
      },
      "sha": "68fcd3550603365c9e4ca2023f1a29f3d9257fba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2ODY3NTY5M2IyNzFhYTllNmQ1YjNiMjU1NzdjZDA5MTA0Y2I5Y2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e68675693b271aa9e6d5b3b25577cd09104cb9ca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e68675693b271aa9e6d5b3b25577cd09104cb9ca",
      "tree": {
        "sha": "dd2b99abde938825cebb3326addeac708735b708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd2b99abde938825cebb3326addeac708735b708"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68fcd3550603365c9e4ca2023f1a29f3d9257fba",
          "sha": "68fcd3550603365c9e4ca2023f1a29f3d9257fba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/68fcd3550603365c9e4ca2023f1a29f3d9257fba"
        }
      ],
      "message": "blockmanager: avoid undefined behavior during FlushBlockFile\n\nIf we call FlushBlockFile() without having intitialized the block index\nwith LoadBlockIndexDB(), we may be indexing into an empty vector.\n\nSpecifically this is an issue when we call MaybeRebalanceCaches() during\nchainstate init before the block index has been loaded, which calls\nFlushBlockFile().\n\nAlso add an assert to avoid undefined behavior.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-02T14:47:13Z"
      },
      "sha": "e68675693b271aa9e6d5b3b25577cd09104cb9ca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5ZmJlYTgxZTI5NGFkYmY0NTg3MTgwZTUyZmVmYzlkYThmNjJkNTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9fbea81e294adbf4587180e52fefc9da8f62d59",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d9fbea81e294adbf4587180e52fefc9da8f62d59",
      "tree": {
        "sha": "ff65ca49cc8f0c947adb22af6657dc4685d2d871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff65ca49cc8f0c947adb22af6657dc4685d2d871"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e68675693b271aa9e6d5b3b25577cd09104cb9ca",
          "sha": "e68675693b271aa9e6d5b3b25577cd09104cb9ca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e68675693b271aa9e6d5b3b25577cd09104cb9ca"
        }
      ],
      "message": "validation: add CChainState::m_stop_use and ChainMan::isUsable\n\nand remove m_snapshot_validated. This state can now be inferred by the\nnumber of isUsable chainstates.\n\nm_stop_use is used to signal that a chainstate should no longer be used\nby validation logic; it is used as a sentinel when background validation\ncompletes or if the snapshot chainstate is found to be invalid.\n\nisUsable is a convenience method that incorporates m_stop_use.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-02T19:40:47Z"
      },
      "sha": "d9fbea81e294adbf4587180e52fefc9da8f62d59"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjZjJiZjRjNGIyZDdmYjlmNmM2MzBiY2VhMWU3ZTZkZTk4ZDZhODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cf2bf4c4b2d7fb9f6c630bcea1e7e6de98d6a82",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf2bf4c4b2d7fb9f6c630bcea1e7e6de98d6a82",
      "tree": {
        "sha": "ecf37158c2d7a27ab794d81d62d0471b2fa8a99b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ecf37158c2d7a27ab794d81d62d0471b2fa8a99b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9fbea81e294adbf4587180e52fefc9da8f62d59",
          "sha": "d9fbea81e294adbf4587180e52fefc9da8f62d59",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d9fbea81e294adbf4587180e52fefc9da8f62d59"
        }
      ],
      "message": "add CChainState::HasCoinsViews()\n\nUsed in subsequent commits. Also cleans up asserts in\ncoins_views-related convenience methods to be more exact.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:16:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-02T19:44:50Z"
      },
      "sha": "6cf2bf4c4b2d7fb9f6c630bcea1e7e6de98d6a82"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc5ZmZhYTcxMmMzMGNiNjcwOWQ0ZGI2NzdkZDMxYmUzOTAyY2IwNWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79ffaa712c30cb6709d4db677dd31be3902cb05a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/79ffaa712c30cb6709d4db677dd31be3902cb05a",
      "tree": {
        "sha": "1e32913f5482dc5564cca5d90e000cc6cbb6abf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e32913f5482dc5564cca5d90e000cc6cbb6abf9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cf2bf4c4b2d7fb9f6c630bcea1e7e6de98d6a82",
          "sha": "6cf2bf4c4b2d7fb9f6c630bcea1e7e6de98d6a82",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf2bf4c4b2d7fb9f6c630bcea1e7e6de98d6a82"
        }
      ],
      "message": "move-only-ish: init: factor out chainstate initialization\n\nMoves chainstate initialization into its own function. This is necessary\nto later support a more readable way of handling background-validation\nchainstate cleanup during init, since the chainstate initialization\nfunctions may need to be repeated after moving leveldb filesystem\ncontent around.\n\nThis commit isn't strictly necessary, but the alternative is to (ab)use\nthe `while` loop in init.cpp with a `continue` on the basis of a\nspecific ChainstateLoadingError return value from LoadChainstate. Not\nonly is this harder to read, but it can't be unittested.\n\nThe approach here lets us consolidate background-validation cleanup to\nLoadChainstate, and therefore exercise it within tests.\n\nThis commit is most easily reviewed with\n\n  git diff --color-moved=dimmed-zebra --color-moved-ws=ignore-space-change",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:35:31Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-28T14:23:33Z"
      },
      "sha": "79ffaa712c30cb6709d4db677dd31be3902cb05a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlYjg4Zjg4OGNjMDRiZDlkYTU0MDVkNGQ1ZWRjN2I2ZTI2MDNhOGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e",
      "tree": {
        "sha": "130df055fead649ea566610e09a2aea8bc945cf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/130df055fead649ea566610e09a2aea8bc945cf7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79ffaa712c30cb6709d4db677dd31be3902cb05a",
          "sha": "79ffaa712c30cb6709d4db677dd31be3902cb05a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79ffaa712c30cb6709d4db677dd31be3902cb05a"
        }
      ],
      "message": "validation: add ChainMan logic for completing UTXO snapshot validation\n\nTrigger completion when a background validation chainstate reaches the\nsame height as a UTXO snapshot, and handle cleaning up the chainstate on\nsubsequent startup.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:50:27Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-08T00:27:55Z"
      },
      "sha": "1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJkOTk2YzhmNzkzYzllODg4NDg3MGVjNzFkOTBlNzdhNDA1ZmNjNTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d996c8f793c9e8884870ec71d90e77a405fcc56",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d996c8f793c9e8884870ec71d90e77a405fcc56",
      "tree": {
        "sha": "6f8b94348d518f27bb93aa10050fd2c0a0b2cc96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f8b94348d518f27bb93aa10050fd2c0a0b2cc96"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e",
          "sha": "1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e"
        }
      ],
      "message": "log: add LoadBlockIndex() message for assumedvalid blocks\n\nI found this useful during unittest debugging.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:50:31Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-29T13:06:32Z"
      },
      "sha": "2d996c8f793c9e8884870ec71d90e77a405fcc56"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczNzFjMzZhN2U4ODM5Nzg1ZWQwOTUxZDAwNTJmMGFmMDIxM2ZkNDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7371c36a7e8839785ed0951d0052f0af0213fd49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7371c36a7e8839785ed0951d0052f0af0213fd49",
      "tree": {
        "sha": "ec0ebdf86f5067ce8cd014e45cd364af574c4fa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec0ebdf86f5067ce8cd014e45cd364af574c4fa1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d996c8f793c9e8884870ec71d90e77a405fcc56",
          "sha": "2d996c8f793c9e8884870ec71d90e77a405fcc56",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d996c8f793c9e8884870ec71d90e77a405fcc56"
        }
      ],
      "message": "move-only: test: make snapshot chainstate setup reusable\n\nFor use in next commit.\n\nMost easily reviewed with\n`--color-moved=dimmed_zebra --color-moved-ws=allow-indentation-change`.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T15:56:22Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-08T00:29:52Z"
      },
      "sha": "7371c36a7e8839785ed0951d0052f0af0213fd49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcyZTNmOWNhY2ZhMzY0MWU1NmMyMWVkZmRmYjNiMDRhZDI5NzVjN2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72e3f9cacfa3641e56c21edfdfb3b04ad2975c7d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/72e3f9cacfa3641e56c21edfdfb3b04ad2975c7d",
      "tree": {
        "sha": "879069147e9f1b780eef0c1ffaf025d2d4d0d805",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/879069147e9f1b780eef0c1ffaf025d2d4d0d805"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7371c36a7e8839785ed0951d0052f0af0213fd49",
          "sha": "7371c36a7e8839785ed0951d0052f0af0213fd49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7371c36a7e8839785ed0951d0052f0af0213fd49"
        }
      ],
      "message": "test: add reset_chainstate parameter for snapshot unittests\n\nThis CreateAndActivateUTXOSnapshot parameter is necessary once we\nperform snapshot completion within ABC, since the existing UpdateTip\ntest will fail because the IBD chain that has generated the snapshot\nwill exceed the base of the snapshot.\n\nBeing able to test snapshots being loaded into a mostly-uninitialized\ndatadir allows for more realistic unittest scenarios.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T16:00:11Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-08T20:56:16Z"
      },
      "sha": "72e3f9cacfa3641e56c21edfdfb3b04ad2975c7d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2MGNkYzJmOWQ0NDFjN2RkODkzZmFhZjk2OTNjYTQwZTc0YzZhZDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e60cdc2f9d441c7dd893faaf9693ca40e74c6ad2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e60cdc2f9d441c7dd893faaf9693ca40e74c6ad2",
      "tree": {
        "sha": "359fbcad405e770d470b2df201367bc1d0183190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/359fbcad405e770d470b2df201367bc1d0183190"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72e3f9cacfa3641e56c21edfdfb3b04ad2975c7d",
          "sha": "72e3f9cacfa3641e56c21edfdfb3b04ad2975c7d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72e3f9cacfa3641e56c21edfdfb3b04ad2975c7d"
        }
      ],
      "message": "test: allow on-disk coins and block tree dbs in tests\n\nUsed when testing cleanup of on-disk chainstate data for snapshot\ntestcases. Also necessary for simulating node restart in .cpp tests.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T16:02:38Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-13T19:16:26Z"
      },
      "sha": "e60cdc2f9d441c7dd893faaf9693ca40e74c6ad2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjODczMzY0ZTJmYmMxM2Y4YWYxNjc5ZTQwMzI0NDFmOTUwMTk4NWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c873364e2fbc13f8af1679e4032441f9501985a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6c873364e2fbc13f8af1679e4032441f9501985a",
      "tree": {
        "sha": "db1ff795f866308e3f95f1651acdc11ccdc7e7b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db1ff795f866308e3f95f1651acdc11ccdc7e7b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e60cdc2f9d441c7dd893faaf9693ca40e74c6ad2",
          "sha": "e60cdc2f9d441c7dd893faaf9693ca40e74c6ad2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e60cdc2f9d441c7dd893faaf9693ca40e74c6ad2"
        }
      ],
      "message": "test: move-only-ish: factor out LoadVerifyActivateChainstate()\n\nin TestingSetup(). This is used in the following commit to test\nreinitializing chainstates after snapshot validation and cleanup.\n\nBest reviewed with `git diff --color-moved=dimmed-zebra`.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T16:05:15Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-28T14:57:25Z"
      },
      "sha": "6c873364e2fbc13f8af1679e4032441f9501985a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwNmZjMGRkMWM3ZjkzY2E1OTk2NTA0ZjA0MDZkNmI4N2FlZDg4MmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/106fc0dd1c7f93ca5996504f0406d6b87aed882f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/106fc0dd1c7f93ca5996504f0406d6b87aed882f",
      "tree": {
        "sha": "e09ca417ad442ab7bfeef99b1a885d0df2e29e72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e09ca417ad442ab7bfeef99b1a885d0df2e29e72"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c873364e2fbc13f8af1679e4032441f9501985a",
          "sha": "6c873364e2fbc13f8af1679e4032441f9501985a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6c873364e2fbc13f8af1679e4032441f9501985a"
        }
      ],
      "message": "test: add testcases for snapshot completion",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T16:05:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-08T00:56:31Z"
      },
      "sha": "106fc0dd1c7f93ca5996504f0406d6b87aed882f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjOGM5ZDgwOTIxNGJkOGRjZGFjZGI2NjEyN2NhYmY0OTc4OGUwOTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "tree": {
        "sha": "cf90ed28149dbe1f21ff188a1429d183a03203b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf90ed28149dbe1f21ff188a1429d183a03203b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/106fc0dd1c7f93ca5996504f0406d6b87aed882f",
          "sha": "106fc0dd1c7f93ca5996504f0406d6b87aed882f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/106fc0dd1c7f93ca5996504f0406d6b87aed882f"
        }
      ],
      "message": "docs: update assumeutxo.md\n\nInclude notes about the `chainstate_snapshot` rename as well as\nupdates for the included code.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-20T16:05:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-13T22:42:21Z"
      },
      "sha": "ac8c9d809214bd8dcdacdb66127cabf49788e097"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7030859799,
      "node_id": "HRFPE_lADOABII585C1PykzwAAAAGjEmgX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7030859799",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T16:08:54Z"
    },
    {
      "event": "reviewed",
      "id": 1042479612,
      "node_id": "PRR_kwDOABII584-Ivn8",
      "url": null,
      "actor": null,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Rebased and addressed feedback. Thanks Russ and Antoine.\r\n\r\nI'm approaching \"thermonuclear levels of burnout\" on this one, as the phrase goes. I'm getting bludgeoned by rebases, so any help reviewing this is appreciated. \r\n\r\nI've looked at splitting this out into two PRs and while it is possible it will not be trivial for me to do. If any potential reviewers feel strongly about doing that, I can.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1042479612",
      "submitted_at": "2022-07-20T16:14:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "unlabeled",
      "id": 7031761942,
      "node_id": "UNLE_lADOABII585C1PykzwAAAAGjICwW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7031761942",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T18:12:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1191500757,
      "node_id": "IC_kwDOABII585HBNvV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191500757",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T13:41:15Z",
      "updated_at": "2022-07-21T13:41:15Z",
      "author_association": "MEMBER",
      "body": "Okay, I think it's pretty clear that the right move is to split this PR up into two separate ones (initialization vs. completion). I'll be opening those shortly. ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#issuecomment-1191500757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24232"
    },
    {
      "event": "closed",
      "id": 7038446038,
      "node_id": "CE_lADOABII585C1PykzwAAAAGjhinW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7038446038",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T13:41:15Z"
    },
    {
      "event": "reviewed",
      "id": 1047925688,
      "node_id": "PRR_kwDOABII584-dhO4",
      "url": null,
      "actor": null,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK ac8c9d809214bd8dcdacdb66127cabf49788e097. Rebase and a lot of suggested cleanups since the last review, nothing major\r\n\r\nI'm still a little confused about MaybeCompleteSnapshotValidation error handling, but in the worst case problems might just make debugging & error recovery less convenient so this is not a blocker",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#pullrequestreview-1047925688",
      "submitted_at": "2022-07-22T14:01:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
    },
    {
      "event": "referenced",
      "id": 7581876017,
      "node_id": "REFE_lADOABII585C1PykzwAAAAHD6j8x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7581876017",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6912a28f08cabd306cafb93a2be421ae6014778d",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/6912a28f08cabd306cafb93a2be421ae6014778d",
      "created_at": "2022-10-13T14:20:43Z"
    },
    {
      "event": "referenced",
      "id": 8691606025,
      "node_id": "REFE_lADOABII585C1PykzwAAAAIGD2IJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691606025",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d5e4f9a43952f294e165381116773d2aab00100d",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/d5e4f9a43952f294e165381116773d2aab00100d",
      "created_at": "2023-03-07T23:55:14Z"
    },
    {
      "event": "added_to_project",
      "id": 9191363320,
      "node_id": "ATPE_lADOABII585C1PykzwAAAAIj2RL4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9191363320",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T14:57:38Z",
      "project_card": {
        "id": 77040683,
        "url": "https://api.github.com/projects/columns/cards/77040683",
        "project_id": 2564674,
        "project_url": "https://api.github.com/projects/2564674",
        "column_name": "To do"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797299227",
      "pull_request_review_id": 870119022,
      "id": 797299227,
      "node_id": "PRRC_kwDOABII584vhdIb",
      "diff_hunk": "@@ -977,12 +1014,27 @@ class ChainstateManager\n     void Unload() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Clear (deconstruct) chainstate data.\n-    void Reset();\n+    void Reset() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Check to see if caches are out of balance and if so, call\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! When starting up, search the datadir for a chainstate based on a UTXO\n+    //! snapshot that is in the process of being validated.\n+    bool DetectSnapshotChainstate(CTxMemPool& mempool) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 119,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "08f4bf18b165464dea801b81cf857a9fd398e8e7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any reason this is a reference. `memepool` at the call site is already a pointer to allow setting it to nullptr",
      "created_at": "2022-02-02T06:09:26Z",
      "updated_at": "2022-02-02T06:12:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r797299227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797299227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1025,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797299587",
      "pull_request_review_id": 870119022,
      "id": 797299587,
      "node_id": "PRRC_kwDOABII584vhdOD",
      "diff_hunk": "@@ -977,12 +1014,27 @@ class ChainstateManager\n     void Unload() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Clear (deconstruct) chainstate data.\n-    void Reset();\n+    void Reset() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Check to see if caches are out of balance and if so, call\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! When starting up, search the datadir for a chainstate based on a UTXO\n+    //! snapshot that is in the process of being validated.\n+    bool DetectSnapshotChainstate(CTxMemPool& mempool) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! If we completed background validation of the loaded snapshot during the\n+    //! last run but didn't for whatever reason shutdown properly, ensure that\n+    //! the background validation chainstate is marked accordingly.\n+    void CheckForUncleanShutdown() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! Complete validation of the active snapshot if `chainstate` is in the process of\n+    //! background validating and has reached the base block of the snapshot.\n+    bool MaybeCompleteSnapshotValidation(\n+        CChainState& chainstate,\n+        CBlockIndex* pindexNew) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 130,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "08f4bf18b165464dea801b81cf857a9fd398e8e7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason this is a pointer? This can't be null, neither at the call site nor inside the function.",
      "created_at": "2022-02-02T06:10:27Z",
      "updated_at": "2022-02-02T06:12:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r797299587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797299587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1036,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797299792",
      "pull_request_review_id": 870119022,
      "id": 797299792,
      "node_id": "PRRC_kwDOABII584vhdRQ",
      "diff_hunk": "@@ -28,10 +28,19 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n     };\n \n     LOCK(cs_main);\n-    chainman.InitializeChainstate(mempool);\n     chainman.m_total_coinstip_cache = nCoinCacheUsage;\n     chainman.m_total_coinsdb_cache = nCoinDBCache;\n \n+    // Load a chain created from a UTXO snapshot, if any exist.\n+    chainman.DetectSnapshotChainstate(*Assert(mempool));\n+\n+    // If we're not using a snapshot or we haven't fully validated it yet,\n+    // create a validation chainstate.\n+    if (!chainman.IsSnapshotValidated()) {\n+        LogPrintf(\"Loading validation chainstate\\n\");\n+        chainman.InitializeChainstate(Assert(mempool));",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "08f4bf18b165464dea801b81cf857a9fd398e8e7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any reason to add the assert?",
      "created_at": "2022-02-02T06:11:10Z",
      "updated_at": "2022-02-02T06:12:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r797299792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/797299792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/798657298",
      "pull_request_review_id": 871973254,
      "id": 798657298,
      "node_id": "PRRC_kwDOABII584vmosS",
      "diff_hunk": "@@ -4982,6 +4991,91 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+bool ChainstateManager::completeSnapshotValidation(CChainState& validation_chainstate)\n+{\n+    AssertLockHeld(cs_main);\n+    assert(&validation_chainstate == m_ibd_chainstate.get());\n+\n+    CCoinsViewDB& ibd_coins_db = validation_chainstate.CoinsDB();\n+    validation_chainstate.ForceFlushStateToDisk();\n+\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        return false;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "7e2b212f9448a9b57df173a161686e33ac4c7d4e",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should probably de-activate the existing snapshot chainstate as in the `if (snapshot_invalid)` conditional.",
      "created_at": "2022-02-03T15:04:45Z",
      "updated_at": "2022-02-03T15:04:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r798657298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/798657298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5007,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/798657488",
      "pull_request_review_id": 871973518,
      "id": 798657488,
      "node_id": "PRRC_kwDOABII584vmovQ",
      "diff_hunk": "@@ -4982,6 +4991,91 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+bool ChainstateManager::completeSnapshotValidation(CChainState& validation_chainstate)\n+{\n+    AssertLockHeld(cs_main);\n+    assert(&validation_chainstate == m_ibd_chainstate.get());\n+\n+    CCoinsViewDB& ibd_coins_db = validation_chainstate.CoinsDB();\n+    validation_chainstate.ForceFlushStateToDisk();\n+\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        return false;\n+    }\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        validation_chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    uint256 expected_contents_hash;\n+    int curr_height = validation_chainstate.m_chain.Height();\n+\n+    bool snapshot_invalid{false};\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        return false;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "7e2b212f9448a9b57df173a161686e33ac4c7d4e",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same as above. These failure modes also need tests.",
      "created_at": "2022-02-03T15:04:55Z",
      "updated_at": "2022-02-03T19:03:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r798657488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/798657488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5025,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/798664573",
      "pull_request_review_id": 871973518,
      "id": 798664573,
      "node_id": "PRRC_kwDOABII584vmqd9",
      "diff_hunk": "@@ -5045,3 +5167,148 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+constexpr int SNAPSHOT_NAME_LEN = 75; // \"chainstate_\" + 64 hex characters for blockhash.\n+\n+static bool IsPathSnapshotDatadir(const fs::path& datadir_path)\n+{\n+    return datadir_path.filename().string().length() == SNAPSHOT_NAME_LEN &&\n+        datadir_path.filename().string().substr(0,11) == \"chainstate_\";\n+}\n+\n+static uint256 PathToSnapshotHash(const fs::path& datadir_path)\n+{\n+    assert(IsPathSnapshotDatadir(datadir_path));\n+    return uint256S(datadir_path.filename().string().substr(11));\n+}\n+\n+static std::optional<fs::path> FindSnapshotChainstateDatadir()\n+{\n+    fs::path found;\n+\n+    for (fs::directory_iterator it(gArgs.GetDataDirNet()); it != fs::directory_iterator(); it++) {\n+        if (fs::is_directory(*it) && !fs::is_empty(*it) && IsPathSnapshotDatadir(it->path()))\n+        {\n+            if (found.empty()) {\n+                found = it->path();\n+                LogPrintf(\"[snapshot] found snapshot datadir %s\\n\", fs::PathToString(found));\n+            } else {\n+                LogPrintf(\"[snapshot] WARNING - detected multiple snapshot \" /* Continued */\n+                    \"datadirs (%s). This is not expected.\\n\", fs::PathToString(it->path()));\n+            }\n+        }\n+    }\n+    return found.empty() ? std::nullopt : std::make_optional(found);\n+}\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    std::optional<fs::path> path = FindSnapshotChainstateDatadir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n+    return true;\n+}\n+\n+bool CChainState::teardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();\n+\n+    if (!snapshot_datadir) {\n+        return false;\n+    }\n+\n+    uint256 datadir_hash = PathToSnapshotHash(*snapshot_datadir);\n+\n+    if (datadir_hash != *m_from_snapshot_blockhash) {\n+        LogPrintf(\"[snapshot] WARNING - unexpected blockhash for snapshot datadir (%s); expected %s\\n\",\n+            datadir_hash.ToString(), m_from_snapshot_blockhash->ToString());\n+        return false;\n+    }\n+\n+    LogPrintf(\"[snapshot] tearing down snapshot datadir %s\\n\", fs::PathToString(*snapshot_datadir));\n+    assert(fs::remove_all(*snapshot_datadir) > 0);\n+    return true;\n+}\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{\n+    auto blockhash_op = SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::getSnapshotHeight()\n+{\n+    CBlockIndex* base = getSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+void ChainstateManager::validatedSnapshotShutdownCleanup(\n+    fs::path new_chainstate, fs::path old_chainstate)\n+{\n+    assert(fs::exists(new_chainstate));\n+    assert(fs::exists(old_chainstate));\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+        fs::PathToString(old_chainstate));\n+\n+    // Instead of deleting the background chainstate directly, rename the old\n+    // chainstate to chainstate_bak, rename the new chainstate into place, and then\n+    // delete to avoid likelihood of corruption from mid-delete shutdown.\n+    fs::path tmp_old{old_chainstate};\n+    tmp_old += \"_bak\";\n+\n+    fs::rename(old_chainstate, tmp_old);\n+    fs::rename(new_chainstate, old_chainstate);\n+\n+    LogPrintf(\"[snapshot] moving snapshot chainstate (%s) to \" /* Continued */\n+        \"default chainstate directory (%s)\\n\",\n+        fs::PathToString(new_chainstate), fs::PathToString(old_chainstate));\n+\n+    assert(fs::remove_all(tmp_old) > 0);\n+    LogPrintf(\"[snapshot] deleted background chainstate directory (%s)\\n\",\n+        fs::PathToString(old_chainstate));\n+}\n+\n+void ChainstateManager::checkForUncleanShutdown()\n+{\n+    if (!(m_snapshot_chainstate && m_ibd_chainstate)) {\n+        return;\n+    }\n+    if (m_ibd_chainstate->m_chain.Height() != getSnapshotHeight()) {\n+        return;\n+    }\n+    LogPrintf(\"[snapshot] unclean shutdown detected - background validation chain needs to \" /* Continued */\n+        \"be checked against the loaded snapshot and cleaned up.\\n\");\n+    completeSnapshotValidation(*m_ibd_chainstate.get());\n+}\n+\n+bool ChainstateManager::maybeCompleteSnapshotValidation(\n+    CChainState& chainstate,\n+    CBlockIndex& pindexNew)\n+{\n+    int snapshot_height = getSnapshotHeight().value_or(-1);\n+\n+    // If this is the chainstate that's validating in the background, check to see if it's\n+    // time we compare the UTXO set hash to the base of our active snapshot.\n+    if (&chainstate != &this->ActiveChainstate()) {\n+        if (pindexNew.nHeight > getSnapshotHeight()) {\n+            // TODO jamesob: better handling?\n+            LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+                \"should not have continued past the snapshot origin\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 349,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "7e2b212f9448a9b57df173a161686e33ac4c7d4e",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We should either deactivate the snapshot chainstate or shutdown.",
      "created_at": "2022-02-03T15:11:38Z",
      "updated_at": "2022-02-03T19:03:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r798664573",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/798664573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820651995",
      "pull_request_review_id": 901614980,
      "id": 820651995,
      "node_id": "PRRC_kwDOABII584w6ifb",
      "diff_hunk": "@@ -48,6 +60,33 @@ CreateAndActivateUTXOSnapshot(node::NodeContext& node, const fs::path root, F ma\n \n     malleation(auto_infile, metadata);\n \n+    if (reset_chainstate) {\n+        {\n+            // What follows is a hack to selectively reset chainstate data without\n+            // disturbing the existing BlockManager instance, which is needed to\n+            // recognize the headers chain previously generated by the chainstate we're\n+            // removing. Without those headers, we can't activate the snapshot below.\n+            LOCK(::cs_main);\n+            uint256 gen_hash = node.chainman->ActiveChainstate().m_chain[0]->GetBlockHash();\n+            node.chainman->Reset();",
      "path": "src/test/util/chainstate.h",
      "position": null,
      "original_position": 48,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9f89221913d8230b62cc3959fbb5ab4d220d91f6",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like #24299 was merged, so you might have to inline the needed resets here (or create a helper function for it).",
      "created_at": "2022-03-07T12:20:10Z",
      "updated_at": "2022-03-07T12:20:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r820651995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820651995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832762880",
      "pull_request_review_id": 918071823,
      "id": 832762880,
      "node_id": "PRRC_kwDOABII584xovQA",
      "diff_hunk": "@@ -5082,3 +5083,48 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+constexpr int SNAPSHOT_NAME_LEN = 75; // \"chainstate_\" + 64 hex characters for blockhash.\n+\n+static bool IsPathSnapshotDatadir(const fs::path& datadir_path)\n+{\n+    return fs::PathToString(datadir_path.filename()).length() == SNAPSHOT_NAME_LEN &&\n+        fs::PathToString(datadir_path.filename()).substr(0,11) == \"chainstate_\";\n+}\n+\n+static uint256 PathToSnapshotHash(const fs::path& datadir_path)\n+{\n+    assert(IsPathSnapshotDatadir(datadir_path));\n+    return uint256S(fs::PathToString(datadir_path.filename()).substr(11));\n+}\n+\n+static std::optional<fs::path> FindSnapshotChainstateDatadir()\n+{\n+    fs::path found;\n+\n+    for (fs::directory_iterator it(gArgs.GetDataDirNet()); it != fs::directory_iterator(); it++) {\n+        if (fs::is_directory(*it) && !fs::is_empty(*it) && IsPathSnapshotDatadir(it->path()))\n+        {\n+            if (found.empty()) {\n+                found = it->path();\n+                LogPrintf(\"[snapshot] found snapshot datadir %s\\n\", fs::PathToString(found));\n+            } else {\n+                LogPrintf(\"[snapshot] WARNING - detected multiple snapshot \" /* Continued */\n+                    \"datadirs (%s). This is not expected.\\n\", fs::PathToString(it->path()));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: add utxo snapshot detection\" (becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1)\r\n\r\nLog message seems vague about what the result of this warning is. I think it would be clearer if log message said the directory would be ignored like \"[snapshot] WARNING: Multiple snapshot directories were not expected. Ignoring unexpected snapshot directory {it->path}.\"\r\n\r\nAlso, as long as the code is not capable of handling multiple snapshots it seems like a better design for this might just be to call the directory `<datadir>/chainstate_snapshot` instead of `<datadir>/chainstate_{blockhash}` so there would be no ambiguity. Blockhash could be dumped to a `<datadir>/chainstate_snapshot/block` text file, if the idea is that it should be human readable (or maybe a `chainstate_snapshot/snapshot.json` file to be more fancy.) \r\n\r\nIn any case, I don't know what happens to the ignored snapshot directories after the background download completes? Will it it finish validating one snapshot and then go onto validate the next snapshot next time bitcoind is restarted?",
      "created_at": "2022-03-23T01:37:51Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832762880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832762880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832772895",
      "pull_request_review_id": 918071823,
      "id": 832772895,
      "node_id": "PRRC_kwDOABII584xoxsf",
      "diff_hunk": "@@ -5128,3 +5130,28 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n     return true;\n }\n+\n+bool CChainState::TeardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();\n+\n+    if (!snapshot_datadir) {\n+        return false;\n+    }\n+\n+    uint256 datadir_hash = PathToSnapshotHash(*snapshot_datadir);\n+\n+    if (datadir_hash != *m_from_snapshot_blockhash) {\n+        LogPrintf(\"[snapshot] WARNING - unexpected blockhash for snapshot datadir (%s); expected %s\\n\",\n+            datadir_hash.ToString(), m_from_snapshot_blockhash->ToString());\n+        return false;\n+    }\n+\n+    LogPrintf(\"[snapshot] tearing down snapshot datadir %s\\n\", fs::PathToString(*snapshot_datadir));\n+    assert(fs::remove_all(*snapshot_datadir) > 0);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: tear down snapshot datadirs upon validation failure\" (fe09582ec34ff4d19bb2aa490ffd6ccca95e8480)\r\n\r\nTwo issues this line:\r\n\r\n- Should not put code intended to produce side effects in an assert because it will be skipped if asserts are disabled. I know the bitcoin project does not \"support\" building with asserts disabled, but I don't think it should go out of its way to be broken either. Also, people who used to reading conventional c++ code may skim past asserts not expecting to see real behavior hidden inside them. Would suggest `if (remove_all() <= 0) { LogPrint(\"Warning failed to remove {snapshot}\"); } ` since this is handling an error condition inside an error condition, and asserts should be used to check code correctness, not handle i/o errors anyway.\r\n\r\n- IMO, it is usually not appropriate to call `removal_all` in production code. One stray `mv` or mount `bind command` combined with this could result in deleting data that doesn't belong to us, and potentially very large data losses. Would be safer to use `leveldb::DestroyDB` on the database and `fs::remove` calls individually on any of our own files or directories.\r\n",
      "created_at": "2022-03-23T02:02:10Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832772895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832772895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832775376",
      "pull_request_review_id": 918071823,
      "id": 832775376,
      "node_id": "PRRC_kwDOABII584xoyTQ",
      "diff_hunk": "@@ -5128,3 +5130,28 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n     return true;\n }\n+\n+bool CChainState::TeardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();\n+\n+    if (!snapshot_datadir) {\n+        return false;\n+    }\n+\n+    uint256 datadir_hash = PathToSnapshotHash(*snapshot_datadir);\n+\n+    if (datadir_hash != *m_from_snapshot_blockhash) {\n+        LogPrintf(\"[snapshot] WARNING - unexpected blockhash for snapshot datadir (%s); expected %s\\n\",\n+            datadir_hash.ToString(), m_from_snapshot_blockhash->ToString());\n+        return false;\n+    }\n+\n+    LogPrintf(\"[snapshot] tearing down snapshot datadir %s\\n\", fs::PathToString(*snapshot_datadir));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: tear down snapshot datadirs upon validation failure\" (fe09582ec34ff4d19bb2aa490ffd6ccca95e8480)\r\n\r\nHere and other places, may be better to replace \"tear down\" with \"remove\". I'm not exactly sure what tearing down implies, but it sounds different than removing.",
      "created_at": "2022-03-23T02:08:18Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832775376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832775376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832792541",
      "pull_request_review_id": 918071823,
      "id": 832792541,
      "node_id": "PRRC_kwDOABII584xo2fd",
      "diff_hunk": "@@ -4798,7 +4798,9 @@ bool ChainstateManager::ActivateSnapshot(\n         *snapshot_chainstate, coins_file, metadata);\n \n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+        snapshot_chainstate->TeardownSnapshotDatadir();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: tear down snapshot datadirs upon validation failure\" (fe09582ec34ff4d19bb2aa490ffd6ccca95e8480)\r\n\r\nReturn value is not checked here. It seems like right now this could say:\r\n\r\n```c++\r\nbool removed = snapshot_chainstate->TeardownSnapshotDatadir();\r\nassert(removed);\r\n```\r\n\r\nsince logically it should be impossible for any of the conditions where `TeardownSnapshotDatadir` returns false to trigger currently. However, this is pretty fragile, and if you're not planning to call `TeardownSnapshotDatadir` from other places in the future, I think it would be better to make `TeardownSnapshotDatadir` return `void` instead of `bool`, and turn the checks inside into `assert`s to make them function preconditions.\r\n\r\nI don't mean to nitpick but I think anyplace errors are not checked it increases chances that bugs will slip in and go undetected.",
      "created_at": "2022-03-23T02:34:48Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832792541",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832792541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4803,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832800084",
      "pull_request_review_id": 918071823,
      "id": 832800084,
      "node_id": "PRRC_kwDOABII584xo4VU",
      "diff_hunk": "@@ -551,6 +551,14 @@ void BlockManager::FlushUndoFile(int block_file, bool finalize)\n void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n {\n     LOCK(cs_LastBlockFile);\n+\n+    if (m_blockfile_info.size() < 1) {\n+        // Return if we haven't loaded any blockfiles yet. This happens during\n+        // chainstate init, when we call ChainstateManager::MaybeRebalanceCaches() (which\n+        // then calls FlushStateToDisk()), resulting in a call to this function before we\n+        // have populated `m_blockfile_info` via LoadBlockIndexDB().\n+        return;\n+    }\n     FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);",
      "path": "src/node/blockstorage.cpp",
      "position": 14,
      "original_position": 12,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1aeca9ae4d9938a9ae5a06dbe16d8b1cd40b9960",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockmanager: avoid undefined behavior during FlushBlockFile\" (1aeca9ae4d9938a9ae5a06dbe16d8b1cd40b9960)\r\n\r\nWould add `assert(m_blockfile_info.size() > m_last_blockfile)` to catch the related UB condition.",
      "created_at": "2022-03-23T02:51:24Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832800084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832800084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 536,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832804630",
      "pull_request_review_id": 918071823,
      "id": 832804630,
      "node_id": "PRRC_kwDOABII584xo5cW",
      "diff_hunk": "@@ -492,6 +492,12 @@ class CChainState\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to this chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "c703836160f3eca8073c22a1531bb98ad9666999",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_stop_use and ChainMan::isUsable\" (c703836160f3eca8073c22a1531bb98ad9666999)\r\n\r\nWould `s/this chainstate/the background chainstate/`. Which chainstate is \"this chainstate\" was not immediately obvious.",
      "created_at": "2022-03-23T03:01:16Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832804630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832804630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 498,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832809804",
      "pull_request_review_id": 918071823,
      "id": 832809804,
      "node_id": "PRRC_kwDOABII584xo6tM",
      "diff_hunk": "@@ -866,6 +872,15 @@ class ChainstateManager\n     CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n     std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return true if a chainstate is considered usable.\n+    //!\n+    //! This might be false for, say, a background validation chainstate which has",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "c703836160f3eca8073c22a1531bb98ad9666999",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_stop_use and ChainMan::isUsable\" (c703836160f3eca8073c22a1531bb98ad9666999)\r\n\r\nWould change \"This might be false, for, say\" to \"This will be false for\". IMO wishy washy comments are hard to understand and don't provide any real future proofing (A veritably false comment is still less confusing than a technically true but mostly misleading comment)",
      "created_at": "2022-03-23T03:15:32Z",
      "updated_at": "2022-03-23T03:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832809804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832809804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834565387",
      "pull_request_review_id": 920636521,
      "id": 834565387,
      "node_id": "PRRC_kwDOABII584xvnUL",
      "diff_hunk": "@@ -137,6 +137,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         }\n     }\n \n+    chainman.checkForUncleanShutdown();",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nI think it would simplify things and be less confusing to drop this checkForUncleanShutdown() method and just call `maybeCompleteSnapshotValidation()` here unconditionally.\r\n\r\nI think it overcomplicates things to think of this as special \"unclean\" case. I think if shutdown is requested, a node should stop what it is doing and shut down. If it was in the middle of doing work, and it has to pick up and redo some of that work on the restart, there is nothing \"unclean\" about that, it's just what you do when you are trying to write a robust and responsive application.",
      "created_at": "2022-03-24T17:36:10Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834565387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834565387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834589002",
      "pull_request_review_id": 920636521,
      "id": 834589002,
      "node_id": "PRRC_kwDOABII584xvtFK",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nI think this error should trigger more than logprints and a silent shutdown. Especially since after this a GUI user or systemd service script is likely to just bring the node up again and continue syncing like nothing happened. Probably would be best to call `AbortNode()` here to trigger a more noticeable error, and not just close the GUI with no indication of why it is closing.\r\n\r\nAlso text of this error doesn't seem to give an indication of what is causing it or how it should be dealt with. IIUC there are 3 possible causes for this error:\r\n\r\n1) Bitcoin sources were modified to include the hash of an invalid snapshot\r\n2) Bitcoin validation code is buggy\r\n3) Local data or memory corruption\r\n\r\nI'm assuming (3) is the most likely cause and the error message could reflect this. Maybe would suggest:\r\n\r\n> {PACKAGE_NAME} failed to validate the assumeutxo snapshot state. This indicates a hardware problem, or a bug in the software, or an bad software modification that allowed an invalid snapshot to be loaded. As a result of this, the node will shut down and delete any state that was built on the snapshot, resetting the chain height from {snapshot_tip_height} to {snapshot_base_height}. On the next restart, the node will resume syncing from {snapshot_base_height} not using any snapshot data.\r\n\r\nAlso to minimize potential damage, maybe help to debug or recover, and just avoid wiping traces of a bad thing that happened, i think it would probably be better to just rename the snapshot directory with an `-invalid` suffix instead of trying to delete it.",
      "created_at": "2022-03-24T18:04:25Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834589002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834589002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5054,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5055,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834704890",
      "pull_request_review_id": 920636521,
      "id": 834704890,
      "node_id": "PRRC_kwDOABII584xwJX6",
      "diff_hunk": "@@ -10,22 +10,34 @@\n #include <node/context.h>\n #include <node/utxo_snapshot.h>\n #include <rpc/blockchain.h>\n+#include <test/util/setup_common.h>\n #include <validation.h>\n \n #include <univalue.h>\n \n #include <boost/test/unit_test.hpp>\n \n+using node::NodeContext;",
      "path": "src/test/util/chainstate.h",
      "position": null,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9916bb825f6ef69f6c906dd4154309df07aa9d03",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: add reset_chainstate parameter for snapshot unittests\" (9916bb825f6ef69f6c906dd4154309df07aa9d03)\r\n\r\nWould avoid `using` statement in header file because it's not limited to this file, but applies to any cpp file including it.",
      "created_at": "2022-03-24T20:35:37Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834704890",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834704890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834717368",
      "pull_request_review_id": 920636521,
      "id": 834717368,
      "node_id": "PRRC_kwDOABII584xwMa4",
      "diff_hunk": "@@ -48,6 +60,33 @@ CreateAndActivateUTXOSnapshot(node::NodeContext& node, const fs::path root, F ma\n \n     malleation(auto_infile, metadata);\n \n+    if (reset_chainstate) {\n+        {\n+            // What follows is a hack to selectively reset chainstate data without",
      "path": "src/test/util/chainstate.h",
      "position": null,
      "original_position": 42,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9916bb825f6ef69f6c906dd4154309df07aa9d03",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: add reset_chainstate parameter for snapshot unittests\" (9916bb825f6ef69f6c906dd4154309df07aa9d03)\r\n\r\nCan the comment say what in particular is hacky and what would make it less hacky? This just seems like it is unitiializing and reinitializing the chainstate, not doing anything too egregrious. Is the hacky aspect of this just that its is duplicating a lot of code. Would it be easy to deduplicate in a followup?",
      "created_at": "2022-03-24T20:52:16Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834717368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834717368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834871079",
      "pull_request_review_id": 920636521,
      "id": 834871079,
      "node_id": "PRRC_kwDOABII584xwx8n",
      "diff_hunk": "@@ -5128,3 +5130,28 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n     return true;\n }\n+\n+bool CChainState::TeardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: tear down snapshot datadirs upon validation failure\" (fe09582ec34ff4d19bb2aa490ffd6ccca95e8480)\r\n\r\nIt seems fragile that in order to remove a particular snapshot chainstate's data files, we have to call a function that iterates all snapshot chainstate directories, and hope that it returns the same directory, and then do extra checks below to ensure that it did actually return the same one.\r\n\r\nIt would be nice to introduce a `fs::path ChainstatePath(std::optional<uint256> from_snapshot_blockhash)` function and just say `fs::path snapshot_datadir = ChainstatePath(m_from_snapshot_blockhash)` here. (`ChainstatePath` would just do the inverse of `PathToSnapshotHash` and probably would be useful to call other places).\r\n\r\nEDIT: Or maybe this could just call the `StoragePath()` method added later to get the chainstate directory path from `*this`?",
      "created_at": "2022-03-25T01:08:03Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834871079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834871079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834895232",
      "pull_request_review_id": 920636521,
      "id": 834895232,
      "node_id": "PRRC_kwDOABII584xw32A",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nSnapshotBlockhash() not being nullopt seems like another thing that could be asserted above so this impossible value_or() case can go away",
      "created_at": "2022-03-25T01:55:52Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834895232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834895232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5089,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834897447",
      "pull_request_review_id": 920636521,
      "id": 834897447,
      "node_id": "PRRC_kwDOABII584xw4Yn",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nHere and below I think it would be make code more readable to stop using the generic `chainstate` variable and instead use the unambiguous `m_ibd_chainstate` variable, since at this point point to the same chainstate.",
      "created_at": "2022-03-25T02:02:03Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834897447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834897447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5078,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834899579",
      "pull_request_review_id": 920636521,
      "id": 834899579,
      "node_id": "PRRC_kwDOABII584xw457",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nThis seems like an error that actually needs to be checked for, not something that can asserted. If the snapshot blockhash comes from the directory name, an outside process renaming the directory could trigger this?",
      "created_at": "2022-03-25T02:08:25Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834899579",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834899579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5095,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834900729",
      "pull_request_review_id": 920636521,
      "id": 834900729,
      "node_id": "PRRC_kwDOABII584xw5L5",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a proablem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // use handle the issue manually.\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::STATS_FAILED};\n+    }\n+\n+    // Compare the background validation chainstate's UTXO set hash against the hard-coded\n+    // assumeutxo hash we expect.\n+    //\n+    // TODO: For belt-and-suspenders, we could cache an obfuscated version of the UTXO set",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nWhy obfuscated?",
      "created_at": "2022-03-25T02:11:44Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834900729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834900729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834901932",
      "pull_request_review_id": 920636521,
      "id": 834901932,
      "node_id": "PRRC_kwDOABII584xw5es",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a proablem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // use handle the issue manually.\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::STATS_FAILED};\n+    }\n+\n+    // Compare the background validation chainstate's UTXO set hash against the hard-coded\n+    // assumeutxo hash we expect.\n+    //\n+    // TODO: For belt-and-suspenders, we could cache an obfuscated version of the UTXO set\n+    // hash for the snapshot when it's loaded in its chainstate's leveldb. We should then\n+    // reference that here for an additional check.\n+    if (AssumeutxoHash{ibd_stats.hashSerialized} != au_data.hash_serialized) {\n+        LogPrintf(\"[snapshot] hash mismatch: actual=%s, expected=%s\\n\",\n+            ibd_stats.hashSerialized.ToString(),\n+            au_data.hash_serialized.ToString());\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::HASH_MISMATCH};\n+    }\n+\n+    LogPrintf(\"[snapshot] snapshot beginning at %s has been fully validated\\n\",\n+        snapshot_blockhash.ToString());\n+\n+    m_snapshot_validated = true;\n+\n+    // m_ibd_chainstate is the same as chainstate, per the assertion above.\n+    // Modification happens to the argument (this symbol) to make it explicit that\n+    // the caller might act specifically based on this value being different.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 138,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nI don't think I understand what this comment is saying. Is using the chainstate variable future-proofing for some upcoming change? What could it mean for the caller to \"act specifically based on this value\"?",
      "created_at": "2022-03-25T02:15:31Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834901932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834901932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5137,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834903115",
      "pull_request_review_id": 920636521,
      "id": 834903115,
      "node_id": "PRRC_kwDOABII584xw5xL",
      "diff_hunk": "@@ -5174,3 +5323,44 @@ std::optional<int> ChainstateManager::getSnapshotHeight()\n     CBlockIndex* base = getSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::validatedSnapshotShutdownCleanup(\n+    fs::path new_chainstate, fs::path old_chainstate)\n+{\n+    assert(fs::exists(new_chainstate));\n+    assert(fs::exists(old_chainstate));\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+        fs::PathToString(old_chainstate));\n+\n+    // Instead of deleting the background chainstate directly, rename the old\n+    // chainstate to chainstate_bak, rename the new chainstate into place, and then\n+    // delete to avoid likelihood of corruption from mid-delete shutdown.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 211,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nThis isn't really specific to shutdown. Renaming a directory before deleting it is just good practice because renaming is atomic and deleting a directory isn't.",
      "created_at": "2022-03-25T02:19:04Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r834903115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834903115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5336,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835278526",
      "pull_request_review_id": 920636521,
      "id": 835278526,
      "node_id": "PRRC_kwDOABII584xyVa-",
      "diff_hunk": "@@ -5082,3 +5083,48 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+constexpr int SNAPSHOT_NAME_LEN = 75; // \"chainstate_\" + 64 hex characters for blockhash.\n+\n+static bool IsPathSnapshotDatadir(const fs::path& datadir_path)\n+{\n+    return fs::PathToString(datadir_path.filename()).length() == SNAPSHOT_NAME_LEN &&\n+        fs::PathToString(datadir_path.filename()).substr(0,11) == \"chainstate_\";\n+}\n+\n+static uint256 PathToSnapshotHash(const fs::path& datadir_path)\n+{\n+    assert(IsPathSnapshotDatadir(datadir_path));\n+    return uint256S(fs::PathToString(datadir_path.filename()).substr(11));\n+}\n+\n+static std::optional<fs::path> FindSnapshotChainstateDatadir()\n+{\n+    fs::path found;\n+\n+    for (fs::directory_iterator it(gArgs.GetDataDirNet()); it != fs::directory_iterator(); it++) {\n+        if (fs::is_directory(*it) && !fs::is_empty(*it) && IsPathSnapshotDatadir(it->path()))\n+        {\n+            if (found.empty()) {\n+                found = it->path();\n+                LogPrintf(\"[snapshot] found snapshot datadir %s\\n\", fs::PathToString(found));\n+            } else {\n+                LogPrintf(\"[snapshot] WARNING - detected multiple snapshot \" /* Continued */\n+                    \"datadirs (%s). This is not expected.\\n\", fs::PathToString(it->path()));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1",
      "in_reply_to_id": 832762880,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: add utxo snapshot detection\" (becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/24232/#discussion_r832762880\r\n\r\n> Also, as long as the code is not capable of handling multiple snapshots it seems like a better design for this might just be to call the directory `<datadir>/chainstate_snapshot` instead of `<datadir>/chainstate_{blockhash}` so there would be no ambiguity.\r\n\r\nI take back this part of my suggestion. I think current design of iterating all the chainstate directories is good, but the code should be improved to be more robust (in the future, not necessarily here). I think the best thing for bitcoin to do at startup would be to list all the `chainstate*` directories and use whichever one has the most work at its tip as the active chainstate. Then, if that active chainstate comes from a snapshot that needs to be validated, additionally load up the \"ibd\" chainstate and sync it up in the background to validate the starting snapshot.\r\n\r\nThis makes the right thing happen regardless of what directories are present. Snapshots will be used if they are useful, ignored if they are not, and if they are manually added or removed it causes no problems.",
      "created_at": "2022-03-25T13:38:55Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r835278526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835278526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835355848",
      "pull_request_review_id": 920636521,
      "id": 835355848,
      "node_id": "PRRC_kwDOABII584xyoTI",
      "diff_hunk": "@@ -862,6 +862,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.\n+    CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "d8f32839cfbc8cbfe194d190bdc19fb3c4d6e32a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add ChainstateManager.getSnapshot{Height,BaseBlock}()\" (d8f32839cfbc8cbfe194d190bdc19fb3c4d6e32a)\r\n\r\nWould rename `getSnapshotHeight` to `getSnapshotBaseHeight` for two reasons:\r\n\r\n- To be consistent with `getSnapshotBaseBlock`\r\n- To disambiguate. \"Snapshot\" could refer to snapshot chainstate rather than snapshot itself, and chainstate may have a height higher than the initial snapshot\r\n\r\nThis is a tangent, but I'm increasingly disliking the terms \"ibd chainstate\" and \"snapshot chainstate.\" If had a magic wand I would abolish them everywhere. I think ideally a chainstate would consist of a UTXO set, a tip pointer, and \"validated starting from\" block pointer and \"validated starting from\" UTXO hash. ChainstateManager would have a list of chainstates, and one of them would be active with rest inactive. Network code would download blocks to validate chainstates, prioritizing blocks for the active chainstate. ChainstateManager would connect the incoming blocks, and if the tip of any chainstate crossed the \"validated starting from\" block of a later chainstate, and UTXO hash matched, the later \"validated_starting_from\" pointer would moved back to the earlier one, and earlier chainstate (optionally) discarded.\r\nProbably having explicit tip and \"validated starting from\" pointers would also allow CBlockIndex validation flags to be simplified so more code doesn't need to care about assumeutxo. This could all be cleanup though. More important to get the existing code that's already merged functional and not change things at this point.",
      "created_at": "2022-03-25T15:02:41Z",
      "updated_at": "2022-03-25T15:45:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r835355848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835355848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 867,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835375721",
      "pull_request_review_id": 920636521,
      "id": 835375721,
      "node_id": "PRRC_kwDOABII584xytJp",
      "diff_hunk": "@@ -5051,6 +5172,34 @@ void ChainstateManager::Unload()\n     m_best_invalid = nullptr;\n }\n \n+void ChainstateManager::cleanup()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 155,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846)\r\n\r\nI think I'd NACK the approach for trying to rename and delete things on shutdown. I don't see why it's not possible to rename and delete the snapshot when it is validated. I understand that maybe you want the pointers to be stable so can't delete the CChainstate object, but that doesn't seem like a reason why you can't close/destroy databases and rename directories.\r\n\r\nIf I'm missing something and it really is not possible to rename the chainstate directories while the node is running, the best time to rename them would be startup time, not shutdown time. Shutdown is the time to stop work, not begin it, and it's especially precarious if bitcoin is running on a constantly rebooting windows machine or as a systemd service, where the system may ask nicely for a shutdown but quickly run out of patience and kill the process.",
      "created_at": "2022-03-25T15:24:36Z",
      "updated_at": "2022-03-25T15:50:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r835375721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835375721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843059138",
      "pull_request_review_id": 932225971,
      "id": 843059138,
      "node_id": "PRRC_kwDOABII584yQA_C",
      "diff_hunk": "@@ -5082,3 +5083,48 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+constexpr int SNAPSHOT_NAME_LEN = 75; // \"chainstate_\" + 64 hex characters for blockhash.\n+\n+static bool IsPathSnapshotDatadir(const fs::path& datadir_path)\n+{\n+    return fs::PathToString(datadir_path.filename()).length() == SNAPSHOT_NAME_LEN &&\n+        fs::PathToString(datadir_path.filename()).substr(0,11) == \"chainstate_\";\n+}\n+\n+static uint256 PathToSnapshotHash(const fs::path& datadir_path)\n+{\n+    assert(IsPathSnapshotDatadir(datadir_path));\n+    return uint256S(fs::PathToString(datadir_path.filename()).substr(11));\n+}\n+\n+static std::optional<fs::path> FindSnapshotChainstateDatadir()\n+{\n+    fs::path found;\n+\n+    for (fs::directory_iterator it(gArgs.GetDataDirNet()); it != fs::directory_iterator(); it++) {\n+        if (fs::is_directory(*it) && !fs::is_empty(*it) && IsPathSnapshotDatadir(it->path()))\n+        {\n+            if (found.empty()) {\n+                found = it->path();\n+                LogPrintf(\"[snapshot] found snapshot datadir %s\\n\", fs::PathToString(found));\n+            } else {\n+                LogPrintf(\"[snapshot] WARNING - detected multiple snapshot \" /* Continued */",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At least one improvement of the log message could be to advice the node operator on what they should do, e.g deleting the oldest snapshot one or whatever could be appropriate.",
      "created_at": "2022-04-05T17:00:20Z",
      "updated_at": "2022-04-05T17:48:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r843059138",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843059138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5418,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843077280",
      "pull_request_review_id": 932225971,
      "id": 843077280,
      "node_id": "PRRC_kwDOABII584yQFag",
      "diff_hunk": "@@ -5128,3 +5130,28 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n     return true;\n }\n+\n+bool CChainState::TeardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();\n+\n+    if (!snapshot_datadir) {\n+        return false;\n+    }\n+\n+    uint256 datadir_hash = PathToSnapshotHash(*snapshot_datadir);\n+\n+    if (datadir_hash != *m_from_snapshot_blockhash) {\n+        LogPrintf(\"[snapshot] WARNING - unexpected blockhash for snapshot datadir (%s); expected %s\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same comment, unclear what a node operator should do with an invalid, name-different snapshot datadir. ",
      "created_at": "2022-04-05T17:13:27Z",
      "updated_at": "2022-04-05T17:48:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r843077280",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843077280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843078255",
      "pull_request_review_id": 932225971,
      "id": 843078255,
      "node_id": "PRRC_kwDOABII584yQFpv",
      "diff_hunk": "@@ -862,6 +862,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "d8f32839cfbc8cbfe194d190bdc19fb3c4d6e32a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/ahs/has/g",
      "created_at": "2022-04-05T17:14:42Z",
      "updated_at": "2022-04-05T17:48:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r843078255",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843078255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 865,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844980474",
      "pull_request_review_id": 934846730,
      "id": 844980474,
      "node_id": "PRRC_kwDOABII584yXWD6",
      "diff_hunk": "@@ -90,7 +90,8 @@ BOOST_FIXTURE_TEST_CASE(chainstate_update_tip, TestChain100Setup)\n     // After adding some blocks to the tip, best block should have changed.\n     BOOST_CHECK(::g_best_block != curr_tip);\n \n-    BOOST_REQUIRE(CreateAndActivateUTXOSnapshot(m_node, m_path_root));\n+    BOOST_REQUIRE(CreateAndActivateUTXOSnapshot(\n+        this, NoMalleation, /* reset_chainstate */ true));",
      "path": "src/test/validation_chainstate_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        this, NoMalleation, /*reset_chainstate=*/true));\r\n```\r\nAnywhere you are adding / touching named args, please use the [style from the developer docs](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c-named-arguments).",
      "created_at": "2022-04-07T10:34:10Z",
      "updated_at": "2022-04-07T10:34:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r844980474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844980474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846258979",
      "pull_request_review_id": 936652174,
      "id": 846258979,
      "node_id": "PRRC_kwDOABII584ycOMj",
      "diff_hunk": "@@ -2959,6 +2964,12 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n \n         if (nStopAtHeight && pindexNewTip && pindexNewTip->nHeight >= nStopAtHeight) StartShutdown();\n \n+        // This will have been toggled in ABCStep -> ConnectTip -> completeSnapshotValidation,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `maybeCompleteSnapshotValidation`",
      "created_at": "2022-04-08T15:41:14Z",
      "updated_at": "2022-04-08T17:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r846258979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846258979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846283199",
      "pull_request_review_id": 936652174,
      "id": 846283199,
      "node_id": "PRRC_kwDOABII584ycUG_",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834589002,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the log print can be even more proactive, if the causes of this error is 1., the log print could invite the node operator to report the snapshot source to the project, e.g opening an issue. That would help to identify and correct wrongdoing in the snapshot distribution circuit.",
      "created_at": "2022-04-08T16:07:45Z",
      "updated_at": "2022-04-08T17:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r846283199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846283199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5054,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5055,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846291146",
      "pull_request_review_id": 936652174,
      "id": 846291146,
      "node_id": "PRRC_kwDOABII584ycWDK",
      "diff_hunk": "@@ -772,11 +773,24 @@ class CChainState\n      * Only used during snapshot activation (within ChainstateManager) if the loaded\n      * snapshot does not validate.\n      */\n-    bool TeardownSnapshotDatadir() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    bool teardownSnapshotDatadir() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     friend ChainstateManager;\n };\n \n+\n+enum class SnapshotCompletionError {\n+    IBD_TOO_FAR,\n+    MISSING_CHAINPARAMS,\n+    STATS_FAILED,\n+    HASH_MISMATCH,\n+};",
      "path": "src/validation.h",
      "position": 103,
      "original_position": 24,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice to add comments about error purposes.",
      "created_at": "2022-04-08T16:18:06Z",
      "updated_at": "2022-04-08T17:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r846291146",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846291146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 781,
      "original_line": 781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846306235",
      "pull_request_review_id": 936652174,
      "id": 846306235,
      "node_id": "PRRC_kwDOABII584ycZu7",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a proablem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // use handle the issue manually.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/proablem/problem/g and s/use/user/g",
      "created_at": "2022-04-08T16:38:49Z",
      "updated_at": "2022-04-08T17:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r846306235",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846306235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846320699",
      "pull_request_review_id": 936652174,
      "id": 846320699,
      "node_id": "PRRC_kwDOABII584ycdQ7",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();",
      "path": "src/validation.cpp",
      "position": 329,
      "original_position": 56,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From reading `ChainstateManager` docs, there are two notions of IBD chainstates, the `ibd chainstate` and the `background ibd chainstate`. However, the `ibd chainstate` is only used here, after it has been fully validated and won't be used further as node operation is shutting down.\r\n\r\nSo what's the purpose of using the notion of an `ibd_chainstate`, couldn't `m_ibd_chainstate` be called `m_background_ibd_chainstate` ?",
      "created_at": "2022-04-08T16:58:57Z",
      "updated_at": "2022-04-08T17:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r846320699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/846320699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5178,
      "original_line": 5178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847503113",
      "pull_request_review_id": 938257241,
      "id": 847503113,
      "node_id": "PRRC_kwDOABII584yg98J",
      "diff_hunk": "@@ -5082,3 +5083,48 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+constexpr int SNAPSHOT_NAME_LEN = 75; // \"chainstate_\" + 64 hex characters for blockhash.\n+\n+static bool IsPathSnapshotDatadir(const fs::path& datadir_path)\n+{\n+    return fs::PathToString(datadir_path.filename()).length() == SNAPSHOT_NAME_LEN &&\n+        fs::PathToString(datadir_path.filename()).substr(0,11) == \"chainstate_\";\n+}\n+\n+static uint256 PathToSnapshotHash(const fs::path& datadir_path)\n+{\n+    assert(IsPathSnapshotDatadir(datadir_path));\n+    return uint256S(fs::PathToString(datadir_path.filename()).substr(11));\n+}\n+\n+static std::optional<fs::path> FindSnapshotChainstateDatadir()\n+{\n+    fs::path found;\n+\n+    for (fs::directory_iterator it(gArgs.GetDataDirNet()); it != fs::directory_iterator(); it++) {\n+        if (fs::is_directory(*it) && !fs::is_empty(*it) && IsPathSnapshotDatadir(it->path()))\n+        {\n+            if (found.empty()) {\n+                found = it->path();\n+                LogPrintf(\"[snapshot] found snapshot datadir %s\\n\", fs::PathToString(found));\n+            } else {\n+                LogPrintf(\"[snapshot] WARNING - detected multiple snapshot \" /* Continued */\n+                    \"datadirs (%s). This is not expected.\\n\", fs::PathToString(it->path()));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1",
      "in_reply_to_id": 832762880,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think the best thing for bitcoin to do at startup would be to list all the chainstate* directories and use whichever one has the most work at its tip as the active chainstate.\r\n\r\nI agree this would be a nice feature, but the process of unpacking snapshots and loading them to the point of being able to evaluate \"most work\" entails some big changes, so I'll defer this one for later. \r\n\r\nI do like your suggestion of calling it `<datadir>/chainstate_snapshot` and will incorporate that.",
      "created_at": "2022-04-11T16:08:20Z",
      "updated_at": "2022-04-11T16:08:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r847503113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847503113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847697301",
      "pull_request_review_id": 938535930,
      "id": 847697301,
      "node_id": "PRRC_kwDOABII584yhtWV",
      "diff_hunk": "@@ -5051,6 +5172,34 @@ void ChainstateManager::Unload()\n     m_best_invalid = nullptr;\n }\n \n+void ChainstateManager::cleanup()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 155,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 835375721,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good points, willfix.",
      "created_at": "2022-04-11T20:12:32Z",
      "updated_at": "2022-04-11T20:12:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r847697301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847697301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847718311",
      "pull_request_review_id": 938565564,
      "id": 847718311,
      "node_id": "PRRC_kwDOABII584yhyen",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();",
      "path": "src/validation.cpp",
      "position": 329,
      "original_position": 56,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 846320699,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_ibd_chainstate` is the active if a snapshot is not being used, so calling it `m_background_...` wouldn't be appropriate.",
      "created_at": "2022-04-11T20:40:49Z",
      "updated_at": "2022-04-11T20:40:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r847718311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847718311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5178,
      "original_line": 5178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849849049",
      "pull_request_review_id": 941494747,
      "id": 849849049,
      "node_id": "PRRC_kwDOABII584yp6rZ",
      "diff_hunk": "@@ -551,6 +551,14 @@ void BlockManager::FlushUndoFile(int block_file, bool finalize)\n void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n {\n     LOCK(cs_LastBlockFile);\n+\n+    if (m_blockfile_info.size() < 1) {\n+        // Return if we haven't loaded any blockfiles yet. This happens during\n+        // chainstate init, when we call ChainstateManager::MaybeRebalanceCaches() (which\n+        // then calls FlushStateToDisk()), resulting in a call to this function before we\n+        // have populated `m_blockfile_info` via LoadBlockIndexDB().\n+        return;\n+    }\n     FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);",
      "path": "src/node/blockstorage.cpp",
      "position": 14,
      "original_position": 12,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1aeca9ae4d9938a9ae5a06dbe16d8b1cd40b9960",
      "in_reply_to_id": 832800084,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added, thanks.",
      "created_at": "2022-04-13T20:03:45Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849849049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849849049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 536,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849860945",
      "pull_request_review_id": 941494747,
      "id": 849860945,
      "node_id": "PRRC_kwDOABII584yp9lR",
      "diff_hunk": "@@ -137,6 +137,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         }\n     }\n \n+    chainman.checkForUncleanShutdown();",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834565387,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, good idea. Done. I'm now just calling `maybeCompleteSnapshotValidation()` from within `LoadChainstate()` (during init). This dovetails with the broader change of doing background validation cleanup on initialization (instead of shutdown) which I'll describe in other comments. ",
      "created_at": "2022-04-13T20:14:51Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849860945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849860945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849862245",
      "pull_request_review_id": 941494747,
      "id": 849862245,
      "node_id": "PRRC_kwDOABII584yp95l",
      "diff_hunk": "@@ -10,22 +10,34 @@\n #include <node/context.h>\n #include <node/utxo_snapshot.h>\n #include <rpc/blockchain.h>\n+#include <test/util/setup_common.h>\n #include <validation.h>\n \n #include <univalue.h>\n \n #include <boost/test/unit_test.hpp>\n \n+using node::NodeContext;",
      "path": "src/test/util/chainstate.h",
      "position": null,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9916bb825f6ef69f6c906dd4154309df07aa9d03",
      "in_reply_to_id": 834704890,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks.",
      "created_at": "2022-04-13T20:16:44Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849862245",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849862245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849863232",
      "pull_request_review_id": 941494747,
      "id": 849863232,
      "node_id": "PRRC_kwDOABII584yp-JA",
      "diff_hunk": "@@ -48,6 +60,33 @@ CreateAndActivateUTXOSnapshot(node::NodeContext& node, const fs::path root, F ma\n \n     malleation(auto_infile, metadata);\n \n+    if (reset_chainstate) {\n+        {\n+            // What follows is a hack to selectively reset chainstate data without",
      "path": "src/test/util/chainstate.h",
      "position": null,
      "original_position": 42,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9916bb825f6ef69f6c906dd4154309df07aa9d03",
      "in_reply_to_id": 834717368,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the mention of hackiness. Perhaps this could live as a separate function if it was found to be useful elsewhere, but I think for now it's fine here. The code itself is sort of single-purpose; I don't think there's another case where we want to do such an unceremonious unload of all the chainstate data.",
      "created_at": "2022-04-13T20:18:00Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849863232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849863232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849939352",
      "pull_request_review_id": 941494747,
      "id": 849939352,
      "node_id": "PRRC_kwDOABII584yqQuY",
      "diff_hunk": "@@ -90,7 +90,8 @@ BOOST_FIXTURE_TEST_CASE(chainstate_update_tip, TestChain100Setup)\n     // After adding some blocks to the tip, best block should have changed.\n     BOOST_CHECK(::g_best_block != curr_tip);\n \n-    BOOST_REQUIRE(CreateAndActivateUTXOSnapshot(m_node, m_path_root));\n+    BOOST_REQUIRE(CreateAndActivateUTXOSnapshot(\n+        this, NoMalleation, /* reset_chainstate */ true));",
      "path": "src/test/validation_chainstate_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "in_reply_to_id": 844980474,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks.",
      "created_at": "2022-04-13T22:14:26Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849939352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849939352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942023",
      "pull_request_review_id": 941494747,
      "id": 849942023,
      "node_id": "PRRC_kwDOABII584yqRYH",
      "diff_hunk": "@@ -2959,6 +2964,12 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n \n         if (nStopAtHeight && pindexNewTip && pindexNewTip->nHeight >= nStopAtHeight) StartShutdown();\n \n+        // This will have been toggled in ABCStep -> ConnectTip -> completeSnapshotValidation,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "51d0dd34ecfb42d80707ec6cf788f0e63e30439f",
      "in_reply_to_id": 846258979,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2022-04-13T22:19:35Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942314",
      "pull_request_review_id": 941494747,
      "id": 849942314,
      "node_id": "PRRC_kwDOABII584yqRcq",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834589002,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now using `AbortNode()` as well as the nice log message you specify; I'm also including `PACKAGE_BUGREPORT` which lists the github issues URL. Thanks for the great suggestion.",
      "created_at": "2022-04-13T22:20:15Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5054,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5055,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942419",
      "pull_request_review_id": 941494747,
      "id": 849942419,
      "node_id": "PRRC_kwDOABII584yqReT",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834897447,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks.",
      "created_at": "2022-04-13T22:20:28Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942419",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5078,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942512",
      "pull_request_review_id": 941494747,
      "id": 849942512,
      "node_id": "PRRC_kwDOABII584yqRfw",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834895232,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-04-13T22:20:40Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942512",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5089,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942541",
      "pull_request_review_id": 941494747,
      "id": 849942541,
      "node_id": "PRRC_kwDOABII584yqRgN",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834899579,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, done.",
      "created_at": "2022-04-13T22:20:45Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942541",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5095,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942588",
      "pull_request_review_id": 941494747,
      "id": 849942588,
      "node_id": "PRRC_kwDOABII584yqRg8",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a proablem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // use handle the issue manually.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 846306235,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks.",
      "created_at": "2022-04-13T22:20:50Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942687",
      "pull_request_review_id": 941494747,
      "id": 849942687,
      "node_id": "PRRC_kwDOABII584yqRif",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a proablem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // use handle the issue manually.\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::STATS_FAILED};\n+    }\n+\n+    // Compare the background validation chainstate's UTXO set hash against the hard-coded\n+    // assumeutxo hash we expect.\n+    //\n+    // TODO: For belt-and-suspenders, we could cache an obfuscated version of the UTXO set",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834900729,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed.",
      "created_at": "2022-04-13T22:21:02Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942839",
      "pull_request_review_id": 941494747,
      "id": 849942839,
      "node_id": "PRRC_kwDOABII584yqRk3",
      "diff_hunk": "@@ -5025,6 +5035,117 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      CChainState& chainstate,\n+      CBlockIndex& index_new,\n+      std::function<void()> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (&chainstate == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            &chainstate != m_ibd_chainstate.get()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        LogPrintf(\"[snapshot] !!! the snapshot you've been working off of is invalid\\n\");\n+        LogPrintf(\"[snapshot] deleting snapshot and reverting to validated chain\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+        m_snapshot_chainstate->teardownSnapshotDatadir();\n+\n+        LogPrintf(\"[snapshot] SHUTTING DOWN!\\n\");\n+        shutdown_fnc();\n+    };\n+\n+    int snapshot_height = *getSnapshotHeight();\n+\n+   if (index_new.nHeight > snapshot_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};\n+     } else if (index_new.nHeight < snapshot_height) {\n+         // Background IBD not complete yet.\n+         return {false, {}};\n+     }\n+\n+    int curr_height = chainstate.m_chain.Height();\n+\n+    assert(snapshot_height == curr_height);\n+    assert(snapshot_height == index_new.nHeight);\n+    assert(&chainstate == m_ibd_chainstate.get());\n+    assert(isUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = chainstate.CoinsDB();\n+    chainstate.ForceFlushStateToDisk();\n+\n+    auto snapshot_blockhash = SnapshotBlockhash().value_or(uint256());\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        chainstate.m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    assert(index_new.GetBlockHash() == snapshot_blockhash);\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    CCoinsStats ibd_stats{CoinStatsHashType::HASH_SERIALIZED};\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n+\n+    if (!GetUTXOStats(&ibd_coins_db, WITH_LOCK(::cs_main, return std::ref(m_blockman)), ibd_stats, breakpoint_fnc)) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a proablem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // use handle the issue manually.\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::STATS_FAILED};\n+    }\n+\n+    // Compare the background validation chainstate's UTXO set hash against the hard-coded\n+    // assumeutxo hash we expect.\n+    //\n+    // TODO: For belt-and-suspenders, we could cache an obfuscated version of the UTXO set\n+    // hash for the snapshot when it's loaded in its chainstate's leveldb. We should then\n+    // reference that here for an additional check.\n+    if (AssumeutxoHash{ibd_stats.hashSerialized} != au_data.hash_serialized) {\n+        LogPrintf(\"[snapshot] hash mismatch: actual=%s, expected=%s\\n\",\n+            ibd_stats.hashSerialized.ToString(),\n+            au_data.hash_serialized.ToString());\n+        handleInvalidSnapshot();\n+        return {false, SnapshotCompletionError::HASH_MISMATCH};\n+    }\n+\n+    LogPrintf(\"[snapshot] snapshot beginning at %s has been fully validated\\n\",\n+        snapshot_blockhash.ToString());\n+\n+    m_snapshot_validated = true;\n+\n+    // m_ibd_chainstate is the same as chainstate, per the assertion above.\n+    // Modification happens to the argument (this symbol) to make it explicit that\n+    // the caller might act specifically based on this value being different.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 138,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834901932,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I must've been in a haze when I typed this - I have no idea what it means either. Removed.",
      "created_at": "2022-04-13T22:21:22Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849942839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849942839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5137,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849943709",
      "pull_request_review_id": 941494747,
      "id": 849943709,
      "node_id": "PRRC_kwDOABII584yqRyd",
      "diff_hunk": "@@ -5051,6 +5172,34 @@ void ChainstateManager::Unload()\n     m_best_invalid = nullptr;\n }\n \n+void ChainstateManager::cleanup()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 155,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 835375721,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm now doing the \"cleanup\" (i.e. deletion of background chainstate data) on startup, and not shutdown. I'd like to experiment with doing deletion inline in a follow-up PR.",
      "created_at": "2022-04-13T22:23:10Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849943709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849943709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849945757",
      "pull_request_review_id": 941494747,
      "id": 849945757,
      "node_id": "PRRC_kwDOABII584yqSSd",
      "diff_hunk": "@@ -5128,3 +5130,28 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n     return true;\n }\n+\n+bool CChainState::TeardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();\n+\n+    if (!snapshot_datadir) {\n+        return false;\n+    }\n+\n+    uint256 datadir_hash = PathToSnapshotHash(*snapshot_datadir);\n+\n+    if (datadir_hash != *m_from_snapshot_blockhash) {\n+        LogPrintf(\"[snapshot] WARNING - unexpected blockhash for snapshot datadir (%s); expected %s\\n\",\n+            datadir_hash.ToString(), m_from_snapshot_blockhash->ToString());\n+        return false;\n+    }\n+\n+    LogPrintf(\"[snapshot] tearing down snapshot datadir %s\\n\", fs::PathToString(*snapshot_datadir));\n+    assert(fs::remove_all(*snapshot_datadir) > 0);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": 832772895,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both good points, both fixed. I'm now using `leveldb::DestroyDB()` to remove chainstate data.",
      "created_at": "2022-04-13T22:27:20Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849945757",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849945757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849945887",
      "pull_request_review_id": 941494747,
      "id": 849945887,
      "node_id": "PRRC_kwDOABII584yqSUf",
      "diff_hunk": "@@ -5174,3 +5323,44 @@ std::optional<int> ChainstateManager::getSnapshotHeight()\n     CBlockIndex* base = getSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::validatedSnapshotShutdownCleanup(\n+    fs::path new_chainstate, fs::path old_chainstate)\n+{\n+    assert(fs::exists(new_chainstate));\n+    assert(fs::exists(old_chainstate));\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+        fs::PathToString(old_chainstate));\n+\n+    // Instead of deleting the background chainstate directly, rename the old\n+    // chainstate to chainstate_bak, rename the new chainstate into place, and then\n+    // delete to avoid likelihood of corruption from mid-delete shutdown.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 211,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 834903115,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed comment",
      "created_at": "2022-04-13T22:27:38Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849945887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849945887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5336,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849945970",
      "pull_request_review_id": 941494747,
      "id": 849945970,
      "node_id": "PRRC_kwDOABII584yqSVy",
      "diff_hunk": "@@ -492,6 +492,12 @@ class CChainState\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to this chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "c703836160f3eca8073c22a1531bb98ad9666999",
      "in_reply_to_id": 832804630,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2022-04-13T22:27:49Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849945970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849945970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 498,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849946019",
      "pull_request_review_id": 941494747,
      "id": 849946019,
      "node_id": "PRRC_kwDOABII584yqSWj",
      "diff_hunk": "@@ -772,11 +773,24 @@ class CChainState\n      * Only used during snapshot activation (within ChainstateManager) if the loaded\n      * snapshot does not validate.\n      */\n-    bool TeardownSnapshotDatadir() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    bool teardownSnapshotDatadir() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     friend ChainstateManager;\n };\n \n+\n+enum class SnapshotCompletionError {\n+    IBD_TOO_FAR,\n+    MISSING_CHAINPARAMS,\n+    STATS_FAILED,\n+    HASH_MISMATCH,\n+};",
      "path": "src/validation.h",
      "position": 103,
      "original_position": 24,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "328aa05c28fe9e5fff5d90e9b23bbbb5f6da1846",
      "in_reply_to_id": 846291146,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-04-13T22:27:54Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849946019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849946019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 781,
      "original_line": 781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849946072",
      "pull_request_review_id": 941494747,
      "id": 849946072,
      "node_id": "PRRC_kwDOABII584yqSXY",
      "diff_hunk": "@@ -862,6 +862,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "d8f32839cfbc8cbfe194d190bdc19fb3c4d6e32a",
      "in_reply_to_id": 843078255,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks",
      "created_at": "2022-04-13T22:28:00Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849946072",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849946072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 865,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849947501",
      "pull_request_review_id": 941494747,
      "id": 849947501,
      "node_id": "PRRC_kwDOABII584yqStt",
      "diff_hunk": "@@ -862,6 +862,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot ahs been loaded.\n+    CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "d8f32839cfbc8cbfe194d190bdc19fb3c4d6e32a",
      "in_reply_to_id": 835355848,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renamed. Agree with your thoughts on the better design, and also agree that the path from here to there is not so long. I'd just prefer to wait until we actually need to revamp the design (e.g. multiple parallel background chainstates) to do all the code changes.",
      "created_at": "2022-04-13T22:31:02Z",
      "updated_at": "2022-04-13T22:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849947501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849947501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 867,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849947709",
      "pull_request_review_id": 941494747,
      "id": 849947709,
      "node_id": "PRRC_kwDOABII584yqSw9",
      "diff_hunk": "@@ -866,6 +872,15 @@ class ChainstateManager\n     CBlockIndex* getSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n     std::optional<int> getSnapshotHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return true if a chainstate is considered usable.\n+    //!\n+    //! This might be false for, say, a background validation chainstate which has",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "c703836160f3eca8073c22a1531bb98ad9666999",
      "in_reply_to_id": 832809804,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wishywashy comment no more.",
      "created_at": "2022-04-13T22:31:28Z",
      "updated_at": "2022-04-13T22:41:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r849947709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849947709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854725086",
      "pull_request_review_id": 947980724,
      "id": 854725086,
      "node_id": "PRRC_kwDOABII584y8hHe",
      "diff_hunk": "@@ -5082,3 +5083,48 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+constexpr int SNAPSHOT_NAME_LEN = 75; // \"chainstate_\" + 64 hex characters for blockhash.\n+\n+static bool IsPathSnapshotDatadir(const fs::path& datadir_path)\n+{\n+    return fs::PathToString(datadir_path.filename()).length() == SNAPSHOT_NAME_LEN &&\n+        fs::PathToString(datadir_path.filename()).substr(0,11) == \"chainstate_\";\n+}\n+\n+static uint256 PathToSnapshotHash(const fs::path& datadir_path)\n+{\n+    assert(IsPathSnapshotDatadir(datadir_path));\n+    return uint256S(fs::PathToString(datadir_path.filename()).substr(11));\n+}\n+\n+static std::optional<fs::path> FindSnapshotChainstateDatadir()\n+{\n+    fs::path found;\n+\n+    for (fs::directory_iterator it(gArgs.GetDataDirNet()); it != fs::directory_iterator(); it++) {\n+        if (fs::is_directory(*it) && !fs::is_empty(*it) && IsPathSnapshotDatadir(it->path()))\n+        {\n+            if (found.empty()) {\n+                found = it->path();\n+                LogPrintf(\"[snapshot] found snapshot datadir %s\\n\", fs::PathToString(found));\n+            } else {\n+                LogPrintf(\"[snapshot] WARNING - detected multiple snapshot \" /* Continued */\n+                    \"datadirs (%s). This is not expected.\\n\", fs::PathToString(it->path()));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "becdbd6da4c6d7c9c658ffc38b1c9da1c89571a1",
      "in_reply_to_id": 832762880,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've changed the code to write the snapshot chainstate leveldb to `chainstate_snapshot`. A separate file within that directory called `base_blockhash` contains a serialized uint256 of what used to be in the directory name.",
      "created_at": "2022-04-21T02:30:16Z",
      "updated_at": "2022-04-21T02:30:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r854725086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854725086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854725915",
      "pull_request_review_id": 947981710,
      "id": 854725915,
      "node_id": "PRRC_kwDOABII584y8hUb",
      "diff_hunk": "@@ -5128,3 +5130,28 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     this->InitializeChainstate(mempool, /*snapshot_blockhash*/ PathToSnapshotHash(*path));\n     return true;\n }\n+\n+bool CChainState::TeardownSnapshotDatadir()\n+{\n+    if (!m_from_snapshot_blockhash) {\n+        // Chainstate isn't based on a snapshot.\n+        return false;\n+    }\n+    std::optional<fs::path> snapshot_datadir = FindSnapshotChainstateDatadir();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fe09582ec34ff4d19bb2aa490ffd6ccca95e8480",
      "in_reply_to_id": 834871079,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've simplified all this with the rename to `chainstate_snapshot`.",
      "created_at": "2022-04-21T02:32:30Z",
      "updated_at": "2022-04-21T02:32:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r854725915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854725915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855193716",
      "pull_request_review_id": 948636856,
      "id": 855193716,
      "node_id": "PRRC_kwDOABII584y-Th0",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.",
      "path": "src/validation.cpp",
      "position": 270,
      "original_position": 63,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps it isn't actually necessary to hold `cs_main` throughout this if I set `m_stop_use` immediately, and then ensure all chainstate accesses are going through `isUsable()` checks...\r\n\r\nEdit: anyway, that's an optional optimization that can be looked at in a future PR.",
      "created_at": "2022-04-21T13:36:19Z",
      "updated_at": "2022-04-21T13:37:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855193716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855193716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5119,
      "original_line": 5119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855354180",
      "pull_request_review_id": 948865074,
      "id": 855354180,
      "node_id": "PRRC_kwDOABII584y-6tE",
      "diff_hunk": "@@ -212,6 +217,12 @@ class CDBWrapper\n \n     std::vector<unsigned char> CreateObfuscateKey() const;\n \n+    //! path to filesystem storage\n+    const fs::path m_path;\n+\n+    //! whether or not the database resides in memory\n+    bool m_is_memory;",
      "path": "src/dbwrapper.h",
      "position": 19,
      "original_position": 20,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "98fc81fbaaa02792b94264680cc0062ccfde9698",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"db: add StoragePath, Options to CDBWrapper/CCoinsViewDB\" (98fc81fbaaa02792b94264680cc0062ccfde9698)\r\n\r\nMinor: Might be a little nicer to combine two members these into a `std::optional<std::path>` member to avoid work when `StoragePath` is called, and to prevent possibility of class being in a confusing `m_is_memory && !m_path.empty()` state",
      "created_at": "2022-04-21T16:04:10Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855354180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855354180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": 226,
      "original_start_line": 220,
      "start_side": "RIGHT",
      "line": 230,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855365185",
      "pull_request_review_id": 948865074,
      "id": 855365185,
      "node_id": "PRRC_kwDOABII584y-9ZB",
      "diff_hunk": "@@ -5202,3 +5202,17 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+bool CChainState::destroyCoinsDB(const std::string& db_path)\n+{\n+    AssertLockHeld(::cs_main);\n+    LogPrintf(\"Destroying coins leveldb for %s\\n\", this->ToString());\n+    dbwrapper::Options options = Assert(m_coins_views)->m_dbview.Options();\n+    // We have to destruct leveldb::DB in order to release the db lock, otherwise\n+    // `DestroyDB` will fail. See `leveldb::~DBImpl()`.\n+    //\n+    // And this chainstate should no longer be considered usable anyway, so\n+    // teardown all coinsviews.\n+    m_coins_views.reset();\n+    return dbwrapper::DestroyDB(db_path, options).ok();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "f427976e6a3e024564fa824cc0578ee9b1285198",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::destroyCoinsDB\" (f427976e6a3e024564fa824cc0578ee9b1285198)\r\n\r\nIs it necessary for this function to be passed a database path instead of getting the path from `this->CoinsDB->StoragePath()`? If so, would be helpful to add a comment saying when db_path might not the coinsdb path. If not, would be nice to eliminate the `db_path` argument to simplify and remove the possibility of bugs from passing the wrong path.",
      "created_at": "2022-04-21T16:16:26Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855365185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855365185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855381780",
      "pull_request_review_id": 948865074,
      "id": 855381780,
      "node_id": "PRRC_kwDOABII584y_BcU",
      "diff_hunk": "@@ -4856,6 +4861,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+constexpr std::string_view SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "da4aaba0073108092f0dd0e02753eea253395c4e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (da4aaba0073108092f0dd0e02753eea253395c4e)\r\n\r\nJust IMO, but `snapshot_block_hash` might be a more descriptive name than `base_blockhash` for someone just looking at directory contents.",
      "created_at": "2022-04-21T16:35:31Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855381780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855381780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4907,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855388880",
      "pull_request_review_id": 948865074,
      "id": 855388880,
      "node_id": "PRRC_kwDOABII584y_DLQ",
      "diff_hunk": "@@ -4917,6 +4917,17 @@ static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\n     return base_blockhash;\n }\n \n+static std::optional<fs::path> FindSnapshotChainstateDatadir()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "5e8879c402b23f8c3b71287a1f4393caa73dfcbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: remove snapshot datadirs upon validation failure\" (5e8879c402b23f8c3b71287a1f4393caa73dfcbd)\r\n\r\nThis function was added in previous commit and is moving this commit. Would be good to just add the function to the final location in previous commit (\"init: add utxo snapshot detection\", 94a484340be246e38ba40644f4e2ba1913d22240) and avoid the move.\r\n",
      "created_at": "2022-04-21T16:44:33Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855388880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855388880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855402238",
      "pull_request_review_id": 948865074,
      "id": 855402238,
      "node_id": "PRRC_kwDOABII584y_Gb-",
      "diff_hunk": "@@ -4986,7 +4997,15 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = FindSnapshotChainstateDatadir()) {\n+            bool removed = snapshot_chainstate->removeSnapshotDatadir();\n+            assert(removed);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "5e8879c402b23f8c3b71287a1f4393caa73dfcbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: remove snapshot datadirs upon validation failure\" (5e8879c402b23f8c3b71287a1f4393caa73dfcbd)\r\n\r\nMaybe this doesn't apply because our project uses assets in a nonstandard way, but I would only ever use C asserts to catch internal logic bugs which are supposed to be impossible. Would not use asserts to handle operating system errors, problems with I/O, or external libraries. \r\n\r\nSo I'd replace this assert and other `assert(removed)` in the function below to call AbortNode or throw runtime_error instead. Not sure if this required, though.",
      "created_at": "2022-04-21T17:00:19Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855402238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855402238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5016,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855413625",
      "pull_request_review_id": 948865074,
      "id": 855413625,
      "node_id": "PRRC_kwDOABII584y_JN5",
      "diff_hunk": "@@ -4814,12 +4814,8 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     LOCK(::cs_main);\n     std::vector<CChainState*> out;\n \n-    if (!IsSnapshotValidated() && m_ibd_chainstate) {",
      "path": "src/validation.cpp",
      "position": 91,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "70455311b695e65b847031a90fa870ab50519b48",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_stop_use and ChainMan::isUsable\" (70455311b695e65b847031a90fa870ab50519b48)\r\n\r\nIt seems like a good thing to drop the `IsSnapshotValidated` call in this commit so the `GetAll()` method implementation is simpler and not tied to details of snapshot validation. But just to make sure new code is equivalent to previous code, is it true that `isUsable(m_ibd_chainstate)` implies `IsSnapshotValidated()`? Like if you added a `assert(!isUsable(m_ibd_chainstate) || IsSnapshotValidated())` here it would pass? Not suggesting to add this, just wondering.",
      "created_at": "2022-04-21T17:15:18Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855413625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855413625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4676,
      "original_line": 4676,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855415853",
      "pull_request_review_id": 948865074,
      "id": 855415853,
      "node_id": "PRRC_kwDOABII584y_Jwt",
      "diff_hunk": "@@ -5263,17 +5259,27 @@ void ChainstateManager::Unload()\n void ChainstateManager::MaybeRebalanceCaches()\n {\n     AssertLockHeld(::cs_main);\n-    if (m_ibd_chainstate && !m_snapshot_chainstate) {\n+    bool ibd_usable = isUsable(m_ibd_chainstate.get());\n+    bool snapshot_usable = isUsable(m_snapshot_chainstate.get());\n+    assert(ibd_usable || snapshot_usable);\n+\n+    if (!ibd_usable && snapshot_usable) {\n+        // Snapshot must have been validated if snapshot chain is in use but ibd isn't.\n+        assert(m_snapshot_validated);\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "70455311b695e65b847031a90fa870ab50519b48",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_stop_use and ChainMan::isUsable\" (70455311b695e65b847031a90fa870ab50519b48)\r\n\r\nIMO, this would be a little clearer as:\r\n\r\n```c++\r\n    if (!ibd_usable) {\r\n        // Snapshot must have been validated if ibd chain is out of use.\r\n        assert(snapshot_usable);\r\n        assert(m_snapshot_validated);\r\n    }\r\n```",
      "created_at": "2022-04-21T17:18:19Z",
      "updated_at": "2022-04-21T18:07:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855415853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855415853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5266,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855423108",
      "pull_request_review_id": 948865074,
      "id": 855423108,
      "node_id": "PRRC_kwDOABII584y_LiE",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *getSnapshotBaseHeight();\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and move any \"",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nWould s/move/stop using/. The word \"move\" seems less clear here, and the actual useful details about the rename are logged later.",
      "created_at": "2022-04-21T17:27:46Z",
      "updated_at": "2022-04-21T18:07:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855423108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855423108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855424313",
      "pull_request_review_id": 948865074,
      "id": 855424313,
      "node_id": "PRRC_kwDOABII584y_L05",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *getSnapshotBaseHeight();\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and move any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.translated);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nI believe should log `.original`, not `.translated`",
      "created_at": "2022-04-21T17:29:22Z",
      "updated_at": "2022-04-21T18:07:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855424313",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855424313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5307,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855429335",
      "pull_request_review_id": 948865074,
      "id": 855429335,
      "node_id": "PRRC_kwDOABII584y_NDX",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *getSnapshotBaseHeight();\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and move any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.translated);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->invalidateSnapshotDatadir();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+   if (index_new.nHeight > snapshot_base_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nCurious why the code doesn't just assert `index_new.nHeight <= snapshot_base_height`. Is it possible for chainstates  that would trigger this to even be loaded? If so, might make be better to check chainstate heights early when they are loaded than to handle it later as part of validation.",
      "created_at": "2022-04-21T17:35:30Z",
      "updated_at": "2022-04-21T18:07:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855429335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855429335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855445552",
      "pull_request_review_id": 948865074,
      "id": 855445552,
      "node_id": "PRRC_kwDOABII584y_RAw",
      "diff_hunk": "@@ -5357,6 +5523,24 @@ bool CChainState::removeSnapshotDatadir()\n     return destroyed && !fs::exists(snapshot_datadir);\n }\n \n+void CChainState::invalidateSnapshotDatadir()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    fs::path snapshot_datadir = *FindSnapshotChainstateDatadir();\n+    assert(fs::exists(snapshot_datadir));\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+    fs::rename(snapshot_datadir, invalid_path);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 240,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nWould be good to log that the rename fails, if it fails. Not critical, but could avoid confusion figuring out what is happening from the logs if two snapshots fail to validate.",
      "created_at": "2022-04-21T17:52:27Z",
      "updated_at": "2022-04-21T18:07:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855445552",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855445552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5541,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855452262",
      "pull_request_review_id": 948865074,
      "id": 855452262,
      "node_id": "PRRC_kwDOABII584y_Spm",
      "diff_hunk": "@@ -5369,3 +5553,62 @@ std::optional<int> ChainstateManager::getSnapshotBaseHeight()\n     CBlockIndex* base = getSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::reset()\n+{\n+    m_ibd_chainstate.reset();\n+    m_snapshot_chainstate.reset();\n+    m_active_chainstate = nullptr;\n+    m_snapshot_validated = false;\n+}\n+\n+void ChainstateManager::validatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+    bool should_cleanup_snapshot = m_snapshot_chainstate && m_snapshot_validated;\n+\n+    if (!should_cleanup_snapshot) {\n+        // No need to clean up.\n+        return;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                \"in-memory chainstates - you are testing, right?\\n\");\n+        return;\n+    }\n+\n+    auto snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    auto ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    assert(fs::exists(snapshot_chainstate_path));\n+    assert(fs::exists(ibd_chainstate_path));\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+        fs::PathToString(ibd_chainstate_path));\n+\n+    fs::path tmp_old{ibd_chainstate_path + \"_todelete\"};\n+\n+    fs::rename(ibd_chainstate_path, tmp_old);\n+    fs::rename(snapshot_chainstate_path, ibd_chainstate_path);\n+\n+    LogPrintf(\"[snapshot] moving snapshot chainstate (%s) to \" /* Continued */\n+        \"default chainstate directory (%s)\\n\",\n+        fs::PathToString(snapshot_chainstate_path), fs::PathToString(ibd_chainstate_path));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 301,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nI'm suprised you can just rename directories while leveldb is still using them. If this works, I guess it's ok, but I think more ideally CChainstate objects would have `Destroy()` and `Rename(new_name)` methods and would do these operations in a safe way without ChainStateManager being involved at such a low level.",
      "created_at": "2022-04-21T18:01:22Z",
      "updated_at": "2022-04-21T18:07:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r855452262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855452262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 5600,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5607,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858859350",
      "pull_request_review_id": 953596131,
      "id": 858859350,
      "node_id": "PRRC_kwDOABII584zMSdW",
      "diff_hunk": "@@ -34,12 +34,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(mempool);\n \n-    // If we're not using a snapshot or we haven't fully validated it yet,\n-    // create a validation chainstate.\n-    if (!chainman.IsSnapshotValidated()) {\n-        LogPrintf(\"Loading validation chainstate\\n\");\n-        chainman.InitializeChainstate(mempool);\n-    }\n+    // Load the fully-validated chainstate.\n+    chainman.InitializeChainstate(mempool);",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nWould it make sense to `assert(!chainman.IsSnapshotValidated())` here?\r\n\r\n",
      "created_at": "2022-04-26T15:26:59Z",
      "updated_at": "2022-04-26T18:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r858859350",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858859350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858859925",
      "pull_request_review_id": 953596131,
      "id": 858859925,
      "node_id": "PRRC_kwDOABII584zMSmV",
      "diff_hunk": "@@ -858,7 +893,10 @@ class ChainstateManager\n     CChainState* m_active_chainstate GUARDED_BY(::cs_main) {nullptr};\n \n     //! If true, the assumed-valid chainstate has been fully validated\n-    //! by the background validation chainstate.\n+    //! by the background validation chainstate. This will trigger shutdown\n+    //! logic.\n+    //!\n+    //! @sa validatedSnapshotCleanup()",
      "path": "src/validation.h",
      "position": null,
      "original_position": 74,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nStray comment?",
      "created_at": "2022-04-26T15:27:31Z",
      "updated_at": "2022-04-26T18:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r858859925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858859925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858957866",
      "pull_request_review_id": 953596131,
      "id": 858957866,
      "node_id": "PRRC_kwDOABII584zMqgq",
      "diff_hunk": "@@ -34,12 +34,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(mempool);\n \n-    // If we're not using a snapshot or we haven't fully validated it yet,\n-    // create a validation chainstate.\n-    if (!chainman.IsSnapshotValidated()) {",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nWas this check ever necessary to begin with when it was added in commit 94a484340be246e38ba40644f4e2ba1913d22240? It seems like IsSnapshotValidated would have always been false this whole time. Would probably be good to backport this change to the earlier commit.\r\n\r\n",
      "created_at": "2022-04-26T17:06:06Z",
      "updated_at": "2022-04-26T18:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r858957866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858957866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858966520",
      "pull_request_review_id": 953596131,
      "id": 858966520,
      "node_id": "PRRC_kwDOABII584zMsn4",
      "diff_hunk": "@@ -1474,6 +1474,13 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                 break;\n             case ChainstateLoadingError::SHUTDOWN_PROBED:\n                 break;\n+            case ChainstateLoadingError::SNAPSHOT_VALIDATION_COMPLETE:\n+                // Retry LoadChainstate now that the fully-validated snapshot\n+                // chainstate datadir has been moved to the `chainstate` directory.\n+                continue;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nThis is a little hard to follow, and maybe it's the simplest approach, but I wonder if `LoadChainstate` could just handle snapshot validated case internally. Treating SNAPSHOT_VALIDATION_COMPLETE like an error code when it doesn't really indicate a problem, and using `continue` to break out of a switch statement inside of a while loop seem like messy complications that could be nice to avoid, if there's a more straightforward way.",
      "created_at": "2022-04-26T17:16:41Z",
      "updated_at": "2022-04-26T18:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r858966520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858966520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1480,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858987637",
      "pull_request_review_id": 953596131,
      "id": 858987637,
      "node_id": "PRRC_kwDOABII584zMxx1",
      "diff_hunk": "@@ -137,6 +133,20 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         }\n     }\n \n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    auto snapshot_completion = chainman.maybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion.completed) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        chainman.validatedSnapshotCleanup();\n+        chainman.reset();\n+        return ChainstateLoadingError::SNAPSHOT_VALIDATION_COMPLETE;",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nMaybe this is the simplest approach for now, but could you add a comment about what will cause this case to happen and what needs to be done to handle it. It seems like it would be an unusual for background validation to complete on startup. Would it basically only happen if the node was shut down after the background chainstate was validated but before it was deleted?\r\n\r\nAlso wondering why it is it even necessary to call maybeCompleteSnapshotValidation here when there is already a call in connectTip()\r\n\r\nAlso, is this approach as efficient as it could be, or is it doing unnecessary work like calling UnloadBlockIndex / LoadBlockIndex. SNAPSHOT_VALIDATION_COMPLETE causes LoadChainstate to be called again, but it's unclear which parts of LoadChainstate actually need to re-run\r\n\r\nI think it would be good to add a code comment to explain this case more and answer some of these questions.",
      "created_at": "2022-04-26T17:41:44Z",
      "updated_at": "2022-04-26T18:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r858987637",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858987637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858989866",
      "pull_request_review_id": 953596131,
      "id": 858989866,
      "node_id": "PRRC_kwDOABII584zMyUq",
      "diff_hunk": "@@ -2998,6 +3010,15 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n                     assert(trace.pblock && trace.pindex);\n                     GetMainSignals().BlockConnected(trace.pblock, trace.pindex);\n                 }\n+\n+                // This will have been toggled in\n+                // ABCStep -> ConnectTip -> maybeCompleteSnapshotValidation,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d)\r\n\r\nJust a suggestion, but maybe s/ABCStep/ActivateBestChainStep/ to help with grepping.",
      "created_at": "2022-04-26T17:44:13Z",
      "updated_at": "2022-04-26T18:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r858989866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858989866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3015,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860002662",
      "pull_request_review_id": 955195630,
      "id": 860002662,
      "node_id": "PRRC_kwDOABII584zQplm",
      "diff_hunk": "@@ -1474,6 +1474,13 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                 break;\n             case ChainstateLoadingError::SHUTDOWN_PROBED:\n                 break;\n+            case ChainstateLoadingError::SNAPSHOT_VALIDATION_COMPLETE:\n+                // Retry LoadChainstate now that the fully-validated snapshot\n+                // chainstate datadir has been moved to the `chainstate` directory.\n+                continue;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858966520,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, definitely agree. I'll take a look.",
      "created_at": "2022-04-27T16:27:54Z",
      "updated_at": "2022-04-27T16:27:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r860002662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860002662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1480,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860023299",
      "pull_request_review_id": 955224378,
      "id": 860023299,
      "node_id": "PRRC_kwDOABII584zQuoD",
      "diff_hunk": "@@ -212,6 +217,12 @@ class CDBWrapper\n \n     std::vector<unsigned char> CreateObfuscateKey() const;\n \n+    //! path to filesystem storage\n+    const fs::path m_path;\n+\n+    //! whether or not the database resides in memory\n+    bool m_is_memory;",
      "path": "src/dbwrapper.h",
      "position": 19,
      "original_position": 20,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "98fc81fbaaa02792b94264680cc0062ccfde9698",
      "in_reply_to_id": 855354180,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While I agree, there are a few users of `CDBWrapper` outside the scope of this PR (`BaseIndex::DB`, `CBlockTreeDB`) - they seem to construct with non-empty paths even when being used in memory, so making this change will involve a few out-of-scope modifications. I agree with you that this is the right way to go, and would be a nice follow-on.",
      "created_at": "2022-04-27T16:49:24Z",
      "updated_at": "2022-04-27T16:49:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r860023299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860023299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": 226,
      "original_start_line": 220,
      "start_side": "RIGHT",
      "line": 230,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860100811",
      "pull_request_review_id": 955330342,
      "id": 860100811,
      "node_id": "PRRC_kwDOABII584zRBjL",
      "diff_hunk": "@@ -4856,6 +4861,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+constexpr std::string_view SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "da4aaba0073108092f0dd0e02753eea253395c4e",
      "in_reply_to_id": 855381780,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm going to stick with `base_blockhash` just because it makes grepping for `{m_,}base_blockhash` easier, which is the equivalent data in `SnapshotMetadata`.",
      "created_at": "2022-04-27T17:57:36Z",
      "updated_at": "2022-04-27T17:57:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r860100811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860100811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4907,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860168570",
      "pull_request_review_id": 955429305,
      "id": 860168570,
      "node_id": "PRRC_kwDOABII584zRSF6",
      "diff_hunk": "@@ -34,12 +34,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(mempool);\n \n-    // If we're not using a snapshot or we haven't fully validated it yet,\n-    // create a validation chainstate.\n-    if (!chainman.IsSnapshotValidated()) {\n-        LogPrintf(\"Loading validation chainstate\\n\");\n-        chainman.InitializeChainstate(mempool);\n-    }\n+    // Load the fully-validated chainstate.\n+    chainman.InitializeChainstate(mempool);",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858859350,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it may make sense to have that assertion at the end of the function, after the call to `maybeCompleteSnapshotValidation()` (which I will do), but at this point if we are init'ing after having shut down after the background validation chainstate has hit the snapshot base block, we are initializing a snapshot chainstate that has been validated but needs to be removed.\r\n\r\nThat said, I'm thinking it may be possible to get rid of `m_snapshot_validated`/`IsSnapshotValidated()` altogether (in favor of the `m_stop_use`/`isUsable()` pair)... going to see if this is doable.",
      "created_at": "2022-04-27T19:24:42Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r860168570",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860168570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860171640",
      "pull_request_review_id": 955429305,
      "id": 860171640,
      "node_id": "PRRC_kwDOABII584zRS14",
      "diff_hunk": "@@ -4986,7 +4997,15 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = FindSnapshotChainstateDatadir()) {\n+            bool removed = snapshot_chainstate->removeSnapshotDatadir();\n+            assert(removed);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "5e8879c402b23f8c3b71287a1f4393caa73dfcbd",
      "in_reply_to_id": 855402238,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I would only ever use C asserts to catch internal logic bugs which are supposed to be impossible. Would not use asserts to handle operating system errors, problems with I/O, or external libraries.\r\n\r\nThis is a really good point, thanks for putting it in those terms. I've fixed up all asserts that fit this description, and I'm not wrapped each filesystem operation in a try/catch to be sure I'm catching any `fs::filesystem_error`s that are thrown.",
      "created_at": "2022-04-27T19:27:48Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r860171640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860171640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5016,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861872045",
      "pull_request_review_id": 955429305,
      "id": 861872045,
      "node_id": "PRRC_kwDOABII584zXx-t",
      "diff_hunk": "@@ -4814,12 +4814,8 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     LOCK(::cs_main);\n     std::vector<CChainState*> out;\n \n-    if (!IsSnapshotValidated() && m_ibd_chainstate) {",
      "path": "src/validation.cpp",
      "position": 91,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "70455311b695e65b847031a90fa870ab50519b48",
      "in_reply_to_id": 855413625,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've rephrased the definition of `IsSnapshotValidated()` to be based on `m_stop_use` (i.e. `IsUsable()`), and so the two falling out of sync is no longer a concern here. Turns out that the `m_snapshot_validated` state is unnecessary.",
      "created_at": "2022-04-29T14:41:30Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861872045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861872045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4676,
      "original_line": 4676,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861872550",
      "pull_request_review_id": 955429305,
      "id": 861872550,
      "node_id": "PRRC_kwDOABII584zXyGm",
      "diff_hunk": "@@ -4917,6 +4917,17 @@ static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\n     return base_blockhash;\n }\n \n+static std::optional<fs::path> FindSnapshotChainstateDatadir()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "5e8879c402b23f8c3b71287a1f4393caa73dfcbd",
      "in_reply_to_id": 855388880,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks.",
      "created_at": "2022-04-29T14:42:04Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861872550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861872550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861873810",
      "pull_request_review_id": 955429305,
      "id": 861873810,
      "node_id": "PRRC_kwDOABII584zXyaS",
      "diff_hunk": "@@ -2998,6 +3010,15 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n                     assert(trace.pblock && trace.pindex);\n                     GetMainSignals().BlockConnected(trace.pblock, trace.pindex);\n                 }\n+\n+                // This will have been toggled in\n+                // ABCStep -> ConnectTip -> maybeCompleteSnapshotValidation,",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858989866,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thank you.",
      "created_at": "2022-04-29T14:43:30Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861873810",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861873810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3015,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861875528",
      "pull_request_review_id": 955429305,
      "id": 861875528,
      "node_id": "PRRC_kwDOABII584zXy1I",
      "diff_hunk": "@@ -137,6 +133,20 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         }\n     }\n \n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    auto snapshot_completion = chainman.maybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion.completed) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        chainman.validatedSnapshotCleanup();\n+        chainman.reset();\n+        return ChainstateLoadingError::SNAPSHOT_VALIDATION_COMPLETE;",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858987637,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Would it basically only happen if the node was shut down after the background chainstate was validated but before it was deleted?\r\n\r\nYes, and this is now the default mode. I'm not removing any leveldb contents during runtime because re-initializing chainstates mid-run is just too delicate a change to intermingle with all this other stuff. Maybe in a future PR we can look at actually doing the \"snapshot cleanup\" (i.e. leveldb deletion and rename) inline when the bg validation chainstate connects up with the snapshot base block, but until then I'm just going to handle that messy stuff during init (in `LoadChainstate()`).\r\n\r\n> Also wondering why it is it even necessary to call maybeCompleteSnapshotValidation here when there is already a call in connectTip()\r\n\r\nWe have to rehash the contents of the bg validation's UTXO set to ensure that they match the expected value, since that hash isn't persisted anywhere after the first snapshot validation.\r\n\r\n> Also, is this approach as efficient as it could be, or is it doing unnecessary work like calling UnloadBlockIndex / LoadBlockIndex. SNAPSHOT_VALIDATION_COMPLETE causes LoadChainstate to be called again, but it's unclear which parts of LoadChainstate actually need to re-run\r\n\r\nGood call, I've cleaned this up to avoid the confusing `continue` flow-control; now all chainstate re-initialization is confined to `LoadChainstate()`. As an added bonus, I'm now able to unittest (or, more accurately, \"cpp test\") this whole process!",
      "created_at": "2022-04-29T14:45:25Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861875528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861875528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861877579",
      "pull_request_review_id": 955429305,
      "id": 861877579,
      "node_id": "PRRC_kwDOABII584zXzVL",
      "diff_hunk": "@@ -34,12 +34,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(mempool);\n \n-    // If we're not using a snapshot or we haven't fully validated it yet,\n-    // create a validation chainstate.\n-    if (!chainman.IsSnapshotValidated()) {",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858957866,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, backported.",
      "created_at": "2022-04-29T14:47:45Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861877579",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861877579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861877667",
      "pull_request_review_id": 955429305,
      "id": 861877667,
      "node_id": "PRRC_kwDOABII584zXzWj",
      "diff_hunk": "@@ -858,7 +893,10 @@ class ChainstateManager\n     CChainState* m_active_chainstate GUARDED_BY(::cs_main) {nullptr};\n \n     //! If true, the assumed-valid chainstate has been fully validated\n-    //! by the background validation chainstate.\n+    //! by the background validation chainstate. This will trigger shutdown\n+    //! logic.\n+    //!\n+    //! @sa validatedSnapshotCleanup()",
      "path": "src/validation.h",
      "position": null,
      "original_position": 74,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858859925,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2022-04-29T14:47:50Z",
      "updated_at": "2022-04-29T15:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861877667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861877667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861916317",
      "pull_request_review_id": 957907701,
      "id": 861916317,
      "node_id": "PRRC_kwDOABII584zX8yd",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *getSnapshotBaseHeight();\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and move any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.translated);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!isUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->invalidateSnapshotDatadir();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+   if (index_new.nHeight > snapshot_base_height) {\n+      LogPrintf(\"[snapshot] something is wrong! validation chain \" /* Continued */\n+             \"should not have continued past the snapshot origin\\n\");\n+         handleInvalidSnapshot();\n+         return {false, SnapshotCompletionError::IBD_TOO_FAR};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 855429335,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed this to be clearer.",
      "created_at": "2022-04-29T15:30:19Z",
      "updated_at": "2022-04-29T15:30:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861916317",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861916317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861916368",
      "pull_request_review_id": 957907774,
      "id": 861916368,
      "node_id": "PRRC_kwDOABII584zX8zQ",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *getSnapshotBaseHeight();\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and move any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.translated);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 855424313,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T15:30:22Z",
      "updated_at": "2022-04-29T15:30:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861916368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861916368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5307,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861916432",
      "pull_request_review_id": 957907849,
      "id": 861916432,
      "node_id": "PRRC_kwDOABII584zX80Q",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::maybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !isUsable(m_snapshot_chainstate.get()) ||\n+            !isUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *getSnapshotBaseHeight();\n+\n+    auto handleInvalidSnapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and move any \"",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 855423108,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-04-29T15:30:26Z",
      "updated_at": "2022-04-29T15:30:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861916432",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861916432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861917075",
      "pull_request_review_id": 957908865,
      "id": 861917075,
      "node_id": "PRRC_kwDOABII584zX8-T",
      "diff_hunk": "@@ -5202,3 +5202,17 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+bool CChainState::destroyCoinsDB(const std::string& db_path)\n+{\n+    AssertLockHeld(::cs_main);\n+    LogPrintf(\"Destroying coins leveldb for %s\\n\", this->ToString());\n+    dbwrapper::Options options = Assert(m_coins_views)->m_dbview.Options();\n+    // We have to destruct leveldb::DB in order to release the db lock, otherwise\n+    // `DestroyDB` will fail. See `leveldb::~DBImpl()`.\n+    //\n+    // And this chainstate should no longer be considered usable anyway, so\n+    // teardown all coinsviews.\n+    m_coins_views.reset();\n+    return dbwrapper::DestroyDB(db_path, options).ok();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "f427976e6a3e024564fa824cc0578ee9b1285198",
      "in_reply_to_id": 855365185,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the new changes should take care of this, let me know if not.",
      "created_at": "2022-04-29T15:31:18Z",
      "updated_at": "2022-04-29T15:31:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r861917075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861917075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864926758",
      "pull_request_review_id": 961997466,
      "id": 864926758,
      "node_id": "PRRC_kwDOABII584zjbwm",
      "diff_hunk": "@@ -9,6 +9,81 @@\n #include <validation.h>\n \n namespace node {\n+\n+// Complete initialization of chainstates after the inital call has been made\n+// to ChainstateManager::InitializeChainstate().\n+static std::optional<ChainstateLoadingError>\n+CompleteChainstateInitialization(",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "c0d496fb8865aa25ae4d033de908b2f3d4176d08",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"move-only-ish: init: factor out chainstate initialization\" (1eb127e55e1fabe1c5addccd9be0feb421149645)\r\n\r\nName `CompleteChainstateInitialization` is a bit vague. Maybe something like `OpenChainstateDBs` could give a better idea what the function is actually doing",
      "created_at": "2022-05-04T14:44:58Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r864926758",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864926758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888051127",
      "pull_request_review_id": 961997466,
      "id": 888051127,
      "node_id": "PRRC_kwDOABII58407pW3",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (60d8fabe1bd7b24257193884bb542cef55fb4252)\r\n\r\nCould change `SNAPSHOT_BLOCKHASH_FILENAME` type from `std::string` to `fs::path` so you don't need any u8path call. (Also applies to read function below)",
      "created_at": "2022-06-02T14:57:37Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888051127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888051127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4903,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888060411",
      "pull_request_review_id": 961997466,
      "id": 888060411,
      "node_id": "PRRC_kwDOABII58407rn7",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+    return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (60d8fabe1bd7b24257193884bb542cef55fb4252)\r\n\r\nPreexisting problem should probably be dealt with separately, but it doesn't seem great CAutoFile ignores errors calling fclose. Might be a place to improve error reporting in the future.",
      "created_at": "2022-06-02T15:06:51Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888060411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888060411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4913,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888066881",
      "pull_request_review_id": 961997466,
      "id": 888066881,
      "node_id": "PRRC_kwDOABII58407tNB",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+    return true;\n+}\n+\n+static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\n+{\n+    if (!fs::exists(datadir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(datadir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = datadir / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    if (!fs::exists(p)) {\n+        LogPrintf(\"[snapshot] snapshot chainstate dir is malformed! no base blockhash file \" /* Continued */\n+            \"exists at path %s. Try reinitializing snapshot?\\n\", fs::PathToString(p));\n+        return std::nullopt;\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (60d8fabe1bd7b24257193884bb542cef55fb4252)\r\n\r\nYou could consider dropping both of these `fs::exists` checks because they should already be covered by \"failed to open base blockhash file for reading\" check below. Would make code shorter and I think that error message provides more useful context anyway.",
      "created_at": "2022-06-02T15:12:36Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888066881",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888066881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 4918,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4929,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888085017",
      "pull_request_review_id": 961997466,
      "id": 888085017,
      "node_id": "PRRC_kwDOABII58407xoZ",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+    return true;\n+}\n+\n+static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\n+{\n+    if (!fs::exists(datadir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(datadir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = datadir / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    if (!fs::exists(p)) {\n+        LogPrintf(\"[snapshot] snapshot chainstate dir is malformed! no base blockhash file \" /* Continued */\n+            \"exists at path %s. Try reinitializing snapshot?\\n\", fs::PathToString(p));\n+        return std::nullopt;\n+    }\n+\n+    uint256 base_blockhash;\n+    FILE* file{fsbridge::fopen(p, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for reading: %s\\n\",\n+            fs::PathToString(p));\n+        return std::nullopt;\n+    }\n+    afile >> base_blockhash;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (60d8fabe1bd7b24257193884bb542cef55fb4252)\r\n\r\nCould log warnings on unexpected conditions.\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4937,6 +4937,11 @@ static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\r\n         return std::nullopt;\r\n     }\r\n     afile >> base_blockhash;\r\n+    if (std::fgetc(afile.Get()) != EOF) {\r\n+        LogPrintf(\"[snapshot] warning: unexpected trailing data in %s\\n\", fs::PathToString(p));\r\n+    } else if (std::ferror(afile.Get())) {\r\n+        LogPrintf(\"[snapshot] warning: i/o error reading %s\\n\", fs::PathToString(p));\r\n+    }\r\n     return base_blockhash;\r\n }\r\n```\r\n\r\nI'm assuming failure would be pretty quick if blockhash was not valid (block would not be found) so it wouldn't improve anything practically to add a checksum or more validation here.",
      "created_at": "2022-06-02T15:29:49Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888085017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888085017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4939,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888118420",
      "pull_request_review_id": 961997466,
      "id": 888118420,
      "node_id": "PRRC_kwDOABII584075yU",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (60d8fabe1bd7b24257193884bb542cef55fb4252)\r\n\r\nThroughout this commit would be good to s/datadir/chainstate_dir/ or similar. Datadir suggests top-level `-datadir`, I think",
      "created_at": "2022-06-02T15:53:35Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888118420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888118420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4901,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888143043",
      "pull_request_review_id": 961997466,
      "id": 888143043,
      "node_id": "PRRC_kwDOABII58407_zD",
      "diff_hunk": "@@ -34,12 +34,8 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(mempool);\n \n-    // If we're not using a snapshot or we haven't fully validated it yet,\n-    // create a validation chainstate.\n-    if (!chainman.IsSnapshotValidated()) {\n-        LogPrintf(\"Loading validation chainstate\\n\");\n-        chainman.InitializeChainstate(mempool);\n-    }\n+    // Load the fully-validated chainstate.\n+    chainman.InitializeChainstate(mempool);",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 858859350,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> That said, I'm thinking it may be possible to get rid of `m_snapshot_validated`/`IsSnapshotValidated()` altogether (in favor of the `m_stop_use`/`isUsable()` pair)... going to see if this is doable.\r\n\r\n(This was implemented in cf5a6d3cfb1c77b5689ceb7a4bfa468e79774fb0)",
      "created_at": "2022-06-02T16:13:01Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888143043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888143043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888166392",
      "pull_request_review_id": 961997466,
      "id": 888166392,
      "node_id": "PRRC_kwDOABII58408Ff4",
      "diff_hunk": "@@ -5294,3 +5305,19 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    std::optional<fs::path> path = FindSnapshotChainstateDatadir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->InitializeChainstate(mempool, /*snapshot_blockhash=*/ *base_blockhash);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "084c8e37494c7423ea53d165cc04354117b4938c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: add utxo snapshot detection\" (084c8e37494c7423ea53d165cc04354117b4938c)\r\n\r\nI think it would clarify things to only call InitializeChainstate one place and eliminate chainstate juggling inside like:\r\n\r\n<details><summary>Diff</summary>\r\n<p>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex f417f82f975..38df4e94d44 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4848,28 +4848,13 @@ std::vector<CChainState*> ChainstateManager::GetAll()\r\n     return out;\r\n }\r\n \r\n-CChainState& ChainstateManager::InitializeChainstate(\r\n-    CTxMemPool* mempool, const std::optional<uint256>& snapshot_blockhash)\r\n+void ChainstateManager::InitializeChainstate(CTxMemPool* mempool)\r\n {\r\n     AssertLockHeld(::cs_main);\r\n-    bool is_snapshot = snapshot_blockhash.has_value();\r\n-    std::unique_ptr<CChainState>& to_modify =\r\n-        is_snapshot ? m_snapshot_chainstate : m_ibd_chainstate;\r\n-\r\n-    if (to_modify) {\r\n-        throw std::logic_error(\"should not be overwriting a chainstate\");\r\n-    }\r\n-    to_modify.reset(new CChainState(mempool, m_blockman, *this, snapshot_blockhash));\r\n-\r\n-    // Snapshot chainstates and initial IBD chaintates always become active.\r\n-    if (is_snapshot || (!is_snapshot && !m_active_chainstate)) {\r\n-        LogPrintf(\"Switching active chainstate to %s\\n\", to_modify->ToString());\r\n-        m_active_chainstate = to_modify.get();\r\n-    } else {\r\n-        throw std::logic_error(\"unexpected chainstate activation\");\r\n-    }\r\n-\r\n-    return *to_modify;\r\n+    assert(!m_ibd_chainstate);\r\n+    assert(!m_active_chainstate);\r\n+    m_ibd_chainstate = std::make_unique<CChainState>(mempool, m_blockman, *this);\r\n+    m_active_chainstate = m_ibd_chainstate.get();\r\n }\r\n \r\n const AssumeutxoData* ExpectedAssumeutxo(\r\n@@ -5308,6 +5293,7 @@ ChainstateManager::~ChainstateManager()\r\n \r\n bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\r\n {\r\n+    assert(!m_snapshot_chainstate);\r\n     std::optional<fs::path> path = FindSnapshotChainstateDatadir();\r\n     if (!path) {\r\n         return false;\r\n@@ -5318,6 +5304,8 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\r\n     if (!base_blockhash) {\r\n         return false;\r\n     }\r\n-    this->InitializeChainstate(mempool, /*snapshot_blockhash=*/ *base_blockhash);\r\n+    m_snapshot_chainstate = std::make_unique<CChainState>(mempool, m_blockman, *this, base_blockhash);\r\n+    LogPrintf(\"Switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());\r\n+    m_active_chainstate = m_snapshot_chainstate.get();\r\n     return true;\r\n }\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex f8bdda160e5..70fb9c6d324 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -903,17 +903,10 @@ public:\r\n     //! coins databases. This will be split somehow across chainstates.\r\n     int64_t m_total_coinsdb_cache{0};\r\n \r\n-    //! Instantiate a new chainstate and assign it based upon whether it is\r\n-    //! from a snapshot.\r\n+    //! Instantiate a new chainstate.\r\n     //!\r\n-    //! @param[in] mempool              The mempool to pass to the chainstate\r\n-    //                                  constructor\r\n-    //! @param[in] snapshot_blockhash   If given, signify that this chainstate\r\n-    //!                                 is based on a snapshot.\r\n-    CChainState& InitializeChainstate(\r\n-        CTxMemPool* mempool,\r\n-        const std::optional<uint256>& snapshot_blockhash = std::nullopt)\r\n-        LIFETIMEBOUND EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    //! @param[in] mempool The mempool to pass to the chainstate constructor\r\n+    void InitializeChainstate(CTxMemPool* mempool) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n     //! Get all chainstates currently being used.\r\n     std::vector<CChainState*> GetAll();\r\n```\r\n",
      "created_at": "2022-06-02T16:37:56Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888166392",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888166392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888183165",
      "pull_request_review_id": 961997466,
      "id": 888183165,
      "node_id": "PRRC_kwDOABII58408Jl9",
      "diff_hunk": "@@ -5076,7 +5076,20 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = FindSnapshotChainstateDatadir()) {\n+            dbwrapper::Options db_options = snapshot_chainstate->PrepareForCoinsDBDeletion();\n+            bool removed = DeleteCoinsDBFromDisk(*snapshot_datadir, db_options, /*is_snapshot=*/true);\n+            if (!removed) {\n+                AbortNode(strprintf(\"Failed to remove snapshot chainstate dir (%s). \"\n+                    \"Manually remove it before restarting.\\n\", fs::PathToString(*snapshot_datadir)));\n+            }\n+            assert(removed);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "6e88c2cbea05b42d7ef387b83ae4147c79c26383",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: remove snapshot datadirs upon validation failure\" (6e88c2cbea05b42d7ef387b83ae4147c79c26383)\r\n\r\nAbortNode can't shut down immediately, so this assert could still trigger. It seems like it should be fine to just drop the assert since only caller to this function appears to be loadtxoutset and it is handling the false return value. Or if there is a concern about the node doing something bad with the snapshot directory still in the way, could throw an exception or call std::exit or std::abort instead of asserting",
      "created_at": "2022-06-02T16:57:27Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888183165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888183165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5016,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888192593",
      "pull_request_review_id": 961997466,
      "id": 888192593,
      "node_id": "PRRC_kwDOABII58408L5R",
      "diff_hunk": "@@ -490,6 +490,12 @@ class CChainState\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to the background chainstate.\n+    bool m_stop_use{false};",
      "path": "src/validation.h",
      "position": null,
      "original_position": 8,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "cf5a6d3cfb1c77b5689ceb7a4bfa468e79774fb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_stop_use and ChainMan::isUsable\" (cf5a6d3cfb1c77b5689ceb7a4bfa468e79774fb0)\r\n\r\nShould this be guarded by cs_main like m_snapshot_validated was? I'm guessing it can be accessed by more than one thread. If not, maybe add a comment about how it's only accessed synchronously.",
      "created_at": "2022-06-02T17:09:01Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888192593",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888192593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 497,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888248802",
      "pull_request_review_id": 961997466,
      "id": 888248802,
      "node_id": "PRRC_kwDOABII58408Zni",
      "diff_hunk": "@@ -9,6 +9,81 @@\n #include <validation.h>\n \n namespace node {\n+\n+// Complete initialization of chainstates after the inital call has been made\n+// to ChainstateManager::InitializeChainstate().\n+static std::optional<ChainstateLoadingError>\n+CompleteChainstateInitialization(\n+    ChainstateManager& chainman,\n+    bool coins_db_in_memory,\n+    bool fReset,\n+    bool fReindexChainState,\n+    std::function<void()> coins_error_cb) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+\n+{\n+    auto is_coinsview_empty = [&](CChainState* chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        return fReset || fReindexChainState || chainstate->CoinsTip().GetBestBlock().IsNull();\n+    };\n+\n+    // Conservative value that will ultimately be changed by\n+    // a call to `chainman.MaybeRebalanceCaches()`.\n+    double init_cache_fraction = 0.2;\n+\n+    // At this point we're either in reindex or we've loaded a useful\n+    // block tree into BlockIndex()!\n+\n+    for (CChainState* chainstate : chainman.GetAll()) {\n+        LogPrintf(\"Initializing chainstate %s\\n\", chainstate->ToString());\n+\n+        chainstate->InitCoinsDB(\n+            /*cache_size_bytes=*/chainman.m_total_coinsdb_cache * init_cache_fraction,\n+            /*in_memory=*/coins_db_in_memory,\n+            /*should_wipe=*/fReset || fReindexChainState);\n+\n+        if (coins_error_cb) {\n+            chainstate->CoinsErrorCatcher().AddReadErrCallback(coins_error_cb);\n+        }\n+\n+        // Refuse to load unsupported database format.\n+        // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n+        if (chainstate->CoinsDB().NeedsUpgrade()) {\n+            return ChainstateLoadingError::ERROR_CHAINSTATE_UPGRADE_FAILED;\n+        }\n+\n+        // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n+        if (!chainstate->ReplayBlocks()) {\n+            return ChainstateLoadingError::ERROR_REPLAYBLOCKS_FAILED;\n+        }\n+\n+        // The on-disk coinsdb is now in a good state, create the cache\n+        chainstate->InitCoinsCache(chainman.m_total_coinstip_cache * init_cache_fraction);",
      "path": "src/node/chainstate.cpp",
      "position": 99,
      "original_position": 51,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1eb127e55e1fabe1c5addccd9be0feb421149645",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"move-only-ish: init: factor out chainstate initialization\" (1eb127e55e1fabe1c5addccd9be0feb421149645)\r\n\r\nThis used to be `nCoinCacheUsage` instead of `chainman.m_total_coinstip_cache * init_cache_fraction`. Is it an intentional change, and could it be explained in the commit message? Should it be moved to the earlier commit introducing init_cache_fraction?",
      "created_at": "2022-06-02T18:07:10Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888248802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888248802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888273824",
      "pull_request_review_id": 961997466,
      "id": 888273824,
      "node_id": "PRRC_kwDOABII58408fug",
      "diff_hunk": "@@ -154,6 +157,51 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n                 chainman, coins_db_in_memory, fReset, fReindexChainState, coins_error_cb)) {\n         return err;\n     }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background",
      "path": "src/node/chainstate.cpp",
      "position": 148,
      "original_position": 16,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nWould maybe mention that this is what normally happens, is not some unusual case that is just being cleaned up after, like I originally thought reviewing this PR. Could s/run, detect/run, the background chainstate won't be deleted until the next restart, so detect/",
      "created_at": "2022-06-02T18:38:13Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888273824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888273824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 169,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888290865",
      "pull_request_review_id": 961997466,
      "id": 888290865,
      "node_id": "PRRC_kwDOABII58408j4x",
      "diff_hunk": "@@ -154,6 +157,51 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n                 chainman, coins_db_in_memory, fReset, fReindexChainState, coins_error_cb)) {\n         return err;\n     }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion.completed) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n+\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().size() == 0);\n+        assert(!chainman.IsSnapshotActive());\n+        assert(!chainman.IsSnapshotValidated());\n+\n+        chainman.InitializeChainstate(mempool);\n+\n+        // A reload of the block index is required to recompute setBlockIndexCandidates\n+        // for the fully validated chainstate.\n+        chainman.ActiveChainstate().UnloadBlockIndex();",
      "path": "src/node/chainstate.cpp",
      "position": 172,
      "original_position": 37,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nPerhaps make a method that recomputes setBlockIndexCandidates without reloading? Seems like that would cleanup BlockIndex code and simplify this code as well.",
      "created_at": "2022-06-02T19:00:54Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888290865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888290865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888292638",
      "pull_request_review_id": 961997466,
      "id": 888292638,
      "node_id": "PRRC_kwDOABII58408kUe",
      "diff_hunk": "@@ -154,6 +157,51 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n                 chainman, coins_db_in_memory, fReset, fReindexChainState, coins_error_cb)) {\n         return err;\n     }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion.completed) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n+\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().size() == 0);\n+        assert(!chainman.IsSnapshotActive());\n+        assert(!chainman.IsSnapshotValidated());\n+\n+        chainman.InitializeChainstate(mempool);\n+\n+        // A reload of the block index is required to recompute setBlockIndexCandidates\n+        // for the fully validated chainstate.\n+        chainman.ActiveChainstate().UnloadBlockIndex();\n+\n+        if (!chainman.LoadBlockIndex()) {\n+            if (shutdown_requested && shutdown_requested()) return ChainstateLoadingError::SHUTDOWN_PROBED;\n+            return ChainstateLoadingError::ERROR_LOADING_BLOCK_DB;\n+        }\n+        if (!chainman.BlockIndex().empty() &&\n+                !chainman.m_blockman.LookupBlockIndex(chainman.GetParams().GetConsensus().hashGenesisBlock)) {\n+            return ChainstateLoadingError::ERROR_BAD_GENESIS_BLOCK;\n+        }\n+        if (!fReindex && !chainman.ActiveChainstate().LoadGenesisBlock()) {\n+            return ChainstateLoadingError::ERROR_LOAD_GENESIS_BLOCK_FAILED;\n+        }",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nSeems like if these two checks dealing with the genesis block were moved into the CompleteChainstateInitialization function, the code wouldn't need to be repeated here and above",
      "created_at": "2022-06-02T19:03:20Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888292638",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888292638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 189,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888296706",
      "pull_request_review_id": 961997466,
      "id": 888296706,
      "node_id": "PRRC_kwDOABII58408lUC",
      "diff_hunk": "@@ -5315,6 +5341,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nShould translate the format string not formatted string\r\n\r\n```diff \r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -5383,7 +5383,7 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\r\n     assert(index_new.nHeight == snapshot_base_height);\r\n \r\n     auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n-        bilingual_str user_error = _(strprintf(\r\n+        bilingual_str user_error = strprintf(_(\r\n             \"%s failed to validate the -assumeutxo snapshot state. \"\r\n             \"This indicates a hardware problem, or a bug in the software, or a \"\r\n             \"bad software modification that allowed an invalid snapshot to be \"\r\n@@ -5392,9 +5392,9 @@ SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\r\n             \"from %d to %d. On the next \"\r\n             \"restart, the node will resume syncing from %d \"\r\n             \"without using any snapshot data. \"\r\n-            \"Please report this incident to %s, including how you obtained the snapshot.\",\r\n+            \"Please report this incident to %s, including how you obtained the snapshot.\"),\r\n             PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\r\n-        ).c_str());\r\n+        );\r\n \r\n         LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\r\n         LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\r\n\r\n```",
      "created_at": "2022-06-02T19:09:02Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888296706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888296706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5386,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888303444",
      "pull_request_review_id": 961997466,
      "id": 888303444,
      "node_id": "PRRC_kwDOABII58408m9U",
      "diff_hunk": "@@ -5392,6 +5549,37 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     return true;\n }\n \n+void CChainState::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    fs::path snapshot_datadir = *FindSnapshotChainstateDatadir();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 201,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nI think it would be better to use the datadir path that is was already loaded `this->CoinsDB().StoragePath()` instead of going outside the CChainState object and looking for a chainstate directory in the filesystem.",
      "created_at": "2022-06-02T19:18:17Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888303444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888303444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5557,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888306452",
      "pull_request_review_id": 961997466,
      "id": 888306452,
      "node_id": "PRRC_kwDOABII58408nsU",
      "diff_hunk": "@@ -5392,6 +5549,37 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     return true;\n }\n \n+void CChainState::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    fs::path snapshot_datadir = *FindSnapshotChainstateDatadir();\n+    assert(fs::exists(snapshot_datadir));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nI don't think this should be an assert. It could just as easily be a filesystem error or outside change as an internal bug in the code.\r\n\r\nAssert isn't necessary anyway, since rename will fail if directory doesn't exist. Just handling filesystem errors and not trying to anticipate them is usually simpler and more reliable unless the existence check provides additional information.\r\n\r\nEDIT: Same comment could apply to other `assert(fs::exists())` calls below\r\n",
      "created_at": "2022-06-02T19:22:42Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888306452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888306452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5558,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888360304",
      "pull_request_review_id": 961997466,
      "id": 888360304,
      "node_id": "PRRC_kwDOABII5840801w",
      "diff_hunk": "@@ -4951,6 +4951,62 @@ static std::optional<fs::path> FindSnapshotChainstateDatadir()\n     return std::nullopt;\n }\n \n+dbwrapper::Options CChainState::PrepareForCoinsDBDeletion()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "3ad9487ad9474a3912c65832daa56a9723495407",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add utilities for deleting on-disk leveldb data\" (3ad9487ad9474a3912c65832daa56a9723495407)\r\n\r\nI don't think it is actually valid to use the previous options structs after destroying `m_coins_view`. For example the structs have [`info_log` and `block_cache` pointers](https://github.com/bitcoin/bitcoin/blob/1f63b460a8506675ccacb4647941f07d391735e3/src/dbwrapper.cpp#L103-L107) that will no longer be valid.\r\n\r\nI'd guess it should be sufficient to drop this method, have callers just delete the whole `CChainState` object then call `DestroyDB(path, /*options=*/{})` with a default options parameter. If not could add a `dbwrapper::DestroyDB(path)` wrapper that doesn't need options and fills them out itself.",
      "created_at": "2022-06-02T19:51:45Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888360304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888360304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4954,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888372354",
      "pull_request_review_id": 961997466,
      "id": 888372354,
      "node_id": "PRRC_kwDOABII584083yC",
      "diff_hunk": "@@ -5315,6 +5341,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        m_ibd_chainstate->m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handle_invalid_snapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 148,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nYou may want something like:\r\n\r\n```c++\r\nauto breakpoint_fnc = [] { if (ShutdownRequested()) throw StopHashing{}; };\r\n\r\ntry {\r\n    ComputeUTXOStats(breakpoint_fnc);\r\n} except (const StopHashing&) {\r\n    return false;\r\n}\r\n```",
      "created_at": "2022-06-02T20:08:31Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888372354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888372354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888379945",
      "pull_request_review_id": 961997466,
      "id": 888379945,
      "node_id": "PRRC_kwDOABII584085op",
      "diff_hunk": "@@ -5315,6 +5341,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\nI think log message is a little confusing. It will always print the same hash because the two hashes were were already compared on line 5378. Maybe move it log message above line 5378 or just print the hash once.",
      "created_at": "2022-06-02T20:19:19Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888379945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888379945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888384819",
      "pull_request_review_id": 961997466,
      "id": 888384819,
      "node_id": "PRRC_kwDOABII5840860z",
      "diff_hunk": "@@ -959,6 +990,18 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         CAutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Once the background validation chainstate has reached the height which\n+    //! is the base of the UTXO snapshot in use, compare its coins to ensure\n+    //! they match those expected by the snapshot.\n+    //!\n+    //! If the coins match (expected), then mark the validation chainstate for\n+    //! deletion and continue using the snapshot chainstate as active.\n+    //! Otherwise, revert to using the ibd chainstate and shutdown (TODO).\n+    SnapshotCompletionResult MaybeCompleteSnapshotValidation(\n+        std::function<void(bilingual_str)> shutdown_fnc =\n+            [](bilingual_str msg) { AbortNode(msg.translated, msg); })",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (fa004947262b4180ac41b14ede7ba19ee24eaad0)\r\n\r\ns/msg.translated/msg.original/ since that's what's logged",
      "created_at": "2022-06-02T20:25:56Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888384819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888384819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888401621",
      "pull_request_review_id": 961997466,
      "id": 888401621,
      "node_id": "PRRC_kwDOABII58408-7V",
      "diff_hunk": "@@ -108,11 +108,13 @@ struct TestingSetup : public ChainTestingSetup {\n     bool m_coins_db_in_memory{true};\n     bool m_block_tree_db_in_memory{true};\n \n+    void LoadVerifyActivateChainstate();\n+\n     explicit TestingSetup(\n         const std::string& chainName = CBaseChainParams::MAIN,\n         const std::vector<const char*>& extra_args = {},\n         const bool coins_db_in_memory = true,\n-        const bool m_block_tree_db_in_memory = true);\n+        const bool block_tree_db_in_memory = true);",
      "path": "src/test/util/setup_common.h",
      "position": 14,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1918b546a59d75abcdac80ede563e3eb552d3968",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: move-only-ish: factor out LoadVerifyActivateChainstate()\" (1918b546a59d75abcdac80ede563e3eb552d3968)\r\n\r\nFixup belongs in previous commit, I think",
      "created_at": "2022-06-02T20:49:23Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888401621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888401621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888533308",
      "pull_request_review_id": 961997466,
      "id": 888533308,
      "node_id": "PRRC_kwDOABII58409fE8",
      "diff_hunk": "@@ -106,33 +104,32 @@ sequentially.\n ### Background chainstate hits snapshot base block\n \n Once the tip of the background chainstate hits the base block of the snapshot\n-chainstate, we stop use of the background chainstate by setting `m_stop_use` (not yet\n-committed - see #15606), in `CompleteSnapshotValidation()`, which is checked in\n-`ActivateBestChain()`). We hash the background chainstate's UTXO set contents and\n-ensure it matches the compiled value in `CMainParams::m_assumeutxo_data`.\n-\n-The background chainstate data lingers on disk until shutdown, when in\n-`ChainstateManager::Reset()`, the background chainstate is cleaned up with\n-`ValidatedSnapshotShutdownCleanup()`, which renames the `chainstate_[hash]` datadir as\n-`chainstate`.\n+chainstate, we stop use of the background chainstate by setting `m_stop_use`, in\n+`CompleteSnapshotValidation()`, which is checked in `ActivateBestChain()`). We hash the\n+background chainstate's UTXO set contents and ensure it matches the compiled value in\n+`CMainParams::m_assumeutxo_data`.\n \n |    |    |\n | ---------- | ----------- |\n | number of chainstates | 2 (ibd has `m_stop_use=true`) |\n | active chainstate | snapshot |\n \n-**Failure consideration:** if bitcoind unexpectedly halts after `m_stop_use` is set on\n-the background chainstate but before `CompleteSnapshotValidation()` can finish, the\n-need to complete snapshot validation will be detected on subsequent init by\n-`ChainstateManager::CheckForUncleanShutdown()`.\n+The background chainstate data lingers on disk until subsequent initialization.",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 73,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "d988631b50b8b10a8dadae00fe61ebd32058a9d1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"docs: update assumeutxo.md\" (d988631b50b8b10a8dadae00fe61ebd32058a9d1)\r\n\r\ns/until subsequent initialization/the software is restarted/ would be clearer I think.\r\n\r\ncould also s/on subsequent inits/on software startup/ above",
      "created_at": "2022-06-03T01:09:04Z",
      "updated_at": "2022-06-03T02:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888533308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888533308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888535977",
      "pull_request_review_id": 961997466,
      "id": 888535977,
      "node_id": "PRRC_kwDOABII58409fup",
      "diff_hunk": "@@ -523,6 +523,16 @@ void BlockManager::FlushUndoFile(int block_file, bool finalize)\n void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n {\n     LOCK(cs_LastBlockFile);\n+\n+    if (m_blockfile_info.size() < 1) {\n+        // Return if we haven't loaded any blockfiles yet. This happens during\n+        // chainstate init, when we call ChainstateManager::MaybeRebalanceCaches() (which\n+        // then calls FlushStateToDisk()), resulting in a call to this function before we\n+        // have populated `m_blockfile_info` via LoadBlockIndexDB().\n+        return;",
      "path": "src/node/blockstorage.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "ae7c79103851b9157c382fab9cb8433b172e7eed",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockmanager: avoid undefined behavior during FlushBlockFile\" (ae7c79103851b9157c382fab9cb8433b172e7eed)\r\n\r\nCould consider adding a unit test to hit this code path.",
      "created_at": "2022-06-03T01:11:43Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888535977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888535977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888539163",
      "pull_request_review_id": 961997466,
      "id": 888539163,
      "node_id": "PRRC_kwDOABII58409ggb",
      "diff_hunk": "@@ -48,6 +58,33 @@ CreateAndActivateUTXOSnapshot(node::NodeContext& node, const fs::path root, F ma\n \n     malleation(auto_infile, metadata);\n \n+    if (reset_chainstate) {",
      "path": "src/test/util/chainstate.h",
      "position": 39,
      "original_position": 34,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9fb0eab4faf4b2aaabe29504ebb2a93a1c36a0e5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: add reset_chainstate parameter for snapshot unittests\" (9fb0eab4faf4b2aaabe29504ebb2a93a1c36a0e5)\r\n\r\nThis test setup code seems fragile duplicative. Maybe comment can say that it is a stripped down copy of the LoadChainstate function. Would be nice if a future followup could call LoadChainstate directly or split up the block part and the chain part of LoadChainstate and just call the chain part.",
      "created_at": "2022-06-03T01:21:35Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888539163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888539163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888543617",
      "pull_request_review_id": 961997466,
      "id": 888543617,
      "node_id": "PRRC_kwDOABII58409hmB",
      "diff_hunk": "@@ -328,6 +367,150 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, SnapshotTestSetup)\n     this->SetupSnapshot();\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CChainState& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot\";\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 396,
      "original_position": 70,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2e30177903c3df456ed288a61fa05efb117d2e1c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: add testcases for snapshot completion\" (2e30177903c3df456ed288a61fa05efb117d2e1c)\r\n\r\nMaybe expose FindSnapshotChainstateDatadir function and call that, to reduce repetition here and add coverage there.\r\n\r\nThis would also be a good place to call ReadSnapshotBaseBlockhash function and test that.",
      "created_at": "2022-06-03T01:34:42Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888543617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888543617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888545004",
      "pull_request_review_id": 961997466,
      "id": 888545004,
      "node_id": "PRRC_kwDOABII58409h7s",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (60d8fabe1bd7b24257193884bb542cef55fb4252)\r\n\r\nI get =Werror compiler warning/errors this commit because these functions are static and not called anywhere. IMO, these functions seem useful to call in unit tests and I would just make them normal non-hidden functions.\r\n\r\nYou could also move them to src/node/snapshot.cpp or something like that so they are not expanding validation.cpp which is already bursting at the seams.",
      "created_at": "2022-06-03T01:39:03Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888545004",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888545004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4895,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888546791",
      "pull_request_review_id": 961997466,
      "id": 888546791,
      "node_id": "PRRC_kwDOABII58409iXn",
      "diff_hunk": "@@ -74,12 +79,18 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         return ChainstateLoadingError::ERROR_LOAD_GENESIS_BLOCK_FAILED;\n     }\n \n+    // Conservative value that will ultimately be changed by\n+    // a call to `chainman.MaybeRebalanceCaches()`.\n+    double init_cache_fraction = 0.2;\n+\n     // At this point we're either in reindex or we've loaded a useful\n     // block tree into BlockIndex()!\n \n     for (CChainState* chainstate : chainman.GetAll()) {\n+        LogPrintf(\"Initializing chainstate %s\\n\", chainstate->ToString());\n+\n         chainstate->InitCoinsDB(\n-            /*cache_size_bytes=*/nCoinDBCache,\n+            /*cache_size_bytes=*/nCoinDBCache * init_cache_fraction,",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "084c8e37494c7423ea53d165cc04354117b4938c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: add utxo snapshot detection\" (084c8e37494c7423ea53d165cc04354117b4938c)\r\n\r\nShould init_cache_fraction also be used in `chainstate->InitCoinsCache` call below? (It is changing later in a move-only commit, and maybe that change was supposed to happen this commit)",
      "created_at": "2022-06-03T01:44:27Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888546791",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888546791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888549095",
      "pull_request_review_id": 961997466,
      "id": 888549095,
      "node_id": "PRRC_kwDOABII58409i7n",
      "diff_hunk": "@@ -5076,7 +5076,20 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = FindSnapshotChainstateDatadir()) {\n+            dbwrapper::Options db_options = snapshot_chainstate->PrepareForCoinsDBDeletion();\n+            bool removed = DeleteCoinsDBFromDisk(*snapshot_datadir, db_options, /*is_snapshot=*/true);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "6e88c2cbea05b42d7ef387b83ae4147c79c26383",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: remove snapshot datadirs upon validation failure\" (6e88c2cbea05b42d7ef387b83ae4147c79c26383)\r\n\r\nSeems like there is no unit test for this code path? I think it would be important to add because this seems like code that would run very rarely and could easily become broken without anybody knowing about it.",
      "created_at": "2022-06-03T01:51:14Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888549095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888549095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888549509",
      "pull_request_review_id": 961997466,
      "id": 888549509,
      "node_id": "PRRC_kwDOABII58409jCF",
      "diff_hunk": "@@ -864,6 +864,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot has been loaded.\n+    CBlockIndex* GetSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> GetSnapshotBaseHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "dde02d3d6af14ab94c6910b5695e9bbd6262fe55",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add ChainstateManager.GetSnapshot{BaseHeight,BaseBlock}()\" (dde02d3d6af14ab94c6910b5695e9bbd6262fe55)\r\n\r\nSeems like these would be good to call in the new unit tests",
      "created_at": "2022-06-03T01:52:34Z",
      "updated_at": "2022-06-03T02:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r888549509",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888549509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 868,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 879,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898257979",
      "pull_request_review_id": 1007902467,
      "id": 898257979,
      "node_id": "PRRC_kwDOABII5841ilQ7",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+    return true;\n+}\n+\n+static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\n+{\n+    if (!fs::exists(datadir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(datadir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = datadir / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    if (!fs::exists(p)) {\n+        LogPrintf(\"[snapshot] snapshot chainstate dir is malformed! no base blockhash file \" /* Continued */\n+            \"exists at path %s. Try reinitializing snapshot?\\n\", fs::PathToString(p));\n+        return std::nullopt;\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": 888066881,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm going to push back on this because I do think the specificity could be helpful, even if the possibility of those errors is pretty slim. Why not be specific about errors when possible at the cost of a few lines?",
      "created_at": "2022-06-15T17:48:15Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r898257979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898257979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 4918,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4929,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899435085",
      "pull_request_review_id": 1007902467,
      "id": 899435085,
      "node_id": "PRRC_kwDOABII5841nEpN",
      "diff_hunk": "@@ -523,6 +523,16 @@ void BlockManager::FlushUndoFile(int block_file, bool finalize)\n void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n {\n     LOCK(cs_LastBlockFile);\n+\n+    if (m_blockfile_info.size() < 1) {\n+        // Return if we haven't loaded any blockfiles yet. This happens during\n+        // chainstate init, when we call ChainstateManager::MaybeRebalanceCaches() (which\n+        // then calls FlushStateToDisk()), resulting in a call to this function before we\n+        // have populated `m_blockfile_info` via LoadBlockIndexDB().\n+        return;",
      "path": "src/node/blockstorage.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "ae7c79103851b9157c382fab9cb8433b172e7eed",
      "in_reply_to_id": 888535977,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe this is hit on every initialization, per the comment above (which is also how I realized it was a necessary change :).",
      "created_at": "2022-06-16T19:08:24Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r899435085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899435085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899447262",
      "pull_request_review_id": 1007902467,
      "id": 899447262,
      "node_id": "PRRC_kwDOABII5841nHne",
      "diff_hunk": "@@ -154,6 +157,51 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n                 chainman, coins_db_in_memory, fReset, fReindexChainState, coins_error_cb)) {\n         return err;\n     }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion.completed) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n+\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().size() == 0);\n+        assert(!chainman.IsSnapshotActive());\n+        assert(!chainman.IsSnapshotValidated());\n+\n+        chainman.InitializeChainstate(mempool);\n+\n+        // A reload of the block index is required to recompute setBlockIndexCandidates\n+        // for the fully validated chainstate.\n+        chainman.ActiveChainstate().UnloadBlockIndex();",
      "path": "src/node/chainstate.cpp",
      "position": 172,
      "original_position": 37,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888290865,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That'd be a substantial portion of LoadBlockIndex yanked out into its own function; a change like that would also require some thought as to whether the two operations can truly be independent, which I'm not sure about offhand. In the interest of keeping this PR within its already-pretty-broad scope, I'm going to save this as a follow-up for someone else.",
      "created_at": "2022-06-16T19:23:49Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r899447262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899447262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899506431",
      "pull_request_review_id": 1007902467,
      "id": 899506431,
      "node_id": "PRRC_kwDOABII5841nWD_",
      "diff_hunk": "@@ -48,6 +58,33 @@ CreateAndActivateUTXOSnapshot(node::NodeContext& node, const fs::path root, F ma\n \n     malleation(auto_infile, metadata);\n \n+    if (reset_chainstate) {",
      "path": "src/test/util/chainstate.h",
      "position": 39,
      "original_position": 34,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "9fb0eab4faf4b2aaabe29504ebb2a93a1c36a0e5",
      "in_reply_to_id": 888539163,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, agree - though reusing LoadChainstate in this case would require building in the option to preserve the existing block index, which (to date anyway) would be a test-specific feature. Not sure which is worse: test-specific parameter or duplicating a few lines of code.\r\n\r\nI'm adding a note to the comment as you suggest though.",
      "created_at": "2022-06-16T20:43:32Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r899506431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899506431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903021641",
      "pull_request_review_id": 1007902467,
      "id": 903021641,
      "node_id": "PRRC_kwDOABII58410wRJ",
      "diff_hunk": "@@ -5076,7 +5076,20 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = FindSnapshotChainstateDatadir()) {\n+            dbwrapper::Options db_options = snapshot_chainstate->PrepareForCoinsDBDeletion();\n+            bool removed = DeleteCoinsDBFromDisk(*snapshot_datadir, db_options, /*is_snapshot=*/true);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "6e88c2cbea05b42d7ef387b83ae4147c79c26383",
      "in_reply_to_id": 888549095,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is covered in the unittests; you can verify by observing the logline\r\n```\r\n2022-06-21T19:59:23.617500Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:4919] [DeleteCoinsDBFromDisk] Removing leveldb dir at /tmp/test_common_Bitcoin Core/c0e34f63b527f04735c4b2ae434e9b81110d7f5d39eedf5c919e4c3ccd6fabdb/regtest/chainstate_snapshot\r\n```\r\nafter running \r\n```\r\n% ./src/test/test_bitcoin --log_level=message '--run_test=*/chainstatemanager_snapshot_completion' -- -printtoconsole=1 -debug=0\r\n```",
      "created_at": "2022-06-21T20:06:08Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r903021641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903021641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903027958",
      "pull_request_review_id": 1007902467,
      "id": 903027958,
      "node_id": "PRRC_kwDOABII58410xz2",
      "diff_hunk": "@@ -864,6 +864,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot has been loaded.\n+    CBlockIndex* GetSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> GetSnapshotBaseHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "dde02d3d6af14ab94c6910b5695e9bbd6262fe55",
      "in_reply_to_id": 888549509,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These are private methods so I think that's out. But it isn't so bad - they're already incidentally tested by `ActivateSnapshot` and `MaybeCompleteSnapshotValidation`.",
      "created_at": "2022-06-21T20:14:50Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r903027958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903027958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 868,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 879,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082271",
      "pull_request_review_id": 1007902467,
      "id": 905082271,
      "node_id": "PRRC_kwDOABII58418nWf",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": 888051127,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:18:49Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905082271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4903,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082367",
      "pull_request_review_id": 1007902467,
      "id": 905082367,
      "node_id": "PRRC_kwDOABII58418nX_",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+    return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": 888060411,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:18:55Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905082367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4913,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082768",
      "pull_request_review_id": 1007902467,
      "id": 905082768,
      "node_id": "PRRC_kwDOABII58418neQ",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(datadir_path); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *datadir_path / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+    return true;\n+}\n+\n+static std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path datadir)\n+{\n+    if (!fs::exists(datadir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(datadir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = datadir / fs::u8path(SNAPSHOT_BLOCKHASH_FILENAME);\n+\n+    if (!fs::exists(p)) {\n+        LogPrintf(\"[snapshot] snapshot chainstate dir is malformed! no base blockhash file \" /* Continued */\n+            \"exists at path %s. Try reinitializing snapshot?\\n\", fs::PathToString(p));\n+        return std::nullopt;\n+    }\n+\n+    uint256 base_blockhash;\n+    FILE* file{fsbridge::fopen(p, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for reading: %s\\n\",\n+            fs::PathToString(p));\n+        return std::nullopt;\n+    }\n+    afile >> base_blockhash;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": 888085017,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2022-06-23T14:19:15Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905082768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4939,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082865",
      "pull_request_review_id": 1007902467,
      "id": 905082865,
      "node_id": "PRRC_kwDOABII58418nfx",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> datadir_path = snapshot_chainstate.CoinsDB().StoragePath();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": 888118420,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:19:20Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905082865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905082865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4901,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905083299",
      "pull_request_review_id": 1007902467,
      "id": 905083299,
      "node_id": "PRRC_kwDOABII58418nmj",
      "diff_hunk": "@@ -9,6 +9,81 @@\n #include <validation.h>\n \n namespace node {\n+\n+// Complete initialization of chainstates after the inital call has been made\n+// to ChainstateManager::InitializeChainstate().\n+static std::optional<ChainstateLoadingError>\n+CompleteChainstateInitialization(",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "c0d496fb8865aa25ae4d033de908b2f3d4176d08",
      "in_reply_to_id": 864926758,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Based on your other feedback of consolidating more logic into this function (which I've taken), I think the suggested name here is probably too narrow.",
      "created_at": "2022-06-23T14:19:43Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905083299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905083299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905083996",
      "pull_request_review_id": 1007902467,
      "id": 905083996,
      "node_id": "PRRC_kwDOABII58418nxc",
      "diff_hunk": "@@ -5294,3 +5305,19 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    std::optional<fs::path> path = FindSnapshotChainstateDatadir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->InitializeChainstate(mempool, /*snapshot_blockhash=*/ *base_blockhash);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "084c8e37494c7423ea53d165cc04354117b4938c",
      "in_reply_to_id": 888166392,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2022-06-23T14:20:18Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905083996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905083996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905087597",
      "pull_request_review_id": 1007902467,
      "id": 905087597,
      "node_id": "PRRC_kwDOABII58418opt",
      "diff_hunk": "@@ -5076,7 +5076,20 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = FindSnapshotChainstateDatadir()) {\n+            dbwrapper::Options db_options = snapshot_chainstate->PrepareForCoinsDBDeletion();\n+            bool removed = DeleteCoinsDBFromDisk(*snapshot_datadir, db_options, /*is_snapshot=*/true);\n+            if (!removed) {\n+                AbortNode(strprintf(\"Failed to remove snapshot chainstate dir (%s). \"\n+                    \"Manually remove it before restarting.\\n\", fs::PathToString(*snapshot_datadir)));\n+            }\n+            assert(removed);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "6e88c2cbea05b42d7ef387b83ae4147c79c26383",
      "in_reply_to_id": 888183165,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:23:29Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905087597",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905087597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5016,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905087869",
      "pull_request_review_id": 1007902467,
      "id": 905087869,
      "node_id": "PRRC_kwDOABII58418ot9",
      "diff_hunk": "@@ -490,6 +490,12 @@ class CChainState\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to the background chainstate.\n+    bool m_stop_use{false};",
      "path": "src/validation.h",
      "position": null,
      "original_position": 8,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "cf5a6d3cfb1c77b5689ceb7a4bfa468e79774fb0",
      "in_reply_to_id": 888192593,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:23:44Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905087869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905087869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 497,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905088348",
      "pull_request_review_id": 1007902467,
      "id": 905088348,
      "node_id": "PRRC_kwDOABII58418o1c",
      "diff_hunk": "@@ -9,6 +9,81 @@\n #include <validation.h>\n \n namespace node {\n+\n+// Complete initialization of chainstates after the inital call has been made\n+// to ChainstateManager::InitializeChainstate().\n+static std::optional<ChainstateLoadingError>\n+CompleteChainstateInitialization(\n+    ChainstateManager& chainman,\n+    bool coins_db_in_memory,\n+    bool fReset,\n+    bool fReindexChainState,\n+    std::function<void()> coins_error_cb) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+\n+{\n+    auto is_coinsview_empty = [&](CChainState* chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        return fReset || fReindexChainState || chainstate->CoinsTip().GetBestBlock().IsNull();\n+    };\n+\n+    // Conservative value that will ultimately be changed by\n+    // a call to `chainman.MaybeRebalanceCaches()`.\n+    double init_cache_fraction = 0.2;\n+\n+    // At this point we're either in reindex or we've loaded a useful\n+    // block tree into BlockIndex()!\n+\n+    for (CChainState* chainstate : chainman.GetAll()) {\n+        LogPrintf(\"Initializing chainstate %s\\n\", chainstate->ToString());\n+\n+        chainstate->InitCoinsDB(\n+            /*cache_size_bytes=*/chainman.m_total_coinsdb_cache * init_cache_fraction,\n+            /*in_memory=*/coins_db_in_memory,\n+            /*should_wipe=*/fReset || fReindexChainState);\n+\n+        if (coins_error_cb) {\n+            chainstate->CoinsErrorCatcher().AddReadErrCallback(coins_error_cb);\n+        }\n+\n+        // Refuse to load unsupported database format.\n+        // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n+        if (chainstate->CoinsDB().NeedsUpgrade()) {\n+            return ChainstateLoadingError::ERROR_CHAINSTATE_UPGRADE_FAILED;\n+        }\n+\n+        // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n+        if (!chainstate->ReplayBlocks()) {\n+            return ChainstateLoadingError::ERROR_REPLAYBLOCKS_FAILED;\n+        }\n+\n+        // The on-disk coinsdb is now in a good state, create the cache\n+        chainstate->InitCoinsCache(chainman.m_total_coinstip_cache * init_cache_fraction);",
      "path": "src/node/chainstate.cpp",
      "position": 99,
      "original_position": 51,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1eb127e55e1fabe1c5addccd9be0feb421149645",
      "in_reply_to_id": 888248802,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:24:09Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905088348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905088348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905088518",
      "pull_request_review_id": 1007902467,
      "id": 905088518,
      "node_id": "PRRC_kwDOABII58418o4G",
      "diff_hunk": "@@ -154,6 +157,51 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n                 chainman, coins_db_in_memory, fReset, fReindexChainState, coins_error_cb)) {\n         return err;\n     }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background",
      "path": "src/node/chainstate.cpp",
      "position": 148,
      "original_position": 16,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888273824,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:24:18Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905088518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905088518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 169,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905088967",
      "pull_request_review_id": 1007902467,
      "id": 905088967,
      "node_id": "PRRC_kwDOABII58418o_H",
      "diff_hunk": "@@ -154,6 +157,51 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n                 chainman, coins_db_in_memory, fReset, fReindexChainState, coins_error_cb)) {\n         return err;\n     }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion.completed) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n+\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().size() == 0);\n+        assert(!chainman.IsSnapshotActive());\n+        assert(!chainman.IsSnapshotValidated());\n+\n+        chainman.InitializeChainstate(mempool);\n+\n+        // A reload of the block index is required to recompute setBlockIndexCandidates\n+        // for the fully validated chainstate.\n+        chainman.ActiveChainstate().UnloadBlockIndex();\n+\n+        if (!chainman.LoadBlockIndex()) {\n+            if (shutdown_requested && shutdown_requested()) return ChainstateLoadingError::SHUTDOWN_PROBED;\n+            return ChainstateLoadingError::ERROR_LOADING_BLOCK_DB;\n+        }\n+        if (!chainman.BlockIndex().empty() &&\n+                !chainman.m_blockman.LookupBlockIndex(chainman.GetParams().GetConsensus().hashGenesisBlock)) {\n+            return ChainstateLoadingError::ERROR_BAD_GENESIS_BLOCK;\n+        }\n+        if (!fReindex && !chainman.ActiveChainstate().LoadGenesisBlock()) {\n+            return ChainstateLoadingError::ERROR_LOAD_GENESIS_BLOCK_FAILED;\n+        }",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888292638,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:24:42Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905088967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905088967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": 189,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089077",
      "pull_request_review_id": 1007902467,
      "id": 905089077,
      "node_id": "PRRC_kwDOABII58418pA1",
      "diff_hunk": "@@ -5315,6 +5341,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888296706,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:24:47Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905089077",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5386,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089220",
      "pull_request_review_id": 1007902467,
      "id": 905089220,
      "node_id": "PRRC_kwDOABII58418pDE",
      "diff_hunk": "@@ -5392,6 +5549,37 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     return true;\n }\n \n+void CChainState::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    fs::path snapshot_datadir = *FindSnapshotChainstateDatadir();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 201,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888303444,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:24:55Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905089220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5557,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089337",
      "pull_request_review_id": 1007902467,
      "id": 905089337,
      "node_id": "PRRC_kwDOABII58418pE5",
      "diff_hunk": "@@ -5392,6 +5549,37 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     return true;\n }\n \n+void CChainState::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    fs::path snapshot_datadir = *FindSnapshotChainstateDatadir();\n+    assert(fs::exists(snapshot_datadir));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888306452,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:01Z",
      "updated_at": "2022-06-23T14:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905089337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5558,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089848",
      "pull_request_review_id": 1007902467,
      "id": 905089848,
      "node_id": "PRRC_kwDOABII58418pM4",
      "diff_hunk": "@@ -4951,6 +4951,62 @@ static std::optional<fs::path> FindSnapshotChainstateDatadir()\n     return std::nullopt;\n }\n \n+dbwrapper::Options CChainState::PrepareForCoinsDBDeletion()",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "3ad9487ad9474a3912c65832daa56a9723495407",
      "in_reply_to_id": 888360304,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:25Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905089848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4954,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089945",
      "pull_request_review_id": 1007902467,
      "id": 905089945,
      "node_id": "PRRC_kwDOABII58418pOZ",
      "diff_hunk": "@@ -5315,6 +5341,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",\n+        m_ibd_chainstate->m_chain.Tip()->ToString(),\n+        snapshot_blockhash.ToString());\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handle_invalid_snapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 148,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888372354,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:30Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905089945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905089945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090039",
      "pull_request_review_id": 1007902467,
      "id": 905090039,
      "node_id": "PRRC_kwDOABII58418pP3",
      "diff_hunk": "@@ -5315,6 +5341,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = _(strprintf(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\",\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        ).c_str());\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    LogPrintf(\"[snapshot] tip: actual=%s expected=%s\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888379945,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:35Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905090039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090116",
      "pull_request_review_id": 1007902467,
      "id": 905090116,
      "node_id": "PRRC_kwDOABII58418pRE",
      "diff_hunk": "@@ -959,6 +990,18 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         CAutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Once the background validation chainstate has reached the height which\n+    //! is the base of the UTXO snapshot in use, compare its coins to ensure\n+    //! they match those expected by the snapshot.\n+    //!\n+    //! If the coins match (expected), then mark the validation chainstate for\n+    //! deletion and continue using the snapshot chainstate as active.\n+    //! Otherwise, revert to using the ibd chainstate and shutdown (TODO).\n+    SnapshotCompletionResult MaybeCompleteSnapshotValidation(\n+        std::function<void(bilingual_str)> shutdown_fnc =\n+            [](bilingual_str msg) { AbortNode(msg.translated, msg); })",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "fa004947262b4180ac41b14ede7ba19ee24eaad0",
      "in_reply_to_id": 888384819,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:38Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905090116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090198",
      "pull_request_review_id": 1007902467,
      "id": 905090198,
      "node_id": "PRRC_kwDOABII58418pSW",
      "diff_hunk": "@@ -108,11 +108,13 @@ struct TestingSetup : public ChainTestingSetup {\n     bool m_coins_db_in_memory{true};\n     bool m_block_tree_db_in_memory{true};\n \n+    void LoadVerifyActivateChainstate();\n+\n     explicit TestingSetup(\n         const std::string& chainName = CBaseChainParams::MAIN,\n         const std::vector<const char*>& extra_args = {},\n         const bool coins_db_in_memory = true,\n-        const bool m_block_tree_db_in_memory = true);\n+        const bool block_tree_db_in_memory = true);",
      "path": "src/test/util/setup_common.h",
      "position": 14,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1918b546a59d75abcdac80ede563e3eb552d3968",
      "in_reply_to_id": 888401621,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:43Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905090198",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090336",
      "pull_request_review_id": 1007902467,
      "id": 905090336,
      "node_id": "PRRC_kwDOABII58418pUg",
      "diff_hunk": "@@ -106,33 +104,32 @@ sequentially.\n ### Background chainstate hits snapshot base block\n \n Once the tip of the background chainstate hits the base block of the snapshot\n-chainstate, we stop use of the background chainstate by setting `m_stop_use` (not yet\n-committed - see #15606), in `CompleteSnapshotValidation()`, which is checked in\n-`ActivateBestChain()`). We hash the background chainstate's UTXO set contents and\n-ensure it matches the compiled value in `CMainParams::m_assumeutxo_data`.\n-\n-The background chainstate data lingers on disk until shutdown, when in\n-`ChainstateManager::Reset()`, the background chainstate is cleaned up with\n-`ValidatedSnapshotShutdownCleanup()`, which renames the `chainstate_[hash]` datadir as\n-`chainstate`.\n+chainstate, we stop use of the background chainstate by setting `m_stop_use`, in\n+`CompleteSnapshotValidation()`, which is checked in `ActivateBestChain()`). We hash the\n+background chainstate's UTXO set contents and ensure it matches the compiled value in\n+`CMainParams::m_assumeutxo_data`.\n \n |    |    |\n | ---------- | ----------- |\n | number of chainstates | 2 (ibd has `m_stop_use=true`) |\n | active chainstate | snapshot |\n \n-**Failure consideration:** if bitcoind unexpectedly halts after `m_stop_use` is set on\n-the background chainstate but before `CompleteSnapshotValidation()` can finish, the\n-need to complete snapshot validation will be detected on subsequent init by\n-`ChainstateManager::CheckForUncleanShutdown()`.\n+The background chainstate data lingers on disk until subsequent initialization.",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 73,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "d988631b50b8b10a8dadae00fe61ebd32058a9d1",
      "in_reply_to_id": 888533308,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:25:51Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905090336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905090336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905091060",
      "pull_request_review_id": 1007902467,
      "id": 905091060,
      "node_id": "PRRC_kwDOABII58418pf0",
      "diff_hunk": "@@ -328,6 +367,150 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, SnapshotTestSetup)\n     this->SetupSnapshot();\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CChainState& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot\";\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 396,
      "original_position": 70,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2e30177903c3df456ed288a61fa05efb117d2e1c",
      "in_reply_to_id": 888543617,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed; moved both of those functions to the new `src/node/utxo_snapshot.cpp` unit.",
      "created_at": "2022-06-23T14:26:29Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905091060",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905091060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905091305",
      "pull_request_review_id": 1007902467,
      "id": 905091305,
      "node_id": "PRRC_kwDOABII58418pjp",
      "diff_hunk": "@@ -4879,6 +4884,62 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const std::string SNAPSHOT_BLOCKHASH_FILENAME = \"base_blockhash\";\n+\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+static bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "60d8fabe1bd7b24257193884bb542cef55fb4252",
      "in_reply_to_id": 888545004,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:26:42Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905091305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905091305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4895,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905091508",
      "pull_request_review_id": 1007902467,
      "id": 905091508,
      "node_id": "PRRC_kwDOABII58418pm0",
      "diff_hunk": "@@ -74,12 +79,18 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         return ChainstateLoadingError::ERROR_LOAD_GENESIS_BLOCK_FAILED;\n     }\n \n+    // Conservative value that will ultimately be changed by\n+    // a call to `chainman.MaybeRebalanceCaches()`.\n+    double init_cache_fraction = 0.2;\n+\n     // At this point we're either in reindex or we've loaded a useful\n     // block tree into BlockIndex()!\n \n     for (CChainState* chainstate : chainman.GetAll()) {\n+        LogPrintf(\"Initializing chainstate %s\\n\", chainstate->ToString());\n+\n         chainstate->InitCoinsDB(\n-            /*cache_size_bytes=*/nCoinDBCache,\n+            /*cache_size_bytes=*/nCoinDBCache * init_cache_fraction,",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "084c8e37494c7423ea53d165cc04354117b4938c",
      "in_reply_to_id": 888546791,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-06-23T14:26:52Z",
      "updated_at": "2022-06-23T14:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905091508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905091508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905111889",
      "pull_request_review_id": 1017143592,
      "id": 905111889,
      "node_id": "PRRC_kwDOABII58418ulR",
      "diff_hunk": "@@ -55,7 +55,6 @@ def check_clean_start():\n             b'Loading P2P addresses',\n             b'Loading banlist',\n             b'Loading block index',\n-            b'Switching active chainstate',",
      "path": "test/functional/feature_init.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2abc1b1a4c31eb97382e18d2fe50974042c4b162",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to reviewers: this is necessary because of the simplification of `InitializeChainstate()`; we now only log when switching the active to a snapshot chainstate.",
      "created_at": "2022-06-23T14:44:26Z",
      "updated_at": "2022-06-23T14:44:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905111889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905111889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905624314",
      "pull_request_review_id": 1017864813,
      "id": 905624314,
      "node_id": "PRRC_kwDOABII5841-rr6",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 25,
      "original_position": 24,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "35cba210f2e0f7be94989349d7032afaf75ad476",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Minor comment, using the \"in-memory\" wording (and in the whole cascade of callers) to qualify the state of chainstate sounds confusing. It's could be interpreted as if the chainstate is not loaded in your DRAM, or not already persisted on your disk, or \"fresh\" from a validation standpoint...",
      "created_at": "2022-06-24T01:05:12Z",
      "updated_at": "2022-06-24T02:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905624314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905624314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905628960",
      "pull_request_review_id": 1017864813,
      "id": 905628960,
      "node_id": "PRRC_kwDOABII5841-s0g",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+\n+    if (afile.fclose() != 0) {\n+        LogPrintf(\"[snapshot] failed to close base blockhash file %s after writing\\n\",",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 38,
      "original_position": 37,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "35cba210f2e0f7be94989349d7032afaf75ad476",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it could ease debugging and feature correctness monitoring if the assumeutxo logic gets its own `LogFlags`. It would be nice if one can observe the chainstate dance operating nicely, or spotting any weirdness.\r\n\r\nIt's more a global note on the assumeutxo patchet, it can be addressed latter on.",
      "created_at": "2022-06-24T01:18:17Z",
      "updated_at": "2022-06-24T02:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905628960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905628960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905642522",
      "pull_request_review_id": 1017864813,
      "id": 905642522,
      "node_id": "PRRC_kwDOABII5841-wIa",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = node::ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->ActivateSnapshotChainstate(mempool, *base_blockhash);\n+\n+    return true;\n+}\n+\n+CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash)\n+{\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate = \n+        std::make_unique<CChainState>(mempool, m_blockman, *this, base_blockhash);\n+    LogPrintf(\"Switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "e0f892fa15be69fbded0178f6bc5b3bfded36994",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe log deserves its \"[snapshot]\" prefix.",
      "created_at": "2022-06-24T01:40:12Z",
      "updated_at": "2022-06-24T02:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905642522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905642522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905655429",
      "pull_request_review_id": 1017864813,
      "id": 905655429,
      "node_id": "PRRC_kwDOABII5841-zSF",
      "diff_hunk": "@@ -4860,6 +4860,48 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+static bool DeleteCoinsDBFromDisk(\n+    const fs::path db_path,\n+    bool is_snapshot = false)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "75841142b978837a159f48d1ac5d1578029652a4",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At this PR, `DeleteCoinsDBFromDisk` is called only twice so it sounds there is no clear default argument so it could be better to give them explicitly. Default arguments have already been source of bugs in the past..",
      "created_at": "2022-06-24T01:54:04Z",
      "updated_at": "2022-06-24T02:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r905655429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905655429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4865,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908872549",
      "pull_request_review_id": 1022301395,
      "id": 908872549,
      "node_id": "PRRC_kwDOABII5842LEtl",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+\n+    if (afile.fclose() != 0) {\n+        LogPrintf(\"[snapshot] failed to close base blockhash file %s after writing\\n\",",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 38,
      "original_position": 37,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "35cba210f2e0f7be94989349d7032afaf75ad476",
      "in_reply_to_id": 905628960,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree, maybe will do in a later change.",
      "created_at": "2022-06-28T19:36:22Z",
      "updated_at": "2022-06-28T19:41:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r908872549",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908872549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908873044",
      "pull_request_review_id": 1022301395,
      "id": 908873044,
      "node_id": "PRRC_kwDOABII5842LE1U",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = node::ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->ActivateSnapshotChainstate(mempool, *base_blockhash);\n+\n+    return true;\n+}\n+\n+CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash)\n+{\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate = \n+        std::make_unique<CChainState>(mempool, m_blockman, *this, base_blockhash);\n+    LogPrintf(\"Switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "e0f892fa15be69fbded0178f6bc5b3bfded36994",
      "in_reply_to_id": 905642522,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-06-28T19:37:05Z",
      "updated_at": "2022-06-28T19:41:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r908873044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908873044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908912899",
      "pull_request_review_id": 1022359139,
      "id": 908912899,
      "node_id": "PRRC_kwDOABII5842LOkD",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 25,
      "original_position": 24,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "35cba210f2e0f7be94989349d7032afaf75ad476",
      "in_reply_to_id": 905624314,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While I agree that \"in-memory\" is a little confusing in a vacuum, that term has had a very specific meaning for awhile in the context of chainstates and coinsdb - see e.g. the arguments `in_memory` on `CChainState::InitCoinsDB`, `CoinsViews::CoinsViews`, and `CCoinsViewDB::m_is_memory`.",
      "created_at": "2022-06-28T20:24:23Z",
      "updated_at": "2022-06-28T20:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r908912899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908912899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913233161",
      "pull_request_review_id": 1027855054,
      "id": 913233161,
      "node_id": "PRRC_kwDOABII5842btUJ",
      "diff_hunk": "@@ -71,6 +72,9 @@ class CCoinsViewDB final : public CCoinsView\n \n     //! Dynamically alter the underlying leveldb cache size.\n     void ResizeCache(size_t new_cache_size) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    //! @returns filesystem path to on-disk storage.",
      "path": "src/txdb.h",
      "position": null,
      "original_position": 13,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "93296fefe10517468082a8272d57e4ce5cf032df",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could document when an optional not containing value is returned.",
      "created_at": "2022-07-04T19:05:14Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913233161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913233161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913236477",
      "pull_request_review_id": 1027855054,
      "id": 913236477,
      "node_id": "PRRC_kwDOABII5842buH9",
      "diff_hunk": "@@ -4928,9 +4933,17 @@ bool ChainstateManager::ActivateSnapshot(\n             static_cast<size_t>(current_coinstip_cache_size * SNAPSHOT_CACHE_PERC));\n     }\n \n-    const bool snapshot_ok = this->PopulateAndValidateSnapshot(\n+    bool snapshot_ok = this->PopulateAndValidateSnapshot(",
      "path": "src/validation.cpp",
      "position": 187,
      "original_position": 33,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Side-note, i think it can be interesting to document `PopulateAndValidateSnapshot()` with what exactly this function is achieving, the sequence of checks and operations and the potential failures. It's a ~200 LoC function in the middle of the validation code.",
      "created_at": "2022-07-04T19:16:22Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913236477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913236477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4839,
      "original_line": 4839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913237292",
      "pull_request_review_id": 1027855054,
      "id": 913237292,
      "node_id": "PRRC_kwDOABII5842buUs",
      "diff_hunk": "@@ -33,6 +39,20 @@ class SnapshotMetadata\n \n     SERIALIZE_METHODS(SnapshotMetadata, obj) { READWRITE(obj.m_base_blockhash, obj.m_coins_count); }\n };\n+\n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const fs::path SNAPSHOT_BLOCKHASH_FILENAME{\"base_blockhash\"};\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path chaindir)",
      "path": "src/node/utxo_snapshot.h",
      "position": 32,
      "original_position": 30,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could be documented like the writer.",
      "created_at": "2022-07-04T19:19:18Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913237292",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913237292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913239804",
      "pull_request_review_id": 1027855054,
      "id": 913239804,
      "node_id": "PRRC_kwDOABII5842bu78",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 21,
      "original_position": 20,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this call could be modified a bit to avoid holding `cs_main` during the function lifetime. In `ActivateSnapshot()` you might have a `WITH_LOCK` to get the `StoragePath()` and give it as a argument here.",
      "created_at": "2022-07-04T19:28:38Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913239804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913239804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913241224",
      "pull_request_review_id": 1027855054,
      "id": 913241224,
      "node_id": "PRRC_kwDOABII5842bvSI",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+\n+    if (afile.fclose() != 0) {\n+        LogPrintf(\"[snapshot] failed to close base blockhash file %s after writing\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path chaindir)\n+{\n+    if (!fs::exists(chaindir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(chaindir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;",
      "path": "src/node/utxo_snapshot.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "to improve readability of this function, could be `read_from`. ",
      "created_at": "2022-07-04T19:33:36Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913241224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913241224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913241591",
      "pull_request_review_id": 1027855054,
      "id": 913241591,
      "node_id": "PRRC_kwDOABII5842bvX3",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+\n+    if (afile.fclose() != 0) {\n+        LogPrintf(\"[snapshot] failed to close base blockhash file %s after writing\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path chaindir)\n+{\n+    if (!fs::exists(chaindir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(chaindir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    if (!fs::exists(p)) {\n+        LogPrintf(\"[snapshot] snapshot chainstate dir is malformed! no base blockhash file \" /* Continued */\n+            \"exists at path %s. Try reinitializing snapshot?\\n\", fs::PathToString(p));",
      "path": "src/node/utxo_snapshot.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "By reinitializing the snapshot, you mean removing the snapshot chainstate dir and calling back `loadtxoutset`?",
      "created_at": "2022-07-04T19:35:06Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913241591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913241591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913244332",
      "pull_request_review_id": 1027855054,
      "id": 913244332,
      "node_id": "PRRC_kwDOABII5842bwCs",
      "diff_hunk": "@@ -994,6 +988,13 @@ class ChainstateManager\n     /** Produce the necessary coinbase commitment for a block (modifies the hash, don't call for mined blocks). */\n     std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev) const;\n \n+    //! When starting up, search the datadir for a chainstate based on a UTXO\n+    //! snapshot that is in the process of being validated.\n+    bool DetectSnapshotChainstate(CTxMemPool* mempool) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    CChainState& ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash) ",
      "path": "src/validation.h",
      "position": null,
      "original_position": 28,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "whitespace here",
      "created_at": "2022-07-04T19:45:09Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913244332",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913244332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913247518",
      "pull_request_review_id": 1027855054,
      "id": 913247518,
      "node_id": "PRRC_kwDOABII5842bw0e",
      "diff_hunk": "@@ -74,12 +79,18 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         return ChainstateLoadingError::ERROR_LOAD_GENESIS_BLOCK_FAILED;\n     }\n \n+    // Conservative value that will ultimately be changed by\n+    // a call to `chainman.MaybeRebalanceCaches()`.\n+    double init_cache_fraction = 0.2;",
      "path": "src/node/chainstate.cpp",
      "position": 80,
      "original_position": 23,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be good to document the reasoning behind picking up `0.2` and to which proportion of the coin cache is allocated to each chainstate iirc the purpose of cache rebalancing.",
      "created_at": "2022-07-04T19:56:00Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913247518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913247518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913249598",
      "pull_request_review_id": 1027855054,
      "id": 913249598,
      "node_id": "PRRC_kwDOABII5842bxU-",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would say, as the return value of `DetectSnapshotChainstate` is not considered in `LoadChainstate` the log print could be only located only when the detection sequence is fully valid, i.e after the read of the base blockhash.",
      "created_at": "2022-07-04T20:03:20Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913249598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913249598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913249691",
      "pull_request_review_id": 1027855054,
      "id": 913249691,
      "node_id": "PRRC_kwDOABII5842bxWb",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = node::ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->ActivateSnapshotChainstate(mempool, *base_blockhash);\n+\n+    return true;\n+}\n+\n+CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash)\n+{\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate = ",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "whitespace",
      "created_at": "2022-07-04T20:03:43Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913249691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913249691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5239,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913251884",
      "pull_request_review_id": 1027855054,
      "id": 913251884,
      "node_id": "PRRC_kwDOABII5842bx4s",
      "diff_hunk": "@@ -4860,6 +4860,46 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+static bool DeleteCoinsDBFromDisk(const fs::path db_path, bool is_snapshot)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);",
      "path": "src/validation.cpp",
      "position": 142,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "167b9af34af82bda93e3729335d71e172e181d8f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is that an undocumented design assumption of our writers that they should always take `cs_main` lock even if there is no modification of a protected value like here afaict ? Wonder if the consistency guarantees of the files are not guaranteed at the kernel level anyway.",
      "created_at": "2022-07-04T20:11:39Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913251884",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913251884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4745,
      "original_line": 4745,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913252933",
      "pull_request_review_id": 1027855054,
      "id": 913252933,
      "node_id": "PRRC_kwDOABII5842byJF",
      "diff_hunk": "@@ -835,6 +835,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot has been loaded.\n+    CBlockIndex* GetSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> GetSnapshotBaseHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": 128,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b707032db9e71d98ce5427b37e7d13011f725ca9",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could be documented",
      "created_at": "2022-07-04T20:15:49Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913252933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913252933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 879,
      "original_line": 879,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913255907",
      "pull_request_review_id": 1027855054,
      "id": 913255907,
      "node_id": "PRRC_kwDOABII5842by3j",
      "diff_hunk": "@@ -469,6 +469,12 @@ class CChainState\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to the background chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "430761a35df50bd9fc5394eb84b966629200b67f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The snapshot invalid case mentioned by `IsUsable` could be also reflected here.",
      "created_at": "2022-07-04T20:26:30Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913255907",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913255907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 475,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913257375",
      "pull_request_review_id": 1027855054,
      "id": 913257375,
      "node_id": "PRRC_kwDOABII5842bzOf",
      "diff_hunk": "@@ -4826,12 +4826,8 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     LOCK(::cs_main);\n     std::vector<CChainState*> out;\n \n-    if (!IsSnapshotValidated() && m_ibd_chainstate) {\n-        out.push_back(m_ibd_chainstate.get());\n-    }\n-\n-    if (m_snapshot_chainstate) {\n-        out.push_back(m_snapshot_chainstate.get());\n+    for (CChainState* cs : {m_ibd_chainstate.get(), m_snapshot_chainstate.get()}) {\n+        if (this->IsUsable(cs)) out.push_back(cs);",
      "path": "src/validation.cpp",
      "position": 98,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "430761a35df50bd9fc5394eb84b966629200b67f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe you could update `GetAll` documentation to \"Get all chainstates currently `IsUsable()` to make it clear some chainstates might be filtered out.",
      "created_at": "2022-07-04T20:32:20Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913257375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913257375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4713,
      "original_line": 4713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913261075",
      "pull_request_review_id": 1027855054,
      "id": 913261075,
      "node_id": "PRRC_kwDOABII5842b0IT",
      "diff_hunk": "@@ -27,6 +27,7 @@ enum class ChainstateLoadingError {\n     ERROR_GENERIC_BLOCKDB_OPEN_FAILED,\n     ERROR_BLOCKS_WITNESS_INSUFFICIENTLY_VALIDATED,\n     SHUTDOWN_PROBED,\n+    SNAPSHOT_VALIDATION_FAILED,",
      "path": "src/node/chainstate.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could be good to document the `ChainstateLoadingError`, that would ease the review of the code paths where errors are returned and the adequateness of them.",
      "created_at": "2022-07-04T20:45:37Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913261075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913261075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913264248",
      "pull_request_review_id": 1027855054,
      "id": 913264248,
      "node_id": "PRRC_kwDOABII5842b054",
      "diff_hunk": "@@ -20,10 +20,26 @@ static std::optional<ChainstateLoadingError> CompleteChainstateInitialization(\n     std::function<void()> coins_error_cb) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n \n {\n+    if (!chainman.BlockIndex().empty() &&\n+            !chainman.m_blockman.LookupBlockIndex(chainman.GetParams().GetConsensus().hashGenesisBlock)) {\n+        return ChainstateLoadingError::ERROR_BAD_GENESIS_BLOCK;\n+    }\n+\n+    // At this point blocktree args are consistent with what's on disk.",
      "path": "src/node/chainstate.cpp",
      "position": 62,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the purpose of moving those checks from `LoadChainstate()` to `CompleteChainstateInitialization()` ? I'm not sure the comment about `ThreadImport` is still accurate. ",
      "created_at": "2022-07-04T20:57:15Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913264248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913264248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913264467",
      "pull_request_review_id": 1027855054,
      "id": 913264467,
      "node_id": "PRRC_kwDOABII5842b09T",
      "diff_hunk": "@@ -745,9 +746,39 @@ class CChainState\n     void UpdateTip(const CBlockIndex* pindexNew)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    /**\n+     * In case of an invalid snapshot, rename the coins leveldb directory so\n+     * that it can be examined for issue diagnosis.\n+     */\n+    void InvalidateCoinsDBOnDisk() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     friend ChainstateManager;\n };\n \n+\n+enum class SnapshotCompletionError {\n+    // Expected assumeutxo configuration data is not found for the height of the\n+    // base block.\n+    MISSING_CHAINPARAMS,\n+\n+    // Failed to generate UTXO statistics (to check UTXO set hash) for the background\n+    // chainstate.\n+    STATS_FAILED,\n+\n+    // The UTXO set hash of the background validation chainstate does not match\n+    // the one expected by assumeutxo chainparams.\n+    HASH_MISMATCH,\n+\n+    // The blockhash of the current tip of the background validation chainstate does\n+    // not match the one expected by the snapshot chainstate.\n+    BASE_BLOCKHASH_MISMATCH,\n+};\n+\n+struct SnapshotCompletionResult {\n+    bool completed;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could be called `success` for less redundancy with completion",
      "created_at": "2022-07-04T20:58:10Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913264467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913264467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 778,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913266231",
      "pull_request_review_id": 1027855054,
      "id": 913266231,
      "node_id": "PRRC_kwDOABII5842b1Y3",
      "diff_hunk": "@@ -2750,6 +2750,14 @@ bool CChainState::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_stop_use`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        m_chainman.MaybeCompleteSnapshotValidation();",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `assumeutxod.md` might be inaccurate on that, it says the UTXO set is checked in `ActivateBestChain()`, should say `ConnectTip()` ?",
      "created_at": "2022-07-04T21:05:45Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913266231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913266231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2759,
      "original_line": 2759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913268378",
      "pull_request_review_id": 1027855054,
      "id": 913268378,
      "node_id": "PRRC_kwDOABII5842b16a",
      "diff_hunk": "@@ -3022,6 +3037,15 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n                     assert(trace.pblock && trace.pindex);\n                     GetMainSignals().BlockConnected(trace.pblock, trace.pindex);\n                 }\n+\n+                // This will have been toggled in\n+                // ActivateBestChainStep -> ConnectTip -> MaybeCompleteSnapshotValidation,\n+                // if at all, so we should catch it here.\n+                //\n+                // Break this do-while to ensure we don't advance past the base snapshot.\n+                if (m_stop_use) {",
      "path": "src/validation.cpp",
      "position": 60,
      "original_position": 39,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `ActivateBestChain` could be documented on those new block processing stoppers if a background state is fully validated.",
      "created_at": "2022-07-04T21:15:11Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913268378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913268378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3047,
      "original_line": 3047,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913269533",
      "pull_request_review_id": 1027855054,
      "id": 913269533,
      "node_id": "PRRC_kwDOABII5842b2Md",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't that check a belt-and-suspender as \"backgroundness\" is already checked in `ConnectTip()` ?",
      "created_at": "2022-07-04T21:20:08Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913269533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913269533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913269927",
      "pull_request_review_id": 1027855054,
      "id": 913269927,
      "node_id": "PRRC_kwDOABII5842b2Sn",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 137,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "or more theoretical a deep reorg down to the snapshot blockhash ? or what else it could be a hint of ?",
      "created_at": "2022-07-04T21:21:59Z",
      "updated_at": "2022-07-04T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913269927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913269927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913270429",
      "pull_request_review_id": 1027855054,
      "id": 913270429,
      "node_id": "PRRC_kwDOABII5842b2ad",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        );\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handle_invalid_snapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    std::optional<CCoinsStats> maybe_ibd_stats;\n+    try {",
      "path": "src/validation.cpp",
      "position": 361,
      "original_position": 189,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If that function takes few minutes to yield a result could be nice to add a log print in the happy path informing a node operator what's going if the rest of the nodes operations are staling due to `cs_main` lock held.",
      "created_at": "2022-07-04T21:24:08Z",
      "updated_at": "2022-07-04T22:06:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913270429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913270429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5210,
      "original_line": 5210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913270797",
      "pull_request_review_id": 1027855054,
      "id": 913270797,
      "node_id": "PRRC_kwDOABII5842b2gN",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        );\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+",
      "path": "src/validation.cpp",
      "position": 333,
      "original_position": 163,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "assert usability of ibd chainstate as it's supposed to take the validation relay at next restart?",
      "created_at": "2022-07-04T21:25:54Z",
      "updated_at": "2022-07-04T22:06:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913270797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913270797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5182,
      "original_line": 5182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913273275",
      "pull_request_review_id": 1027855054,
      "id": 913273275,
      "node_id": "PRRC_kwDOABII5842b3G7",
      "diff_hunk": "@@ -5311,3 +5521,97 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\n     CBlockIndex* base = this->GetSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::ResetChainstates()\n+{\n+    m_ibd_chainstate.reset();\n+    m_snapshot_chainstate.reset();\n+    m_active_chainstate = nullptr;\n+}\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    auto snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    auto ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    // Since we're going to be moving around the underlying leveldb filesystem content\n+    // for each chainstate, make sure that the chainstates (and their constituent\n+    // CoinsViews members) have been destructed first.\n+    //\n+    // The caller of this method will be responsible for reinitializing chainstates\n+    // if they want to continue operation.\n+    this->ResetChainstates();\n+\n+    // No chainstates should be considered usable.\n+    assert(this->GetAll().size() == 0);",
      "path": "src/validation.cpp",
      "position": 557,
      "original_position": 333,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reading until then, it was my understanding that the snapshot state stays usable, can't find when the snapshot chainstate is turn to `m_stop_use = true`, apart in the `handle_invalid_snapshot` case?",
      "created_at": "2022-07-04T21:36:59Z",
      "updated_at": "2022-07-04T22:06:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r913273275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913273275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5433,
      "original_line": 5433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915111081",
      "pull_request_review_id": 1030494337,
      "id": 915111081,
      "node_id": "PRRC_kwDOABII5842i3yp",
      "diff_hunk": "@@ -1508,14 +1509,18 @@ CChainState::CChainState(\n       m_chainman(chainman),\n       m_from_snapshot_blockhash(from_snapshot_blockhash) {}\n \n+\n+constexpr std::string_view SNAPSHOT_CHAINSTATE_SUFFIX = \"_snapshot\";",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: rename snapshot chainstate dir\" (0f9d3f19fe535c2b457818a46bb8e536461581dc)\r\n\r\nMight be better to define this in `node/utxo_snapshot.h` now instead of `validation.cpp` so it doesn't have to move later.",
      "created_at": "2022-07-06T17:52:57Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915111081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915111081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915132811",
      "pull_request_review_id": 1030494337,
      "id": 915132811,
      "node_id": "PRRC_kwDOABII5842i9GL",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = node::ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->ActivateSnapshotChainstate(mempool, *base_blockhash);\n+\n+    return true;\n+}\n+\n+CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: add utxo snapshot detection\" (b1dbc76037c1f2ff893113057afd3f2eac581dbd)\r\n\r\nThis `ChainstateManager::ActivateSnapshotChainstate()` method name seem easy to confuse with the other `ChainstateManager::ActivateSnapshot()` method.\r\n\r\nI think ideally the methods would have more distinct names, like this could be called `ActivateExistingSnapshot` and the other could be called `ActivateNewSnapshot`.",
      "created_at": "2022-07-06T18:20:53Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915132811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915132811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915137847",
      "pull_request_review_id": 1030494337,
      "id": 915137847,
      "node_id": "PRRC_kwDOABII5842i-U3",
      "diff_hunk": "@@ -4969,7 +4969,22 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = node::FindSnapshotChainstateDir()) {\n+            // We have to destruct leveldb::DB in order to release the db lock, otherwise\n+            // DestroyDB() (in DeleteCoinsDBFromDisk()) will fail. See `leveldb::~DBImpl()`.\n+            // Destructing the chainstate (and so resetting the coinsviews object) does this.\n+            snapshot_chainstate.reset();\n+            bool removed = DeleteCoinsDBFromDisk(*snapshot_datadir, /*is_snapshot=*/true);",
      "path": "src/validation.cpp",
      "position": 210,
      "original_position": 15,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "55519a32c9fee6df413fdc654dc8fca0d9ed8fc0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: remove snapshot datadirs upon validation failure\" (55519a32c9fee6df413fdc654dc8fca0d9ed8fc0)\r\n\r\nThis does not seem to have test coverage (tests pass with the DeleteCoinsDBFromDisk call commented out)",
      "created_at": "2022-07-06T18:27:22Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915137847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915137847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4861,
      "original_line": 4861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915140965",
      "pull_request_review_id": 1030494337,
      "id": 915140965,
      "node_id": "PRRC_kwDOABII5842i_Fl",
      "diff_hunk": "@@ -5297,3 +5297,16 @@ CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool,\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+CBlockIndex* ChainstateManager::GetSnapshotBaseBlock()\n+{\n+    auto blockhash_op = this->SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b707032db9e71d98ce5427b37e7d13011f725ca9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add ChainstateManager.GetSnapshot{BaseHeight,BaseBlock}()\" (b707032db9e71d98ce5427b37e7d13011f725ca9)\r\n\r\nWould be good to `return Assert(m_blockman.LookupBlockIndex(*blockhash_op))` to be clear it is not supposed to return null in this case. ",
      "created_at": "2022-07-06T18:31:13Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915140965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915140965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915147625",
      "pull_request_review_id": 1030494337,
      "id": 915147625,
      "node_id": "PRRC_kwDOABII5842jAtp",
      "diff_hunk": "@@ -523,6 +523,16 @@ void BlockManager::FlushUndoFile(int block_file, bool finalize)\n void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n {\n     LOCK(cs_LastBlockFile);\n+\n+    if (m_blockfile_info.size() < 1) {\n+        // Return if we haven't loaded any blockfiles yet. This happens during\n+        // chainstate init, when we call ChainstateManager::MaybeRebalanceCaches() (which\n+        // then calls FlushStateToDisk()), resulting in a call to this function before we\n+        // have populated `m_blockfile_info` via LoadBlockIndexDB().\n+        return;",
      "path": "src/node/blockstorage.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "5254307117d7bacf275a85707f29dcbdd3d24dc5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockmanager: avoid undefined behavior during FlushBlockFile\" (5254307117d7bacf275a85707f29dcbdd3d24dc5)\r\n\r\nIs commit message out of date? It says \"This case becomes more than academic in the next commit, when we call\r\nMaybeRebalanceCaches() during chainstate init before the block index has been loaded.\" But I think this is actually happening in an earlier commit b1dbc76037c1f2ff893113057afd3f2eac581dbd, not the next commit? In any case, it would be helpful to know specifically what \"during chainstate init\" means in the code comment here and maybe be more specific about related commit in the commit message.",
      "created_at": "2022-07-06T18:40:02Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915147625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915147625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915165346",
      "pull_request_review_id": 1030494337,
      "id": 915165346,
      "node_id": "PRRC_kwDOABII5842jFCi",
      "diff_hunk": "@@ -745,9 +746,39 @@ class CChainState\n     void UpdateTip(const CBlockIndex* pindexNew)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    /**\n+     * In case of an invalid snapshot, rename the coins leveldb directory so\n+     * that it can be examined for issue diagnosis.\n+     */\n+    void InvalidateCoinsDBOnDisk() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     friend ChainstateManager;\n };\n \n+\n+enum class SnapshotCompletionError {\n+    // Expected assumeutxo configuration data is not found for the height of the\n+    // base block.\n+    MISSING_CHAINPARAMS,\n+\n+    // Failed to generate UTXO statistics (to check UTXO set hash) for the background\n+    // chainstate.\n+    STATS_FAILED,\n+\n+    // The UTXO set hash of the background validation chainstate does not match\n+    // the one expected by assumeutxo chainparams.\n+    HASH_MISMATCH,\n+\n+    // The blockhash of the current tip of the background validation chainstate does\n+    // not match the one expected by the snapshot chainstate.\n+    BASE_BLOCKHASH_MISMATCH,\n+};\n+\n+struct SnapshotCompletionResult {",
      "path": "src/validation.h",
      "position": null,
      "original_position": 40,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\nThis result type seems overly complicated to me. Instead of having a struct with bool and optional<enum> members, why not return a plain enum:\r\n\r\n```\r\nenum class SnapshotValidationResult { SUCCESS, SKIPPED, FAILED_MISSING_CHAINPARAMS, FAILED_STATS, FAILED_HASH_MISMATCH, FAILED_BASE_BLOCKHASH_MISMATCH };\r\n```",
      "created_at": "2022-07-06T19:02:34Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915165346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915165346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 777,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915180090",
      "pull_request_review_id": 1030494337,
      "id": 915180090,
      "node_id": "PRRC_kwDOABII5842jIo6",
      "diff_hunk": "@@ -1499,6 +1499,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                 break;\n             case ChainstateLoadingError::SHUTDOWN_PROBED:\n                 break;\n+            case ChainstateLoadingError::SNAPSHOT_VALIDATION_FAILED:\n+                strLoadError = _(\"UTXO snapshot failed to validate\");",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\nIf this case is hit, it looks like the GUI will prompt to reindex. I guess that seems reasonable if it is intended behavior? Could change this `return InitError(_(\"UTXO snapshot failed to validate. Please do XXX\"));` if this is supposed to just exit instead.",
      "created_at": "2022-07-06T19:22:19Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915180090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915180090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915185880",
      "pull_request_review_id": 1030494337,
      "id": 915185880,
      "node_id": "PRRC_kwDOABII5842jKDY",
      "diff_hunk": "@@ -5013,6 +5042,18 @@ static void FlushSnapshotToDisk(CCoinsViewCache& coins_cache, bool snapshot_load\n     coins_cache.Flush();\n }\n \n+struct StopHashingException : public std::exception\n+{\n+    const char* what() const throw() override\n+    {\n+        return \"ComputeUTXOStats interrupted by shutdown.\";\n+    }\n+};\n+\n+static auto SnapshotUTXOHashBreakpoint = [] {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\nCan it just be a normal function `static void SnapshotUTXOHashBreakpoint() {`?",
      "created_at": "2022-07-06T19:29:47Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915185880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915185880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5053,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915188608",
      "pull_request_review_id": 1030494337,
      "id": 915188608,
      "node_id": "PRRC_kwDOABII5842jKuA",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.",
      "path": "src/validation.cpp",
      "position": 270,
      "original_position": 63,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 855193716,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\n> Perhaps it isn't actually necessary to hold `cs_main` throughout this if I set `m_stop_use` immediately, and then ensure all chainstate accesses are going through `isUsable()` checks...\r\n> \r\n> Edit: anyway, that's an optional optimization that can be looked at in a future PR.\r\n\r\nMaybe change the TODO comment below to mention this idea. It seems like a more direct solution than using different locks.",
      "created_at": "2022-07-06T19:33:14Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915188608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915188608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5119,
      "original_line": 5119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915198524",
      "pull_request_review_id": 1030494337,
      "id": 915198524,
      "node_id": "PRRC_kwDOABII5842jNI8",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 137,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913269927,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\n> or more theoretical a deep reorg down to the snapshot blockhash ? or what else it could be a hint of ?\r\n\r\nA deep reorg does seem like the thing that would trigger this, assuming there is not a bug. I would just write message to straightforwardly report what happened. Something like `\"Validated block %s height %d does not match the snapshot base block %s height %d. Snapshot is not valid.\", index_new.BlockHash().ToString(), index_new.nHeight, snapshot_blockhash.ToString(), snapshot_height`.",
      "created_at": "2022-07-06T19:46:54Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915198524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915198524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915205360",
      "pull_request_review_id": 1030494337,
      "id": 915205360,
      "node_id": "PRRC_kwDOABII5842jOzw",
      "diff_hunk": "@@ -2750,6 +2750,14 @@ bool CChainState::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_stop_use`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        m_chainman.MaybeCompleteSnapshotValidation();",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\nSince return value is not checked, can comment above be updated to say what is supposed to happen here if the snapshot fails validation? Or if the hash fails to compute? I'm a little confused because about what error handling is supposed to be because it seems like m_stop_use is set in the success case, but the shutdown function and InvalidateCoinsDBOnDisk are not always called in the failure case. So it is seems possible to end up with the background chainstate continueing to sync past the snapshot base, meanwhile the snapshot is still active",
      "created_at": "2022-07-06T19:56:17Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915205360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915205360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2759,
      "original_line": 2759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915211195",
      "pull_request_review_id": 1030494337,
      "id": 915211195,
      "node_id": "PRRC_kwDOABII5842jQO7",
      "diff_hunk": "@@ -5311,3 +5521,97 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\n     CBlockIndex* base = this->GetSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::ResetChainstates()\n+{\n+    m_ibd_chainstate.reset();\n+    m_snapshot_chainstate.reset();\n+    m_active_chainstate = nullptr;\n+}\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    auto snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    auto ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    // Since we're going to be moving around the underlying leveldb filesystem content\n+    // for each chainstate, make sure that the chainstates (and their constituent\n+    // CoinsViews members) have been destructed first.\n+    //\n+    // The caller of this method will be responsible for reinitializing chainstates\n+    // if they want to continue operation.\n+    this->ResetChainstates();\n+\n+    // No chainstates should be considered usable.\n+    assert(this->GetAll().size() == 0);\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+              fs::PathToString(ibd_chainstate_path));\n+\n+    fs::path tmp_old{ibd_chainstate_path + \"_todelete\"};\n+\n+    auto rename_failed_abort = [](\n+                                   fs::path p_old,\n+                                   fs::path p_new,\n+                                   const fs::filesystem_error& err) {\n+        LogPrintf(\"%s: error renaming file (%s): %s\\n\",\n+                __func__, fs::PathToString(p_old), err.what());\n+        AbortNode(strprintf(\n+            \"Rename of '%s' -> '%s' failed. \"\n+            \"Cannot clean up the background chainstate leveldb directory.\",\n+            fs::PathToString(p_old), fs::PathToString(p_new)));\n+    };\n+\n+    try {\n+        fs::rename(ibd_chainstate_path, tmp_old);\n+    } catch (const fs::filesystem_error& e) {\n+        rename_failed_abort(ibd_chainstate_path, tmp_old, e);\n+        throw;\n+    }\n+\n+    LogPrintf(\"[snapshot] moving snapshot chainstate (%s) to \" /* Continued */\n+              \"default chainstate directory (%s)\\n\",\n+              fs::PathToString(snapshot_chainstate_path), fs::PathToString(ibd_chainstate_path));\n+\n+    try {\n+        fs::rename(snapshot_chainstate_path, ibd_chainstate_path);\n+    } catch (const fs::filesystem_error& e) {\n+        rename_failed_abort(snapshot_chainstate_path, ibd_chainstate_path, e);\n+        throw;\n+    }\n+\n+    if (!DeleteCoinsDBFromDisk(tmp_old, /*is_snapshot=*/false)) {\n+        // No need to AbortNode because once the unneeded bg chainstate data is\n+        // moved, it will not interfere with subsequent initialization.\n+        LogPrintf(\"Deletion of %s failed. Please remove it manually, as the \" /* Continued */\n+                  \"directory is now unnecessary.\\n\",\n+                  fs::PathToString(tmp_old));\n+    }\n+\n+    LogPrintf(\"[snapshot] deleted background chainstate directory (%s)\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 378,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (00b319a35cfb691a2fb831e84f63512412cae068)\r\n\r\nSeems like this should be in an `} else {` block to avoid confusing `deletion of %s failed` message followed by `%s deleted` message",
      "created_at": "2022-07-06T20:04:15Z",
      "updated_at": "2022-07-06T20:15:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r915211195",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/915211195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923815117",
      "pull_request_review_id": 1042479612,
      "id": 923815117,
      "node_id": "PRRC_kwDOABII5843EEzN",
      "diff_hunk": "@@ -71,6 +72,9 @@ class CCoinsViewDB final : public CCoinsView\n \n     //! Dynamically alter the underlying leveldb cache size.\n     void ResizeCache(size_t new_cache_size) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    //! @returns filesystem path to on-disk storage.",
      "path": "src/txdb.h",
      "position": null,
      "original_position": 13,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "93296fefe10517468082a8272d57e4ce5cf032df",
      "in_reply_to_id": 913233161,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-07-18T20:12:52Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923815117",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923815117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923816499",
      "pull_request_review_id": 1042479612,
      "id": 923816499,
      "node_id": "PRRC_kwDOABII5843EFIz",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 21,
      "original_position": 20,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 913239804,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think conceptually this _should_ hold `cs_main`, since we're writing to a chainstate directory. Splitting cs_main out from per-chainstate locks should be a larger follow-on effort, and I think we can delay reworking this call until then.",
      "created_at": "2022-07-18T20:14:44Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923816499",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923816499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923821154",
      "pull_request_review_id": 1042479612,
      "id": 923821154,
      "node_id": "PRRC_kwDOABII5843EGRi",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+\n+    if (afile.fclose() != 0) {\n+        LogPrintf(\"[snapshot] failed to close base blockhash file %s after writing\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path chaindir)\n+{\n+    if (!fs::exists(chaindir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(chaindir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    if (!fs::exists(p)) {\n+        LogPrintf(\"[snapshot] snapshot chainstate dir is malformed! no base blockhash file \" /* Continued */\n+            \"exists at path %s. Try reinitializing snapshot?\\n\", fs::PathToString(p));",
      "path": "src/node/utxo_snapshot.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 913241591,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2022-07-18T20:20:14Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923821154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923821154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923821175",
      "pull_request_review_id": 1042479612,
      "id": 923821175,
      "node_id": "PRRC_kwDOABII5843EGR3",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);\n+    assert(snapshot_chainstate.m_from_snapshot_blockhash);\n+\n+    const std::optional<fs::path> chaindir = snapshot_chainstate.CoinsDB().StoragePath();\n+    assert(chaindir); // Sanity check that chainstate isn't in-memory.\n+    const fs::path write_to = *chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;\n+\n+    FILE* file{fsbridge::fopen(write_to, \"wb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        LogPrintf(\"[snapshot] failed to open base blockhash file for writing: %s\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    afile << *snapshot_chainstate.m_from_snapshot_blockhash;\n+\n+    if (afile.fclose() != 0) {\n+        LogPrintf(\"[snapshot] failed to close base blockhash file %s after writing\\n\",\n+                  fs::PathToString(write_to));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path chaindir)\n+{\n+    if (!fs::exists(chaindir)) {\n+        LogPrintf(\"[snapshot] cannot read base blockhash: no chainstate dir \" /* Continued */\n+            \"exists at path %s\\n\", fs::PathToString(chaindir));\n+        return std::nullopt;\n+    }\n+    const fs::path p = chaindir / node::SNAPSHOT_BLOCKHASH_FILENAME;",
      "path": "src/node/utxo_snapshot.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 913241224,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-18T20:20:16Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923821175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923821175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923821700",
      "pull_request_review_id": 1042479612,
      "id": 923821700,
      "node_id": "PRRC_kwDOABII5843EGaE",
      "diff_hunk": "@@ -33,6 +39,20 @@ class SnapshotMetadata\n \n     SERIALIZE_METHODS(SnapshotMetadata, obj) { READWRITE(obj.m_base_blockhash, obj.m_coins_count); }\n };\n+\n+//! The file in the snapshot chainstate dir which stores the base blockhash. This\n+//! is needed to reconstruct snapshot chainstates on init.\n+const fs::path SNAPSHOT_BLOCKHASH_FILENAME{\"base_blockhash\"};\n+\n+//! Write out the blockhash of the snapshot base block that was used to construct\n+//! this chainstate. This value is read in during subsequent initializations and\n+//! used to reconstruct snapshot-based chainstates.\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+std::optional<uint256> ReadSnapshotBaseBlockhash(fs::path chaindir)",
      "path": "src/node/utxo_snapshot.h",
      "position": 32,
      "original_position": 30,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 913237292,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-18T20:20:59Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923821700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923821700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923828309",
      "pull_request_review_id": 1042479612,
      "id": 923828309,
      "node_id": "PRRC_kwDOABII5843EIBV",
      "diff_hunk": "@@ -1508,14 +1509,18 @@ CChainState::CChainState(\n       m_chainman(chainman),\n       m_from_snapshot_blockhash(from_snapshot_blockhash) {}\n \n+\n+constexpr std::string_view SNAPSHOT_CHAINSTATE_SUFFIX = \"_snapshot\";",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 915111081,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-18T20:28:06Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923828309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923828309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923829116",
      "pull_request_review_id": 1042479612,
      "id": 923829116,
      "node_id": "PRRC_kwDOABII5843EIN8",
      "diff_hunk": "@@ -4928,9 +4933,17 @@ bool ChainstateManager::ActivateSnapshot(\n             static_cast<size_t>(current_coinstip_cache_size * SNAPSHOT_CACHE_PERC));\n     }\n \n-    const bool snapshot_ok = this->PopulateAndValidateSnapshot(\n+    bool snapshot_ok = this->PopulateAndValidateSnapshot(",
      "path": "src/validation.cpp",
      "position": 187,
      "original_position": 33,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 913236477,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, good point. I'll do a follow-up on this since it's out of scope for the already large change.",
      "created_at": "2022-07-18T20:29:15Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r923829116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923829116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4839,
      "original_line": 4839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924528192",
      "pull_request_review_id": 1042479612,
      "id": 924528192,
      "node_id": "PRRC_kwDOABII5843Gy5A",
      "diff_hunk": "@@ -74,12 +79,18 @@ std::optional<ChainstateLoadingError> LoadChainstate(bool fReset,\n         return ChainstateLoadingError::ERROR_LOAD_GENESIS_BLOCK_FAILED;\n     }\n \n+    // Conservative value that will ultimately be changed by\n+    // a call to `chainman.MaybeRebalanceCaches()`.\n+    double init_cache_fraction = 0.2;",
      "path": "src/node/chainstate.cpp",
      "position": 80,
      "original_position": 23,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": 913247518,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-19T13:49:32Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924528192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924528192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924539569",
      "pull_request_review_id": 1042479612,
      "id": 924539569,
      "node_id": "PRRC_kwDOABII5843G1qx",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": 913249598,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, fixed.",
      "created_at": "2022-07-19T13:59:04Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924539569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924539569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924663236",
      "pull_request_review_id": 1042479612,
      "id": 924663236,
      "node_id": "PRRC_kwDOABII5843HT3E",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = node::ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->ActivateSnapshotChainstate(mempool, *base_blockhash);\n+\n+    return true;\n+}\n+\n+CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash)\n+{\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate = ",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": 913249691,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is an okay linebreak to prevent long lines.",
      "created_at": "2022-07-19T15:36:07Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924663236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924663236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5239,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924664025",
      "pull_request_review_id": 1042479612,
      "id": 924664025,
      "node_id": "PRRC_kwDOABII5843HUDZ",
      "diff_hunk": "@@ -994,6 +988,13 @@ class ChainstateManager\n     /** Produce the necessary coinbase commitment for a block (modifies the hash, don't call for mined blocks). */\n     std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev) const;\n \n+    //! When starting up, search the datadir for a chainstate based on a UTXO\n+    //! snapshot that is in the process of being validated.\n+    bool DetectSnapshotChainstate(CTxMemPool* mempool) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    CChainState& ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash) ",
      "path": "src/validation.h",
      "position": null,
      "original_position": 28,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": 913244332,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure what you mean - trailing whitespace?",
      "created_at": "2022-07-19T15:36:50Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924664025",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924664025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924675713",
      "pull_request_review_id": 1042479612,
      "id": 924675713,
      "node_id": "PRRC_kwDOABII5843HW6B",
      "diff_hunk": "@@ -5230,3 +5214,31 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n+{\n+    assert(!m_snapshot_chainstate);\n+    std::optional<fs::path> path = node::FindSnapshotChainstateDir();\n+    if (!path) {\n+        return false;\n+    }\n+    LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n+        fs::PathToString(*path));\n+    std::optional<uint256> base_blockhash = node::ReadSnapshotBaseBlockhash(*path);\n+    if (!base_blockhash) {\n+        return false;\n+    }\n+    this->ActivateSnapshotChainstate(mempool, *base_blockhash);\n+\n+    return true;\n+}\n+\n+CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": 915132811,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, good point. Changing this (at least) to `ActivateExistingSnapshot()`.",
      "created_at": "2022-07-19T15:46:31Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924675713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924675713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924679688",
      "pull_request_review_id": 1042479612,
      "id": 924679688,
      "node_id": "PRRC_kwDOABII5843HX4I",
      "diff_hunk": "@@ -4860,6 +4860,46 @@ const AssumeutxoData* ExpectedAssumeutxo(\n     return nullptr;\n }\n \n+static bool DeleteCoinsDBFromDisk(const fs::path db_path, bool is_snapshot)\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+    AssertLockHeld(::cs_main);",
      "path": "src/validation.cpp",
      "position": 142,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "167b9af34af82bda93e3729335d71e172e181d8f",
      "in_reply_to_id": 913251884,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assumed that it was commonly accepted that any destructive modification to a chainstate directory would require cs_main, but you make a good point that I don't think that's documented anywhere...",
      "created_at": "2022-07-19T15:50:12Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924679688",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924679688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4745,
      "original_line": 4745,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924901118",
      "pull_request_review_id": 1042479612,
      "id": 924901118,
      "node_id": "PRRC_kwDOABII5843IN7-",
      "diff_hunk": "@@ -835,6 +835,10 @@ class ChainstateManager\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     friend CChainState;\n \n+    // Returns nullptr if no snapshot has been loaded.\n+    CBlockIndex* GetSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    std::optional<int> GetSnapshotBaseHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": 128,
      "original_position": 6,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b707032db9e71d98ce5427b37e7d13011f725ca9",
      "in_reply_to_id": 913252933,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-19T19:51:52Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924901118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924901118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 879,
      "original_line": 879,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924901214",
      "pull_request_review_id": 1042479612,
      "id": 924901214,
      "node_id": "PRRC_kwDOABII5843IN9e",
      "diff_hunk": "@@ -5297,3 +5297,16 @@ CChainState& ChainstateManager::ActivateSnapshotChainstate(CTxMemPool* mempool,\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+CBlockIndex* ChainstateManager::GetSnapshotBaseBlock()\n+{\n+    auto blockhash_op = this->SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b707032db9e71d98ce5427b37e7d13011f725ca9",
      "in_reply_to_id": 915140965,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-19T19:52:00Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924901214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924901214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924903051",
      "pull_request_review_id": 1042479612,
      "id": 924903051,
      "node_id": "PRRC_kwDOABII5843IOaL",
      "diff_hunk": "@@ -523,6 +523,16 @@ void BlockManager::FlushUndoFile(int block_file, bool finalize)\n void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n {\n     LOCK(cs_LastBlockFile);\n+\n+    if (m_blockfile_info.size() < 1) {\n+        // Return if we haven't loaded any blockfiles yet. This happens during\n+        // chainstate init, when we call ChainstateManager::MaybeRebalanceCaches() (which\n+        // then calls FlushStateToDisk()), resulting in a call to this function before we\n+        // have populated `m_blockfile_info` via LoadBlockIndexDB().\n+        return;",
      "path": "src/node/blockstorage.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "5254307117d7bacf275a85707f29dcbdd3d24dc5",
      "in_reply_to_id": 915147625,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-07-19T19:54:22Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924903051",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924903051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924905162",
      "pull_request_review_id": 1042479612,
      "id": 924905162,
      "node_id": "PRRC_kwDOABII5843IO7K",
      "diff_hunk": "@@ -4826,12 +4826,8 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     LOCK(::cs_main);\n     std::vector<CChainState*> out;\n \n-    if (!IsSnapshotValidated() && m_ibd_chainstate) {\n-        out.push_back(m_ibd_chainstate.get());\n-    }\n-\n-    if (m_snapshot_chainstate) {\n-        out.push_back(m_snapshot_chainstate.get());\n+    for (CChainState* cs : {m_ibd_chainstate.get(), m_snapshot_chainstate.get()}) {\n+        if (this->IsUsable(cs)) out.push_back(cs);",
      "path": "src/validation.cpp",
      "position": 98,
      "original_position": 11,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "430761a35df50bd9fc5394eb84b966629200b67f",
      "in_reply_to_id": 913257375,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the \"currently being used\" in the doc covers this; talking about IsUsable() would be leaking details since that's a private method.",
      "created_at": "2022-07-19T19:57:05Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924905162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924905162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4713,
      "original_line": 4713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924905785",
      "pull_request_review_id": 1042479612,
      "id": 924905785,
      "node_id": "PRRC_kwDOABII5843IPE5",
      "diff_hunk": "@@ -469,6 +469,12 @@ class CChainState\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to the background chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "430761a35df50bd9fc5394eb84b966629200b67f",
      "in_reply_to_id": 913255907,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-07-19T19:57:54Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924905785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924905785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 475,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924911968",
      "pull_request_review_id": 1042479612,
      "id": 924911968,
      "node_id": "PRRC_kwDOABII5843IQlg",
      "diff_hunk": "@@ -20,10 +20,26 @@ static std::optional<ChainstateLoadingError> CompleteChainstateInitialization(\n     std::function<void()> coins_error_cb) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n \n {\n+    if (!chainman.BlockIndex().empty() &&\n+            !chainman.m_blockman.LookupBlockIndex(chainman.GetParams().GetConsensus().hashGenesisBlock)) {\n+        return ChainstateLoadingError::ERROR_BAD_GENESIS_BLOCK;\n+    }\n+\n+    // At this point blocktree args are consistent with what's on disk.",
      "path": "src/node/chainstate.cpp",
      "position": 62,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913264248,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's to consolidate the calls so that we don't have to repeat them in the `if (snapshot_completion.completed)` case.\r\n\r\nI believe the ThreadImport comment is still accurate: https://github.com/jamesob/bitcoin/blob/master/src/node/blockstorage.cpp#L894",
      "created_at": "2022-07-19T20:06:41Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924911968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924911968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924917227",
      "pull_request_review_id": 1042479612,
      "id": 924917227,
      "node_id": "PRRC_kwDOABII5843IR3r",
      "diff_hunk": "@@ -2750,6 +2750,14 @@ bool CChainState::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_stop_use`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        m_chainman.MaybeCompleteSnapshotValidation();",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913266231,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Technically docs are right because the UTXO set is checked in ABC -> ABCStep -> ConnectTip, but I can update.",
      "created_at": "2022-07-19T20:13:47Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924917227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924917227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2759,
      "original_line": 2759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924921834",
      "pull_request_review_id": 1042479612,
      "id": 924921834,
      "node_id": "PRRC_kwDOABII5843IS_q",
      "diff_hunk": "@@ -2750,6 +2750,14 @@ bool CChainState::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_stop_use`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        m_chainman.MaybeCompleteSnapshotValidation();",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 915205360,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Based upon my (re)reading of `MaybeCompleteSnapshotValidation()`, the snapshot cannot be found invalid (without some kind of code error) without calling `handle_invalid_snapshot()`, which will mark the snapshot chainstate as unusable and remove the associated coinsdb.",
      "created_at": "2022-07-19T20:19:58Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924921834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924921834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2759,
      "original_line": 2759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924926254",
      "pull_request_review_id": 1042479612,
      "id": 924926254,
      "node_id": "PRRC_kwDOABII5843IUEu",
      "diff_hunk": "@@ -3022,6 +3037,15 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n                     assert(trace.pblock && trace.pindex);\n                     GetMainSignals().BlockConnected(trace.pblock, trace.pindex);\n                 }\n+\n+                // This will have been toggled in\n+                // ActivateBestChainStep -> ConnectTip -> MaybeCompleteSnapshotValidation,\n+                // if at all, so we should catch it here.\n+                //\n+                // Break this do-while to ensure we don't advance past the base snapshot.\n+                if (m_stop_use) {",
      "path": "src/validation.cpp",
      "position": 60,
      "original_position": 39,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913268378,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment to ABC's docstring.",
      "created_at": "2022-07-19T20:25:49Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924926254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924926254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3047,
      "original_line": 3047,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925583050",
      "pull_request_review_id": 1042479612,
      "id": 925583050,
      "node_id": "PRRC_kwDOABII5843K0bK",
      "diff_hunk": "@@ -27,6 +27,7 @@ enum class ChainstateLoadingError {\n     ERROR_GENERIC_BLOCKDB_OPEN_FAILED,\n     ERROR_BLOCKS_WITNESS_INSUFFICIENTLY_VALIDATED,\n     SHUTDOWN_PROBED,\n+    SNAPSHOT_VALIDATION_FAILED,",
      "path": "src/node/chainstate.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913261075,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These are apparently going away in #25308 anyway, so I'll leave this be.",
      "created_at": "2022-07-20T13:05:40Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925583050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925583050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925583347",
      "pull_request_review_id": 1042479612,
      "id": 925583347,
      "node_id": "PRRC_kwDOABII5843K0fz",
      "diff_hunk": "@@ -5013,6 +5042,18 @@ static void FlushSnapshotToDisk(CCoinsViewCache& coins_cache, bool snapshot_load\n     coins_cache.Flush();\n }\n \n+struct StopHashingException : public std::exception\n+{\n+    const char* what() const throw() override\n+    {\n+        return \"ComputeUTXOStats interrupted by shutdown.\";\n+    }\n+};\n+\n+static auto SnapshotUTXOHashBreakpoint = [] {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 915185880,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, good point. Fixed.",
      "created_at": "2022-07-20T13:05:56Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925583347",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925583347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5053,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925583563",
      "pull_request_review_id": 1042479612,
      "id": 925583563,
      "node_id": "PRRC_kwDOABII5843K0jL",
      "diff_hunk": "@@ -5230,6 +5256,136 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.",
      "path": "src/validation.cpp",
      "position": 270,
      "original_position": 63,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "2efe7c7ec82e7885e07140e1deb5b5e9d6869f1d",
      "in_reply_to_id": 855193716,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-07-20T13:06:09Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925583563",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925583563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5119,
      "original_line": 5119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925584613",
      "pull_request_review_id": 1042479612,
      "id": 925584613,
      "node_id": "PRRC_kwDOABII5843K0zl",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913269533,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The first clause of the `if` is belt-and-suspenders, but the remaining calls aren't.",
      "created_at": "2022-07-20T13:07:15Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925584613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925584613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925588038",
      "pull_request_review_id": 1042479612,
      "id": 925588038,
      "node_id": "PRRC_kwDOABII5843K1pG",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 137,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913269927,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks",
      "created_at": "2022-07-20T13:10:38Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925588038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925588038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925588850",
      "pull_request_review_id": 1042479612,
      "id": 925588850,
      "node_id": "PRRC_kwDOABII5843K11y",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        );\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+",
      "path": "src/validation.cpp",
      "position": 333,
      "original_position": 163,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913270797,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added",
      "created_at": "2022-07-20T13:11:24Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925588850",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925588850"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5182,
      "original_line": 5182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925590439",
      "pull_request_review_id": 1042479612,
      "id": 925590439,
      "node_id": "PRRC_kwDOABII5843K2On",
      "diff_hunk": "@@ -5210,6 +5256,137 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will require giving each\n+// chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return {false, {}};\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return {false, {}};\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] snapshot base blockhash does not match background chainstate tip - code error?\\n\");\n+       return {false, SnapshotCompletionError::BASE_BLOCKHASH_MISMATCH};\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        );\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handle_invalid_snapshot();\n+        return {false, SnapshotCompletionError::MISSING_CHAINPARAMS};\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    std::optional<CCoinsStats> maybe_ibd_stats;\n+    try {",
      "path": "src/validation.cpp",
      "position": 361,
      "original_position": 189,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913270429,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added",
      "created_at": "2022-07-20T13:12:54Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925590439",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925590439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5210,
      "original_line": 5210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925592552",
      "pull_request_review_id": 1042479612,
      "id": 925592552,
      "node_id": "PRRC_kwDOABII5843K2vo",
      "diff_hunk": "@@ -5311,3 +5521,97 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\n     CBlockIndex* base = this->GetSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::ResetChainstates()\n+{\n+    m_ibd_chainstate.reset();\n+    m_snapshot_chainstate.reset();\n+    m_active_chainstate = nullptr;\n+}\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    auto snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    auto ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    // Since we're going to be moving around the underlying leveldb filesystem content\n+    // for each chainstate, make sure that the chainstates (and their constituent\n+    // CoinsViews members) have been destructed first.\n+    //\n+    // The caller of this method will be responsible for reinitializing chainstates\n+    // if they want to continue operation.\n+    this->ResetChainstates();\n+\n+    // No chainstates should be considered usable.\n+    assert(this->GetAll().size() == 0);",
      "path": "src/validation.cpp",
      "position": 557,
      "original_position": 333,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913273275,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is just a redundant check that no chainstates are considered usable while we're moving the leveldb directories around on disk.",
      "created_at": "2022-07-20T13:14:50Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925592552",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925592552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5433,
      "original_line": 5433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925593292",
      "pull_request_review_id": 1042479612,
      "id": 925593292,
      "node_id": "PRRC_kwDOABII5843K27M",
      "diff_hunk": "@@ -5311,3 +5521,97 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\n     CBlockIndex* base = this->GetSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+void ChainstateManager::ResetChainstates()\n+{\n+    m_ibd_chainstate.reset();\n+    m_snapshot_chainstate.reset();\n+    m_active_chainstate = nullptr;\n+}\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    auto snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    auto ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    // Since we're going to be moving around the underlying leveldb filesystem content\n+    // for each chainstate, make sure that the chainstates (and their constituent\n+    // CoinsViews members) have been destructed first.\n+    //\n+    // The caller of this method will be responsible for reinitializing chainstates\n+    // if they want to continue operation.\n+    this->ResetChainstates();\n+\n+    // No chainstates should be considered usable.\n+    assert(this->GetAll().size() == 0);\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+              fs::PathToString(ibd_chainstate_path));\n+\n+    fs::path tmp_old{ibd_chainstate_path + \"_todelete\"};\n+\n+    auto rename_failed_abort = [](\n+                                   fs::path p_old,\n+                                   fs::path p_new,\n+                                   const fs::filesystem_error& err) {\n+        LogPrintf(\"%s: error renaming file (%s): %s\\n\",\n+                __func__, fs::PathToString(p_old), err.what());\n+        AbortNode(strprintf(\n+            \"Rename of '%s' -> '%s' failed. \"\n+            \"Cannot clean up the background chainstate leveldb directory.\",\n+            fs::PathToString(p_old), fs::PathToString(p_new)));\n+    };\n+\n+    try {\n+        fs::rename(ibd_chainstate_path, tmp_old);\n+    } catch (const fs::filesystem_error& e) {\n+        rename_failed_abort(ibd_chainstate_path, tmp_old, e);\n+        throw;\n+    }\n+\n+    LogPrintf(\"[snapshot] moving snapshot chainstate (%s) to \" /* Continued */\n+              \"default chainstate directory (%s)\\n\",\n+              fs::PathToString(snapshot_chainstate_path), fs::PathToString(ibd_chainstate_path));\n+\n+    try {\n+        fs::rename(snapshot_chainstate_path, ibd_chainstate_path);\n+    } catch (const fs::filesystem_error& e) {\n+        rename_failed_abort(snapshot_chainstate_path, ibd_chainstate_path, e);\n+        throw;\n+    }\n+\n+    if (!DeleteCoinsDBFromDisk(tmp_old, /*is_snapshot=*/false)) {\n+        // No need to AbortNode because once the unneeded bg chainstate data is\n+        // moved, it will not interfere with subsequent initialization.\n+        LogPrintf(\"Deletion of %s failed. Please remove it manually, as the \" /* Continued */\n+                  \"directory is now unnecessary.\\n\",\n+                  fs::PathToString(tmp_old));\n+    }\n+\n+    LogPrintf(\"[snapshot] deleted background chainstate directory (%s)\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 378,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 915211195,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, fixed",
      "created_at": "2022-07-20T13:15:30Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925593292",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925593292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925608319",
      "pull_request_review_id": 1042479612,
      "id": 925608319,
      "node_id": "PRRC_kwDOABII5843K6l_",
      "diff_hunk": "@@ -745,9 +746,39 @@ class CChainState\n     void UpdateTip(const CBlockIndex* pindexNew)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    /**\n+     * In case of an invalid snapshot, rename the coins leveldb directory so\n+     * that it can be examined for issue diagnosis.\n+     */\n+    void InvalidateCoinsDBOnDisk() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     friend ChainstateManager;\n };\n \n+\n+enum class SnapshotCompletionError {\n+    // Expected assumeutxo configuration data is not found for the height of the\n+    // base block.\n+    MISSING_CHAINPARAMS,\n+\n+    // Failed to generate UTXO statistics (to check UTXO set hash) for the background\n+    // chainstate.\n+    STATS_FAILED,\n+\n+    // The UTXO set hash of the background validation chainstate does not match\n+    // the one expected by assumeutxo chainparams.\n+    HASH_MISMATCH,\n+\n+    // The blockhash of the current tip of the background validation chainstate does\n+    // not match the one expected by the snapshot chainstate.\n+    BASE_BLOCKHASH_MISMATCH,\n+};\n+\n+struct SnapshotCompletionResult {",
      "path": "src/validation.h",
      "position": null,
      "original_position": 40,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 915165346,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks",
      "created_at": "2022-07-20T13:28:48Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925608319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925608319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 777,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925608560",
      "pull_request_review_id": 1042479612,
      "id": 925608560,
      "node_id": "PRRC_kwDOABII5843K6pw",
      "diff_hunk": "@@ -745,9 +746,39 @@ class CChainState\n     void UpdateTip(const CBlockIndex* pindexNew)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    /**\n+     * In case of an invalid snapshot, rename the coins leveldb directory so\n+     * that it can be examined for issue diagnosis.\n+     */\n+    void InvalidateCoinsDBOnDisk() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     friend ChainstateManager;\n };\n \n+\n+enum class SnapshotCompletionError {\n+    // Expected assumeutxo configuration data is not found for the height of the\n+    // base block.\n+    MISSING_CHAINPARAMS,\n+\n+    // Failed to generate UTXO statistics (to check UTXO set hash) for the background\n+    // chainstate.\n+    STATS_FAILED,\n+\n+    // The UTXO set hash of the background validation chainstate does not match\n+    // the one expected by assumeutxo chainparams.\n+    HASH_MISMATCH,\n+\n+    // The blockhash of the current tip of the background validation chainstate does\n+    // not match the one expected by the snapshot chainstate.\n+    BASE_BLOCKHASH_MISMATCH,\n+};\n+\n+struct SnapshotCompletionResult {\n+    bool completed;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913264467,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed by removing",
      "created_at": "2022-07-20T13:29:00Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925608560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925608560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 778,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925646979",
      "pull_request_review_id": 1042479612,
      "id": 925646979,
      "node_id": "PRRC_kwDOABII5843LECD",
      "diff_hunk": "@@ -1499,6 +1499,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                 break;\n             case ChainstateLoadingError::SHUTDOWN_PROBED:\n                 break;\n+            case ChainstateLoadingError::SNAPSHOT_VALIDATION_FAILED:\n+                strLoadError = _(\"UTXO snapshot failed to validate\");",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 915180090,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2022-07-20T14:01:52Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925646979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925646979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925685044",
      "pull_request_review_id": 1042479612,
      "id": 925685044,
      "node_id": "PRRC_kwDOABII5843LNU0",
      "diff_hunk": "@@ -4969,7 +4969,22 @@ bool ChainstateManager::ActivateSnapshot(\n         }\n     }\n     if (!snapshot_ok) {\n-        WITH_LOCK(::cs_main, this->MaybeRebalanceCaches());\n+        LOCK(::cs_main);\n+        this->MaybeRebalanceCaches();\n+\n+        // PopulateAndValidateSnapshot can return (in error) before the leveldb datadir\n+        // has been created, so only attempt removal if we got that far.\n+        if (auto snapshot_datadir = node::FindSnapshotChainstateDir()) {\n+            // We have to destruct leveldb::DB in order to release the db lock, otherwise\n+            // DestroyDB() (in DeleteCoinsDBFromDisk()) will fail. See `leveldb::~DBImpl()`.\n+            // Destructing the chainstate (and so resetting the coinsviews object) does this.\n+            snapshot_chainstate.reset();\n+            bool removed = DeleteCoinsDBFromDisk(*snapshot_datadir, /*is_snapshot=*/true);",
      "path": "src/validation.cpp",
      "position": 210,
      "original_position": 15,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "55519a32c9fee6df413fdc654dc8fca0d9ed8fc0",
      "in_reply_to_id": 915137847,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good find! I've added test coverage, and the tests now fail when this line is deleted.",
      "created_at": "2022-07-20T14:33:55Z",
      "updated_at": "2022-07-20T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r925685044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925685044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4861,
      "original_line": 4861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927665982",
      "pull_request_review_id": 1047925688,
      "id": 927665982,
      "node_id": "PRRC_kwDOABII5843Sw8-",
      "diff_hunk": "@@ -2750,6 +2750,14 @@ bool CChainState::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_stop_use`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        m_chainman.MaybeCompleteSnapshotValidation();",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 915205360,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/24232#discussion_r924921834\r\n\r\nIn commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e)\r\n\r\n\r\n> Based upon my (re)reading of `MaybeCompleteSnapshotValidation()`, the snapshot cannot be found invalid (without some kind of code error) without calling `handle_invalid_snapshot()`, which will mark the snapshot chainstate as unusable and remove the associated coinsdb.\r\n\r\nIt seems like it would be possible to add some assertions about the return value or chain state here to verify that. But if you think that is overkill it would be good at least update the comment to be explicit that you are intentionally ignoring the return value. Could prefix \"If this fails...\" with \"Intentionally ignoring return value. If this fails...\"\r\n\r\nIf MaybeCompleteSnapshotValidation always cleans up after itself I guess I also don't understand why it is not an error if it fails here, but it is an error if it fails the other place it is called on startup.\r\n\r\nIf might be clearer if MaybeCompleteSnapshotValidation just returned an error code and callers would handle cleanup to make code clearer and easier to reason about.\r\n\r\n",
      "created_at": "2022-07-22T13:43:07Z",
      "updated_at": "2022-07-22T14:01:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r927665982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927665982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2759,
      "original_line": 2759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927676833",
      "pull_request_review_id": 1047925688,
      "id": 927676833,
      "node_id": "PRRC_kwDOABII5843Szmh",
      "diff_hunk": "@@ -5058,6 +5109,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] supposed base block %s does not match the \" /* Continued */",
      "path": "src/validation.cpp",
      "position": 146,
      "original_position": 146,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (1eb88f888cc04bd9da5405d4d5edc7b6e2603a8e)\r\n\r\nThis seems unclear what is supposed or why. Would seem clearer to say \"Snapshot base block {snapshot_blockhash} height {snapshot_base_height} doesn't match validated block {index_new.hash} height {index_new.height}\"",
      "created_at": "2022-07-22T13:54:26Z",
      "updated_at": "2022-07-22T14:01:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r927676833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927676833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5153,
      "original_line": 5151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934625412",
      "pull_request_review_id": 1057441663,
      "id": 934625412,
      "node_id": "PRRC_kwDOABII5843tUCE",
      "diff_hunk": "@@ -994,6 +988,13 @@ class ChainstateManager\n     /** Produce the necessary coinbase commitment for a block (modifies the hash, don't call for mined blocks). */\n     std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev) const;\n \n+    //! When starting up, search the datadir for a chainstate based on a UTXO\n+    //! snapshot that is in the process of being validated.\n+    bool DetectSnapshotChainstate(CTxMemPool* mempool) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    CChainState& ActivateSnapshotChainstate(CTxMemPool* mempool, uint256 base_blockhash) ",
      "path": "src/validation.h",
      "position": null,
      "original_position": 28,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "b1dbc76037c1f2ff893113057afd3f2eac581dbd",
      "in_reply_to_id": 913244332,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well I don't have it anymore on the latest push of #25667 so all good.",
      "created_at": "2022-08-01T14:55:41Z",
      "updated_at": "2022-08-01T14:55:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r934625412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934625412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934625919",
      "pull_request_review_id": 1057442409,
      "id": 934625919,
      "node_id": "PRRC_kwDOABII5843tUJ_",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/utxo_snapshot.h>\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <streams.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+#include <cstdio>\n+#include <optional>\n+\n+namespace node {\n+\n+bool WriteSnapshotBaseBlockhash(CChainState& snapshot_chainstate)\n+{\n+    AssertLockHeld(::cs_main);",
      "path": "src/node/utxo_snapshot.cpp",
      "position": 21,
      "original_position": 20,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "0f9d3f19fe535c2b457818a46bb8e536461581dc",
      "in_reply_to_id": 913239804,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All good to me.",
      "created_at": "2022-08-01T14:56:10Z",
      "updated_at": "2022-08-01T14:56:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r934625919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934625919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934641272",
      "pull_request_review_id": 1057465393,
      "id": 934641272,
      "node_id": "PRRC_kwDOABII5843tX54",
      "diff_hunk": "@@ -20,10 +20,26 @@ static std::optional<ChainstateLoadingError> CompleteChainstateInitialization(\n     std::function<void()> coins_error_cb) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n \n {\n+    if (!chainman.BlockIndex().empty() &&\n+            !chainman.m_blockman.LookupBlockIndex(chainman.GetParams().GetConsensus().hashGenesisBlock)) {\n+        return ChainstateLoadingError::ERROR_BAD_GENESIS_BLOCK;\n+    }\n+\n+    // At this point blocktree args are consistent with what's on disk.",
      "path": "src/node/chainstate.cpp",
      "position": 62,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913264248,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, that's accurate.",
      "created_at": "2022-08-01T15:11:31Z",
      "updated_at": "2022-08-01T15:11:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r934641272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934641272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934641967",
      "pull_request_review_id": 1057466390,
      "id": 934641967,
      "node_id": "PRRC_kwDOABII5843tYEv",
      "diff_hunk": "@@ -2750,6 +2750,14 @@ bool CChainState::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_stop_use`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        m_chainman.MaybeCompleteSnapshotValidation();",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 9,
      "commit_id": "ac8c9d809214bd8dcdacdb66127cabf49788e097",
      "original_commit_id": "00b319a35cfb691a2fb831e84f63512412cae068",
      "in_reply_to_id": 913266231,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good to me, it's a bit byzantine but that's allright.",
      "created_at": "2022-08-01T15:12:14Z",
      "updated_at": "2022-08-01T15:12:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24232#discussion_r934641967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934641967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24232"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2759,
      "original_line": 2759,
      "side": "RIGHT"
    }
  ]
}