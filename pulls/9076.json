{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076",
    "id": 92229576,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTIyMjk1NzY=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9076",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/9076.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/9076.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/96bdeffb78eecb7a82f7325272ed9374e8dcd782",
    "number": 9076,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[WIP][Experimental] Add Hybrid full block SPV mode",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "**work in progress, seeks conceptual review**\r\n**very experimental right now**\r\n\r\nThis adds a hybrid and pure SPV mode to bitcoin cores wallet (including GUI).\r\nThe main out-of-band block requests are handled over the new \"lock-free\" class `CBlockRequest`.\r\nThis is a generic interface to allow retrieving a range of blocks (only headers PoW check, no validation) and throw them through the `SyncTransaction()` signals (could also be useful for ZMQ, etc,).\r\n\r\n## Hybrid mode\r\nCan be enabled by `-spv`.\r\nIf enabled, the wallet tries to download blocks from the depth where the wallet was created (oldest key-birthday). Those requested blocks are getting prioritized in `FindNextBlocksToDownload()`.\r\nOnce the next block (in order/sequence) has been retrieved, it gets sent through the `SyncTransaction signal`. Those - non-verified transactions will get a `spv=true` flag (visible in the GUI as well as over RPC).\r\nThe blocks are kept on the disk for later verification.\r\nIn the background, the IBD/verification is still processing/downloading blocks. Once a transaction was verified by connecting/verifying its block, the SPV flag gets removed from the transaction.\r\n\r\n**This result in a hybrid full-block SPV mode where the users doesn't need to download more (they later need to verify the blocks near the tip anyways) but its possible to already see incoming transactions and send out coins**\r\n\r\n## Pure SPV\r\nCan be enabled by `-spvonly`.\r\nResult in not downloading blocks for verification.\r\n\r\n## Current limitations\r\n* No SPV 0-conf transactions (those are pretty unsafe anyways)\r\n* Fallback fee for SPV transaction (missing mempool/fee estimator)\r\n* It has only a simple spv re-org handing\r\n* currently incompatible with pruning\r\n\r\nThanks for feedback.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2016-11-03T20:03:50Z",
    "updated_at": "2021-09-08T12:04:20Z",
    "closed_at": "2017-01-24T13:10:53Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "6d2791499bcda08d97fbc0e5a7668a4cd360aa1c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jonasschnelli:2016/10/spv",
      "ref": "2016/10/spv",
      "sha": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 9264454,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjY0NDU0",
        "name": "bitcoin",
        "full_name": "jonasschnelli/bitcoin",
        "owner": {
          "login": "jonasschnelli",
          "id": 178464,
          "node_id": "MDQ6VXNlcjE3ODQ2NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasschnelli",
          "html_url": "https://github.com/jonasschnelli",
          "followers_url": "https://api.github.com/users/jonasschnelli/followers",
          "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
          "repos_url": "https://api.github.com/users/jonasschnelli/repos",
          "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasschnelli/bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/jonasschnelli/bitcoin",
        "archive_url": "https://api.github.com/repos/jonasschnelli/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasschnelli/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasschnelli/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasschnelli/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jonasschnelli/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasschnelli/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasschnelli/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasschnelli/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasschnelli/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jonasschnelli/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jonasschnelli/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasschnelli/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasschnelli/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasschnelli/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasschnelli/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasschnelli/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jonasschnelli/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasschnelli/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/hooks",
        "svn_url": "https://github.com/jonasschnelli/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 194164,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-08-07T18:33:53Z",
        "created_at": "2013-04-06T18:21:51Z",
        "updated_at": "2023-05-19T06:34:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4e5782438c3d117be7e52ddd0d35ae0475a30759",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T22:16:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 761,
    "deletions": 101,
    "changed_files": 25,
    "commits": 1,
    "review_comments": 43,
    "comments": 17
  },
  "events": [
    {
      "event": "labeled",
      "id": 846992394,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDg0Njk5MjM5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/846992394",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-03T20:03:50Z",
      "label": {
        "name": "Wallet",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 258295814,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODI5NTgxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258295814",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-03T22:41:37Z",
      "updated_at": "2016-11-03T22:41:37Z",
      "author_association": "MEMBER",
      "body": "Possibly dumb question but to be sure I am understanding the change correctly: In pure SPV mode, this will still download and store full blocks for everything after the oldest key-birthday?\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258295814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "commented",
      "id": 258360541,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODM2MDU0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258360541",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T07:21:28Z",
      "updated_at": "2016-11-04T09:34:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Possibly dumb question but to be sure I am understanding the change correctly: In pure SPV mode, this will still download and store full blocks for everything after the oldest key-birthday?\n\nYes.\nA next step could be to support BIP37 bloom filter against authenticated nodes (once we have BIP150).\nBIP37 has huge privacy implication while this PRs full block SPV mode does not.\n\nRight now the `-spvonly` mode is not very bandwidth efficient (if you assume you'll never want to do the full validation of the chain).\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258360541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 847516151,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODQ3NTE2MTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/847516151",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T07:23:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 847627619,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODQ3NjI3NjE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/847627619",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T09:33:58Z"
    },
    {
      "event": "commented",
      "id": 258383543,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODM4MzU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258383543",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T09:39:01Z",
      "updated_at": "2016-11-04T09:39:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "`getwalletinfo` reports the SPV sync state:\n\n```\n{\n  \"walletversion\": 130000,\n  \"balance\": 10.00000000,\n  \"unconfirmed_balance\": 0.00000000,\n  \"immature_balance\": 0.00000000,\n  \"txcount\": 1,\n  \"keypoololdest\": 1478202465,\n  \"keypoolsize\": 10,\n  \"paytxfee\": 0.00000010,\n  \"hdmasterkeyid\": \"fc2f268240531df6890b66f53141606b7f1f091b\",\n  \"spv\": {\n    \"enabled\": true,\n    \"hybrid_mode\": false,\n    \"synced_up_to_height\": 102,\n    \"best_known_header_height\": 102,\n    \"sync_in_progress\": false\n  }\n}\n```\n\nIf a sync is in progress, it can look like this:\n\n```\n{\n  \"walletversion\": 130000,\n  \"balance\": 0.00010000,\n  \"unconfirmed_balance\": 0.00000000,\n  \"immature_balance\": 0.00000000,\n  \"txcount\": 1,\n  \"keypoololdest\": 1477594751,\n  \"keypoolsize\": 100,\n  \"paytxfee\": 0.00000000,\n  \"hdmasterkeyid\": \"b397c61fb9d18e24d3a42f9c3c7b5d88b15005d3\",\n  \"spv\": {\n    \"enabled\": true,\n    \"hybrid_mode\": true,\n    \"synced_up_to_height\": 436884,\n    \"best_known_header_height\": 437299,\n    \"sync_in_progress\": true,\n    \"started\": 1478252299,\n    \"is_cancled\": false,\n    \"requested_blocks\": 416,\n    \"loaded_blocks\": 4,\n    \"processed_blocks\": 1\n  }\n}\n```\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258383543",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 847800617,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODQ3ODAwNjE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/847800617",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T12:15:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 847822235,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODQ3ODIyMjM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/847822235",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T12:37:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 847835878,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODQ3ODM1ODc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/847835878",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T12:50:55Z"
    },
    {
      "event": "commented",
      "id": 258448467,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODQ0ODQ2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258448467",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T14:37:56Z",
      "updated_at": "2016-11-04T14:39:28Z",
      "author_association": "MEMBER",
      "body": "What are major things that need to be done to finalize this change? Are making hybrid SPV mode compatible with pruning, and improving reorg handling critical parts of this change, or would they be future improvements? Looking through the code, there are lots of minor things I could comment on, but I'm assuming I should hold off if you're mainly looking for \"conceptual review\" right now from core developers (the concept does seems great to me).\n\nI do have one piece of feedback, though. Based on my understanding of the change, I think the following flag / feature descriptions might be more comprehensible to users:\n- **prioritized block download** (instead of \"hybrid SPV\")  - When enabled, bitcoin downloads the full blockchain as usual, but prioritizes downloading of newer blocks (currently all blocks after the earliest wallet transaction date), before older blocks. This causes relevant transactions to show up in the wallet earlier during an initial sync, allowing the wallet to become functional more quickly, but at the cost of revealing some information about the age of addresses in the wallet to peers on the network.\n- **partial sync** (instead of \"full SPV\") - When enabled, bitcoin downloads only part of the blockchain (currently all blocks after the earliest wallet transaction date), but still downloads and stores full blocks. This means less of the blockchain needs to be downloaded and stored locally, but at the cost of not being able to fully validate transactions, and of revealing some information about the age of addresses in the wallet to peers on the network. This mode is also is incompatible with the `-prune` block pruning mode (since bitcoin can't compute the UTXO set), so a node with partial syncing enabled may wind up using more disk space than a node with pruning enabled, despite downloading less data over the network.\n\nI think I like these names more than \"hybrid SPV\" / \"full SPV\", just because I think the modern usage of the term \"SPV\" refers to the wallets that don't download full blocks, don't validate transactions, barely require any storage, and sync almost immediately, and this is not what is implemented in these new modes. I do understand that historically the term SPV refered to a wider variety of network/storage saving schemes, but I don't think it would be good to go back and muddy the more clear modern meaning of what an SPV wallet is.\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258448467",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "commented",
      "id": 258450775,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODQ1MDc3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258450775",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T14:46:41Z",
      "updated_at": "2016-11-04T14:46:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What are major things that need to be done to finalize this change? Are making hybrid SPV mode compatible with pruning, and improving reorg handling critical parts of this change, or would they be future improvements? Looking through the code, there are lots of minor things I could comment on, but I'm assuming I should hold off if you're mainly looking for \"conceptual review\" right now from core developers (the concept does seems great to me).\n\nFeels free to comment on the minor things directly in the code.\nI don't expect that this will go into master as it is (to big, includes to many risks, lack of reviewers). As always, I'll try to split this into independent sub-PRs. This one is to get an fully running PoC and maybe discuss it on a higher level.\n\n> prioritized block download\n\nYes. Seems fine for me. But we just need to make sure that users know that _no validation_ happens on the \"prioritized blocks\".\n\n> partial sync\n\nYes. Though I think an expected feature would be to drop the part where we store blocks on the disk when using `-spvonly`.\nAnd I'm aiming to use some kind of BIP37 mechanism to allow low-bandwidth transaction scan against a trusted full node (after BIP150/151). Maybe we need to choose the wording with that in mind.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258450775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "reviewed",
      "id": 7234423,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzNDQyMw==",
      "url": null,
      "actor": null,
      "commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#pullrequestreview-7234423",
      "submitted_at": "2016-11-04T16:20:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
    },
    {
      "event": "commented",
      "id": 258488676,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODQ4ODY3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258488676",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T17:00:54Z",
      "updated_at": "2016-11-04T17:00:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky \n\n> but at the cost of revealing some information about the age of addresses in the wallet to peers on the network\n\nThe bigger cost is that the wallet could end up downloading a completely fake chain, since it isn't anchored to the genesis block. Presumably the client has no idea what block height or difficulty to expect and so evil peers could feed the SPV client minimum difficulty blocks of their own construction containing transactions that don't exist on the main chain.\n",
      "user": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258488676",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 848192279,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ4MTkyMjc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/848192279",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T17:00:54Z"
    },
    {
      "event": "subscribed",
      "id": 848192280,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0ODE5MjI4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/848192280",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T17:00:54Z"
    },
    {
      "event": "reviewed",
      "id": 7215966,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxNTk2Ng==",
      "url": null,
      "actor": null,
      "commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Only about halfway through the diffs, but here are my comments so far (all minor).\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#pullrequestreview-7215966",
      "submitted_at": "2016-11-04T18:52:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
    },
    {
      "event": "commented",
      "id": 258558710,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU1ODcxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258558710",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-04T22:02:35Z",
      "updated_at": "2016-11-06T22:38:17Z",
      "author_association": "NONE",
      "body": "We've done this 6 months ago in Vcash and will be deploying it soon (ZeroLedger). With the extensions we call it SPV+. Let us know if we can help. 👍\n",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258558710",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "commented",
      "id": 258642234,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODY0MjIzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258642234",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-05T21:34:58Z",
      "updated_at": "2016-11-05T21:34:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky \nThanks for the feedback! Will work myself through it next week.\n\n> but at the cost of revealing some information about the age of addresses in the wallet to peers on the network\n\nWhy would your peer reveal information about the age of his keys? We are downloading blocks from different peers and I don't see a possibility to meaningful track ages of the wallets keys because they way of how we retrieve blocks in identical to how we retrieve blocks in standard IBD.\n\n@dooglus \n\n> The bigger cost is that the wallet could end up downloading a completely fake chain, since it isn't anchored to the genesis block. Presumably the client has no idea what block height or difficulty to expect and so evil peers could feed the SPV client minimum difficulty blocks of their own construction containing transactions that don't exist on the main chain.\n\nBecause we already have downloaded and built the headers-only-chain, all \"SPV\" downloaded blocks are linked to the genesis block. Though, not through verification, only through a simple PoW/chainwork check. And there are also the checkpoints (though not sure how long).\nBut yes. The risk of getting sybilled of the main chain during the headers-sync can cause more pain in SPV mode.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258642234",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 848919673,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ4OTE5Njcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/848919673",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-05T21:34:58Z"
    },
    {
      "event": "subscribed",
      "id": 848919674,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0ODkxOTY3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/848919674",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-05T21:34:58Z"
    },
    {
      "event": "mentioned",
      "id": 848919675,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ4OTE5Njc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/848919675",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-05T21:34:58Z"
    },
    {
      "event": "subscribed",
      "id": 848919676,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0ODkxOTY3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/848919676",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-05T21:34:58Z"
    },
    {
      "event": "commented",
      "id": 258681226,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODY4MTIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258681226",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-06T13:35:48Z",
      "updated_at": "2016-11-06T13:35:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@john-connor can you post a link to any code you think would be useful please?\n",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-258681226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 849077306,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ5MDc3MzA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/849077306",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-06T13:35:48Z"
    },
    {
      "event": "subscribed",
      "id": 849077307,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0OTA3NzMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/849077307",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-06T13:35:48Z"
    },
    {
      "event": "reviewed",
      "id": 7429755,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQyOTc1NQ==",
      "url": null,
      "actor": null,
      "commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#pullrequestreview-7429755",
      "submitted_at": "2016-11-07T21:03:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 851568589,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODUxNTY4NTg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/851568589",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-08T14:34:10Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmJkZWZmYjc4ZWVjYjdhODJmNzMyNTI3MmVkOTM3NGU4ZGNkNzgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "tree": {
        "sha": "097fa419d92f5acd847864d0f68c0456e45aeacb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/097fa419d92f5acd847864d0f68c0456e45aeacb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 097fa419d92f5acd847864d0f68c0456e45aeacb\nparent 4e5782438c3d117be7e52ddd0d35ae0475a30759\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1478187701 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1478615651 +0100\n\n[WIP][Experimental] Add Hybrid SPV mode\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYIeJkAAoJECnUvLZBb1PsORwQALbt43GmCbd5R1ueLxDxKSTe\nU3/S1Ycuc3xMmKt+NDbg+tokYCcXFy/u7u78HnQaV9173c2Pl2+ciH8tq5OqvogH\nYmidNziDlijPh1DQ7ci86R/vnoHmi72yz1mxedklCscCaX0/mqe7gk/mSGE4IwIN\nl43Ixv0WtGAvtPFLVHV/gGotpKghXvQkXIhAGyyi75+afKLMbRfsdU+rR3Gv+Arm\ne/fWVvfa0KNCvtPwMh+85P+pCllwVskrc2Vtxr4tFDNv/YwbZoLvgs+dJq0R/njU\nK0HuZ7e+KATfhz2Oyg3AVvcu2jWxwy1Ybs/9LYn4QQa3EvZuapLWHvfbBqOCobON\nKnzUDeBs9Zzt0Klgsp7tSw9K0Ue7SDtVGJy4aDkSi+YG0XOTT8clFwr3gLsvXB5y\nI/4gUQj+5jnuZuWHPNOKdcyxgeR0xSQsF6r7GxaIvO60Yb0Om4Kiq6ySb9Q4Sa0i\nEG1G1oPR9o3T93SnR6qvoHBnn88G41eWA/97r49CvhDjtVmp3iTLO4Fvm+wMOYSD\nT3EZTy4vHNq3NccN4tw2HVsiJ9F5wwtx+NLBUDeb8mdoS/poL9zXbTmGSqkJjHO1\nOP7sFwOfHH04sSjeOiQPDNeYvXWKwUsjjQOOuqUyN6VOS0vRiMgg6TVm/GHENaYo\nk6K2p716xpB0nI267x7S\n=MhLM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e5782438c3d117be7e52ddd0d35ae0475a30759",
          "sha": "4e5782438c3d117be7e52ddd0d35ae0475a30759",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e5782438c3d117be7e52ddd0d35ae0475a30759"
        }
      ],
      "message": "[WIP][Experimental] Add Hybrid SPV mode",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-11-08T14:34:11Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-11-03T15:41:41Z"
      },
      "sha": "96bdeffb78eecb7a82f7325272ed9374e8dcd782"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 851568719,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50ODUxNTY4NzE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/851568719",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-08T14:34:16Z"
    },
    {
      "event": "commented",
      "id": 259350360,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTM1MDM2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259350360",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-09T07:31:59Z",
      "updated_at": "2016-11-09T07:31:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Binaries are available here: https://bitcoin.jonasschnelli.ch/pulls/9076/\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-259350360",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "commented",
      "id": 263248392,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzI0ODM5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263248392",
      "actor": {
        "login": "mruddy",
        "id": 6440430,
        "node_id": "MDQ6VXNlcjY0NDA0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mruddy",
        "html_url": "https://github.com/mruddy",
        "followers_url": "https://api.github.com/users/mruddy/followers",
        "following_url": "https://api.github.com/users/mruddy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mruddy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mruddy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
        "organizations_url": "https://api.github.com/users/mruddy/orgs",
        "repos_url": "https://api.github.com/users/mruddy/repos",
        "events_url": "https://api.github.com/users/mruddy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mruddy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-28T11:29:45Z",
      "updated_at": "2016-11-28T11:29:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jonasschnelli Conceptually, I'm not for putting the ability to change the node's security model into Core's code base right now. To me, this client should target being a fully validating node. Otherwise, the code will become more complex and difficult to reason about. I hope this does not come across as throwing stones because that's not how I mean it. Coincidentally, I thought a lot about this recently due to work on #9180. That PR effectively created another flavor of a non-fully validating hybrid mode and the feedback in that PR may apply here. If nothing else, this comment will link in that work on another potential hybrid mode possibility if you hadn't seen it already.",
      "user": {
        "login": "mruddy",
        "id": 6440430,
        "node_id": "MDQ6VXNlcjY0NDA0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mruddy",
        "html_url": "https://github.com/mruddy",
        "followers_url": "https://api.github.com/users/mruddy/followers",
        "following_url": "https://api.github.com/users/mruddy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mruddy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mruddy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
        "organizations_url": "https://api.github.com/users/mruddy/orgs",
        "repos_url": "https://api.github.com/users/mruddy/repos",
        "events_url": "https://api.github.com/users/mruddy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mruddy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-263248392",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 873488837,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODczNDg4ODM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/873488837",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-28T11:29:45Z"
    },
    {
      "event": "subscribed",
      "id": 873488838,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg3MzQ4ODgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/873488838",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-28T11:29:45Z"
    },
    {
      "event": "commented",
      "id": 263366183,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzM2NjE4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263366183",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-28T19:18:14Z",
      "updated_at": "2016-11-28T19:18:14Z",
      "author_association": "MEMBER",
      "body": "@mruddy That's a fair view, and probably one that is shared by some contributors. Let me offer some other perspective, though.\r\n\r\nI believe that conceptually, in the long term, the Bitcoin Core wallet should be more isolated and separated from the node/consensus logic. I'm unsure what this will mean for organization of code base, but at least it should run as a separate process for security reasons. There is ongoing discussion on how the wallet and node processes should interact, but my view is that they should just use the P2P protocol. The P2P protocol was designed for supporting light wallets, and our server side implementation of it is well tested for this purpose. Apart from questions about mempool tracking and feerate estimation, there is effectively no server side work to accomplish this.\r\n\r\nI see this PR as a step towards the client side. It's just allowing the wallet code to run with consensus enforcement done in another process. It's different from the checkpoints discussion in that it doesn't result in a node that acts like a full node.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-263366183",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 874146416,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODc0MTQ2NDE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/874146416",
      "actor": {
        "login": "mruddy",
        "id": 6440430,
        "node_id": "MDQ6VXNlcjY0NDA0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mruddy",
        "html_url": "https://github.com/mruddy",
        "followers_url": "https://api.github.com/users/mruddy/followers",
        "following_url": "https://api.github.com/users/mruddy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mruddy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mruddy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
        "organizations_url": "https://api.github.com/users/mruddy/orgs",
        "repos_url": "https://api.github.com/users/mruddy/repos",
        "events_url": "https://api.github.com/users/mruddy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mruddy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-28T19:18:14Z"
    },
    {
      "event": "subscribed",
      "id": 874146417,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg3NDE0NjQxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/874146417",
      "actor": {
        "login": "mruddy",
        "id": 6440430,
        "node_id": "MDQ6VXNlcjY0NDA0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mruddy",
        "html_url": "https://github.com/mruddy",
        "followers_url": "https://api.github.com/users/mruddy/followers",
        "following_url": "https://api.github.com/users/mruddy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mruddy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mruddy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
        "organizations_url": "https://api.github.com/users/mruddy/orgs",
        "repos_url": "https://api.github.com/users/mruddy/repos",
        "events_url": "https://api.github.com/users/mruddy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mruddy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-28T19:18:14Z"
    },
    {
      "event": "commented",
      "id": 263454808,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzQ1NDgwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263454808",
      "actor": {
        "login": "mruddy",
        "id": 6440430,
        "node_id": "MDQ6VXNlcjY0NDA0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mruddy",
        "html_url": "https://github.com/mruddy",
        "followers_url": "https://api.github.com/users/mruddy/followers",
        "following_url": "https://api.github.com/users/mruddy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mruddy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mruddy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
        "organizations_url": "https://api.github.com/users/mruddy/orgs",
        "repos_url": "https://api.github.com/users/mruddy/repos",
        "events_url": "https://api.github.com/users/mruddy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mruddy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-29T02:03:32Z",
      "updated_at": "2016-11-29T02:03:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa Thanks for the additional insight. I can see that. The node security model is distinct from the wallet security model. The longer term goal of wallet-node separation seems appealing.\r\n\r\nI'm still concerned about keeping complexity down while maintaining these logical separations in a single repo.\r\n\r\nFor example, do you think it would be valid feedback for the current patch that changes to ProcessNewBlock and AcceptBlock violate wallet-node code level separation?\r\n\r\nIf the interface between the processes is the P2P protocol, then I think the difference should be handled as separate cases at the P2P level (e.g.- in ProcessMessage). A wallet process may accept P2P block messages and do something with them, but that processing should be way different than what a node process does. If the wallet process was doing all the same work all over again, then the main benefits of the separation would be only run time process/network isolation and perhaps availability.\r\n\r\nI'm assuming that the wallet-node design evolves so that the wallet process becomes heavily dependent on its trusted node process (which is ok) to determine the validity of and then pass on only valid and possibly filtered blocks and transactions. Why even check the header in the wallet process? Just take what is received from the trusted node, and update the TXO info. Having a designed goal for the wallet process would help giving feedback for this PR because, for example, it may be the case that the wallet only needs to maintain a header chain for re-org handling and then set (maybe bloom) filters in its trusted nodes to get what it needs for TXO management.\r\n\r\nThere could be lots of flag interactions like, for wallet processes, only connect to explicitly designated endpoints rather than trying to find seed nodes, etc...\r\nAssuming a shared code base, having some polymorphism in parameter interaction and P2P message processing could be valuable. But, I tend to think separate repo is preferable.\r\n\r\nI think a good vision for how the wallet and node should interact would help review this PR. Then questions about code base structure, and whether to keep it all in the same binary or not can be answered.",
      "user": {
        "login": "mruddy",
        "id": 6440430,
        "node_id": "MDQ6VXNlcjY0NDA0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mruddy",
        "html_url": "https://github.com/mruddy",
        "followers_url": "https://api.github.com/users/mruddy/followers",
        "following_url": "https://api.github.com/users/mruddy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mruddy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mruddy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
        "organizations_url": "https://api.github.com/users/mruddy/orgs",
        "repos_url": "https://api.github.com/users/mruddy/repos",
        "events_url": "https://api.github.com/users/mruddy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mruddy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-263454808",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 874589677,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODc0NTg5Njc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/874589677",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-29T02:03:32Z"
    },
    {
      "event": "subscribed",
      "id": 874589678,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg3NDU4OTY3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/874589678",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-29T02:03:32Z"
    },
    {
      "event": "commented",
      "id": 266280862,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI4MDg2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266280862",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-11T13:03:03Z",
      "updated_at": "2016-12-11T13:03:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "So is this a step towards being able to run bitcoind as a NETWORK_NODE and run bitcoin-qt as an SPV client connecting to it (and trusting it)?",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-266280862",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "commented",
      "id": 267233346,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzIzMzM0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267233346",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-15T04:03:57Z",
      "updated_at": "2016-12-15T04:03:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "needs rebase",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-267233346",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "commented",
      "id": 269739281,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTczOTI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269739281",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-30T07:00:29Z",
      "updated_at": "2016-12-30T07:00:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "What would be involved in getting with working with pruned-node ability also? And why not make it download all the headers so that it is at least connect to the genesis block as suggested by @dooglus ?",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-269739281",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "mentioned",
      "id": 907898144,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50OTA3ODk4MTQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/907898144",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-30T07:00:29Z"
    },
    {
      "event": "subscribed",
      "id": 907898145,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDkwNzg5ODE0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/907898145",
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-30T07:00:29Z"
    },
    {
      "event": "commented",
      "id": 274798707,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDc5ODcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274798707",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-24T13:10:52Z",
      "updated_at": "2017-01-24T13:10:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing in favour of #9483",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#issuecomment-274798707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9076"
    },
    {
      "event": "closed",
      "id": 934456713,
      "node_id": "MDExOkNsb3NlZEV2ZW50OTM0NDU2NzEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/934456713",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-24T13:10:53Z"
    },
    {
      "event": "removed_from_project",
      "id": 1173911795,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTE3MzkxMTc5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1173911795",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-21T13:52:10Z",
      "project_card": {
        "id": 812509,
        "url": "https://api.github.com/projects/columns/cards/812509",
        "project_id": 188058,
        "project_url": "https://api.github.com/projects/188058",
        "column_name": "Conceptual PR"
      }
    },
    {
      "event": "locked",
      "id": 5271854668,
      "node_id": "LOE_lADOABII584LKBGDzwAAAAE6Oh5M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271854668",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:04:20Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562135",
      "pull_request_review_id": 7215966,
      "id": 86562135,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTYyMTM1",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):",
      "path": "qa/rpc-tests/walletspv.py",
      "position": null,
      "original_position": 24,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove unused split argument?\n",
      "created_at": "2016-11-04T14:56:24Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86562135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562184",
      "pull_request_review_id": 7215966,
      "id": 86562184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTYyMTg0",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint",
      "path": "qa/rpc-tests/walletspv.py",
      "position": null,
      "original_position": 10,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems unused\n",
      "created_at": "2016-11-04T14:56:38Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86562184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562817",
      "pull_request_review_id": 7215966,
      "id": 86562817,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTYyODE3",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
      "path": "qa/rpc-tests/walletspv.py",
      "position": 17,
      "original_position": 18,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can this be dropped? Number of nodes seems to change during the test.\n",
      "created_at": "2016-11-04T14:59:20Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86562817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562993",
      "pull_request_review_id": 7215966,
      "id": 86562993,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTYyOTkz",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []",
      "path": "qa/rpc-tests/walletspv.py",
      "position": null,
      "original_position": 20,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unused?\n",
      "created_at": "2016-11-04T15:00:13Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86562993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86562993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86566087",
      "pull_request_review_id": 7215966,
      "id": 86566087,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTY2MDg3",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[0], 2)\n+        connect_nodes(self.nodes[1], 2)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def sync_spv(self, headerheight, wait=1, timeout=20):\n+        \"\"\"\n+        Wait until everybody has the same tip\n+        \"\"\"\n+        maxheight = 0\n+        while timeout > 0:\n+            insync = True\n+            for x in self.nodes:\n+                info = x.getwalletinfo()\n+                if info['spv']['enabled'] == True:\n+                    if not info['spv']['synced_up_to_height'] == headerheight:\n+                        insync = False\n+            if insync == True:\n+                return True\n+            timeout -= wait\n+            time.sleep(wait)\n+        raise AssertionError(\"SPV sync failed\")\n+\n+    def run_test(self):\n+        # Generate some old blocks\n+        addr = self.nodes[1].getnewaddress() #for 1 conf tx\n+        self.nodes[0].generate(130)\n+        self.nodes[0].sendtoaddress(addr, 1.1)\n+        self.nodes[0].generate(1)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        time.sleep(5)",
      "path": "qa/rpc-tests/walletspv.py",
      "position": null,
      "original_position": 58,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sleep probably deserves comment if sync_spv and sync_blocks (in util.py) aren't enough to be able to remove it.\n",
      "created_at": "2016-11-04T15:13:59Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86566087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86566087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86567884",
      "pull_request_review_id": 7215966,
      "id": 86567884,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTY3ODg0",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[0], 2)\n+        connect_nodes(self.nodes[1], 2)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def sync_spv(self, headerheight, wait=1, timeout=20):\n+        \"\"\"\n+        Wait until everybody has the same tip\n+        \"\"\"\n+        maxheight = 0\n+        while timeout > 0:\n+            insync = True\n+            for x in self.nodes:\n+                info = x.getwalletinfo()\n+                if info['spv']['enabled'] == True:\n+                    if not info['spv']['synced_up_to_height'] == headerheight:\n+                        insync = False\n+            if insync == True:\n+                return True\n+            timeout -= wait\n+            time.sleep(wait)\n+        raise AssertionError(\"SPV sync failed\")\n+\n+    def run_test(self):\n+        # Generate some old blocks\n+        addr = self.nodes[1].getnewaddress() #for 1 conf tx\n+        self.nodes[0].generate(130)\n+        self.nodes[0].sendtoaddress(addr, 1.1)\n+        self.nodes[0].generate(1)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        time.sleep(5)\n+        \n+        node1info = self.nodes[1].getblockchaininfo()\n+        assert_equal(node1info['blocks'], 0)\n+        assert_equal(node1info['headers'], headerheight)\n+        spvinfo = self.nodes[1].getwalletinfo()['spv']\n+        assert_equal(headerheight, spvinfo['best_known_header_height'])\n+        lt = self.nodes[1].listtransactions()\n+        \n+        # node1 is in SPV only mode\n+        # txes should not be present in the wallet with spv\n+        assert_equal(lt[0]['address'], addr)\n+        assert_equal(lt[0]['spv'], True)\n+        assert_equal(lt[0]['confirmations'], 1)\n+        \n+        print(\"Restarting nodes without -spvonly (hybrid SPV)\")",
      "path": "qa/rpc-tests/walletspv.py",
      "position": 70,
      "original_position": 73,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Curious, why stop 1st node here, instead of just starting a 4th node? Is it to make sure the wallet file is synced to disk? Probably good to have a little comment here describing this part of the test.\n",
      "created_at": "2016-11-04T15:21:53Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86567884",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86567884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86568366",
      "pull_request_review_id": 7215966,
      "id": 86568366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTY4MzY2",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[0], 2)\n+        connect_nodes(self.nodes[1], 2)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def sync_spv(self, headerheight, wait=1, timeout=20):\n+        \"\"\"\n+        Wait until everybody has the same tip\n+        \"\"\"\n+        maxheight = 0\n+        while timeout > 0:\n+            insync = True\n+            for x in self.nodes:\n+                info = x.getwalletinfo()\n+                if info['spv']['enabled'] == True:\n+                    if not info['spv']['synced_up_to_height'] == headerheight:\n+                        insync = False\n+            if insync == True:\n+                return True\n+            timeout -= wait\n+            time.sleep(wait)\n+        raise AssertionError(\"SPV sync failed\")\n+\n+    def run_test(self):\n+        # Generate some old blocks\n+        addr = self.nodes[1].getnewaddress() #for 1 conf tx\n+        self.nodes[0].generate(130)\n+        self.nodes[0].sendtoaddress(addr, 1.1)\n+        self.nodes[0].generate(1)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        time.sleep(5)\n+        \n+        node1info = self.nodes[1].getblockchaininfo()\n+        assert_equal(node1info['blocks'], 0)\n+        assert_equal(node1info['headers'], headerheight)\n+        spvinfo = self.nodes[1].getwalletinfo()['spv']\n+        assert_equal(headerheight, spvinfo['best_known_header_height'])\n+        lt = self.nodes[1].listtransactions()",
      "path": "qa/rpc-tests/walletspv.py",
      "position": 62,
      "original_position": 65,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Check len(lt) is 1?\n",
      "created_at": "2016-11-04T15:23:57Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86568366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86568366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86568416",
      "pull_request_review_id": 7215966,
      "id": 86568416,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTY4NDE2",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[0], 2)\n+        connect_nodes(self.nodes[1], 2)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def sync_spv(self, headerheight, wait=1, timeout=20):\n+        \"\"\"\n+        Wait until everybody has the same tip\n+        \"\"\"\n+        maxheight = 0\n+        while timeout > 0:\n+            insync = True\n+            for x in self.nodes:\n+                info = x.getwalletinfo()\n+                if info['spv']['enabled'] == True:\n+                    if not info['spv']['synced_up_to_height'] == headerheight:\n+                        insync = False\n+            if insync == True:\n+                return True\n+            timeout -= wait\n+            time.sleep(wait)\n+        raise AssertionError(\"SPV sync failed\")\n+\n+    def run_test(self):\n+        # Generate some old blocks\n+        addr = self.nodes[1].getnewaddress() #for 1 conf tx\n+        self.nodes[0].generate(130)\n+        self.nodes[0].sendtoaddress(addr, 1.1)\n+        self.nodes[0].generate(1)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        time.sleep(5)\n+        \n+        node1info = self.nodes[1].getblockchaininfo()\n+        assert_equal(node1info['blocks'], 0)\n+        assert_equal(node1info['headers'], headerheight)\n+        spvinfo = self.nodes[1].getwalletinfo()['spv']\n+        assert_equal(headerheight, spvinfo['best_known_header_height'])\n+        lt = self.nodes[1].listtransactions()\n+        \n+        # node1 is in SPV only mode\n+        # txes should not be present in the wallet with spv\n+        assert_equal(lt[0]['address'], addr)\n+        assert_equal(lt[0]['spv'], True)\n+        assert_equal(lt[0]['confirmations'], 1)\n+        \n+        print(\"Restarting nodes without -spvonly (hybrid SPV)\")\n+        self.stop_node(1)\n+        os.mkdir(self.options.tmpdir + \"/node3/regtest\")\n+        shutil.copyfile(self.options.tmpdir + \"/node1/regtest/wallet.dat\", self.options.tmpdir + \"/node3/regtest/wallet.dat\")\n+        self.nodes[1] = start_node(1, self.options.tmpdir, [\"-spv=1\", \"-debug=net\"])\n+        connect_nodes_bi(self.nodes,0, 1)\n+        connect_nodes_bi(self.nodes,1, 2)\n+    \n+        self.nodes[0].resendwallettransactions()\n+        self.sync_all()\n+        \n+        lt = self.nodes[1].listtransactions()",
      "path": "qa/rpc-tests/walletspv.py",
      "position": 81,
      "original_position": 84,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Check len(lt)?\n",
      "created_at": "2016-11-04T15:24:09Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86568416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86568416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570301",
      "pull_request_review_id": 7215966,
      "id": 86570301,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTcwMzAx",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[0], 2)\n+        connect_nodes(self.nodes[1], 2)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def sync_spv(self, headerheight, wait=1, timeout=20):\n+        \"\"\"\n+        Wait until everybody has the same tip\n+        \"\"\"\n+        maxheight = 0\n+        while timeout > 0:\n+            insync = True\n+            for x in self.nodes:\n+                info = x.getwalletinfo()\n+                if info['spv']['enabled'] == True:\n+                    if not info['spv']['synced_up_to_height'] == headerheight:\n+                        insync = False\n+            if insync == True:\n+                return True\n+            timeout -= wait\n+            time.sleep(wait)\n+        raise AssertionError(\"SPV sync failed\")\n+\n+    def run_test(self):\n+        # Generate some old blocks\n+        addr = self.nodes[1].getnewaddress() #for 1 conf tx\n+        self.nodes[0].generate(130)\n+        self.nodes[0].sendtoaddress(addr, 1.1)\n+        self.nodes[0].generate(1)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        time.sleep(5)\n+        \n+        node1info = self.nodes[1].getblockchaininfo()\n+        assert_equal(node1info['blocks'], 0)\n+        assert_equal(node1info['headers'], headerheight)\n+        spvinfo = self.nodes[1].getwalletinfo()['spv']\n+        assert_equal(headerheight, spvinfo['best_known_header_height'])\n+        lt = self.nodes[1].listtransactions()\n+        \n+        # node1 is in SPV only mode\n+        # txes should not be present in the wallet with spv\n+        assert_equal(lt[0]['address'], addr)\n+        assert_equal(lt[0]['spv'], True)\n+        assert_equal(lt[0]['confirmations'], 1)\n+        \n+        print(\"Restarting nodes without -spvonly (hybrid SPV)\")\n+        self.stop_node(1)\n+        os.mkdir(self.options.tmpdir + \"/node3/regtest\")\n+        shutil.copyfile(self.options.tmpdir + \"/node1/regtest/wallet.dat\", self.options.tmpdir + \"/node3/regtest/wallet.dat\")\n+        self.nodes[1] = start_node(1, self.options.tmpdir, [\"-spv=1\", \"-debug=net\"])\n+        connect_nodes_bi(self.nodes,0, 1)\n+        connect_nodes_bi(self.nodes,1, 2)\n+    \n+        self.nodes[0].resendwallettransactions()\n+        self.sync_all()\n+        \n+        lt = self.nodes[1].listtransactions()\n+\n+        # tx should now be fully validated\n+        assert_equal(lt[0]['address'], addr)\n+        assert_equal(lt[0]['spv'], False)\n+        assert_equal(lt[0]['confirmations'], 1)\n+        \n+        # start another node with initial hyprid SPV mode\n+        # use the wallet from node1\n+        self.nodes.append(start_node(3, self.options.tmpdir, [\"-debug=net\",\"-spv=1\"]))\n+        connect_nodes_bi(self.nodes,0, 3)\n+        connect_nodes_bi(self.nodes,0, 2)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        # make sure we have identical mempools\n+        self.nodes[0].resendwallettransactions()\n+        self.sync_all()\n+        \n+        # currently there is no efficient way to test for the \"SPV first\" wallet listing",
      "path": "qa/rpc-tests/walletspv.py",
      "position": 99,
      "original_position": 102,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure, but maybe it's possible to test this by starting up a new hybrid SPV node with a wallet and no chain data and seeing which blocks it first requests using a stub peer. The `test_getblocktxn_requests` and `test_compactblock_requests` tests in `p2p-compactblocks.py` do something like this using a custom `TestNode` peer.\n",
      "created_at": "2016-11-04T15:32:41Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86570301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570358",
      "pull_request_review_id": 7215966,
      "id": 86570358,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTcwMzU4",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from pprint import pprint\n+\n+\n+class WalletSPVTest(BitcoinTestFramework):\n+ \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n+        self.extra_args = [[\"-debug=net\"], [\"-spv=1\", \"-spvonly=1\", \"-debug=net\"], [\"-debug=net\"]]\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[0], 2)\n+        connect_nodes(self.nodes[1], 2)\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def sync_spv(self, headerheight, wait=1, timeout=20):\n+        \"\"\"\n+        Wait until everybody has the same tip\n+        \"\"\"\n+        maxheight = 0\n+        while timeout > 0:\n+            insync = True\n+            for x in self.nodes:\n+                info = x.getwalletinfo()\n+                if info['spv']['enabled'] == True:\n+                    if not info['spv']['synced_up_to_height'] == headerheight:\n+                        insync = False\n+            if insync == True:\n+                return True\n+            timeout -= wait\n+            time.sleep(wait)\n+        raise AssertionError(\"SPV sync failed\")\n+\n+    def run_test(self):\n+        # Generate some old blocks\n+        addr = self.nodes[1].getnewaddress() #for 1 conf tx\n+        self.nodes[0].generate(130)\n+        self.nodes[0].sendtoaddress(addr, 1.1)\n+        self.nodes[0].generate(1)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        time.sleep(5)\n+        \n+        node1info = self.nodes[1].getblockchaininfo()\n+        assert_equal(node1info['blocks'], 0)\n+        assert_equal(node1info['headers'], headerheight)\n+        spvinfo = self.nodes[1].getwalletinfo()['spv']\n+        assert_equal(headerheight, spvinfo['best_known_header_height'])\n+        lt = self.nodes[1].listtransactions()\n+        \n+        # node1 is in SPV only mode\n+        # txes should not be present in the wallet with spv\n+        assert_equal(lt[0]['address'], addr)\n+        assert_equal(lt[0]['spv'], True)\n+        assert_equal(lt[0]['confirmations'], 1)\n+        \n+        print(\"Restarting nodes without -spvonly (hybrid SPV)\")\n+        self.stop_node(1)\n+        os.mkdir(self.options.tmpdir + \"/node3/regtest\")\n+        shutil.copyfile(self.options.tmpdir + \"/node1/regtest/wallet.dat\", self.options.tmpdir + \"/node3/regtest/wallet.dat\")\n+        self.nodes[1] = start_node(1, self.options.tmpdir, [\"-spv=1\", \"-debug=net\"])\n+        connect_nodes_bi(self.nodes,0, 1)\n+        connect_nodes_bi(self.nodes,1, 2)\n+    \n+        self.nodes[0].resendwallettransactions()\n+        self.sync_all()\n+        \n+        lt = self.nodes[1].listtransactions()\n+\n+        # tx should now be fully validated\n+        assert_equal(lt[0]['address'], addr)\n+        assert_equal(lt[0]['spv'], False)\n+        assert_equal(lt[0]['confirmations'], 1)\n+        \n+        # start another node with initial hyprid SPV mode\n+        # use the wallet from node1\n+        self.nodes.append(start_node(3, self.options.tmpdir, [\"-debug=net\",\"-spv=1\"]))\n+        connect_nodes_bi(self.nodes,0, 3)\n+        connect_nodes_bi(self.nodes,0, 2)\n+        headerheight = self.nodes[0].getblockchaininfo()['headers']\n+        self.sync_spv(headerheight)\n+        # make sure we have identical mempools\n+        self.nodes[0].resendwallettransactions()\n+        self.sync_all()\n+        \n+        # currently there is no efficient way to test for the \"SPV first\" wallet listing\n+        # but we test that the hybrid modes results with a standard full validated wtxns\n+        lt = self.nodes[3].listtransactions()\n+        assert_equal(lt[0]['address'], addr)",
      "path": "qa/rpc-tests/walletspv.py",
      "position": 102,
      "original_position": 105,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Check len(lt)?\n",
      "created_at": "2016-11-04T15:32:59Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86570358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570531",
      "pull_request_review_id": 7215966,
      "id": 86570531,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTcwNTMx",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Spelling of cancelled.\n",
      "created_at": "2016-11-04T15:33:42Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86570531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570686",
      "pull_request_review_id": 7215966,
      "id": 86570686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTcwNjg2",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/multithread save/thread-safe\n",
      "created_at": "2016-11-04T15:34:19Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86570686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86570686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86574526",
      "pull_request_review_id": 7215966,
      "id": 86574526,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTc0NTI2",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since bitcoin is using c++11 can you just initialize these in the header?\n",
      "created_at": "2016-11-04T15:52:04Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86574526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86574526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86577850",
      "pull_request_review_id": 7215966,
      "id": 86577850,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTc3ODUw",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {",
      "path": "src/blockrequest.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be size_t\n",
      "created_at": "2016-11-04T16:05:46Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86577850",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86577850"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86580666",
      "pull_request_review_id": 7234423,
      "id": 86580666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTgwNjY2",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindex = this->vBlocksToDownload[i];\n+        if ( filterBlocksCallback(pindex) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // we don't already download this block and we don't have its data already",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this is not quite right English and I don't understand what it is saying. Do you mean \"we haven't already downloaded this block nor do we have its data\"?\n\n\"we don't\" tends to mean \"we should not\".\n",
      "created_at": "2016-11-04T16:20:18Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86580666",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86580666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86586389",
      "pull_request_review_id": 7215966,
      "id": 86586389,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTg2Mzg5",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindex = this->vBlocksToDownload[i];\n+        if ( filterBlocksCallback(pindex) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // we don't already download this block and we don't have its data already\n+            vBlocks.push_back(pindex);\n+            if (vBlocks.size() == count) {",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 104,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe instead of a break just add vBlocks.size() < count as a condition in the for loop. I think that would make it clearer what count is supposed to represent (maximum number of blocks ever allowed in vBlocks as opposed to some limit associated with block state).\n",
      "created_at": "2016-11-04T16:48:20Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86586389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86586389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86587229",
      "pull_request_review_id": 7215966,
      "id": 86587229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTg3MjI5",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindex = this->vBlocksToDownload[i];\n+        if ( filterBlocksCallback(pindex) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // we don't already download this block and we don't have its data already\n+            vBlocks.push_back(pindex);\n+            if (vBlocks.size() == count) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    //try to push already available blocks through the signal\n+    this->processWithPossibleBlock(NULL, NULL);",
      "path": "src/blockrequest.cpp",
      "position": 111,
      "original_position": 111,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can omit nulls since this defines default arguments.\n",
      "created_at": "2016-11-04T16:52:59Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86587229",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86587229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86588729",
      "pull_request_review_id": 7215966,
      "id": 86588729,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTg4NzI5",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKREQUEST_H\n+#define BITCOIN_BLOCKREQUEST_H\n+\n+#include <atomic>\n+#include \"chain.h\"\n+#include \"consensus/consensus.h\"\n+#include \"net.h\"\n+#include <stdint.h>\n+#include <vector>\n+\n+// \"Lock free\" block request\n+class CBlockRequest : public std::enable_shared_from_this<CBlockRequest> {\n+public:\n+    std::atomic<size_t> requestedUpToSize; //requested up to this element in vBlocksToDownload\n+    std::atomic<size_t> processedUpToSize; //processed up to this element in vBlocksToDownload\n+\n+    const std::vector<CBlockIndex*> vBlocksToDownload;\n+    const int64_t created; //!When the request was started\n+\n+    /** Constructor of the lock free CBlockRequest, vBlocksToDownloadIn remains constant */\n+    CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t created, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn);\n+    ~CBlockRequest();\n+\n+    /** Process the request, check if there are blocks available to \"stream\"\n+        over the SyncTransaction signal \n+        Allow to provide an optional block to avoid disk re-loading\n+     */\n+    void processWithPossibleBlock(const CBlock* pblock = NULL, CBlockIndex *pindex = NULL);",
      "path": "src/blockrequest.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe call this something like SyncDownloadedTransactions. Since the purpose of this function is to invoke the SyncTransaction signal, seems like it should be named similarly to the signal.\n",
      "created_at": "2016-11-04T16:59:59Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86588729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86588729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86589553",
      "pull_request_review_id": 7215966,
      "id": 86589553,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTg5NTUz",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be const (the member function).\n",
      "created_at": "2016-11-04T17:04:21Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86589553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86589553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86590493",
      "pull_request_review_id": 7215966,
      "id": 86590493,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTkwNDkz",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)",
      "path": "src/blockrequest.cpp",
      "position": 97,
      "original_position": 97,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be const, I think.\n\nAlso might rename fillInNextBlocks to getNextBlocks to be clearer that this is returning information about the next blocks in the request, not changing the next blocks in the request.\n",
      "created_at": "2016-11-04T17:08:49Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86590493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86590493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86590719",
      "pull_request_review_id": 7215966,
      "id": 86590719,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTkwNzE5",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindex = this->vBlocksToDownload[i];\n+        if ( filterBlocksCallback(pindex) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // we don't already download this block and we don't have its data already\n+            vBlocks.push_back(pindex);\n+            if (vBlocks.size() == count) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    //try to push already available blocks through the signal\n+    this->processWithPossibleBlock(NULL, NULL);\n+}\n+\n+unsigned int CBlockRequest::amountOfBlocksLoaded()",
      "path": "src/blockrequest.cpp",
      "position": 114,
      "original_position": 114,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be const, and probably use size_t. Also maybe change \"loaded\" in the name to \"downloaded\" or \"have data\" to be consistent with other names here (\"loaded\" by itself is kind of vague).\n",
      "created_at": "2016-11-04T17:10:08Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86590719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86590719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86590787",
      "pull_request_review_id": 7215966,
      "id": 86590787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTkwNzg3",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindex = this->vBlocksToDownload[i];\n+        if ( filterBlocksCallback(pindex) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // we don't already download this block and we don't have its data already\n+            vBlocks.push_back(pindex);\n+            if (vBlocks.size() == count) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    //try to push already available blocks through the signal\n+    this->processWithPossibleBlock(NULL, NULL);\n+}\n+\n+unsigned int CBlockRequest::amountOfBlocksLoaded()\n+{\n+    unsigned int haveData = 0;\n+    for (unsigned int i = 0; i < this->vBlocksToDownload.size() ; i++) {",
      "path": "src/blockrequest.cpp",
      "position": 117,
      "original_position": 117,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be size_t\n",
      "created_at": "2016-11-04T17:10:32Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86590787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86590787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 117,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86595525",
      "pull_request_review_id": 7215966,
      "id": 86595525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTk1NTI1",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could do vBlocksToDownload(std::move(vBlocksToDownloadIn)) to avoid copying vector.\n",
      "created_at": "2016-11-04T17:33:33Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86595525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86595525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86596587",
      "pull_request_review_id": 7215966,
      "id": 86596587,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTk2NTg3",
      "diff_hunk": "@@ -88,6 +89,8 @@ CAmount maxTxFee = DEFAULT_TRANSACTION_MAXFEE;\n CTxMemPool mempool(::minRelayTxFee);\n FeeFilterRounder filterRounder(::minRelayTxFee);\n \n+std::atomic<bool> fAutodownloadBlocks(true);",
      "path": "src/main.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be nice to name the variable after the command line argument it comes from (currently \"-spvonly\", possibly something else like \"partial sync\" in the future).\n",
      "created_at": "2016-11-04T17:38:51Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86596587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86596587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86596969",
      "pull_request_review_id": 7215966,
      "id": 86596969,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTk2OTY5",
      "diff_hunk": "@@ -211,6 +214,7 @@ namespace {\n         CBlockIndex* pindex;                                     //!< Optional.\n         bool fValidatedHeaders;                                  //!< Whether this block has validated headers at the time of request.\n         std::unique_ptr<PartiallyDownloadedBlock> partialBlock;  //!< Optional, used for CMPCTBLOCK downloads\n+        std::shared_ptr<CBlockRequest> blockRequest;                  //!< Optional, used for specific block downloads (SPV)",
      "path": "src/main.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Extra whitespace.\n",
      "created_at": "2016-11-04T17:40:41Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86596969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86596969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 220,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86599461",
      "pull_request_review_id": 7215966,
      "id": 86599461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NTk5NDYx",
      "diff_hunk": "@@ -562,6 +573,26 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<CBl\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n+    // if there is an open CBlockRequest (out-of-band/specific block donwload), privileg it\n+    if (blockRequest && !blockRequest->isCancled()) {\n+        // fill in next blocks to download, pass in a filter function to check mapBlocksInFlight",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe s/check mapBlocksInFlight/exclude blocks in flight/ to be more specific. (I had thought it was doing the opposite the first time reading this).\n",
      "created_at": "2016-11-04T17:52:39Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86599461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86599461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86607005",
      "pull_request_review_id": 7215966,
      "id": 86607005,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NjA3MDA1",
      "diff_hunk": "@@ -838,8 +869,7 @@ bool CheckFinalTx(const CTransaction &tx, int flags)\n     // evaluated is what is used. Thus if we want to know if a\n     // transaction can be part of the *next* block, we need to call\n     // IsFinalTx() with one more than chainActive.Height().\n-    const int nBlockHeight = chainActive.Height() + 1;\n-\n+    const int nBlockHeight = ((fHeadersChain && pindexBestHeader) ? pindexBestHeader->nHeight : chainActive.Height()) + 1;",
      "path": "src/main.cpp",
      "position": 124,
      "original_position": 124,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Relying on this fHeadersChain argument here is bugging me (the argument is optional and defaults to false), since it seems easy for callers to screw up. I think it would be best to either make it a mandatory argument and/or provide some overload like the following, that would pass in the right value automatically for callers:\n\n```\nbool CheckFinal(const CMerkleTx& mtx, int flags=-1)\n{\n  return CheckFinal(mtx, flags, mtx.fSPV);\n}\n```\n",
      "created_at": "2016-11-04T18:31:24Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86607005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86607005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 900,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86790811",
      "pull_request_review_id": 7429755,
      "id": 86790811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NzkwODEx",
      "diff_hunk": "@@ -3028,6 +3058,7 @@ static void NotifyHeaderTip() {\n     // Send block tip changed notifications without cs_main\n     if (fNotify) {\n         uiInterface.NotifyHeaderTip(fInitialBlockDownload, pindexHeader);\n+        GetMainSignals().UpdatedBlockHeaderTip(fInitialBlockDownload, pindexHeader);",
      "path": "src/main.cpp",
      "position": 150,
      "original_position": 150,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe this could be called NotifyHeaderTip instead of UpdatedBlockHeaderTip? It doesn't seem good to have two different but confusingly similar names for this.\n",
      "created_at": "2016-11-07T14:55:50Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86790811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86790811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3089,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86838373",
      "pull_request_review_id": 7429755,
      "id": 86838373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODM4Mzcz",
      "diff_hunk": "@@ -6867,12 +6923,14 @@ bool SendMessages(CNode* pto, CConnman& connman)\n         if (!pto->fDisconnect && !pto->fClient && (fFetch || !IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n             vector<CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n-            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller, consensusParams);\n+            std::shared_ptr<CBlockRequest> blockRequest = CBlockRequest::GetCurrentRequest();\n+            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller, consensusParams, blockRequest);\n             BOOST_FOREACH(CBlockIndex *pindex, vToDownload) {\n                 uint32_t nFetchFlags = GetFetchFlags(pto, pindex->pprev, consensusParams);\n                 vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                MarkBlockAsInFlight(pto->GetId(), pindex->GetBlockHash(), consensusParams, pindex);\n-                LogPrint(\"net\", \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n+                list<QueuedBlock>::iterator *queuedBlockIt = NULL;",
      "path": "src/main.cpp",
      "position": 379,
      "original_position": 379,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "New variable seems to be unused. Could you continue to pass null to MarkBlockAsInFlight instead of this? Probably deserves comment if this variable is actually being used in some unseen way.\n",
      "created_at": "2016-11-07T18:36:22Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86838373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86838373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6976,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86840752",
      "pull_request_review_id": 7429755,
      "id": 86840752,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODQwNzUy",
      "diff_hunk": "@@ -32,7 +32,9 @@ void UnregisterAllValidationInterfaces();\n class CValidationInterface {\n protected:\n     virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n-    virtual void SyncTransaction(const CTransaction &tx, const CBlockIndex *pindex, int posInBlock) {}\n+    virtual void UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew) {}\n+    virtual void SyncTransaction(const CTransaction &tx, const CBlockIndex *pindex, int posInBlock, bool validated = true) {}",
      "path": "src/validationinterface.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Having validated default true seems less safe than having validated default false, or not having a default at all.\n\nAlso it seems like validated == !fSpv. Seems like this argument could be changed to an fSpv, or the other fSpv's could be changed to validated variables for more consistency.\n",
      "created_at": "2016-11-07T18:47:57Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86840752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86840752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86841043",
      "pull_request_review_id": 7429755,
      "id": 86841043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODQxMDQz",
      "diff_hunk": "@@ -59,6 +61,12 @@ CFeeRate CWallet::fallbackFee = CFeeRate(DEFAULT_FALLBACK_FEE);\n \n const uint256 CMerkleTx::ABANDON_HASH(uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));\n \n+std::atomic<bool> fUseSPV(true);\n+std::atomic<bool> fSPVOnly(true);",
      "path": "src/wallet/wallet.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Variable is unused.\n",
      "created_at": "2016-11-07T18:49:16Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86841043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86841043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86841670",
      "pull_request_review_id": 7429755,
      "id": 86841670,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODQxNjcw",
      "diff_hunk": "@@ -3352,6 +3455,8 @@ std::string CWallet::GetWalletHelpString(bool showDebug)\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), DEFAULT_SEND_FREE_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n+    strUsage += HelpMessageOpt(\"-spv\", strprintf(_(\"Use hybrid SPV mode to show transactions before verification (default: %u)\"), DEFAULT_ENABLE_HYBRID_SPV));\n+    strUsage += HelpMessageOpt(\"-spvonly\", strprintf(_(\"Use hybrid SPV mode to show transactions before verification (default: %u)\"), DEFAULT_ENABLE_HYBRID_SPV));",
      "path": "src/wallet/wallet.cpp",
      "position": 245,
      "original_position": 245,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be DEFAULT_ENABLE_PURE_SPV\n",
      "created_at": "2016-11-07T18:52:20Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86841670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86841670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3459,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86841759",
      "pull_request_review_id": 7429755,
      "id": 86841759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODQxNzU5",
      "diff_hunk": "@@ -3632,9 +3745,103 @@ bool CWallet::ParameterInteraction()\n     fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", DEFAULT_SEND_FREE_TRANSACTIONS);\n     fWalletRbf = GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    if (GetBoolArg(\"-spvonly\", DEFAULT_ENABLE_PURE_SPV) && SoftSetBoolArg(\"-spv\", true)) {\n+        LogPrintf(\"%s: parameter interaction: -spvonly=1 -> setting -spv=1\\n\", __func__);\n+    }\n+\n+    // if using block pruning, then disallow spv\n+    if (GetArg(\"-prune\", 0)) {\n+        if (GetBoolArg(\"-spv\", DEFAULT_ENABLE_HYBRID_SPV) || GetBoolArg(\"-spvonly\", DEFAULT_ENABLE_HYBRID_SPV))",
      "path": "src/wallet/wallet.cpp",
      "position": 274,
      "original_position": 274,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be DEFAULT_ENABLE_PURE_SPV (for -spvonly)\n",
      "created_at": "2016-11-07T18:52:49Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86841759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86841759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3754,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86856212",
      "pull_request_review_id": 7429755,
      "id": 86856212,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODU2MjEy",
      "diff_hunk": "@@ -1139,6 +1163,82 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n+{\n+    int bestSPVBlockHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        bestSPVBlockHeight = nBestSpvHeight;\n+    }\n+\n+    // check if the new tip extends the wallets current known best headers tip\n+    const CBlockIndex *pCurrent = pindexNew;",
      "path": "src/wallet/wallet.cpp",
      "position": 97,
      "original_position": 97,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can pindexNew ever be null? If if it is null, should fReOrg always be true in this case, or should fReorg only be true if bestSpvBlockHash is null? Comment might be useful to clarify.\n\nIf pIndexNew should never be null, would suggest either asserting this or changing the while to a do-while, and removing the \"pindexNew && ...\" check below.\n",
      "created_at": "2016-11-07T20:00:11Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86856212",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86856212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1175,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86856702",
      "pull_request_review_id": 7429755,
      "id": 86856702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODU2NzAy",
      "diff_hunk": "@@ -1139,6 +1163,82 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n+{\n+    int bestSPVBlockHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        bestSPVBlockHeight = nBestSpvHeight;\n+    }\n+\n+    // check if the new tip extends the wallets current known best headers tip\n+    const CBlockIndex *pCurrent = pindexNew;\n+    bool fReorg = true;\n+    while (pCurrent)\n+    {\n+        if (pCurrent->GetBlockHash() == bestSpvBlockHash || bestSpvBlockHash.IsNull())\n+        {\n+            // new header tip extends the current headers chain, standard operation\n+            fReorg = false;\n+            break;\n+        }\n+        pCurrent = pCurrent->pprev;\n+    }\n+    if (fReorg)\n+    {\n+        // we are on a different chain, we don't know at which dept the fork happend\n+        // do a SPV rescan back to the oldest wtx time that was received from a block that now has been forked away\n+        CWalletDB walletdb(strWalletFile, \"r+\", false);\n+        int64_t rescanBackTo = std::numeric_limits<int64_t>::max();\n+        // the current wallets best header tip is not in the active headers chain\n+        for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+        {\n+            CWalletTx* wtx = &(*it).second;\n+            if (wtx->fSPV)\n+            {\n+                bool found = false;\n+                const CBlockIndex *pCurrent = pindexNew;\n+                while (pCurrent)",
      "path": "src/wallet/wallet.cpp",
      "position": 123,
      "original_position": 123,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This while loop duplicates the loop above (even masking the pCurrent variable), maybe both loops could be replaced with a new FindPrevBlockWithHash(uint256) function call.\n",
      "created_at": "2016-11-07T20:02:37Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86856702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86856702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1201,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86857881",
      "pull_request_review_id": 7429755,
      "id": 86857881,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODU3ODgx",
      "diff_hunk": "@@ -1139,6 +1163,82 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n+{\n+    int bestSPVBlockHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        bestSPVBlockHeight = nBestSpvHeight;\n+    }\n+\n+    // check if the new tip extends the wallets current known best headers tip\n+    const CBlockIndex *pCurrent = pindexNew;\n+    bool fReorg = true;\n+    while (pCurrent)\n+    {\n+        if (pCurrent->GetBlockHash() == bestSpvBlockHash || bestSpvBlockHash.IsNull())\n+        {\n+            // new header tip extends the current headers chain, standard operation\n+            fReorg = false;\n+            break;\n+        }\n+        pCurrent = pCurrent->pprev;\n+    }\n+    if (fReorg)\n+    {\n+        // we are on a different chain, we don't know at which dept the fork happend\n+        // do a SPV rescan back to the oldest wtx time that was received from a block that now has been forked away\n+        CWalletDB walletdb(strWalletFile, \"r+\", false);\n+        int64_t rescanBackTo = std::numeric_limits<int64_t>::max();\n+        // the current wallets best header tip is not in the active headers chain\n+        for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+        {\n+            CWalletTx* wtx = &(*it).second;\n+            if (wtx->fSPV)",
      "path": "src/wallet/wallet.cpp",
      "position": 119,
      "original_position": 119,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is it significant that the txn is SPV? Isn't any transaction that's been reorged away be no longer confirmed? Might be good to have a comment on this here.\n",
      "created_at": "2016-11-07T20:09:13Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86857881",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86857881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1197,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86858376",
      "pull_request_review_id": 7429755,
      "id": 86858376,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODU4Mzc2",
      "diff_hunk": "@@ -3632,9 +3745,103 @@ bool CWallet::ParameterInteraction()\n     fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", DEFAULT_SEND_FREE_TRANSACTIONS);\n     fWalletRbf = GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    if (GetBoolArg(\"-spvonly\", DEFAULT_ENABLE_PURE_SPV) && SoftSetBoolArg(\"-spv\", true)) {\n+        LogPrintf(\"%s: parameter interaction: -spvonly=1 -> setting -spv=1\\n\", __func__);\n+    }\n+\n+    // if using block pruning, then disallow spv\n+    if (GetArg(\"-prune\", 0)) {\n+        if (GetBoolArg(\"-spv\", DEFAULT_ENABLE_HYBRID_SPV) || GetBoolArg(\"-spvonly\", DEFAULT_ENABLE_HYBRID_SPV))\n+            return InitError(_(\"Prune mode is incompatible with -spv|-spvonly.\"));\n+    }\n+\n+    fUseSPV = GetBoolArg(\"-spv\", DEFAULT_ENABLE_HYBRID_SPV);\n+    fAutodownloadBlocks = !GetBoolArg(\"-spvonly\", DEFAULT_ENABLE_PURE_SPV);\n+\n     return true;\n }\n \n+void CWallet::ScanSPV(int64_t optional_timestamp)\n+{\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    // calculate the oldest key and don't use nTimeFirstKey\n+    // adding WatchOnly addresses will result in nTimeFirstKey == 1\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;",
      "path": "src/wallet/wallet.cpp",
      "position": 290,
      "original_position": 290,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ";\n",
      "created_at": "2016-11-07T20:11:55Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86858376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86858376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3770,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86858734",
      "pull_request_review_id": 7429755,
      "id": 86858734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODU4NzM0",
      "diff_hunk": "@@ -616,7 +629,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     typedef std::map<unsigned int, CMasterKey> MasterKeyMap;\n     MasterKeyMap mapMasterKeys;\n     unsigned int nMasterKeyMaxID;\n-\n+    int nBestSpvHeight;",
      "path": "src/wallet/wallet.h",
      "position": 69,
      "original_position": 69,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It'd be good to say what best means in a comment. \n",
      "created_at": "2016-11-07T20:14:01Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86858734",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86858734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 632,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86860221",
      "pull_request_review_id": 7429755,
      "id": 86860221,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODYwMjIx",
      "diff_hunk": "@@ -1139,6 +1163,82 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n+{\n+    int bestSPVBlockHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        bestSPVBlockHeight = nBestSpvHeight;\n+    }\n+\n+    // check if the new tip extends the wallets current known best headers tip\n+    const CBlockIndex *pCurrent = pindexNew;\n+    bool fReorg = true;\n+    while (pCurrent)\n+    {\n+        if (pCurrent->GetBlockHash() == bestSpvBlockHash || bestSpvBlockHash.IsNull())\n+        {\n+            // new header tip extends the current headers chain, standard operation\n+            fReorg = false;\n+            break;\n+        }\n+        pCurrent = pCurrent->pprev;\n+    }\n+    if (fReorg)\n+    {\n+        // we are on a different chain, we don't know at which dept the fork happend\n+        // do a SPV rescan back to the oldest wtx time that was received from a block that now has been forked away\n+        CWalletDB walletdb(strWalletFile, \"r+\", false);\n+        int64_t rescanBackTo = std::numeric_limits<int64_t>::max();\n+        // the current wallets best header tip is not in the active headers chain\n+        for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+        {\n+            CWalletTx* wtx = &(*it).second;\n+            if (wtx->fSPV)\n+            {\n+                bool found = false;\n+                const CBlockIndex *pCurrent = pindexNew;\n+                while (pCurrent)\n+                {\n+                    if (wtx->hashBlock == pCurrent->GetBlockHash())\n+                    {\n+                        found = true;\n+                        break;\n+                    }\n+                    pCurrent = pCurrent->pprev;\n+                }\n+                if (!found)\n+                {\n+                    if (wtx->GetTxTime() < rescanBackTo)\n+                        rescanBackTo = wtx->GetTxTime();\n+                    // wtx is no longer confirmed\n+                    wtx->hashBlock.SetNull();\n+                    wtx->MarkDirty();\n+                    walletdb.WriteTx(*wtx);\n+                }\n+            }\n+        }\n+        // try to find a reasonable height to spv-scan from again\n+        const CBlockIndex *pCurrent = pindexNew;\n+        nBestSpvHeight = 0;",
      "path": "src/wallet/wallet.cpp",
      "position": 145,
      "original_position": 145,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Above you are acquiring a lock when you read the nBestSpvHeight variable. Is it not necessary to have a lock when writing the same variable?\n",
      "created_at": "2016-11-07T20:22:06Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86860221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86860221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1223,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86860556",
      "pull_request_review_id": 7429755,
      "id": 86860556,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODYwNTU2",
      "diff_hunk": "@@ -1139,6 +1163,82 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n+{\n+    int bestSPVBlockHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        bestSPVBlockHeight = nBestSpvHeight;\n+    }\n+\n+    // check if the new tip extends the wallets current known best headers tip\n+    const CBlockIndex *pCurrent = pindexNew;\n+    bool fReorg = true;\n+    while (pCurrent)\n+    {\n+        if (pCurrent->GetBlockHash() == bestSpvBlockHash || bestSpvBlockHash.IsNull())\n+        {\n+            // new header tip extends the current headers chain, standard operation\n+            fReorg = false;\n+            break;\n+        }\n+        pCurrent = pCurrent->pprev;\n+    }\n+    if (fReorg)\n+    {\n+        // we are on a different chain, we don't know at which dept the fork happend\n+        // do a SPV rescan back to the oldest wtx time that was received from a block that now has been forked away\n+        CWalletDB walletdb(strWalletFile, \"r+\", false);\n+        int64_t rescanBackTo = std::numeric_limits<int64_t>::max();\n+        // the current wallets best header tip is not in the active headers chain\n+        for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+        {\n+            CWalletTx* wtx = &(*it).second;\n+            if (wtx->fSPV)\n+            {\n+                bool found = false;\n+                const CBlockIndex *pCurrent = pindexNew;\n+                while (pCurrent)\n+                {\n+                    if (wtx->hashBlock == pCurrent->GetBlockHash())\n+                    {\n+                        found = true;\n+                        break;\n+                    }\n+                    pCurrent = pCurrent->pprev;\n+                }\n+                if (!found)\n+                {\n+                    if (wtx->GetTxTime() < rescanBackTo)\n+                        rescanBackTo = wtx->GetTxTime();\n+                    // wtx is no longer confirmed\n+                    wtx->hashBlock.SetNull();\n+                    wtx->MarkDirty();\n+                    walletdb.WriteTx(*wtx);\n+                }\n+            }\n+        }\n+        // try to find a reasonable height to spv-scan from again\n+        const CBlockIndex *pCurrent = pindexNew;\n+        nBestSpvHeight = 0;\n+        bestSpvBlockHash.SetNull();\n+        while (pCurrent)\n+        {\n+            if (pCurrent->GetBlockTime() < rescanBackTo)\n+            {\n+                nBestSpvHeight = pCurrent->nHeight;\n+                bestSpvBlockHash = pCurrent->GetBlockHash();\n+                break;\n+            }\n+            pCurrent = pCurrent->pprev;\n+        }\n+        if (nBestSpvHeight > 0 && rescanBackTo != std::numeric_limits<int64_t>::max())\n+            ScanSPV(rescanBackTo);\n+    }\n+    if (fUseSPV && pindexNew && pindexNew->nHeight > bestSPVBlockHeight)",
      "path": "src/wallet/wallet.cpp",
      "position": 160,
      "original_position": 160,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this actually supposed to be bestSPVBlockHeight not nBestSpvHeight? Why compare against previous height instead of current? If this is intended would suggest adding a comment to explain and also renaming bestSPVBlockHeight to previousBestSPVBlockHeight to make clear this is supposed to be the previous height.\n",
      "created_at": "2016-11-07T20:24:03Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86860556",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86860556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1238,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86864580",
      "pull_request_review_id": 7429755,
      "id": 86864580,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODY0NTgw",
      "diff_hunk": "@@ -1544,7 +1644,7 @@ bool CWalletTx::RelayWalletTransaction(CConnman* connman)\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase())\n     {\n-        if (GetDepthInMainChain() == 0 && !isAbandoned() && InMempool()) {\n+        if (GetDepthInMainChain() == 0 && !isAbandoned() && (InMempool() || fSPV)) {",
      "path": "src/wallet/wallet.cpp",
      "position": 172,
      "original_position": 172,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand in general what the resend wallet transaction code is for, and probably this isn't the place to explain it, but it might be nice to have a comment here saying how the SPV condition relates.\n",
      "created_at": "2016-11-07T20:45:30Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86864580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86864580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1647,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86998508",
      "pull_request_review_id": 7627715,
      "id": 86998508,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2OTk4NTA4",
      "diff_hunk": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockrequest.h\"\n+\n+#include \"chainparams.h\"\n+#include \"main.h\"\n+\n+#include <exception>\n+\n+std::shared_ptr<CBlockRequest> currentBlockRequest; //multithread save pointer (CBlockRequest, the object, is also lock-free)\n+\n+CBlockRequest::CBlockRequest(std::vector<CBlockIndex*> vBlocksToDownloadIn, int64_t createdIn, const std::function<bool(std::shared_ptr<CBlockRequest>, CBlockIndex *pindex)> progressCallbackIn) : vBlocksToDownload(vBlocksToDownloadIn), created(createdIn), progressCallback(progressCallbackIn)\n+{\n+    fCancled = false;\n+    requestedUpToSize = 0;\n+    processedUpToSize = 0;\n+}\n+\n+CBlockRequest::~CBlockRequest()\n+{\n+    LogPrint(\"net\", \"Deallocating CBlockRequest\\n\");\n+}\n+\n+void CBlockRequest::processWithPossibleBlock(const CBlock* pblock, CBlockIndex *pindex)\n+{\n+    // don't process anything if request was cancled\n+    if (this->fCancled)\n+        return;\n+\n+    int MAX_PROCESS = 5;\n+    int loop_processed = 0;\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindexRequest = this->vBlocksToDownload[i];\n+        CBlock loadBlock;\n+        const CBlock *currentBlock = &loadBlock;\n+\n+        // if a block has been passed, check if is the next item in the sequence\n+        if (pindex && pblock && pindex == pindexRequest)\n+            currentBlock = pblock;\n+        else if (pindexRequest->nStatus & BLOCK_HAVE_DATA) {\n+            if (!ReadBlockFromDisk(loadBlock, pindexRequest, Params().GetConsensus()))\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+        } else {\n+            break;\n+        }\n+\n+        // fire signal with txns\n+        int cnt = 0;\n+        BOOST_FOREACH(const CTransaction &tx, currentBlock->vtx) {\n+            GetMainSignals().SyncTransaction(tx, pindexRequest, cnt, false);\n+            cnt++;\n+        }\n+        this->processedUpToSize++;\n+\n+        // log some info\n+        LogPrint(\"net\", \"BlockRequest: proccessed up to %ld of total requested %ld blocks\\n\", this->processedUpToSize, this->vBlocksToDownload.size());\n+\n+        if (progressCallback)\n+            if (!progressCallback(shared_from_this(), pindexRequest))\n+                this->cancel();\n+\n+        // release global block request pointer if request has been completed\n+        if (this->processedUpToSize == this->vBlocksToDownload.size())\n+            currentBlockRequest = nullptr;\n+\n+        if (loop_processed >= MAX_PROCESS)\n+            break;\n+        loop_processed++;\n+    }\n+}\n+\n+void CBlockRequest::cancel()\n+{\n+    fCancled = true;\n+    if (currentBlockRequest.get() == this) {\n+        // release shared pointer\n+        currentBlockRequest = nullptr;\n+    }\n+}\n+\n+bool CBlockRequest::isCancled()\n+{\n+    return fCancled;\n+}\n+\n+void CBlockRequest::setAsCurrentRequest()\n+{\n+    // if there is an existing block request, cancle it\n+    if (currentBlockRequest != nullptr)\n+        currentBlockRequest->fCancled = true;\n+\n+    currentBlockRequest = shared_from_this();\n+}\n+\n+void CBlockRequest::fillInNextBlocks(std::vector<CBlockIndex*>& vBlocks, unsigned int count, std::function<bool(CBlockIndex*)> filterBlocksCallback)\n+{\n+    for (unsigned int i = this->processedUpToSize; i < this->vBlocksToDownload.size() ; i++) {\n+        CBlockIndex *pindex = this->vBlocksToDownload[i];\n+        if ( filterBlocksCallback(pindex) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // we don't already download this block and we don't have its data already",
      "path": "src/blockrequest.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "96bdeffb78eecb7a82f7325272ed9374e8dcd782",
      "original_commit_id": "eb13afe4de6c01bc95ca33f85dee964cb4ae8049",
      "in_reply_to_id": 86580666,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, will change.\n",
      "created_at": "2016-11-08T14:29:34Z",
      "updated_at": "2016-11-08T14:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9076#discussion_r86998508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86998508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}