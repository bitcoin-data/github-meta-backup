{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536",
    "id": 782603068,
    "node_id": "PR_kwDOABII584upZM8",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23536",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/23536.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/23536.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cccc1e70b8a14430cc94143da97936a60d6c83d3",
    "number": 23536,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Enforce Taproot script flags whenever WITNESS is set",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Now that Taproot is active, it makes sense to enforce its rules on all blocks, even historic ones, regardless of the deployment status.\r\n\r\n### Benefits:\r\n\r\n(With \"script flags\" I mean \"taproot script verification flags\".)\r\n\r\n* Script flags are known ahead for all blocks (even blocks not yet created) and do not change. This may benefit static analysis, code review, and development of new script features that build on Taproot.\r\n* Any future bugs introduced in the deployment code won't have any effect on the script flags, as they are independent of deployment.\r\n* Enforcing the taproot rules regardless of the deployment status makes testing easier because invalid blocks after activation are also invalid before activation. So there is no need to differentiate the two cases.\r\n* It gives belt-and-suspenders protection against a practically expensive and theoretically impossible IBD reorg attack where the node is eclipsed. While `nMinimumChainWork` already protects against this, the cost for a few months worth of POW might be lowered until a major version release of Bitcoin Core reaches EOL. The needed work for the attack is the difference between `nMinimumChainWork` and the work at block 709632.\r\n\r\nFor reference, previously the same was done for P2SH and WITNESS in commit 0a8b7b4b33c9d78574627fc606267e2d8955cd1c.\r\n\r\n### Implementation:\r\n\r\nI found one block which fails verification with the flags applied, so I added a `TaprootException`, similar to the `BIP16Exception`.\r\n\r\nFor reference, the debug log:\r\n\r\n```\r\nERROR: ConnectBlock(): CheckInputScripts on b10c007c60e14f9d087e0291d4d0c7869697c6681d979c6639dbd960792b4d41 failed with non-mandatory-script-verify-flag (Witness program was passed an empty witness)\r\nBlockChecked: block hash=0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad state=non-mandatory-script-verify-flag (Witness program was passed an empty witness)\r\nInvalidChainFound: invalid block=0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad  height=692261  log2_work=92.988459  date=2021-07-23T08:24:20Z\r\nInvalidChainFound:  current best=0000000000000000000067b17a4c0ffd77c29941b15ad356ca8f980af137a25d  height=692260  log2_work=92.988450  date=2021-07-23T07:47:31Z\r\nERROR: ConnectTip: ConnectBlock 0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad failed, non-mandatory-script-verify-flag (Witness program was passed an empty witness)\r\n```\r\n\r\nHint for testing, make sure to set `-noassumevalid`.\r\n\r\n### Considerations\r\n\r\nObviously this change can lead to consensus splits on the network in light of massive reorgs. Currently the last block before Taproot activation, that is the last block without the Taproot script flags set, is only buried by a few days of POW. However, when and if this patch is included in the next major release, it will be buried by a few months of POW. BIP90 considerations apply when looking at reorgs this large.",
    "labels": [
      {
        "id": 192202000,
        "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
        "name": "Consensus",
        "color": "009800",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
      "id": 7150037,
      "node_id": "MI_kwDOABII584AbRnV",
      "number": 54,
      "state": "closed",
      "title": "24.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 159,
      "created_at": "2021-09-14T08:27:02Z",
      "updated_at": "2022-11-29T15:44:44Z",
      "closed_at": "2022-11-29T15:44:44Z"
    },
    "created_at": "2021-11-17T10:59:23Z",
    "updated_at": "2023-04-01T14:41:14Z",
    "closed_at": "2022-03-25T13:12:04Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-03-25T13:12:03Z",
    "merge_commit_sha": "7c08d81e119570792648fe95bbacddbb1d5f9ae2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2111-taprootGenesis",
      "ref": "2111-taprootGenesis",
      "sha": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:04Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5b4b8f76f3ae11064d4aa3ac157558e364751fd2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 36,
    "deletions": 37,
    "changed_files": 4,
    "commits": 3,
    "review_comments": 52,
    "comments": 45
  },
  "events": [
    {
      "event": "labeled",
      "id": 5631158077,
      "node_id": "LE_lADOABII584-8R4czwAAAAFPpKc9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5631158077",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-17T11:20:06Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "subscribed",
      "id": 5632649368,
      "node_id": "SE_lADOABII584-8R4czwAAAAFPu2iY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5632649368",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-17T15:20:38Z"
    },
    {
      "event": "subscribed",
      "id": 5632650521,
      "node_id": "SE_lADOABII584-8R4czwAAAAFPu20Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5632650521",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-17T15:20:47Z"
    },
    {
      "event": "commented",
      "id": 971685204,
      "node_id": "IC_kwDOABII58456r1U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/971685204",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-17T15:22:42Z",
      "updated_at": "2021-11-17T15:23:41Z",
      "author_association": "MEMBER",
      "body": "Concept ACK on burying taproot deployment in the next major release :grimacing: ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-971685204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 971723797,
      "node_id": "IC_kwDOABII584561QV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/971723797",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-17T16:04:19Z",
      "updated_at": "2021-11-17T16:04:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK -- note that the IsNull v.s. optional doesn't really matter; i do mildly prefer consistency though with the BIP16Exception.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-971723797",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 972467628,
      "node_id": "IC_kwDOABII58459q2s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/972467628",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T02:51:09Z",
      "updated_at": "2022-03-13T13:38:35Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22953](https://github.com/bitcoin/bitcoin/pull/22953) (refactor: introduce single-separator split helper (boost::split replacement) by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-972467628",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 972836744,
      "node_id": "IC_kwDOABII5845_E-I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/972836744",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T12:50:12Z",
      "updated_at": "2021-11-18T12:50:12Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Not sure what the right amount of PoW is to burry this under. How much was SegWit burried under?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-972836744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 972881871,
      "node_id": "IC_kwDOABII5845_P_P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/972881871",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T13:48:58Z",
      "updated_at": "2021-11-18T13:48:58Z",
      "author_association": "MEMBER",
      "body": "@Sjors Segwit was activated in ~summer 2017 and https://github.com/bitcoin/bitcoin/pull/11739 was created in ~fall 2017, however it wasn't merged until April 2018, and first included in the 17.0 release (Oct 2018). If it was merged earlier it could have been included in 16.0 (Feb 2018). If the changes here are included in the next major release, they will have ~5 months of POW until 23.0 (April 2022).",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-972881871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "mentioned",
      "id": 5638900713,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFQGsvp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5638900713",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T13:48:58Z"
    },
    {
      "event": "subscribed",
      "id": 5638900717,
      "node_id": "SE_lADOABII584-8R4czwAAAAFQGsvt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5638900717",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T13:48:58Z"
    },
    {
      "event": "reviewed",
      "id": 810389033,
      "node_id": "PRR_kwDOABII584wTY4p",
      "url": null,
      "actor": null,
      "commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-810389033",
      "submitted_at": "2021-11-18T19:53:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 973209664,
      "node_id": "IC_kwDOABII5846AgBA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/973209664",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T19:55:04Z",
      "updated_at": "2021-11-18T19:55:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, for consistency with previous soft fork deployments and the benefits well articulated in the PR description.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-973209664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 974860471,
      "node_id": "IC_kwDOABII5846GzC3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974860471",
      "actor": {
        "login": "dunxen",
        "id": 3072149,
        "node_id": "MDQ6VXNlcjMwNzIxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3072149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dunxen",
        "html_url": "https://github.com/dunxen",
        "followers_url": "https://api.github.com/users/dunxen/followers",
        "following_url": "https://api.github.com/users/dunxen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dunxen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dunxen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dunxen/subscriptions",
        "organizations_url": "https://api.github.com/users/dunxen/orgs",
        "repos_url": "https://api.github.com/users/dunxen/repos",
        "events_url": "https://api.github.com/users/dunxen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dunxen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-21T17:30:30Z",
      "updated_at": "2021-11-21T17:30:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nRunning verification since genesis now.",
      "user": {
        "login": "dunxen",
        "id": 3072149,
        "node_id": "MDQ6VXNlcjMwNzIxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3072149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dunxen",
        "html_url": "https://github.com/dunxen",
        "followers_url": "https://api.github.com/users/dunxen/followers",
        "following_url": "https://api.github.com/users/dunxen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dunxen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dunxen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dunxen/subscriptions",
        "organizations_url": "https://api.github.com/users/dunxen/orgs",
        "repos_url": "https://api.github.com/users/dunxen/repos",
        "events_url": "https://api.github.com/users/dunxen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dunxen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-974860471",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "reviewed",
      "id": 812456488,
      "node_id": "PRR_kwDOABII584wbRoo",
      "url": null,
      "actor": null,
      "commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code in fa75e6e79a1635480786a8a001d2ebff07e8bc8d looks good.\r\n\r\nVerified that signet and testnet3 indeed do not need an exception block. Currently verifying that mainnet _does_ need the exception (by dropping it), and whether that's the only one.\r\n\r\nUpdate 28-11: also tested mainnet",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-812456488",
      "submitted_at": "2021-11-22T14:03:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "labeled",
      "id": 5671112936,
      "node_id": "LE_lADOABII584-8R4czwAAAAFSBlDo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5671112936",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T07:41:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5671969721,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFSE2O5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5671969721",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T10:19:25Z"
    },
    {
      "event": "commented",
      "id": 979077116,
      "node_id": "IC_kwDOABII5846W4f8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/979077116",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T10:36:27Z",
      "updated_at": "2021-11-25T10:36:27Z",
      "author_association": "MEMBER",
      "body": "Rebased with the following changes:\r\n\r\n* Two refactoring cleanup commits per myself\r\n* Use plain `uint256` (not optional) per @JeremyRubin \r\n* Rework test per @Sjors ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979077116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "mentioned",
      "id": 5672071994,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFSFPM6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5672071994",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T10:36:27Z"
    },
    {
      "event": "subscribed",
      "id": 5672071998,
      "node_id": "SE_lADOABII584-8R4czwAAAAFSFPM-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5672071998",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T10:36:27Z"
    },
    {
      "event": "mentioned",
      "id": 5672072005,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFSFPNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5672072005",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T10:36:28Z"
    },
    {
      "event": "subscribed",
      "id": 5672072010,
      "node_id": "SE_lADOABII584-8R4czwAAAAFSFPNK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5672072010",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T10:36:28Z"
    },
    {
      "event": "unlabeled",
      "id": 5672640395,
      "node_id": "UNLE_lADOABII584-8R4czwAAAAFSHZ-L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5672640395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T12:21:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 816212023,
      "node_id": "PRR_kwDOABII584wpmg3",
      "url": null,
      "actor": null,
      "commit_id": "fa386f6a27968cce94b03a8c5317dbc1c6707ffb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-816212023",
      "submitted_at": "2021-11-25T17:29:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 979378315,
      "node_id": "IC_kwDOABII5846YCCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/979378315",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T17:34:03Z",
      "updated_at": "2021-11-25T17:34:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "if tests pass this should be OK, but the removal of the nullptr check and change to assert does seem a bit creepy to me.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979378315",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 979379020,
      "node_id": "IC_kwDOABII5846YCNM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/979379020",
      "actor": {
        "login": "gruve-p",
        "id": 11212268,
        "node_id": "MDQ6VXNlcjExMjEyMjY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11212268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gruve-p",
        "html_url": "https://github.com/gruve-p",
        "followers_url": "https://api.github.com/users/gruve-p/followers",
        "following_url": "https://api.github.com/users/gruve-p/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gruve-p/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gruve-p/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gruve-p/subscriptions",
        "organizations_url": "https://api.github.com/users/gruve-p/orgs",
        "repos_url": "https://api.github.com/users/gruve-p/repos",
        "events_url": "https://api.github.com/users/gruve-p/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gruve-p/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T17:35:27Z",
      "updated_at": "2021-11-25T17:35:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "gruve-p",
        "id": 11212268,
        "node_id": "MDQ6VXNlcjExMjEyMjY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11212268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gruve-p",
        "html_url": "https://github.com/gruve-p",
        "followers_url": "https://api.github.com/users/gruve-p/followers",
        "following_url": "https://api.github.com/users/gruve-p/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gruve-p/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gruve-p/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gruve-p/subscriptions",
        "organizations_url": "https://api.github.com/users/gruve-p/orgs",
        "repos_url": "https://api.github.com/users/gruve-p/repos",
        "events_url": "https://api.github.com/users/gruve-p/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gruve-p/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979379020",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 979381311,
      "node_id": "IC_kwDOABII5846YCw_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/979381311",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-25T17:40:47Z",
      "updated_at": "2021-11-25T17:40:47Z",
      "author_association": "MEMBER",
      "body": "> if tests pass this should be OK, but the removal of the nullptr check and change to assert does seem a bit creepy to me.\r\n\r\nCan you elaborate why this is creepy? All call sites assume the hash to be existing. See the commit message and for example:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/fa65b65821add01e28118899d4f2eef98aa4c37a/src/validation.cpp#L1643",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979381311",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 980713841,
      "node_id": "IC_kwDOABII5846dIFx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/980713841",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-27T17:05:15Z",
      "updated_at": "2021-11-27T17:05:15Z",
      "author_association": "MEMBER",
      "body": "Concept ACK and light Code Review ACK\r\n\r\nI will do some testing in the next days.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-980713841",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5693021410,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFTVJzi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5693021410",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-30T15:54:55Z"
    },
    {
      "event": "commented",
      "id": 982772150,
      "node_id": "IC_kwDOABII5846k-m2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/982772150",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-30T15:56:54Z",
      "updated_at": "2021-11-30T15:56:54Z",
      "author_association": "MEMBER",
      "body": "Force pushed last commit, only change is whitespace related",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-982772150",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "reviewed",
      "id": 819822628,
      "node_id": "PRR_kwDOABII584w3YAk",
      "url": null,
      "actor": null,
      "commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Mostly happy with fa3335bcc143beb7585ebf8c01c028b1762fd77a\r\n\r\nI still have to re-run the above sanity checks with `-assumevalid=0`",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-819822628",
      "submitted_at": "2021-12-01T07:16:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhYWRjNjA2Yzc2NDRmMjkzNGRlMzkwZTI2MWQ5ZDY1YTgxYTc1OTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faadc606c7644f2934de390e261d9d65a81a7592",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faadc606c7644f2934de390e261d9d65a81a7592",
      "tree": {
        "sha": "65b88e12a6fe61424cf90af59b2f13d231ee3a69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65b88e12a6fe61424cf90af59b2f13d231ee3a69"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 65b88e12a6fe61424cf90af59b2f13d231ee3a69\nparent 9174bcf7da3e15e61dce801ec414a6af01ba44d3\nauthor MarcoFalke <falke.marco@gmail.com> 1637834366 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1638345029 +0100\n\nrefactor: Pass const reference instead of pointer to GetBlockScriptFlags\n\nThe function dereferences the pointer and can not accept nullptr. Change\nthe arg to a const reference to clarify this for the caller.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjGdgwAuHbYsCi+uvnCqKXZ1OBlqARtsRRTza5d+9CIsPOJ1BoTTkQMP9OovmTT\nXkrnu0qUez1avww4Z6mcNtSTPtpa1EdoOWGhhgqao5FOzOqTb/Rx935knndpSxxg\nw4pUDyNJMNWDkCAkJ0vHaIoCfo2rZmd51CxX0aIZPhQ5U+2yi7hfp7/vD6MK/gyQ\nKiO2cFcWaMVHiGAfobWUxsS+KJL8GQdAWv9YlLfuaXxnwBu+2eT/b2XlENPnuSfJ\nx5kSbEqazCiEXX5zS3KU7G2GAt/PvclOxZIcgnhIfjrhLvT4Sdl/QwZGjmYYwQYA\nnXAMSvMCumNjwAKi37HFM9d2k0jeKyRRWSkXYO/JqAwcJLzRYno4aLPH+0Tv2U35\nicR3ToalVPhZ4G3OLg8OV4D05UGagA8uh+FZoPyvWu0Wx289GkmNROuBjiZ6RkCo\nvNi+mE4kYQFayb5DXvBCqbFj8Btb3Jgi2PJYODIh84n19tTW3d7SKNGPO1K2JLq2\ncKz6aXgu\n=JjZ4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9174bcf7da3e15e61dce801ec414a6af01ba44d3",
          "sha": "9174bcf7da3e15e61dce801ec414a6af01ba44d3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9174bcf7da3e15e61dce801ec414a6af01ba44d3"
        }
      ],
      "message": "refactor: Pass const reference instead of pointer to GetBlockScriptFlags\n\nThe function dereferences the pointer and can not accept nullptr. Change\nthe arg to a const reference to clarify this for the caller.",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-12-01T07:50:29Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T09:59:26Z"
      },
      "sha": "faadc606c7644f2934de390e261d9d65a81a7592"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNDIyOTk0MTE2YTdhMDUzNzg5MzA0ZDU2MTU5NzYwMDgxNDc5ZWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa422994116a7a053789304d56159760081479eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa422994116a7a053789304d56159760081479eb",
      "tree": {
        "sha": "5825fb0715595188886128905b294e13d6397405",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5825fb0715595188886128905b294e13d6397405"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 5825fb0715595188886128905b294e13d6397405\nparent faadc606c7644f2934de390e261d9d65a81a7592\nauthor MarcoFalke <falke.marco@gmail.com> 1637835513 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1638345041 +0100\n\nRemove nullptr check in GetBlockScriptFlags\n\nCommit d59b8d6aa1102ffac980c89e96105ddec9cfb579 removed the need for\nthis check and it was never needed.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh+Egv8C4Eckh+k0VV3wV9GbHaZmryeDAVfbYZkL0cddwgXZ4HmkXhicQMYtfWN\np85jmHxzYXnmcpmlKKXVZpt6t0fFZmi4TPdkzrKU1x2LPLDbsRLMv4mvbILWxWVi\neWSiT8PjT2e33BAbZCrMMiQr9v+GR0YhlDSqGgh0hqcrRwr8i1MFz4ejrBjDeFkz\nLVS/2D5qLBZCN9tdp+APyRvfLBHehfX6OIj3p6wlufoU020V3+isjzlQrXSTlD/j\n8s2qRwhv6QXeZWFIo8MqvovgtdRx//6RJBposFSKNVRykrqBaSqEhQ1IyXFaQ1si\ngGnykkvKfOSslXVWsq63BIFMnx2Mn8ezjpp/RFYL67lw3WHkbLerUwKk5C3bZNg0\nn2764IrLicE5v5fZiE5Ll+nyUPPGv9NxeYnpSO9y7O+OMis5Ccr4KRyO0LGUkwrQ\nWX4mTKSdjaPHPsf5d3vg3Hfot5VWNhk4Q1ZzS5ogJ3eGKbSG9sL94SRtGgPgZp5o\nWSf6N3+A\n=X5VV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faadc606c7644f2934de390e261d9d65a81a7592",
          "sha": "faadc606c7644f2934de390e261d9d65a81a7592",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faadc606c7644f2934de390e261d9d65a81a7592"
        }
      ],
      "message": "Remove nullptr check in GetBlockScriptFlags\n\nCommit d59b8d6aa1102ffac980c89e96105ddec9cfb579 removed the need for\nthis check and it was never needed.",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-12-01T07:50:41Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T10:18:33Z"
      },
      "sha": "fa422994116a7a053789304d56159760081479eb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5697012031,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFTkYE_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5697012031",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-01T07:51:09Z"
    },
    {
      "event": "reviewed",
      "id": 821543592,
      "node_id": "PRR_kwDOABII584w98Ko",
      "url": null,
      "actor": null,
      "commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-821543592",
      "submitted_at": "2021-12-02T14:06:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 988486858,
      "node_id": "IC_kwDOABII58466xzK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988486858",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-08T04:22:15Z",
      "updated_at": "2021-12-08T04:22:15Z",
      "author_association": "MEMBER",
      "body": "For what it's worth, I don't find the listed benefits very persuasive:\r\n\r\n> * Script verification flags are constant and do not change as the chain progresses.\r\n\r\nThe script verification flags aren't constant -- there's an exception for a particular block in the chain that matters most.\r\n\r\n> * Any future bugs introduced in the deployment code won't have any effect on the script flags, as they are independent of deployment.\r\n\r\nDepends a lot on how severe the bugs are; undefined behaviour could do anything after all. Simply burying the deployment to a fixed height would achieve this goal better, I think.\r\n \r\n> * Enforcing the taproot rules regardless of the deployment status makes testing easier because invalid blocks after activation are also invalid before activation. So there is no need to differentiate the two cases.\r\n\r\nFor testing on regtest or signet, taproot is already always active; there's no need to change the deployment rules to have taproot rules applied to the mempool.  I believe with this patch, we're unable to test the code path that's executed for mainnet block 692261 except by validating the entire mainnet chain up until that point, where prior to this patch we test it automatically on regtest as part of feature_taproot.\r\n\r\n> * It may alert a miner earlier if they produce taproot invalid blocks. For example, if they test their system on a test chain where taproot isn't active yet. Producing blocks with invalid taproot spends may hurt them only when they switch to mainnet.\r\n\r\nThe only way this would happen is if they're mining their own fork of testnet without having synced to anytime since July; and they'd need to be mining pay to taproot spends into those blocks (which they're presumably not getting from public testnet, since they're not synced to the public testnet), and then mining non-standard transactions spend them without following taproot rules (which again they're not getting from public testnet or they'd be synced with public testnet, so are somehow generating them themselves?). That doesn't sound very plausible to me...\r\n\r\nSo I don't think those benefits would justify this change. But...\r\n \r\n> For reference, previously the same was done for P2SH and WITNESS in commit [0a8b7b4](https://github.com/bitcoin/bitcoin/commit/0a8b7b4b33c9d78574627fc606267e2d8955cd1c).\r\n\r\nThat references an [irc meeting](https://www.erisian.com.au/bitcoin-core-dev/log-2017-10-12.html#l-264) which seems to have a different rationale: that if you're in IBD on mainnet, you won't accept a forked chain with invalid taproot spends (even if you're eclipsed). eg:\r\n\r\n`333 2017-10-12T19:12:53  <morcos> sipa: i just really hate the attack scenarios that involve feeding alternate chains that eventually get reorged out but possibly with poor consequences...  perhaps this is not a problem with segwit, but perhaps it is... say your wallet loses money in an unexpected way or something?`\r\n\r\nI'm not sure that's a huge benefit; but I could see there being potential for a reorg as IBD completes to somehow leave you with an invalid taproot spend in the mempool that you might try to include in a block you mine later invalidating that block, or, more plausibly, that you might relay a tx paying to your own taproot address, that then gets mined on the fork and spend via an invalid taproot spend, making you incorrectly think that you've lost funds.\r\n\r\nAgain, not sure that's a huge benefit, but that does seem to me to justify the change. So ConceptACK.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-988486858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "reviewed",
      "id": 825997633,
      "node_id": "PRR_kwDOABII584xO7lB",
      "url": null,
      "actor": null,
      "commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK fa9a4d103ff673724dfeb53b10a2707a81539d68\r\n\r\nChecked that testnet reindexes to tip with this patch and noassumevalid. Have not checked mainnet.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-825997633",
      "submitted_at": "2021-12-08T04:45:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 990824225,
      "node_id": "IC_kwDOABII5847Dsch",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/990824225",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-10T10:29:26Z",
      "updated_at": "2021-12-10T10:29:26Z",
      "author_association": "MEMBER",
      "body": "Thank you for reviewing the pull request description @ajtowns . The use of the word \"constant\" was indeed wrong. I've replaced it with \"known in advance\". Also, I've removed the section talking about miner testing.\r\n\r\n> 333 2017-10-12T19:12:53 <morcos> sipa: i just really hate the attack scenarios that involve feeding alternate chains that eventually get reorged out but possibly with poor consequences... perhaps this is not a problem with segwit, but perhaps it is... say your wallet loses money in an unexpected way or something?\r\n> I'm not sure that's a huge benefit; but I could see there being potential for a reorg as IBD completes to somehow leave you with an invalid taproot spend in the mempool that you might try to include in a block you mine later invalidating that block, or, more plausibly, that you might relay a tx paying to your own taproot address, that then gets mined on the fork and spend via an invalid taproot spend, making you incorrectly think that you've lost funds.\r\n> Again, not sure that's a huge benefit, but that does seem to me to justify the change. So ConceptACK.\r\n\r\n\r\nUnless I am missing something this seems to be a reason *against* this change, no? Currently we won't process any blocks that are not part of a chain that has at least the amount of work of the main chain at the time of the software release. So the attack that this patch is supposed to \"fix\" assumes a massive reorg. With a reorg this massive the change here isn't safe because it may split network consensus into two. And having split consensus in two, you can launch other attacks.\r\n\r\nSo I don't think the patch here should be thought as a countermeasure against some kind of (reorg) attack. The motivation for it is mostly nifty. Or to quote the IRC meeting you linked to: \"cleanest\", \"very nice property\".",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-990824225",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "mentioned",
      "id": 5746827541,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFWiaEV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5746827541",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-10T10:29:27Z"
    },
    {
      "event": "subscribed",
      "id": 5746827546,
      "node_id": "SE_lADOABII584-8R4czwAAAAFWiaEa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5746827546",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-10T10:29:27Z"
    },
    {
      "event": "commented",
      "id": 991838983,
      "node_id": "IC_kwDOABII5847HkMH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/991838983",
      "actor": {
        "login": "dunxen",
        "id": 3072149,
        "node_id": "MDQ6VXNlcjMwNzIxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3072149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dunxen",
        "html_url": "https://github.com/dunxen",
        "followers_url": "https://api.github.com/users/dunxen/followers",
        "following_url": "https://api.github.com/users/dunxen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dunxen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dunxen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dunxen/subscriptions",
        "organizations_url": "https://api.github.com/users/dunxen/orgs",
        "repos_url": "https://api.github.com/users/dunxen/repos",
        "events_url": "https://api.github.com/users/dunxen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dunxen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-12T05:45:02Z",
      "updated_at": "2021-12-12T05:45:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK fa9a4d1\n\nReverified mainnet chain with assumevalid=0 and also confirmed that the exception is needed.",
      "user": {
        "login": "dunxen",
        "id": 3072149,
        "node_id": "MDQ6VXNlcjMwNzIxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3072149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dunxen",
        "html_url": "https://github.com/dunxen",
        "followers_url": "https://api.github.com/users/dunxen/followers",
        "following_url": "https://api.github.com/users/dunxen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dunxen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dunxen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dunxen/subscriptions",
        "organizations_url": "https://api.github.com/users/dunxen/orgs",
        "repos_url": "https://api.github.com/users/dunxen/repos",
        "events_url": "https://api.github.com/users/dunxen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dunxen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-991838983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 996614301,
      "node_id": "IC_kwDOABII5847ZyCd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996614301",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T10:35:59Z",
      "updated_at": "2021-12-17T10:35:59Z",
      "author_association": "MEMBER",
      "body": "> Unless I am missing something this seems to be a reason _against_ this change, no? Currently we won't process any blocks that are not part of a chain that has at least the amount of work of the main chain at the time of the software release. So the attack that this patch is supposed to \"fix\" assumes a massive reorg. With a reorg this massive the change here isn't safe because it may split network consensus into two. And having split consensus in two, you can launch other attacks.\r\n\r\nI think the massive reorg that's assumed is from a fake, lower-work chain to the current chain which is much easier than doing a \"real\" reorg. The idea being:\r\n\r\n * an attacker eclipses your node during IBD so that you can only follow their chain\r\n * your node is not running this code, so accepts a non-standard taproot invalid tx because they include it in some block in their chain\r\n \r\nThen either,\r\n \r\n * the attacker then allows you to reorg to the main chain, at which point the taproot invalid tx perhaps enters your mempool\r\n * despite the huge reorg and eventual activation of taproot that tx doesn't get removed from your mempool\r\n * you then include that tx in blocks you attempt to mine, rendering them invalid\r\n\r\nor\r\n\r\n * the invalid tx spends to or from an address of yours, causing your wallet balance to be incorrect\r\n * due to the shock, you have a heart attack and die, losing access to your coins?\r\n\r\nBecause you're reorging *to* the main chain, you can do those attacks with substantially less resources than it would take to reorg the current chain back prior to taproot's activation. Hence I think that's a reason for this change (and why it's a \"nice property\" to have).\r\n\r\nConsidering three ways of enforcing taproot:\r\n\r\n * bip341 rules (current)\r\n * unconditional activation at height 709632 (#23505)\r\n * activation except for block `0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad` (this pr)\r\n \r\nthen the first two will only result in differences if there is a reorg back to block 687283 (and taproot was prevented from activating via bip341 rules, or timewarp was used to delay activation to a later block), whereas the latter could result in differences if there is a reorg back to block 709630 (with block 709631 being taproot invalid). I think the longer reorg would require about 4.6x as much work as the latter at present. Presuming this change isn't released until April, that's another ~15000 blocks, and the ratio would presumably be 1.8x.\r\n\r\nBut either would already be over 4800 blocks (and by April would be ~20,000 blocks), which I'd expect to result in a network split independently of any activation rules (due to people invalidating the reorg and continuing to follow/mine the lower work chain)... Hence I don't think the risk of a higher-work reorg of the current chain is a reason against this change.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-996614301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 996633642,
      "node_id": "IC_kwDOABII5847Z2wq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996633642",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T11:02:16Z",
      "updated_at": "2021-12-17T11:02:16Z",
      "author_association": "MEMBER",
      "body": "Sorry, I still don't follow how an eclipse attack can disable our protection against reorgs during IBD.\r\n\r\nThe code:\r\n\r\n```cpp\r\n    if (!fRequested) {  // If we didn't ask for it:\r\n// .. snip ..\r\n\r\n        // Protect against DoS attacks from low-work chains.\r\n        // If our tip is behind, a peer could try to send us\r\n        // low-work blocks on a fake chain that we would never\r\n        // request; don't process these.\r\n        if (pindex->nChainWork < nMinimumChainWork) return true;\r\n    }\r\n```\r\n\r\nAnd `fRequested` is never set for \"boring\" peers. See:\r\n\r\n```cpp\r\n    if (...snip... || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\r\n        // This peer has nothing interesting.\r\n        return;\r\n    }\r\n```\r\n\r\nIf this protection didn't work, we should fix it. Again, I don't think seeing this pull request as a \"bug fix\" for an attack is the right approach. If there was a bug, it would be exploitable on current master (with witness v2 outputs maybe?).\r\n\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-996633642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 996691958,
      "node_id": "IC_kwDOABII5847aE_2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996691958",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T12:39:44Z",
      "updated_at": "2021-12-17T12:39:44Z",
      "author_association": "MEMBER",
      "body": "Witness v2 outputs don't matter I think -- they won't affect your wallet (for the second case) and won't be any more valid/invalid on the main chain than on a hypothetical lower work fork (so won't invalidate your blocks in the first case).\r\n\r\nThe minimum chain work check would currently just mean you'd need to start your fake chain after block 691719, but presumably it'd be easiest to start just prior to taproot's activation anyway (709632). Updating min chainwork prior to 23.0 to something well past the chain work as at taproot's activation would likely make this attack prohibitively expensive against people running 23.0, even if this PR weren't included. But this patch would prevent that attack even if someone were willing to do that much work (eg, perhaps there's a huge improvement in sha256d asics making such an attack much cheaper). My feeling is that's not super important, but still a worthwhile additional protection.\r\n\r\nBut if I'm wrong and this change isn't protecting against bugs for people simply following mainnet, I'm not sure it makes sense to be touching consensus code in this way though: better to just bury the deployment rather than adding consensus logic for something with no tangible benefits. Burial gains both the first two benefits listed in the pr description (if you know the block's height, you know whether taproot is enforced or not; and bugs in bip9/whatever logic no affect it), and for the third, the only cases where taproot isn't activated is if you manually configure regtest that way, or you're trying a massive reorg of testnet or mainnet, so presuming you don't do those things, you can treat a buried deployment of taproot as always active too. Burial has a higher cost to creating a consensus split due to needing a deeper reorg, and seems like it has a lower risk of introducing bugs (due to less new code). (The same argument would apply to making p2sh and segwit rules apply to (almost) all blocks originally, and would also presumably apply to reverting that change or p2sh/segwit now).",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-996691958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 996718804,
      "node_id": "IC_kwDOABII5847aLjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996718804",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T13:22:46Z",
      "updated_at": "2021-12-17T13:22:46Z",
      "author_association": "MEMBER",
      "body": "Thanks, I've summarize your point in OP in three sentences.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-996718804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 996846755,
      "node_id": "IC_kwDOABII5847aqyj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996846755",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T16:17:01Z",
      "updated_at": "2021-12-17T16:17:01Z",
      "author_association": "MEMBER",
      "body": "> the attacker then allows you to reorg to the main chain, at which point the taproot invalid tx perhaps enters your mempool\r\n\r\nRe-reading this, I think it shouldn't be possible for the invalid tx to enter the mempool, since MaybeUpdateMempoolForReorg calls ATMP, which requires txs to be policy and consensus valid, no?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-996846755",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 996871674,
      "node_id": "IC_kwDOABII5847aw36",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996871674",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T16:54:05Z",
      "updated_at": "2021-12-17T16:54:05Z",
      "author_association": "MEMBER",
      "body": "> > the attacker then allows you to reorg to the main chain, at which point the taproot invalid tx perhaps enters your mempool\r\n> \r\n> Re-reading this, I think it shouldn't be possible for the invalid tx to enter the mempool, since MaybeUpdateMempoolForReorg calls ATMP, which requires txs to be policy and consensus valid, no?\r\n\r\nYeah, that's what I'd expect (or at least hope for). But that logic's more complicated than just \"you can't ever make a new valid block with a taproot-invalid tx\", so there's more chance of that code having a bug, either already or sometime in the future.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-996871674",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5791732805,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFZNtRF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5791732805",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-20T10:09:40Z"
    },
    {
      "event": "commented",
      "id": 997790605,
      "node_id": "IC_kwDOABII5847eRON",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/997790605",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-20T10:21:07Z",
      "updated_at": "2021-12-20T10:21:07Z",
      "author_association": "MEMBER",
      "body": "Ok, adjusted the point in OP to \"It gives belt-and-suspenders protection against a practically expensive and theoretically impossible IBD reorg attack\".\r\n\r\nAlso, apologies to reviewers, since I completely reworked the implementation of the last commit. I think `std::set` gives a bunch of nice benefits (over a verbose list of uint256 members):\r\n\r\n* No need to add an exception if there is none. That is, no need to handle the confusing `uint256::IsNull` case (or `std::optional::has_value`).\r\n* No nested ifs. So the code is easier to parse for humans and less susceptible to coding errors.\r\n\r\nThere is a minor downside in that P2SH and WITNESS are no longer set when verifying the one taproot exception block on mainnet. I think this is acceptable, as the block is known to be fully valid already, so there is no general need to redo all script verify checks on it. In fact, with default `-assumevalid` settings of the next major release, this block already won't be re-checked.\r\n\r\nThough, I am happy to revert to the previous ACKed commit, if needed.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-997790605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5791881254,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFZORgm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5791881254",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-20T10:34:26Z"
    },
    {
      "event": "commented",
      "id": 1001136313,
      "node_id": "IC_kwDOABII5847rCC5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1001136313",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-26T09:18:18Z",
      "updated_at": "2021-12-26T09:18:18Z",
      "author_association": "MEMBER",
      "body": "Synced the chains with this patch locally",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1001136313",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1011059699,
      "node_id": "IC_kwDOABII5848Q4vz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011059699",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-12T13:43:48Z",
      "updated_at": "2022-01-12T14:33:16Z",
      "author_association": "MEMBER",
      "body": "ACK faa40fc1e7e6f12f71a7e157dd920feffb3ede31\r\n\r\nSynced faa40fc1e7e6f12f71a7e157dd920feffb3ede31 on mainnet, testnet, and signet with `noassumevalid=1`. Changes look good to me. Compared the taproot block hash to the hash I had in my notes... BIP-16 hash didn't change. I think not checking P2SH and WITNESS for the taproot block isn't a blocker (as Marco mentioned: the block won't be checked once the assumevalid settings are update for the next release).\r\n\r\n~While looking at the log of the nodes, I've noticed that they are opening a new block-relay-only outbound connection every 5 minutes (lots of `New outbound peer connected: version: 70016, blocks=718290, peer=X (block-relay-only)`). I don't remember seeing this this frequent. I don't think it's related to this change, maybe another change that I'm not aware of.~ Apparently this is normal behavior. I just never noticed it before.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1011059699",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1016598640,
      "node_id": "IC_kwDOABII5848mBBw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1016598640",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-19T15:45:46Z",
      "updated_at": "2022-01-19T15:45:46Z",
      "author_association": "MEMBER",
      "body": "Github ACK https://github.com/bitcoin/bitcoin/pull/23536/commits/faa40fc1e7e6f12f71a7e157dd920feffb3ede31\r\n\r\nCan do a more formal review soon.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1016598640",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1023926957,
      "node_id": "IC_kwDOABII5849B-Kt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1023926957",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T06:31:51Z",
      "updated_at": "2022-01-28T06:31:51Z",
      "author_association": "MEMBER",
      "body": "ACK faa40fc1e7e6f12f71a7e157dd920feffb3ede31\r\n\r\nChecked validation of mainnet and testnet, and that validation fails at both mainnet blocks if their hashes aren't included in the exception blocks set (didn't check the testnet exception).\r\n\r\nWould be possible (in a followup PR) to allow adding exception blocks to regtest via a command line parameter, which would then allow testing validation of exception blocks, and improve code coverage of the functional tests.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1023926957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1024022985,
      "node_id": "IC_kwDOABII5849CVnJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024022985",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T09:11:49Z",
      "updated_at": "2022-01-28T09:11:49Z",
      "author_association": "MEMBER",
      "body": "> There is a minor downside in that P2SH and WITNESS are no longer set when verifying the one taproot exception block on mainnet. I think this is acceptable, as the block is known to be fully valid already, so there is no general need to redo all script verify checks on it. In fact, with default `-assumevalid` settings of the next major release, this block already won't be re-checked.\r\n> \r\n> Though, I am happy to revert to the previous ACKed commit, if needed.\r\n\r\nI don't think this is a good idea. It goes beyond burying the taproot deployment. If a user wants to check for themselves if these two blocks obey all the _other_ consensus rules, they would have to make a non-trivial code change and recompile.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024022985",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1024068985,
      "node_id": "IC_kwDOABII5849Cg15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024068985",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T10:11:47Z",
      "updated_at": "2022-01-28T10:11:47Z",
      "author_association": "MEMBER",
      "body": "> I don't think this is a good idea. It goes beyond burying the taproot deployment. If a user wants to check for themselves if these two blocks obey all the _other_ consensus rules, they would have to make a non-trivial code change and recompile.\r\n\r\nThis PR isn't burying the taproot deployment -- it's applying it to old blocks and thus invalidating many theoretically possible large reorgs of mainnet or testnet, which naturally goes far beyond simply burying the deployment.\r\n\r\nThe only block with other unchecked consensus rules is the taproot exception block -- for the p2sh exception blocks, there are no other consensus rules that are not being checked, since none of p2sh nor segwit nor taproot were active at that point on either mainnet or testnet.\r\n\r\nRather than making a code change and recompiling the easy way to validate that block would be using an old release of bitcoind prior to this change being merged, which doesn't seem terrible to me. What that doesn't achieve is allowing you to use that particular block as a regression test of the current bitcoind p2sh/segwit implementation, but that seems like it's a pretty minimal benefit.\r\n\r\nOtherwise, not really seeing the benefit of checking that that particular hardcoded historical block complies with p2sh/segwit rules; but [this approach](https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771242098) (or something like it) would allow doing that if it really is important.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024068985",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1024135574,
      "node_id": "IC_kwDOABII5849CxGW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024135574",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T11:41:19Z",
      "updated_at": "2022-01-28T11:42:00Z",
      "author_association": "MEMBER",
      "body": "@ajtowns I guess the term \"burying\" is ambiguous. It could mean as you say, only fixing the height of activation. I meant it as burying it all the way to genesis, with the existing block grandfathered in. In either case, this PR goes beyond that, because it no longer validates p2sh rules for a (single) block that was created long after p2sh was activated.\r\n\r\nDownloading an earlier version does not seem like a very practical solution. I would imagine a user story like this: they first run with the default `-assumevalid=1`. After going down a rabbit hole, or maybe because they want to ACK a new `assumevalid` value, they decide to sync again with `-assumevalid=0`. But then they go even deeper down the rabbit hole to `script_verify_exception_blocks`. And let's say the year is 2030 and we've added a few more soft fork exception blocks. They'd have to download multiple older binaries, which may or may not run on their system anymore. Then they have to sync them up to, but not too far beyond, the activation of each soft fork, and then switch the next version.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024135574",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "mentioned",
      "id": 5970083404,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFj2D5M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5970083404",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T11:41:19Z"
    },
    {
      "event": "subscribed",
      "id": 5970083414,
      "node_id": "SE_lADOABII584-8R4czwAAAAFj2D5W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5970083414",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T11:41:19Z"
    },
    {
      "event": "commented",
      "id": 1024255357,
      "node_id": "IC_kwDOABII5849DOV9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024255357",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:05:39Z",
      "updated_at": "2022-01-28T14:05:39Z",
      "author_association": "MEMBER",
      "body": "> There is a minor downside in that P2SH and WITNESS are no longer set when verifying the one taproot exception block on mainnet. I think this is acceptable, as the block is known to be fully valid already, so there is no general need to redo all script verify checks on it. In fact, with default -assumevalid settings of the next major release, this block already won't be re-checked.\r\n\r\nThough I have not reviewed this patch in any detail, I share @Sjors's skepticism of this idea.  I think there's a social/cultural difference between having code that is designed to let users run all the validation checks that we believe should have been run at all points in the past, and not letting users do that.  If we were debating whether to make it so that the `assumevalid` setting could not be turned off without a code recompile, I think we would reject the idea -- yet this approach takes us down that path towards making that be the case for some of the blockchain history.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024255357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "mentioned",
      "id": 5970945838,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFj5Wcu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5970945838",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:05:40Z"
    },
    {
      "event": "subscribed",
      "id": 5970945842,
      "node_id": "SE_lADOABII584-8R4czwAAAAFj5Wcy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5970945842",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:05:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5970970800,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFj5ciw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5970970800",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:09:25Z"
    },
    {
      "event": "commented",
      "id": 1024263473,
      "node_id": "IC_kwDOABII5849DQUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024263473",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:15:17Z",
      "updated_at": "2022-01-28T14:15:17Z",
      "author_association": "MEMBER",
      "body": "Thank you for the feedback @Sjors and @sdaftuar. While I don't see a practical need to set the p2sh flags on this particular block, I see why it goes against the general sentiment to give users the choice to \"maximally\" verify the chain. For the same reason assume-utxo will run validation in the background and assume-valid can be disabled at runtime.\r\n\r\nI've reverted to the less controversial initial version, which already had (and hopefully still has) 3 ACKs. Apologies to everyone who reviewed the now stale branch.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024263473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "mentioned",
      "id": 5971009182,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFj5l6e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5971009182",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:15:17Z"
    },
    {
      "event": "subscribed",
      "id": 5971009185,
      "node_id": "SE_lADOABII584-8R4czwAAAAFj5l6h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5971009185",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:15:17Z"
    },
    {
      "event": "mentioned",
      "id": 5971009193,
      "node_id": "MEE_lADOABII584-8R4czwAAAAFj5l6p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5971009193",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:15:17Z"
    },
    {
      "event": "subscribed",
      "id": 5971009201,
      "node_id": "SE_lADOABII584-8R4czwAAAAFj5l6x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5971009201",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:15:18Z"
    },
    {
      "event": "commented",
      "id": 1024281408,
      "node_id": "IC_kwDOABII5849DUtA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024281408",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:34:30Z",
      "updated_at": "2022-01-28T14:34:30Z",
      "author_association": "MEMBER",
      "body": "> Downloading an earlier version does not seem like a very practical solution. I would imagine a user story like this: they first run with the default `-assumevalid=1`. After going down a rabbit hole, or maybe because they want to ACK a new `assumevalid` value, they decide to sync again with `-assumevalid=0`. But then they go even deeper down the rabbit hole to `script_verify_exception_blocks`. And let's say the year is 2030 and we've added a few more soft fork exception blocks. They'd have to download multiple older binaries, which may or may not run on their system anymore. Then they have to sync them up to, but not too far beyond, the activation of each soft fork, and then switch the next version.\r\n\r\n(I think `-assumevalid=1` will behave the same as `-assumevalid=0` -- you have to supply a hash, not true/false)\r\n\r\nI don't think that makes sense; saying \"yes, this is an okay hash for assumevalid\" means that the block with that hash is (a) valid, (b) is relatively recent, and (c) is buried by enough work that it's unlikely that the chain will reorg past it. If you want to break down what \"valid\" means, then it means \"bitcoin node version X will accept it, whatever set of parameters you use\" for various values of X; but it doesn't matter whether version X is running the same code as version Y to work that out, just whether or not they end up giving the same answer.\r\n\r\nLikewise, even if version 2030.1 is running some block through its taproot code that doesn't necessarily tell you whether version 22.0 will accept the block as valid -- the code's likely to have changed substantially inbetween, and unintentional bugs may have been introduced, so if you really want to be sure both versions give the same answer, you have to validate using both versions anyway.\r\n\r\n(A big difference between an exception for a single block and excepting the entirety of history is that it makes it much harder to use the real blockchain as a regression test for the current code; so I don't agree with generalising \"we wouldn't hardcode assumevalid\" to \"we shouldn't hardcode any block\" follows)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024281408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1024288538,
      "node_id": "IC_kwDOABII5849DWca",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024288538",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:42:55Z",
      "updated_at": "2022-01-28T14:42:55Z",
      "author_association": "MEMBER",
      "body": "We can always switch to the flatter `std::set` approach later when the next deployment is backdated to genesis, but right now it seems minimally more controversial and the first version of the patch perfectly achieves the primary goal of this pull request (taproot since genesis).",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024288538",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1024301523,
      "node_id": "IC_kwDOABII5849DZnT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024301523",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:57:50Z",
      "updated_at": "2022-01-28T14:57:50Z",
      "author_association": "MEMBER",
      "body": "I think you can get the best of both worlds using a map instead of a set:\r\n\r\n```diff\r\ndiff --git a/src/chainparams.cpp b/src/chainparams.cpp\r\nindex b0bded4355..5943b87f37 100644\r\n--- a/src/chainparams.cpp\r\n+++ b/src/chainparams.cpp\r\n@@ -10,6 +10,7 @@\r\n #include <deploymentinfo.h>\r\n #include <hash.h> // for signet block challenge hash\r\n #include <util/system.h>\r\n+#include <script/interpreter.h>\r\n \r\n #include <assert.h>\r\n \r\n@@ -65,8 +66,8 @@ public:\r\n         consensus.signet_blocks = false;\r\n         consensus.signet_challenge.clear();\r\n         consensus.nSubsidyHalvingInterval = 210000;\r\n-        consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\r\n-        consensus.TaprootException = uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\");\r\n+        consensus.ScriptFlagExceptions.emplace(uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\r\n+        consensus.ScriptFlagExceptions.emplace(uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\r\n         consensus.BIP34Height = 227931;\r\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\r\n         consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\r\n@@ -185,8 +186,7 @@ public:\r\n         consensus.signet_blocks = false;\r\n         consensus.signet_challenge.clear();\r\n         consensus.nSubsidyHalvingInterval = 210000;\r\n-        consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\r\n-        consensus.TaprootException = uint256::ZERO;\r\n+        consensus.ScriptFlagExceptions.emplace(uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\r\n         consensus.BIP34Height = 21111;\r\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\r\n         consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\r\n@@ -325,8 +325,6 @@ public:\r\n         consensus.signet_blocks = true;\r\n         consensus.signet_challenge.assign(bin.begin(), bin.end());\r\n         consensus.nSubsidyHalvingInterval = 210000;\r\n-        consensus.BIP16Exception = uint256{};\r\n-        consensus.TaprootException = uint256::ZERO;\r\n         consensus.BIP34Height = 1;\r\n         consensus.BIP34Hash = uint256{};\r\n         consensus.BIP65Height = 1;\r\n@@ -394,8 +392,6 @@ public:\r\n         consensus.signet_blocks = false;\r\n         consensus.signet_challenge.clear();\r\n         consensus.nSubsidyHalvingInterval = 150;\r\n-        consensus.BIP16Exception = uint256();\r\n-        consensus.TaprootException = uint256::ZERO;\r\n         consensus.BIP34Height = 1; // Always active unless overridden\r\n         consensus.BIP34Hash = uint256();\r\n         consensus.BIP65Height = 1;  // Always active unless overridden\r\ndiff --git a/src/consensus/params.h b/src/consensus/params.h\r\nindex 97e755a80b..527c5e5907 100644\r\n--- a/src/consensus/params.h\r\n+++ b/src/consensus/params.h\r\n@@ -8,6 +8,7 @@\r\n \r\n #include <uint256.h>\r\n #include <limits>\r\n+#include <map>\r\n \r\n namespace Consensus {\r\n \r\n@@ -70,10 +71,8 @@ struct BIP9Deployment {\r\n struct Params {\r\n     uint256 hashGenesisBlock;\r\n     int nSubsidyHalvingInterval;\r\n-    /* Block hash that is excepted from BIP16 enforcement, or Null if none exists */\r\n-    uint256 BIP16Exception;\r\n-    /* Block hash that is excepted from SCRIPT_VERIFY_TAPROOT enforcement, or Null if none exists */\r\n-    uint256 TaprootException;\r\n+    /* Block hashes that do not have default script flags */\r\n+    std::map<uint256,uint32_t> ScriptFlagExceptions;\r\n     /** Block height and hash at which BIP34 becomes active */\r\n     int BIP34Height;\r\n     uint256 BIP34Hash;\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex a1c5a2f286..e8cc5b2f6e 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -1581,25 +1581,11 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\r\n \r\n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\r\n {\r\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\r\n-\r\n-    // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\r\n-    // retroactively applied to testnet)\r\n-    // However, only one historical block violated the P2SH rules (on both\r\n-    // mainnet and testnet), so for simplicity, always leave P2SH\r\n-    // on except for the one violating block.\r\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\r\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\r\n-    {\r\n-        // Enforce WITNESS rules whenever P2SH is in effect\r\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\r\n-        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\r\n-        // unless except\r\n-        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\r\n-            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception\r\n-        {\r\n-            flags |= SCRIPT_VERIFY_TAPROOT;\r\n-        }\r\n+    unsigned int flags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n+\r\n+    // Some blocks are treated as exceptions and verified with a subset of the default flags above\r\n+    const auto it = consensusparams.ScriptFlagExceptions.find(*Assert(block_index.phashBlock));\r\n+    if (it != consensusparams.ScriptFlagExceptions.end()) {\r\n+        flags = it->second;\r\n     }\r\n \r\n     // Enforce the DERSIG (BIP66) rule\r\n```",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024301523",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1024322115,
      "node_id": "IC_kwDOABII5849DepD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024322115",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T15:21:00Z",
      "updated_at": "2022-01-28T15:23:41Z",
      "author_association": "MEMBER",
      "body": "I like the ScriptFlagExceptions map approach too.\r\n\r\nIn my example above I should have said \"not setting `-assumevalid`\", rather than `-assumevalid=1`, because indeed it takes a hash argument. My point being that users will probably do whatever the default is first, and then try `-assumevalid=0`. I was confused with the (proposed) `-assumeutxo`, where we don't allow a user to provide a different hash at all without recompiling.\r\n\r\n> If you want to break down what \"valid\" means, then it means \"bitcoin node version X will accept it, whatever set of parameters you use\" for various values of X; but it doesn't matter whether version X is running the same code as version Y to work that out, just whether or not they end up giving the same answer.\r\n\r\n> Likewise, even if version 2030.1 is running some block through its taproot code that doesn't necessarily tell you whether version 22.0 will accept the block as valid -- the code's likely to have changed substantially inbetween, and unintentional bugs may have been introduced, so if you really want to be sure both versions give the same answer, you have to validate using both versions anyway.\r\n\r\nI think the difference between accidental and intentional consensus changes is important though.\r\n\r\nWhen looking for accidental consensus changes you can't really avoid running multiple versions. This also applies to comparison with alternative implementations. This is what [ForkMonitor](https://forkmonitor.info/nodes/btc) does, it's constantly looking for a block that is considered valid by some nodes yet invalid by others. This type of consensus incompatibility between versions most likely shows up very quickly, not in a deeply buried block. This is because not everyone upgrades at the same time.\r\n\r\nAn intentional consensus change, e.g. where developers help themselves - or a crazy litigious evildoer - to some coins, is something else. Now exploiting the burial mechanisms probably isn't a practical attack at all, but it's still very nice if a user can ensure this didn't happen, by running just one piece of software, and reviewing one 1 set of code. This is especially relevant for a _new_ user, in case they believe millions of others conspired against him in the past :-)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024322115",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5975098927,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFkJMYv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5975098927",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-29T13:45:33Z"
    },
    {
      "event": "commented",
      "id": 1024914851,
      "node_id": "IC_kwDOABII5849FvWj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024914851",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-29T13:46:13Z",
      "updated_at": "2022-01-29T13:46:13Z",
      "author_association": "MEMBER",
      "body": "> I like the ScriptFlagExceptions map approach too.\r\n\r\nOk, going to push that soon.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1024914851",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjY2MxZTcwYjhhMTQ0MzBjYzk0MTQzZGE5NzkzNmE2MGQ2YzgzZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "tree": {
        "sha": "c28482c21587e74823811b914990558217ca3408",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c28482c21587e74823811b914990558217ca3408"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree c28482c21587e74823811b914990558217ca3408\nparent fa422994116a7a053789304d56159760081479eb\nauthor MarcoFalke <falke.marco@gmail.com> 1637070019 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1643464117 +0100\n\nEnforce Taproot script flags whenever WITNESS is set\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiamAv8CBdL4R3WZ7eHFjSOx+r88dJx9ojOmU5lw/z+WPDj/eHKGbZYXKwtqJg2\nJUu/XWyqX6MNGZXXGXAznTmUjbveUdYoEBplNG0nywx2m5mbbiNvcPJkRVGfATsM\nFOgDYMw+xoHD8yIkA4403u6yMlGMB/KGV6Xl3hravybLubcgMZwXh9iExhtdrf1d\nsnf/5aAZ3H9PHJBH1w7ksfnIKAIJ7KMmfzXFI+GxVHGa9u03Av2tOuqu9qL0+Ixb\nOVFaT91v31+7zLbM/uW9BJp+FXwFPfuoFZIOYbZd0S1/sTCJfyzDrP2iLAFAaJvB\navEr5nbD3uBACD19ZTfqJlH3XuxOQZMSRgqaSxKFODxgsArnKica0HLsKr8j2TtS\nhqaaCZS6Chr4yOypRBukYbjO5mDxC4l0H2WEv1dP54ohhpNsWBH0i4acunK6xMPM\n7an41mF0GMmHIDPmu+3SKTPVc1ZPibTe3Yt0/gBwva4fW2a3EIpmT8wdPJjLE2S0\nbBjJ2kOq\n=hiZ2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa422994116a7a053789304d56159760081479eb",
          "sha": "fa422994116a7a053789304d56159760081479eb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa422994116a7a053789304d56159760081479eb"
        }
      ],
      "message": "Enforce Taproot script flags whenever WITNESS is set",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2022-01-29T13:48:37Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-16T13:40:19Z"
      },
      "sha": "cccc1e70b8a14430cc94143da97936a60d6c83d3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5975102806,
      "node_id": "HRFPE_lADOABII584-8R4czwAAAAFkJNVW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5975102806",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-29T13:49:10Z"
    },
    {
      "event": "reviewed",
      "id": 866997750,
      "node_id": "PRR_kwDOABII584zrVX2",
      "url": null,
      "actor": null,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Currently testing cccc1e70b8a14430cc94143da97936a60d6c83d3 (so far so good with the P2SH exception, still syncing to Taproot)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-866997750",
      "submitted_at": "2022-01-29T19:28:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 1025075830,
      "node_id": "IC_kwDOABII5849GWp2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025075830",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-30T05:47:29Z",
      "updated_at": "2022-01-30T05:47:29Z",
      "author_association": "MEMBER",
      "body": "> I think the difference between accidental and intentional consensus changes is important though.\r\n\r\nI guess what I'm trying to say is that I don't think that is the difference in this case -- the set and map approaches give the same \"valid\" / \"invalid\" response to any block you might present to them, and likewise to any transaction; there's no consensus change between the two approaches, so there's nothing for the accidental/intentional distinction to apply to.\r\n\r\n> it's still very nice if a user can ensure this didn't happen, by running just one piece of software, and reviewing one 1 set of code. This is especially relevant for a _new_ user, in case they believe millions of others conspired against him in the past :-)\r\n\r\nI mean \"millions\" of users did conspire against them in the past -- they all got together to produce a consensus on who owned how much bitcoin while excluding said new user? All validating the chain can tell the new user is what, if any, rules that conspiracy might have adhered to up until now.\r\n\r\nI think as a new user of a bitcoin node, what you want is to ensure (a) you have the same chain tip as everyone else, (b) that your utxo state is the same as everyone else's, (c) that you're making the same accept/reject decisions for future blocks as everyone else, and (d) that the chain rules make sense and meet whatever your goals are. And you probably only really care about (b) as a means of achieving (c) and perhaps validating (d), eg that there's no secret stash of spendable bitcoin beyond what you expected.\r\n\r\nI think revalidating rules on known historical blocks (ie, disabling assumevalid and checking p2sh/segwit on the taproot exception block) only helps those things fairly weakly: `-assumevalid=0` checks that the current code that will run against new blocks gives the same answers as historical code when run against old blocks (which helps with (c), but in a pretty similar way to having a test suite in general does), and it tells you whether different rules were used in the past than apply now, which might cause you to question whether the current rules really do make sense, ie (d).\r\n\r\nThat doesn't really change the conclusion, though: being able to throw as much data as possible through the test suite is good, and map/BIPxxxException works better than set on that count.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1025075830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1025827270,
      "node_id": "IC_kwDOABII5849JOHG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025827270",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-31T14:49:49Z",
      "updated_at": "2022-01-31T14:49:49Z",
      "author_association": "MEMBER",
      "body": "Tested cccc1e70b8a14430cc94143da97936a60d6c83d3 for all 6 combinations. (3 chains unmodified and 3 exceptions removed)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1025827270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1026810009,
      "node_id": "IC_kwDOABII5849M-CZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1026810009",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-01T12:52:47Z",
      "updated_at": "2022-02-01T12:53:12Z",
      "author_association": "MEMBER",
      "body": "I also tested cccc1e70b8a14430cc94143da97936a60d6c83d3 on mainnet, as follows:\r\n* comment out both exception blocks\r\n* `src/bitcoind -assumevalid=0` (pro tip: `-dbcache=20000` if you have enough RAM)\r\n* wait for invalid block error for the first exception block (should be pretty quick)\r\n* uncomment first exception block, recompile, restart node\r\n* `src/bitcoin-cli reconsiderblock HASH`\r\n* wait for invalid block error for the second exception block (rinse and repeat: uncomment, recompile, reconsider block)\r\n* sync to the point Taproot activated (or just to the tip)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1026810009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "reviewed",
      "id": 872777718,
      "node_id": "PRR_kwDOABII5840BYf2",
      "url": null,
      "actor": null,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK cccc1e70b8a14430cc94143da97936a60d6c83d3 ; code review; wrote a \"getblockscriptflags\" rpc to quickly check that blocks just had bit 17 (taproot) added; review of earlier revisions had established non-exception blocks do validate with taproot rules enabled.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-872777718",
      "submitted_at": "2022-02-07T08:10:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 1044032740,
      "node_id": "IC_kwDOABII584-Oqzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1044032740",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-18T07:04:37Z",
      "updated_at": "2022-02-18T07:04:37Z",
      "author_association": "MEMBER",
      "body": "This missed the 23.0 feature freeze, but it would be good to decide if we want this for 24.0. From the previous comments it looks like three people tested the code, but I couldn't infer if the same number also reviewed the code.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1044032740",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1044417811,
      "node_id": "IC_kwDOABII584-QI0T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1044417811",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-18T12:03:57Z",
      "updated_at": "2022-02-18T12:03:57Z",
      "author_association": "MEMBER",
      "body": "v24.0 is fine\r\n\r\nI had tested the update, and reviewed the initial version, but not (as thoroughly) the update. Until now...\r\n\r\ntACK cccc1e70b8a14430cc94143da97936a60d6c83d3\r\n\r\nI would like a followup that clarifies and/or cleans up the backward compatibility tests (as promised in the comment): https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795085134",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1044417811",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "milestoned",
      "id": 6099042987,
      "node_id": "MIE_lADOABII584-8R4czwAAAAFriAKr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6099042987",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-18T13:18:55Z",
      "milestone": {
        "title": "24.0"
      }
    },
    {
      "event": "commented",
      "id": 1058782287,
      "node_id": "IC_kwDOABII584_G7xP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058782287",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T03:08:23Z",
      "updated_at": "2022-03-04T03:10:12Z",
      "author_association": "MEMBER",
      "body": "Here's the `getblockscriptflags` code I used in case anyone else wants a cheaper way of checking there aren't consensus changes compared to master than a full revalidation of the entire blockchain. Idea is that you apply this patch, startup bitcoind, save the output of getblockscriptflags, then apply the changes in this PR, restart bitcoind and check the output of getblockscriptflags hasn't changed [EDIT: err, except to add the taproot flag on all non-exception blocks]. You'll need to call the RPC at multiple heights since it only returns info for up to 20k blocks. (Note that after merging this PR, the call to GetBlockScriptFlags in rpc/blockchain.cpp will need to become `*pindex`  due to the declaration change in this PR)\r\n\r\n<details><summary>Patch below</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 7cbe7e6159..9202b671f4 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -831,6 +831,42 @@ static RPCHelpMan getblockfrompeer()\r\n     };\r\n }\r\n \r\n+std::vector<std::tuple<int, uint256, uint32_t>> Get20kBlockScriptFlags(\r\nconst CBlockIndex* pindex, const Consensus::Params& chainparams);\r\n+\r\n+static RPCHelpMan getblockscriptflags()\r\n+{\r\n+    return RPCHelpMan{\"getblockscriptflags\", \"blah\",\r\n+                {\r\n+                    {\"height\", RPCArg::Type::NUM, RPCArg::Optional::NO,\r\n \"The height index\"},\r\n+                },\r\n+                RPCResult{RPCResult::Type::ARR, \"script flags\", \"blah\",\r\n+                    {RPCResult{RPCResult::Type::STR, \"info\", \"blah\"}}},\r\n+                RPCExamples{\r\n+                    HelpExampleCli(\"getblockscriptflags\", \"1000\")\r\n+                },\r\n+                [&](const RPCHelpMan& self, const JSONRPCRequest& reque\r\nst) -> UniValue\r\n+{\r\n+    ChainstateManager& chainman = EnsureAnyChainman(request.context);\r\n+    LOCK(cs_main);\r\n+    const CChain& active_chain = chainman.ActiveChain();\r\n+\r\n+    int nHeight = request.params[0].get_int();\r\n+    if (nHeight < 0 || nHeight > active_chain.Height())\r\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Block height out of \r\nrange\");\r\n+\r\n+    CBlockIndex* blockindex = active_chain[nHeight];\r\n+\r\n+    UniValue res(UniValue::VARR);\r\n+    auto r = Get20kBlockScriptFlags(blockindex, Params().GetConsensus());\r\n+\r\n+    for (const auto& x : r) {\r\n+        res.push_back(strprintf(\"%d %08x %s\", std::get<0>(x), std::get<2>(x), std::get<1>(x).GetHex()));\r\n+    }\r\n+    return res;\r\n+},\r\n+    };\r\n+}\r\n+\r\n static RPCHelpMan getblockhash()\r\n {\r\n     return RPCHelpMan{\"getblockhash\",\r\n@@ -2839,6 +2875,7 @@ static const CRPCCommand commands[] =\r\n     { \"blockchain\",         &getblock,                           },\r\n     { \"blockchain\",         &getblockfrompeer,                   },\r\n     { \"blockchain\",         &getblockhash,                       },\r\naj@cobalt:~/P/bitcoin/bitcoin/chk/src$ git show 1d2c0e25bcf128773ade612ca068ebc4404f4a86 | cat\r\ncommit 1d2c0e25bcf128773ade612ca068ebc4404f4a86\r\nAuthor: Anthony Towns <aj@erisian.com.au>\r\nDate:   Mon Feb 7 17:33:52 2022 +1000\r\n\r\n    getblockscriptflags\r\n\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 7cbe7e6159..9202b671f4 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -831,6 +831,42 @@ static RPCHelpMan getblockfrompeer()\r\n     };\r\n }\r\n \r\n+std::vector<std::tuple<int, uint256, uint32_t>> Get20kBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& chainparams);\r\n+\r\n+static RPCHelpMan getblockscriptflags()\r\n+{\r\n+    return RPCHelpMan{\"getblockscriptflags\", \"blah\",\r\n+                {\r\n+                    {\"height\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The height index\"},\r\n+                },\r\n+                RPCResult{RPCResult::Type::ARR, \"script flags\", \"blah\",\r\n+                    {RPCResult{RPCResult::Type::STR, \"info\", \"blah\"}}},\r\n+                RPCExamples{\r\n+                    HelpExampleCli(\"getblockscriptflags\", \"1000\")\r\n+                },\r\n+                [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n+{\r\n+    ChainstateManager& chainman = EnsureAnyChainman(request.context);\r\n+    LOCK(cs_main);\r\n+    const CChain& active_chain = chainman.ActiveChain();\r\n+\r\n+    int nHeight = request.params[0].get_int();\r\n+    if (nHeight < 0 || nHeight > active_chain.Height())\r\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Block height out of range\");\r\n+\r\n+    CBlockIndex* blockindex = active_chain[nHeight];\r\n+\r\n+    UniValue res(UniValue::VARR);\r\n+    auto r = Get20kBlockScriptFlags(blockindex, Params().GetConsensus());\r\n+\r\n+    for (const auto& x : r) {\r\n+        res.push_back(strprintf(\"%d %08x %s\", std::get<0>(x), std::get<2>(x), std::get<1>(x).GetHex()));\r\n+    }\r\n+    return res;\r\n+},\r\n+    };\r\n+}\r\n+\r\n static RPCHelpMan getblockhash()\r\n {\r\n     return RPCHelpMan{\"getblockhash\",\r\n@@ -2839,6 +2875,7 @@ static const CRPCCommand commands[] =\r\n     { \"blockchain\",         &getblock,                           },\r\n     { \"blockchain\",         &getblockfrompeer,                   },\r\n     { \"blockchain\",         &getblockhash,                       },\r\n+    { \"blockchain\",         &getblockscriptflags,                },\r\n     { \"blockchain\",         &getblockheader,                     },\r\n     { \"blockchain\",         &getchaintips,                       },\r\n     { \"blockchain\",         &getdifficulty,                      },\r\ndiff --git a/src/rpc/client.cpp b/src/rpc/client.cpp\r\nindex c480a093a4..a614c3228f 100644\r\n--- a/src/rpc/client.cpp\r\n+++ b/src/rpc/client.cpp\r\n@@ -62,6 +62,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\r\n     { \"getbalance\", 3, \"avoid_reuse\" },\r\n     { \"getblockfrompeer\", 1, \"peer_id\" },\r\n     { \"getblockhash\", 0, \"height\" },\r\n+    { \"getblockscriptflags\", 0, \"height\" },\r\n     { \"waitforblockheight\", 0, \"height\" },\r\n     { \"waitforblockheight\", 1, \"timeout\" },\r\n     { \"waitforblock\", 1, \"timeout\" },\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex c12dc9e8b6..ae693c26fc 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -285,6 +285,18 @@ bool CheckSequenceLocks(CBlockIndex* tip,\r\n // Returns the script flags which should be checked for a given block\r\n static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& chainparams);\r\n \r\n+std::vector<std::tuple<int, uint256, uint32_t>> Get20kBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& chainparams)\r\n+{\r\n+    std::vector<std::tuple<int, uint256, uint32_t>> r;\r\n+    int c = 20000;\r\n+    while (c > 0 && pindex != nullptr) {\r\n+        r.emplace_back(pindex->nHeight, *pindex->phashBlock, GetBlockScriptFlags(pindex, chainparams));\r\n+        --c;\r\n+        pindex = pindex->pprev;\r\n+    }\r\n+    return r;\r\n+}\r\n+\r\n static void LimitMempoolSize(CTxMemPool& pool, CCoinsViewCache& coins_cache, size_t limit, std::chrono::seconds age)\r\n     EXCLUSIVE_LOCKS_REQUIRED(pool.cs, ::cs_main)\r\n {\r\n```\r\n</details>",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1058782287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "reviewed",
      "id": 905402394,
      "node_id": "PRR_kwDOABII584191ga",
      "url": null,
      "actor": null,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-905402394",
      "submitted_at": "2022-03-10T07:16:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "reviewed",
      "id": 905965802,
      "node_id": "PRR_kwDOABII5841__Dq",
      "url": null,
      "actor": null,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK cccc1e70b8a14430cc94143da97936a60d6c83d3 ([`jamesob/ackr/23536.1.MarcoFalke.enforce_taproot_script_f`](https://github.com/jamesob/bitcoin/tree/ackr/23536.1.MarcoFalke.enforce_taproot_script_f))\r\n\r\nBuilt and reviewed each commit locally. I haven't done testing that's as material as @Sjors and @ajtowns (nice work guys), but I have convinced myself that the code works as intended. `script_flag_exceptions` is a big improvement on the previous `BIP16Exception`-style approach.\r\n\r\nThe test changes are a bit more opaque to me as I haven't read through the taproot functional tests before.\r\n\r\n<details><summary>Show signature data</summary>\r\n<p>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK cccc1e70b8a14430cc94143da97936a60d6c83d3 ([`jamesob/ackr/23536.1.MarcoFalke.enforce_taproot_script_f`](https://github.com/jamesob/bitcoin/tree/ackr/23536.1.MarcoFalke.enforce_taproot_script_f))\r\n\r\nBuilt and reviewed each commit locally. I haven't done testing that's as material as @Sjors and @ajtowns (nice work guys), but I have convinced myself that the code works as intended. `script_flag_exceptions` is a big improvement on the previous `BIP16Exception`-style approach.\r\n\r\nThe test changes are a bit more opaque to me as I haven't read through the taproot functional tests before.\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmIqEgsACgkQepNdrbLE\r\nTwWjag/+Oqnptx0jUlbCLHA6N/w7wJM8WOtkCDkKCMGLIzeRtpoxcwNNQQo9vYC/\r\nQcRwmpbVQHCaAYn3UMNTgvVgIWIk+ONFprIb/mL+Xt0+XkEx+sBPeDbvyrHm269/\r\nYvi11FrlbuN5mSsah7YTh/gBSm6uY1o8vyL6qpTfBG6+4yxjDAOUwDUXowVQZFI0\r\n7id7AAyzo1Nv0s0dpUarQutqxWuxrp99FTxDG6Ru2zI4kqpSvGSXP+JnK0UkoTNJ\r\nfeGlZy9zSxfZT+I70bFDYjYNUytZ8H5DnUN9YoQIDlVR6YzKNNbCEkKgxyKQdPW0\r\nSFMmSECL+RA8jh96dk9zCvpbbMcrgemQPXTb+E10ATa6IsLf65BEerqybd8DIHNG\r\nGiaV6iQKMCJk1QbjWAs51O3/3ayvEQqhr2QIhTc5l82xTtqBs7qoZvK4uOoO+IL/\r\nB/RC4t+6GKJ1VA5Z1nfWscJpw2gu8Q/mz9inUmfwOpOjGCxe7k9IHKuTFVzytpip\r\nQC9F6M2m8YJcL7XP1tkEkuDyKqUdkOtvghTbilpc9CrqQA2QvUtL4OQFrLV0GUIF\r\nkNxN/bgyIWFywrTRMj1rKsFr6ETox5WWkR61wXEH0WDtzyRsiyE7+8s8+PpfLprR\r\nqfFoMOG4MLb9EN2ckD9Iz6r5z9EIQLqR+OCuEHTsDJ5KDv5dv4w=\r\n=29PR\r\n-----END PGP SIGNATURE-----\r\n\r\n```\r\n\r\n</p></details>\r\n\r\n<details><summary>Show platform data</summary>\r\n<p>\r\n\r\n```\r\nTested on Linux-5.10.0-11-amd64-x86_64-with-glibc2.31\r\n\r\nConfigured with ./configure LDFLAGS=-L/home/james/src/bitcoin/db4/lib/ CPPFLAGS=-I/home/james/src/bitcoin/db4/include/ CXXFLAGS=-fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis --enable-wallet --enable-debug --with-daemon --enable-natpmp-default CXX=/usr/local/bin/clang++ CC=/usr/local/bin/clang --disable-shared --with-pic --enable-benchmark=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental --no-create --no-recursion\r\n\r\nCompiled with /usr/bin/ccache /usr/local/bin/clang++ -std=c++17 -mavx -mavx2 -mpclmul -fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare -Wsign-compare -Werror=thread-safety-analysis -O0 -g3 -ftrapv -fdebug-prefix-map=$(abs_top_srcdir)=.  -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection -msse4 -msha -msse4.1 -msse4.2  i\r\n\r\nCompiler version: Debian clang version 13.0.1-++20220126092033+75e33f71c2da-1~exp1~20220126212112.63\r\n```\r\n\r\n</p></details>\r\n\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#pullrequestreview-905965802",
      "submitted_at": "2022-03-10T14:59:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
    },
    {
      "event": "commented",
      "id": 1069395894,
      "node_id": "IC_kwDOABII584_va-2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069395894",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-16T17:50:52Z",
      "updated_at": "2022-03-16T17:50:52Z",
      "author_association": "MEMBER",
      "body": "ACK cccc1e70b8a14430cc94143da97936a60d6c83d3\r\n\r\nReviewed the code and did a full chain revalidation.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1069395894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "commented",
      "id": 1078950711,
      "node_id": "IC_kwDOABII585AT3s3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078950711",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T11:45:20Z",
      "updated_at": "2022-03-25T11:45:20Z",
      "author_association": "MEMBER",
      "body": "Code review ACK cccc1e70b8a14430cc94143da97936a60d6c83d3\r\nI like the generalization of `BIP16Exception` to `script_flag_exceptions`.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-1078950711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23536"
    },
    {
      "event": "merged",
      "id": 6307198126,
      "node_id": "ME_lADOABII584-8R4czwAAAAF38DSu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6307198126",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7c08d81e119570792648fe95bbacddbb1d5f9ae2",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c08d81e119570792648fe95bbacddbb1d5f9ae2",
      "created_at": "2022-03-25T13:12:03Z"
    },
    {
      "event": "closed",
      "id": 6307198155,
      "node_id": "CE_lADOABII584-8R4czwAAAAF38DTL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6307198155",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T13:12:04Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 6308097738,
      "node_id": "HRDE_lADOABII584-8R4czwAAAAF3_e7K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6308097738",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T15:22:54Z"
    },
    {
      "event": "referenced",
      "id": 6357122016,
      "node_id": "REFE_lADOABII584-8R4czwAAAAF66fvg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6357122016",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d6124fdf802635243dbbf69b50f2636d235b6bc",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/9d6124fdf802635243dbbf69b50f2636d235b6bc",
      "created_at": "2022-04-02T16:12:42Z"
    },
    {
      "event": "locked",
      "id": 8904219694,
      "node_id": "LOE_lADOABII584-8R4czwAAAAISu5wu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8904219694",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-01T14:41:14Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752578924",
      "pull_request_review_id": 810389033,
      "id": 752578924,
      "node_id": "PRRC_kwDOABII584s23Fs",
      "diff_hunk": "@@ -1595,6 +1595,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (!consensusparams.TaprootException.has_value() ||          // no Taproot exception on this chain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can just be `!consensusparams.TaprootException` (https://en.cppreference.com/w/cpp/utility/optional/operator_bool).",
      "created_at": "2021-11-18T19:53:39Z",
      "updated_at": "2021-11-18T19:53:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r752578924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752578924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1600,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754213377",
      "pull_request_review_id": 812456488,
      "id": 754213377,
      "node_id": "PRRC_kwDOABII584s9GIB",
      "diff_hunk": "@@ -1171,13 +1171,9 @@ def spenders_taproot_inactive():\n \n     # Test that keypath spending is valid & non-standard, regardless of validity.",
      "path": "test/functional/feature_taproot.py",
      "position": null,
      "original_position": 2,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Needs to drop \"regardless of validity\" (except for scriptpath_invalid_unkleaf)",
      "created_at": "2021-11-22T12:13:12Z",
      "updated_at": "2021-11-22T14:03:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r754213377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754213377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754329694",
      "pull_request_review_id": 812604663,
      "id": 754329694,
      "node_id": "PRRC_kwDOABII584s9ihe",
      "diff_hunk": "@@ -1171,13 +1171,9 @@ def spenders_taproot_inactive():\n \n     # Test that keypath spending is valid & non-standard, regardless of validity.",
      "path": "test/functional/feature_taproot.py",
      "position": null,
      "original_position": 2,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "in_reply_to_id": 754213377,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point. I'll fix the comment on the next force push with any other nits, if there are any. The force push is currently scheduled to happen after #23512 is merged.",
      "created_at": "2021-11-22T14:28:53Z",
      "updated_at": "2021-11-22T14:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r754329694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754329694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754329775",
      "pull_request_review_id": 812604786,
      "id": 754329775,
      "node_id": "PRRC_kwDOABII584s9iiv",
      "diff_hunk": "@@ -1595,6 +1595,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (!consensusparams.TaprootException.has_value() ||          // no Taproot exception on this chain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "in_reply_to_id": 752578924,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason to prefer one over the other?",
      "created_at": "2021-11-22T14:28:59Z",
      "updated_at": "2021-11-22T14:28:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r754329775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754329775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1600,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/756766033",
      "pull_request_review_id": 815820156,
      "id": 756766033,
      "node_id": "PRRC_kwDOABII584tG1VR",
      "diff_hunk": "@@ -1595,6 +1595,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (!consensusparams.TaprootException.has_value() ||          // no Taproot exception on this chain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "in_reply_to_id": 752578924,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Gone",
      "created_at": "2021-11-25T10:34:19Z",
      "updated_at": "2021-11-25T10:34:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r756766033",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/756766033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1600,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/756766215",
      "pull_request_review_id": 815820416,
      "id": 756766215,
      "node_id": "PRRC_kwDOABII584tG1YH",
      "diff_hunk": "@@ -1171,13 +1171,9 @@ def spenders_taproot_inactive():\n \n     # Test that keypath spending is valid & non-standard, regardless of validity.",
      "path": "test/functional/feature_taproot.py",
      "position": null,
      "original_position": 2,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa75e6e79a1635480786a8a001d2ebff07e8bc8d",
      "in_reply_to_id": 754213377,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reworked test",
      "created_at": "2021-11-25T10:34:32Z",
      "updated_at": "2021-11-25T10:34:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r756766215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/756766215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757058717",
      "pull_request_review_id": 816212023,
      "id": 757058717,
      "node_id": "PRRC_kwDOABII584tH8yd",
      "diff_hunk": "@@ -7,6 +7,7 @@\n #define BITCOIN_CONSENSUS_PARAMS_H\n \n #include <uint256.h>\n+",
      "path": "src/consensus/params.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa386f6a27968cce94b03a8c5317dbc1c6707ffb",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit",
      "created_at": "2021-11-25T17:29:33Z",
      "updated_at": "2021-11-25T17:29:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r757058717",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757058717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757060366",
      "pull_request_review_id": 816214077,
      "id": 757060366,
      "node_id": "PRRC_kwDOABII584tH9MO",
      "diff_hunk": "@@ -7,6 +7,7 @@\n #define BITCOIN_CONSENSUS_PARAMS_H\n \n #include <uint256.h>\n+",
      "path": "src/consensus/params.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa386f6a27968cce94b03a8c5317dbc1c6707ffb",
      "in_reply_to_id": 757058717,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, there should be a newline between project-internal includes and project-external ones.",
      "created_at": "2021-11-25T17:33:22Z",
      "updated_at": "2021-11-25T17:33:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r757060366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757060366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759421087",
      "pull_request_review_id": 819227521,
      "id": 759421087,
      "node_id": "PRRC_kwDOABII584tQ9if",
      "diff_hunk": "@@ -7,6 +7,7 @@\n #define BITCOIN_CONSENSUS_PARAMS_H\n \n #include <uint256.h>\n+",
      "path": "src/consensus/params.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa386f6a27968cce94b03a8c5317dbc1c6707ffb",
      "in_reply_to_id": 757058717,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Force pushed to remove the nit-fix, since it is being fixed in another pull already.",
      "created_at": "2021-11-30T15:55:55Z",
      "updated_at": "2021-11-30T15:55:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759421087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759421087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759867187",
      "pull_request_review_id": 819822628,
      "id": 759867187,
      "node_id": "PRRC_kwDOABII584tSqcz",
      "diff_hunk": "@@ -1589,43 +1589,42 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     // mainnet and testnet), so for simplicity, always leave P2SH\n     // on except for the one violating block.\n     if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        pindex->phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *pindex->phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n+        block_index.phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n+        *block_index.phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe clarify this into `*(block_index.phashBlock)`?\r\n\r\nI tested that this indeed syncs past the `BIP16Exception` block, and that - conversely - chaning the exception block to a non-existing block causes a failure at height 170,060.",
      "created_at": "2021-12-01T05:36:58Z",
      "updated_at": "2021-12-01T07:16:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759867187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759867187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759869636",
      "pull_request_review_id": 819822628,
      "id": 759869636,
      "node_id": "PRRC_kwDOABII584tSrDE",
      "diff_hunk": "@@ -939,7 +939,7 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     // There is a similar check in CreateNewBlock() to prevent creating\n     // invalid blocks (using TestBlockValidity), however allowing such\n     // transactions into the mempool can be exploited as a DoS attack.\n-    unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus());\n+    unsigned int currentBlockScriptVerifyFlags{GetBlockScriptFlags(*m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus())};",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`CChain` does not guarantee that `Tip() != nullptr`. Maybe add an assert as well as a comment for why it's safe to assume in this context `Tip()` exists?",
      "created_at": "2021-12-01T05:43:43Z",
      "updated_at": "2021-12-01T07:16:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759869636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759869636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": 942,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759901567",
      "pull_request_review_id": 819822628,
      "id": 759901567,
      "node_id": "PRRC_kwDOABII584tSy1_",
      "diff_hunk": "@@ -1589,8 +1589,7 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     // mainnet and testnet), so for simplicity, always leave P2SH\n     // on except for the one violating block.\n     if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        block_index.phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *block_index.phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n+        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa65b65821add01e28118899d4f2eef98aa4c37a",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems more readable to me to move this assert into the main function body. On mainnet this doesn't change anything, and I checked that it doesn't break any tests.",
      "created_at": "2021-12-01T06:57:04Z",
      "updated_at": "2021-12-01T07:16:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759901567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759901567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759909651",
      "pull_request_review_id": 819822628,
      "id": 759909651,
      "node_id": "PRRC_kwDOABII584tS00T",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (!consensusparams.TaprootException.IsNull() ||                        // no Taproot exception on this chain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa3335bcc143beb7585ebf8c01c028b1762fd77a",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Did you mean to drop the `!`?",
      "created_at": "2021-12-01T07:13:46Z",
      "updated_at": "2021-12-01T07:16:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759909651",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759909651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759922281",
      "pull_request_review_id": 819894611,
      "id": 759922281,
      "node_id": "PRRC_kwDOABII584tS35p",
      "diff_hunk": "@@ -939,7 +939,7 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     // There is a similar check in CreateNewBlock() to prevent creating\n     // invalid blocks (using TestBlockValidity), however allowing such\n     // transactions into the mempool can be exploited as a DoS attack.\n-    unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus());\n+    unsigned int currentBlockScriptVerifyFlags{GetBlockScriptFlags(*m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus())};",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": 759869636,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems unrelated to the changes here? Generally, it is not possible to run a mempool without a chainstate or a chainstate without genesis block (i.e. no tip). If the assert is added, I recommend doing it in `PreChecks`, not in the checks that are done last. You may review https://github.com/bitcoin/bitcoin/pull/23630 which adds the assert.",
      "created_at": "2021-12-01T07:37:37Z",
      "updated_at": "2021-12-01T07:37:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759922281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759922281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": 942,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759922965",
      "pull_request_review_id": 819895571,
      "id": 759922965,
      "node_id": "PRRC_kwDOABII584tS4EV",
      "diff_hunk": "@@ -1589,43 +1589,42 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     // mainnet and testnet), so for simplicity, always leave P2SH\n     // on except for the one violating block.\n     if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        pindex->phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *pindex->phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n+        block_index.phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n+        *block_index.phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": 759867187,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a later commit this will change to `*Assert(block_index.phashBlock)`, so I think there is nothing left to do here?",
      "created_at": "2021-12-01T07:38:51Z",
      "updated_at": "2021-12-01T07:38:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759922965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759922965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759923681",
      "pull_request_review_id": 819896474,
      "id": 759923681,
      "node_id": "PRRC_kwDOABII584tS4Ph",
      "diff_hunk": "@@ -1589,8 +1589,7 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     // mainnet and testnet), so for simplicity, always leave P2SH\n     // on except for the one violating block.\n     if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        block_index.phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *block_index.phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n+        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa65b65821add01e28118899d4f2eef98aa4c37a",
      "in_reply_to_id": 759901567,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the main function already has the assert: https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979381311\r\n\r\nThis is just another belt-and-suspenders assert.",
      "created_at": "2021-12-01T07:40:09Z",
      "updated_at": "2021-12-01T07:40:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759923681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759923681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759927632",
      "pull_request_review_id": 819901716,
      "id": 759927632,
      "node_id": "PRRC_kwDOABII584tS5NQ",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (!consensusparams.TaprootException.IsNull() ||                        // no Taproot exception on this chain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa3335bcc143beb7585ebf8c01c028b1762fd77a",
      "in_reply_to_id": 759909651,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yes, good catch!\r\n\r\nMaybe my preference would be to drop the `IsNull` check and purely rely on the the actual comparison, which is already sufficient and necessary. ",
      "created_at": "2021-12-01T07:47:04Z",
      "updated_at": "2021-12-01T07:47:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759927632",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759927632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760107438",
      "pull_request_review_id": 820150002,
      "id": 760107438,
      "node_id": "PRRC_kwDOABII584tTlGu",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (!consensusparams.TaprootException.IsNull() ||                        // no Taproot exception on this chain",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa3335bcc143beb7585ebf8c01c028b1762fd77a",
      "in_reply_to_id": 759909651,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's nice for it to be identifcal to the BIP16 check, which made this mistake easier to see. It's also probably more similar to what future code will look like that has to handle multiple blocks.",
      "created_at": "2021-12-01T11:45:06Z",
      "updated_at": "2021-12-01T11:45:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r760107438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760107438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760108768",
      "pull_request_review_id": 820151768,
      "id": 760108768,
      "node_id": "PRRC_kwDOABII584tTlbg",
      "diff_hunk": "@@ -939,7 +939,7 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     // There is a similar check in CreateNewBlock() to prevent creating\n     // invalid blocks (using TestBlockValidity), however allowing such\n     // transactions into the mempool can be exploited as a DoS attack.\n-    unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus());\n+    unsigned int currentBlockScriptVerifyFlags{GetBlockScriptFlags(*m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus())};",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": 759869636,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's in reference to the `*` which dereferences `Tip()`",
      "created_at": "2021-12-01T11:47:00Z",
      "updated_at": "2021-12-01T11:47:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r760108768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760108768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": 942,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760109311",
      "pull_request_review_id": 820152470,
      "id": 760109311,
      "node_id": "PRRC_kwDOABII584tTlj_",
      "diff_hunk": "@@ -1589,43 +1589,42 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     // mainnet and testnet), so for simplicity, always leave P2SH\n     // on except for the one violating block.\n     if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        pindex->phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *pindex->phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n+        block_index.phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n+        *block_index.phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": 759867187,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Assuming that `Assert()` stays where it is, then indeed it already has the brackets.",
      "created_at": "2021-12-01T11:47:45Z",
      "updated_at": "2021-12-01T11:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r760109311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760109311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760111690",
      "pull_request_review_id": 820155695,
      "id": 760111690,
      "node_id": "PRRC_kwDOABII584tTmJK",
      "diff_hunk": "@@ -939,7 +939,7 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     // There is a similar check in CreateNewBlock() to prevent creating\n     // invalid blocks (using TestBlockValidity), however allowing such\n     // transactions into the mempool can be exploited as a DoS attack.\n-    unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus());\n+    unsigned int currentBlockScriptVerifyFlags{GetBlockScriptFlags(*m_active_chainstate.m_chain.Tip(), chainparams.GetConsensus())};",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa5fb6f2f2eca7d4c011ae33d42b4f01c559644f",
      "in_reply_to_id": 759869636,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, the first time that `Tip` is dereferenced is in `if (!CheckFinalTx(m_active_chainstate.m_chain.Tip()` in `PreChecks`.\r\n\r\nThe function actually has the assert you are asking for:\r\n\r\n```cpp\r\n    assert(active_chain_tip); // TODO: Make active_chain_tip a reference\r\n",
      "created_at": "2021-12-01T11:51:13Z",
      "updated_at": "2021-12-01T11:51:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r760111690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760111690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": 942,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764540108",
      "pull_request_review_id": 825997633,
      "id": 764540108,
      "node_id": "PRRC_kwDOABII584tkfTM",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Arguably it would also be correct to write this as:\r\n\r\n```c++\r\nconst auto& h = *Assert(block_index.phashBlock);\r\nif (h.IsNull() || (h != BIP16Exception && h != TaprootException)) {\r\n    flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n}\r\n```\r\n\r\nsince the taproot exception block has already been validated to comply with p2sh and segwit tx rules (and the inclusion of witness data is handled via BLOCK_OPT_WITNESS elsewhere)",
      "created_at": "2021-12-08T04:27:38Z",
      "updated_at": "2021-12-08T04:47:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r764540108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764540108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764541634",
      "pull_request_review_id": 825997633,
      "id": 764541634,
      "node_id": "PRRC_kwDOABII584tkfrC",
      "diff_hunk": "@@ -1181,15 +1181,11 @@ def spenders_taproot_inactive():\n     ]\n     tap = taproot_construct(pub, scripts)\n \n-    # Test that keypath spending is valid & non-standard, regardless of validity.\n+    # Test that valid spending is standard.\n     add_spender(spenders, \"inactive/keypath_valid\", key=sec, tap=tap, standard=Standard.V23)\n-    add_spender(spenders, \"inactive/keypath_invalidsig\", key=sec, tap=tap, standard=False, sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/keypath_empty\", key=sec, tap=tap, standard=False, witness=[])\n-\n-    # Same for scriptpath spending (and features like annex, leaf versions, or OP_SUCCESS don't change this)\n     add_spender(spenders, \"inactive/scriptpath_valid\", key=sec, tap=tap, leaf=\"pk\", standard=Standard.V23, inputs=[getter(\"sign\")])\n-    add_spender(spenders, \"inactive/scriptpath_invalidsig\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/scriptpath_invalidcb\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], controlblock=bitflipper(default_controlblock))\n+\n+    # Test that features like annex, leaf versions, or OP_SUCCESS are valid but non-standard",
      "path": "test/functional/feature_taproot.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there any value to keeping any of the `inactive/` test cases? They aren't being tested with taproot inactive anymore, and the behaviour when taproot is active should already be being tested elsewhere...",
      "created_at": "2021-12-08T04:32:54Z",
      "updated_at": "2021-12-08T04:45:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r764541634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764541634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1188,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/766543278",
      "pull_request_review_id": 828716766,
      "id": 766543278,
      "node_id": "PRRC_kwDOABII584tsIWu",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems there is a typo in your idea. `h.IsNull()` should never evaluate to true. Maybe you meant to write\r\n\r\n```cpp\r\nconst auto& h = *Assert(block_index.phashBlock);\r\nif (BIP16Exception.IsNull() || TaprootException.IsNull() || (h != BIP16Exception && h != TaprootException)) {\r\n    flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n}\r\n```\r\n\r\nThough, this doesn't work, as I expect it to fail to sync testnet3.\r\n\r\nAs I mentioned earlier, just dropping the IsNull check seems simpler (https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759927632).\r\n\r\nSo your code would be \r\n\r\n```cpp\r\nconst auto& h = *Assert(block_index.phashBlock);\r\nif (h != BIP16Exception && h != TaprootException) {\r\n    flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n}\r\n```\r\n\r\nwhich should work (Haven't synced any chain with it yet). Happy to switch if reviewers think it is worth it.\r\n",
      "created_at": "2021-12-10T10:11:38Z",
      "updated_at": "2021-12-10T10:11:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r766543278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/766543278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/766569018",
      "pull_request_review_id": 828737893,
      "id": 766569018,
      "node_id": "PRRC_kwDOABII584tsOo6",
      "diff_hunk": "@@ -1181,15 +1181,11 @@ def spenders_taproot_inactive():\n     ]\n     tap = taproot_construct(pub, scripts)\n \n-    # Test that keypath spending is valid & non-standard, regardless of validity.\n+    # Test that valid spending is standard.\n     add_spender(spenders, \"inactive/keypath_valid\", key=sec, tap=tap, standard=Standard.V23)\n-    add_spender(spenders, \"inactive/keypath_invalidsig\", key=sec, tap=tap, standard=False, sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/keypath_empty\", key=sec, tap=tap, standard=False, witness=[])\n-\n-    # Same for scriptpath spending (and features like annex, leaf versions, or OP_SUCCESS don't change this)\n     add_spender(spenders, \"inactive/scriptpath_valid\", key=sec, tap=tap, leaf=\"pk\", standard=Standard.V23, inputs=[getter(\"sign\")])\n-    add_spender(spenders, \"inactive/scriptpath_invalidsig\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/scriptpath_invalidcb\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], controlblock=bitflipper(default_controlblock))\n+\n+    # Test that features like annex, leaf versions, or OP_SUCCESS are valid but non-standard",
      "path": "test/functional/feature_taproot.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764541634,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point. Currently they are used to run against previous releases, but given that the tests passed once one the previous releases (and previous releases are \"constant\"), we can probably remove this code. Happy to look into this as a follow-up unless reviewers want me to do it here.",
      "created_at": "2021-12-10T10:32:46Z",
      "updated_at": "2021-12-10T10:32:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r766569018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/766569018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1188,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771242098",
      "pull_request_review_id": 835022646,
      "id": 771242098,
      "node_id": "PRRC_kwDOABII584t-Dhy",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it's worth including in this PR -- if it's worth including at all, doing so in an eventual followup is fine.\r\n\r\nIf we're sure `h.IsNull()` is never true, then `BIP16Exception.IsNull()` implies `h != BIP16Exception` so you don't need the `IsNull` test at all. I thought it was supposed to be able to be null if you were generating a new block and trying to work out which txs you were allowed to include.\r\nThe way I'm thinking of this is:\r\n\r\n * features that will be used by many wallets (segwit, taproot, p2sh) should be \"always\" enforced if possible; this reduces the risk of bugs that might be triggered by an attacker against a node while it's doing IBD\r\n \r\n * there have to be some exceptions unfortunately, but the exceptions aren't the interesting part at all, so should be emphasising the enforcement path more than the exception logic\r\n \r\n  * since the block hash already commits to everything that goes into proving the validity, actually running the checks is only useful to validate the code hasn't changed it's behaviour, not that the block is valid or not. that is, if we ever report that the exception blocks are invalid, that's a bug in the code, not a problem with the block.\r\n\r\nMaybe a cleaner approach would be:\r\n\r\n```c++\r\n// add to Consensus::Params or CChainState\r\n// (lists the rules that *don't* apply to exception blocks)\r\nconst unordered_map<uint256, uint32_t, BlockHasher> script_verify_exception_blocks = {\r\n    { BIP16Exception, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT },\r\n    { TaprootException, SCRIPT_VERIFY_TAPROOT },\r\n};\r\n\r\n// validation:\r\nflags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n\r\nconst auto& i = script_verify_exception_blocks.find(*Assert(block_index.phashBlock))\r\nif (i != script_verify_exception_blocks.end()) {\r\n    // block is special case exception to some rules\r\n    flags &= ~(i->second);\r\n}\r\n```\r\n\r\nThen for chains where there's no exceptions, the map is just empty.",
      "created_at": "2021-12-17T09:42:50Z",
      "updated_at": "2021-12-17T09:42:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771242098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771242098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771266510",
      "pull_request_review_id": 835055671,
      "id": 771266510,
      "node_id": "PRRC_kwDOABII584t-JfO",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If we're sure h.IsNull() is never true\r\n\r\nYes, I think we can be pretty certain about this. Both call sites assume the hash of the passed block is not null:\r\n\r\nE.g.\r\n\r\n```\r\n    assert(*pindex->phashBlock == block.GetHash());\r\n```\r\n\r\nThe `IsNull` was added based on this comment: https://github.com/bitcoin/bitcoin/pull/11739#discussion_r160814301",
      "created_at": "2021-12-17T10:08:31Z",
      "updated_at": "2021-12-17T10:08:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771266510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771266510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771286156",
      "pull_request_review_id": 835080462,
      "id": 771286156,
      "node_id": "PRRC_kwDOABII584t-OSM",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Maybe a cleaner approach would be:\r\n\r\nNot sure if I like your suggestion to split \"flags math\" into two different files. This would make reading the code harder. Based on your earlier suggestion, just treating a set of block hashes as \"assumed valid\" with regard to script verification flags seems cleaner:\r\n\r\n```cpp\r\n\r\nconst std::set<uint256> script_verify_exception_blocks;\r\n\r\nconst auto& it_ex{script_verify_exception_blocks.find(*Assert(block_index.phashBlock))};\r\nif (it_ex != script_verify_exception_blocks.end()) {\r\n    flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n}",
      "created_at": "2021-12-17T10:35:15Z",
      "updated_at": "2021-12-17T10:35:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771286156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771286156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771288906",
      "pull_request_review_id": 835084469,
      "id": 771288906,
      "node_id": "PRRC_kwDOABII584t-O9K",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Putting the map in `CChainState` rather than `Consensus::Params` would allow keeping it validation rather than splitting it into validation/chainparams fwiw. Agree that your suggestion also works fine.",
      "created_at": "2021-12-17T10:39:35Z",
      "updated_at": "2021-12-17T10:39:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771288906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771288906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771376283",
      "pull_request_review_id": 835205249,
      "id": 771376283,
      "node_id": "PRRC_kwDOABII584t-kSb",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is the full diff (checked that it compiles, but didn't sync the chain). Maybe instead of a follow-up we can decide whether it is a good idea, and if yes, just push it here?\r\n\r\n\r\n```diff\r\ncommit bb064cf5ba34ac3214577a55aa40702e1dc4d19c\r\nAuthor: MarcoFalke <falke.marco@gmail.com>\r\nDate:   Fri Dec 17 13:57:39 2021 +0100\r\n\r\n    set\r\n\r\ndiff --git a/src/chainparams.cpp b/src/chainparams.cpp\r\nindex b0bded4355..a14633a80a 100644\r\n--- a/src/chainparams.cpp\r\n+++ b/src/chainparams.cpp\r\n@@ -65,8 +65,10 @@ public:\r\n         consensus.signet_blocks = false;\r\n         consensus.signet_challenge.clear();\r\n         consensus.nSubsidyHalvingInterval = 210000;\r\n-        consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\r\n-        consensus.TaprootException = uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\");\r\n+        consensus.script_verify_exception_blocks.emplace( // BIP16 exception\r\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"));\r\n+        consensus.script_verify_exception_blocks.emplace( // Taproot exception\r\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"));\r\n         consensus.BIP34Height = 227931;\r\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\r\n         consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\r\n@@ -185,8 +187,8 @@ public:\r\n         consensus.signet_blocks = false;\r\n         consensus.signet_challenge.clear();\r\n         consensus.nSubsidyHalvingInterval = 210000;\r\n-        consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\r\n-        consensus.TaprootException = uint256::ZERO;\r\n+        consensus.script_verify_exception_blocks.emplace( // BIP16 exception\r\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"));\r\n         consensus.BIP34Height = 21111;\r\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\r\n         consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\r\n@@ -325,8 +327,6 @@ public:\r\n         consensus.signet_blocks = true;\r\n         consensus.signet_challenge.assign(bin.begin(), bin.end());\r\n         consensus.nSubsidyHalvingInterval = 210000;\r\n-        consensus.BIP16Exception = uint256{};\r\n-        consensus.TaprootException = uint256::ZERO;\r\n         consensus.BIP34Height = 1;\r\n         consensus.BIP34Hash = uint256{};\r\n         consensus.BIP65Height = 1;\r\n@@ -394,8 +394,6 @@ public:\r\n         consensus.signet_blocks = false;\r\n         consensus.signet_challenge.clear();\r\n         consensus.nSubsidyHalvingInterval = 150;\r\n-        consensus.BIP16Exception = uint256();\r\n-        consensus.TaprootException = uint256::ZERO;\r\n         consensus.BIP34Height = 1; // Always active unless overridden\r\n         consensus.BIP34Hash = uint256();\r\n         consensus.BIP65Height = 1;  // Always active unless overridden\r\ndiff --git a/src/consensus/params.h b/src/consensus/params.h\r\nindex 97e755a80b..b9b9b6de78 100644\r\n--- a/src/consensus/params.h\r\n+++ b/src/consensus/params.h\r\n@@ -7,7 +7,9 @@\r\n #define BITCOIN_CONSENSUS_PARAMS_H\r\n \r\n #include <uint256.h>\r\n+\r\n #include <limits>\r\n+#include <set>\r\n \r\n namespace Consensus {\r\n \r\n@@ -70,10 +72,13 @@ struct BIP9Deployment {\r\n struct Params {\r\n     uint256 hashGenesisBlock;\r\n     int nSubsidyHalvingInterval;\r\n-    /* Block hash that is excepted from BIP16 enforcement, or Null if none exists */\r\n-    uint256 BIP16Exception;\r\n-    /* Block hash that is excepted from SCRIPT_VERIFY_TAPROOT enforcement, or Null if none exists */\r\n-    uint256 TaprootException;\r\n+    /**\r\n+     * Hashes of blocks that are\r\n+     * - known to be consensus valid, and\r\n+     * - buried in the chain, and\r\n+     * - fail if script flags from the chain tip are applied.\r\n+     */\r\n+    std::set<uint256> script_verify_exception_blocks;\r\n     /** Block height and hash at which BIP34 becomes active */\r\n     int BIP34Height;\r\n     uint256 BIP34Hash;\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex a1c5a2f286..5677ff4952 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -1586,20 +1586,15 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\r\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\r\n     // retroactively applied to testnet)\r\n     // However, only one historical block violated the P2SH rules (on both\r\n-    // mainnet and testnet), so for simplicity, always leave P2SH\r\n-    // on except for the one violating block.\r\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\r\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\r\n-    {\r\n-        // Enforce WITNESS rules whenever P2SH is in effect\r\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\r\n-        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\r\n-        // unless except\r\n-        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\r\n-            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception\r\n-        {\r\n-            flags |= SCRIPT_VERIFY_TAPROOT;\r\n-        }\r\n+    // mainnet and testnet).\r\n+    // Similarly, only one historical block violated the TAPROOT rules on\r\n+    // mainnet.\r\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\r\n+    // violating blocks.\r\n+\r\n+    const auto& it_exception{consensusparams.script_verify_exception_blocks.find(*Assert(block_index.phashBlock))};\r\n+    if (it_exception != consensusparams.script_verify_exception_blocks.end()) {\r\n+        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT;\r\n     }\r\n \r\n     // Enforce the DERSIG (BIP66) rule\r\n",
      "created_at": "2021-12-17T13:00:06Z",
      "updated_at": "2021-12-17T13:00:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771376283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771376283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771399902",
      "pull_request_review_id": 835238640,
      "id": 771399902,
      "node_id": "PRRC_kwDOABII584t-qDe",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you're using a `set` rather than a `map`, you can just say `script_verify_exception_blocks.count(...) != 0` and avoid the iterator and the `.end()` check.",
      "created_at": "2021-12-17T13:37:35Z",
      "updated_at": "2021-12-17T13:37:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r771399902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771399902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772245267",
      "pull_request_review_id": 836225070,
      "id": 772245267,
      "node_id": "PRRC_kwDOABII584uB4cT",
      "diff_hunk": "@@ -1593,6 +1593,13 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Co\n     {\n         // Enforce WITNESS rules whenever P2SH is in effect\n         flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        // Enforce Taproot (BIP340-BIP342) whenever WITNESS is in effect,\n+        // unless except\n+        if (consensusparams.TaprootException.IsNull() ||                         // no Taproot exception on this chain\n+            *Assert(block_index.phashBlock) != consensusparams.TaprootException) // this block is not the historical exception",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764540108,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, done in https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-997790605. Happy to revert to previous ACKed commit if needed.",
      "created_at": "2021-12-20T10:23:00Z",
      "updated_at": "2021-12-20T10:23:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r772245267",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772245267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1599,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795082801",
      "pull_request_review_id": 866997750,
      "id": 795082801,
      "node_id": "PRRC_kwDOABII584vZAAx",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.",
      "path": "src/validation.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n// No historical blocks violated the `WITNESS` rules on mainnet and testnet.\r\n```",
      "created_at": "2022-01-29T18:46:54Z",
      "updated_at": "2022-01-29T19:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795082801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795082801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1589,
      "original_line": 1589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795083598",
      "pull_request_review_id": 866997750,
      "id": 795083598,
      "node_id": "PRRC_kwDOABII584vZANO",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.",
      "path": "src/consensus/params.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n * We manually apply the flags that applied at the time the block was created. \r\n```",
      "created_at": "2022-01-29T18:57:38Z",
      "updated_at": "2022-01-29T19:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795083598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795083598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795083685",
      "pull_request_review_id": 866997750,
      "id": 795083685,
      "node_id": "PRRC_kwDOABII584vZAOl",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.\n+     */\n+    std::map<uint256, uint32_t> script_flag_exceptions;",
      "path": "src/consensus/params.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly confusing variable name: it suggest that the flags are expected, which might make one think that the provided flags are to be subtracted. But it's actually the blocks that are excepted from the usual flags, and we manually provide the correct flags. However I can't think of a better name atm.",
      "created_at": "2022-01-29T18:59:15Z",
      "updated_at": "2022-01-29T19:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795083685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795083685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795085134",
      "pull_request_review_id": 866997750,
      "id": 795085134,
      "node_id": "PRRC_kwDOABII584vZAlO",
      "diff_hunk": "@@ -1181,15 +1181,11 @@ def spenders_taproot_inactive():\n     ]\n     tap = taproot_construct(pub, scripts)\n \n-    # Test that keypath spending is valid & non-standard, regardless of validity.\n+    # Test that valid spending is standard.\n     add_spender(spenders, \"inactive/keypath_valid\", key=sec, tap=tap, standard=Standard.V23)\n-    add_spender(spenders, \"inactive/keypath_invalidsig\", key=sec, tap=tap, standard=False, sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/keypath_empty\", key=sec, tap=tap, standard=False, witness=[])\n-\n-    # Same for scriptpath spending (and features like annex, leaf versions, or OP_SUCCESS don't change this)\n     add_spender(spenders, \"inactive/scriptpath_valid\", key=sec, tap=tap, leaf=\"pk\", standard=Standard.V23, inputs=[getter(\"sign\")])\n-    add_spender(spenders, \"inactive/scriptpath_invalidsig\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/scriptpath_invalidcb\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], controlblock=bitflipper(default_controlblock))\n+\n+    # Test that features like annex, leaf versions, or OP_SUCCESS are valid but non-standard",
      "path": "test/functional/feature_taproot.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764541634,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm confused about what the test is doing with respect to previous releases, and wonder if the name `spenders_taproot_inactive` is still appropriate.\r\n\r\nWhen run with `--previous_release`, it runs against v0.20.1 which does not have Taproot, so that makes sense. But otherwise it sets `-vbparams=taproot:1:1`, which is a no-op as of this PR (except for the `getblockchaininfo` RPC).",
      "created_at": "2022-01-29T19:19:18Z",
      "updated_at": "2022-01-29T19:29:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795085134",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795085134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1188,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795086443",
      "pull_request_review_id": 867001523,
      "id": 795086443,
      "node_id": "PRRC_kwDOABII584vZA5r",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.\n+     */\n+    std::map<uint256, uint32_t> script_flag_exceptions;",
      "path": "src/consensus/params.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 795083685,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "script_flag_overrides_for_block",
      "created_at": "2022-01-29T19:33:30Z",
      "updated_at": "2022-01-29T19:33:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795086443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795086443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795146278",
      "pull_request_review_id": 867066713,
      "id": 795146278,
      "node_id": "PRRC_kwDOABII584vZPgm",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.",
      "path": "src/validation.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 795082801,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like a suggestion unrelated to this pull, that can be added in a separate commit or even pull request on master right now without causing a conflict here.",
      "created_at": "2022-01-30T08:28:28Z",
      "updated_at": "2022-01-30T08:28:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795146278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795146278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1589,
      "original_line": 1589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795146711",
      "pull_request_review_id": 867067079,
      "id": 795146711,
      "node_id": "PRRC_kwDOABII584vZPnX",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.",
      "path": "src/consensus/params.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 795083598,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That'd be ambiguous. You'd also have to specify that it means the flags that *this version* (the version before *this* commit) applied. Also, I don't see a downside in adding more flags on top, if it makes sense.\r\n\r\nSo I am going to leave this as-is for now. Could be improved in a follow-up, if needed.",
      "created_at": "2022-01-30T08:32:14Z",
      "updated_at": "2022-01-30T08:32:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795146711",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795146711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795146960",
      "pull_request_review_id": 867067305,
      "id": 795146960,
      "node_id": "PRRC_kwDOABII584vZPrQ",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.\n+     */\n+    std::map<uint256, uint32_t> script_flag_exceptions;",
      "path": "src/consensus/params.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 795083685,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`script_flags_exceptions` means the *default* script flags used for exception blocks. It doesn't mean the script flags of this block are overridden completely.\r\n\r\nGoing to leave this as-is for now, but a separate scripted-diff commit may change the name once one is found.",
      "created_at": "2022-01-30T08:34:46Z",
      "updated_at": "2022-01-30T08:34:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795146960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795146960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795147291",
      "pull_request_review_id": 867067611,
      "id": 795147291,
      "node_id": "PRRC_kwDOABII584vZPwb",
      "diff_hunk": "@@ -1181,15 +1181,11 @@ def spenders_taproot_inactive():\n     ]\n     tap = taproot_construct(pub, scripts)\n \n-    # Test that keypath spending is valid & non-standard, regardless of validity.\n+    # Test that valid spending is standard.\n     add_spender(spenders, \"inactive/keypath_valid\", key=sec, tap=tap, standard=Standard.V23)\n-    add_spender(spenders, \"inactive/keypath_invalidsig\", key=sec, tap=tap, standard=False, sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/keypath_empty\", key=sec, tap=tap, standard=False, witness=[])\n-\n-    # Same for scriptpath spending (and features like annex, leaf versions, or OP_SUCCESS don't change this)\n     add_spender(spenders, \"inactive/scriptpath_valid\", key=sec, tap=tap, leaf=\"pk\", standard=Standard.V23, inputs=[getter(\"sign\")])\n-    add_spender(spenders, \"inactive/scriptpath_invalidsig\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/scriptpath_invalidcb\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], controlblock=bitflipper(default_controlblock))\n+\n+    # Test that features like annex, leaf versions, or OP_SUCCESS are valid but non-standard",
      "path": "test/functional/feature_taproot.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764541634,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll rename the function name with the other test cleanups in a follow-up. I'd say we should focus on the consensus change here and leave style changes in the test for later.",
      "created_at": "2022-01-30T08:38:19Z",
      "updated_at": "2022-01-30T08:38:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795147291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795147291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1188,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795206233",
      "pull_request_review_id": 867138452,
      "id": 795206233,
      "node_id": "PRRC_kwDOABII584vZeJZ",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.",
      "path": "src/consensus/params.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 795083598,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought about suggesting to add the WITNESS flag to the P2SH block, but decided that would just be confusing. And I'm not even sure if it's sane, because part of SegWit uses P2SH.",
      "created_at": "2022-01-30T15:53:25Z",
      "updated_at": "2022-01-30T15:53:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795206233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795206233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795206334",
      "pull_request_review_id": 867138550,
      "id": 795206334,
      "node_id": "PRRC_kwDOABII584vZeK-",
      "diff_hunk": "@@ -70,8 +72,13 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /* Block hash that is excepted from BIP16 enforcement */\n-    uint256 BIP16Exception;\n+    /**\n+     * Hashes of blocks that\n+     * - are known to be consensus valid, and\n+     * - buried in the chain, and\n+     * - fail if the default script verify flags are applied.\n+     */\n+    std::map<uint256, uint32_t> script_flag_exceptions;",
      "path": "src/consensus/params.h",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 795083685,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`exception_block_script_flags` is what came to me in a dream. But yes, not worth touching now.",
      "created_at": "2022-01-30T15:54:20Z",
      "updated_at": "2022-01-30T15:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r795206334",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/795206334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/799244656",
      "pull_request_review_id": 872777718,
      "id": 799244656,
      "node_id": "PRRC_kwDOABII584vo4Fw",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};\n+    const auto it{consensusparams.script_flag_exceptions.find(*Assert(block_index.phashBlock))};",
      "path": "src/validation.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This would be more efficient if `script_flag_exceptions` were `std::unordered_map<int, std::pair<uint256, uint32_t>>` -- that is if it mapped a height to its hash and script flags; then you're only looking up a hash table, rather than doing uint256 comparisons to search through a tree; you only look at the block hash when you're at the actual height.\r\n\r\nCode changes would look something like:\r\n\r\n```c++\r\n    std::unordered_map<int, std::pair<uint256, uint32_t>> script_flag_exceptions;\r\n\r\n    consensus.script_flag_exceptions.try_emplace( // BIP16 exception\r\n        170060, uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\r\n\r\n    const auto it{consensusparams.script_flag_exceptions.find(block_index.nHeight)};\r\n    if (it != consensusparams.script_flag_exceptions.end() && *Assert(block_index.phashBlock) == it->second.first) {\r\n        flags = it->second.second;\r\n    }\r\n```",
      "created_at": "2022-02-04T08:14:24Z",
      "updated_at": "2022-02-07T08:10:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r799244656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/799244656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1593,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/800408560",
      "pull_request_review_id": 874319779,
      "id": 800408560,
      "node_id": "PRRC_kwDOABII584vtUPw",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};\n+    const auto it{consensusparams.script_flag_exceptions.find(*Assert(block_index.phashBlock))};",
      "path": "src/validation.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 799244656,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, will leave that for a follow up, because:\r\n* comparison is already used in current master.\r\n* I don't expect any speedup, since calculating the block hash is far more expensive than one (to currently two) comparisons.",
      "created_at": "2022-02-07T08:25:46Z",
      "updated_at": "2022-02-07T08:25:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r800408560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/800408560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1593,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/800467009",
      "pull_request_review_id": 874403866,
      "id": 800467009,
      "node_id": "PRRC_kwDOABII584vtihB",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};\n+    const auto it{consensusparams.script_flag_exceptions.find(*Assert(block_index.phashBlock))};",
      "path": "src/validation.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 799244656,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Having the height in either the code or a comment would be nice too, but I agree it can wait, and could use a bench.",
      "created_at": "2022-02-07T09:34:52Z",
      "updated_at": "2022-02-07T09:34:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r800467009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/800467009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1593,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/800885089",
      "pull_request_review_id": 875008975,
      "id": 800885089,
      "node_id": "PRRC_kwDOABII584vvIlh",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};\n+    const auto it{consensusparams.script_flag_exceptions.find(*Assert(block_index.phashBlock))};",
      "path": "src/validation.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 799244656,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i would also suggest binary searching a sorted prevector<std::pair<uint256, uint23>, N> since that will have much superior cache locality on the search, probably better than map/unordered_map.",
      "created_at": "2022-02-07T17:21:05Z",
      "updated_at": "2022-02-07T17:21:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r800885089",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/800885089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1593,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801400488",
      "pull_request_review_id": 875704182,
      "id": 801400488,
      "node_id": "PRRC_kwDOABII584vxGao",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};\n+    const auto it{consensusparams.script_flag_exceptions.find(*Assert(block_index.phashBlock))};",
      "path": "src/validation.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 799244656,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, leaving for a follow-up.\r\n\r\nI'd be shocked to see any real-world (IBD) performance difference due to less comparisons or \"superior cache locality\", as I expect calculating the hash of the block is far more expensive than everything combined in this method. Fun fact: We currently calculate the block hash at least twice for no reason, so a better way to improve performance would be to review (or benchmark) https://github.com/bitcoin/bitcoin/pull/23819.",
      "created_at": "2022-02-08T09:01:45Z",
      "updated_at": "2022-02-08T09:01:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r801400488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/801400488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1593,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823409659",
      "pull_request_review_id": 905402394,
      "id": 823409659,
      "node_id": "PRRC_kwDOABII584xFDv7",
      "diff_hunk": "@@ -1579,53 +1579,46 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n \n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_main);\n \n-static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& consensusparams)\n+static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        pindex->phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *pindex->phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};",
      "path": "src/validation.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should `MANDATORY_SCRIPT_VERIFY_FLAGS` from script/standard.h (#3843) match the values here? The description of that constant seems mostly applicable, but it doesn't seem to have been updated for any of the post-P2SH forks.",
      "created_at": "2022-03-10T07:16:40Z",
      "updated_at": "2022-03-10T07:16:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r823409659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823409659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1592,
      "original_line": 1592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823412776",
      "pull_request_review_id": 905407013,
      "id": 823412776,
      "node_id": "PRRC_kwDOABII584xFEgo",
      "diff_hunk": "@@ -1579,53 +1579,46 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n \n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_main);\n \n-static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& consensusparams)\n+static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        pindex->phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n-        *pindex->phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};",
      "path": "src/validation.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 823409659,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The goal of this pull request is to change the block verify flags (consensus). I recommend creating a separate brainstorming issue (or pull) to discuss policy and p2p changes.",
      "created_at": "2022-03-10T07:22:14Z",
      "updated_at": "2022-03-10T07:22:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r823412776",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823412776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1592,
      "original_line": 1592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835254648",
      "pull_request_review_id": 921621375,
      "id": 835254648,
      "node_id": "PRRC_kwDOABII584xyPl4",
      "diff_hunk": "@@ -1581,18 +1581,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS] GUARDED_BY(cs_\n \n static unsigned int GetBlockScriptFlags(const CBlockIndex& block_index, const Consensus::Params& consensusparams)\n {\n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n-\n     // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n     // retroactively applied to testnet)\n     // However, only one historical block violated the P2SH rules (on both\n-    // mainnet and testnet), so for simplicity, always leave P2SH\n-    // on except for the one violating block.\n-    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n-        *Assert(block_index.phashBlock) != consensusparams.BIP16Exception) // this block isn't the historical exception\n-    {\n-        // Enforce WITNESS rules whenever P2SH is in effect\n-        flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+    // mainnet and testnet).\n+    // Similarly, only one historical block violated the TAPROOT rules on\n+    // mainnet.\n+    // For simplicity, always leave P2SH+WITNESS+TAPROOT on except for the two\n+    // violating blocks.\n+    uint32_t flags{SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_TAPROOT};\n+    const auto it{consensusparams.script_flag_exceptions.find(*Assert(block_index.phashBlock))};",
      "path": "src/validation.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "in_reply_to_id": 799244656,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I think micro-optimizing the data structure used to store two items is a waste of time. Binary search or linear search in particular will make no difference.",
      "created_at": "2022-03-25T13:10:08Z",
      "updated_at": "2022-03-25T13:10:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r835254648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/835254648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1593,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840537383",
      "pull_request_review_id": 928855731,
      "id": 840537383,
      "node_id": "PRRC_kwDOABII584yGZUn",
      "diff_hunk": "@@ -1181,15 +1181,11 @@ def spenders_taproot_inactive():\n     ]\n     tap = taproot_construct(pub, scripts)\n \n-    # Test that keypath spending is valid & non-standard, regardless of validity.\n+    # Test that valid spending is standard.\n     add_spender(spenders, \"inactive/keypath_valid\", key=sec, tap=tap, standard=Standard.V23)\n-    add_spender(spenders, \"inactive/keypath_invalidsig\", key=sec, tap=tap, standard=False, sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/keypath_empty\", key=sec, tap=tap, standard=False, witness=[])\n-\n-    # Same for scriptpath spending (and features like annex, leaf versions, or OP_SUCCESS don't change this)\n     add_spender(spenders, \"inactive/scriptpath_valid\", key=sec, tap=tap, leaf=\"pk\", standard=Standard.V23, inputs=[getter(\"sign\")])\n-    add_spender(spenders, \"inactive/scriptpath_invalidsig\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n-    add_spender(spenders, \"inactive/scriptpath_invalidcb\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], controlblock=bitflipper(default_controlblock))\n+\n+    # Test that features like annex, leaf versions, or OP_SUCCESS are valid but non-standard",
      "path": "test/functional/feature_taproot.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "cccc1e70b8a14430cc94143da97936a60d6c83d3",
      "original_commit_id": "fa9a4d103ff673724dfeb53b10a2707a81539d68",
      "in_reply_to_id": 764541634,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renamed the function (among other cleanup) in https://github.com/bitcoin/bitcoin/pull/24737",
      "created_at": "2022-04-01T12:28:11Z",
      "updated_at": "2022-04-01T12:28:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23536#discussion_r840537383",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840537383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23536"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1188,
      "original_line": 1188,
      "side": "RIGHT"
    }
  ]
}