{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937",
    "id": 207621871,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NjIxODcx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13937",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/13937.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/13937.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
    "number": 13937,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Track best-possible-headers (TheBlueMatt)",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rebase of #12138:\r\n\r\n> This adds a `setBlockIndexHeaderCandidates` which mimics `setBlockIndexCandidates` and is\r\nThe set of all leaf `CBlockIndex` entries with` BLOCK_VALID_TREE` (for itself and all ancestors) and\r\nas good as our current tip or better. Entries here are potential future candidates for insertion\r\ninto `setBlockIndexCandidates`, once we get all the required block data. Thus, entries here\r\nrepresent chains on which we should be actively downloading block data.\r\n>\r\n> Note that we define \"as good as our current tip or better\" slightly differently here than in\r\nsetBlockIndexCandidates - we include things which will have a higher nSequence (but have the\r\nsame chain work) here, but do not include such entries in setBlockIndexCandidates. This is\r\nbecause we prefer to also download towards chains which have the same total work as our current\r\nchain (as an optimization since a reorg is very possible in such cases).\r\n>\r\n> Note that, unlike `setBlockIndexCandidates`, we only store \"leaf\" entries here, as we are not as\r\naggressively prune-able (`setBlockIndexCandidates` are things which we can, and usually do, try to connect immediately, and thus entries dont stick around for long). Thus, it may be the case that\r\n`chainActive.Tip()` is NOT in `setBlockIndexHeaderCandidates`.\r\n>\r\n> Additionally, unlike setBlockIndexCandidates, we are happy to store entries which are not\r\nconnectable due to pruning here.\r\n>\r\n> This is useful as it (finally) disconnects net_processing logic from the \"store on disk\" logic in validation.cpp. More importantly, it represents what you'd need from the consensus logic to implement a spv-first sync mode, as this provides a best-header which will follow invalidity - always pointing to the best-possible header even after block(s) are found to be invalid.\r\n\r\nNot included:\r\n* #13912 (test framework change)\r\n* #13930 (source code comment which is useful on its own)\r\n* a9db3dada0119c183d16627805e90c4dbca05c6a \"Do not unlock cs_main in ABC unless we've actually made progress\": already merged as part of #13023\r\n\r\nNoteble rebase changes:\r\n* `pindex_was_in_chain` is still needed due to  #12431, in order to notify the gui about a new block tip, only if the active chain was modified\r\n* `qt/clientmodel.cpp` changed significantly, because things were moved to `interfaces/node.cpp`\r\n* updated `ProcessNewBlock` bench\r\n\r\nI added an additional commit, because the new `!fHasMoreOrSameWork && !parent_of_header_candidate` check in `AcceptBlock` can cause `submitblock` (modified in #13439) to mistakingly believe the block is a duplicate.\r\n\r\nAdded debug log statements to `rpc_preciousblock.py` that helped me figure out the above issue.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-08-10T14:02:52Z",
    "updated_at": "2021-09-08T11:59:58Z",
    "closed_at": "2018-11-30T10:58:35Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "dc13a7cb42fc7ebf47e3f101cc5a217f18f23b4c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "Sjors:2018/08/best-header-tracking",
      "ref": "2018/08/best-header-tracking",
      "sha": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 221761,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T13:46:28Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2023-03-31T09:52:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "29f429dc7d4c7e6cd012e749cadf89e3138bcab3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 388,
    "deletions": 180,
    "changed_files": 12,
    "commits": 7,
    "review_comments": 10,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 412092374,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA5MjM3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412092374",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z",
      "updated_at": "2018-08-10T14:04:40Z",
      "author_association": "MEMBER",
      "body": "cc @TheBlueMatt, @MarcoFalke, @jamesob as this touches your work\r\n\r\ncc @jonasschnelli  since you reviewed the original PR (@skeees did too, but only the commit that I dropped)  ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-412092374",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "mentioned",
      "id": 1782578331,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTc4MjU3ODMzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578331",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "subscribed",
      "id": 1782578333,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3ODI1NzgzMzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578333",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "mentioned",
      "id": 1782578336,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTc4MjU3ODMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578336",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "subscribed",
      "id": 1782578338,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3ODI1NzgzMzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578338",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "mentioned",
      "id": 1782578340,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTc4MjU3ODM0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578340",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "subscribed",
      "id": 1782578341,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3ODI1NzgzNDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578341",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "mentioned",
      "id": 1782578342,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTc4MjU3ODM0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578342",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "subscribed",
      "id": 1782578344,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3ODI1NzgzNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578344",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "mentioned",
      "id": 1782578347,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTc4MjU3ODM0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578347",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "subscribed",
      "id": 1782578348,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3ODI1NzgzNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782578348",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:04:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1782698720,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc4MjY5ODcyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782698720",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T14:55:56Z"
    },
    {
      "event": "commented",
      "id": 412134370,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjEzNDM3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412134370",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T16:24:50Z",
      "updated_at": "2018-11-13T19:17:02Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14624](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14624.html) (Some simple improvements to the RNG code by sipa)\n* [#12151](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12151.html) (rpc: Remove cs_main lock from blockToJSON and blockheaderToJSON by promag)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-412134370",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "reviewed",
      "id": 145312412,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ1MzEyNDEy",
      "url": null,
      "actor": null,
      "commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-145312412",
      "submitted_at": "2018-08-10T16:29:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "labeled",
      "id": 1782918152,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3ODI5MTgxNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1782918152",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-10T16:39:52Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "reviewed",
      "id": 145448107,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ1NDQ4MTA3",
      "url": null,
      "actor": null,
      "commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "donaloconnor",
        "id": 6394033,
        "node_id": "MDQ6VXNlcjYzOTQwMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6394033?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/donaloconnor",
        "html_url": "https://github.com/donaloconnor",
        "followers_url": "https://api.github.com/users/donaloconnor/followers",
        "following_url": "https://api.github.com/users/donaloconnor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/donaloconnor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/donaloconnor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/donaloconnor/subscriptions",
        "organizations_url": "https://api.github.com/users/donaloconnor/orgs",
        "repos_url": "https://api.github.com/users/donaloconnor/repos",
        "events_url": "https://api.github.com/users/donaloconnor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/donaloconnor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-145448107",
      "submitted_at": "2018-08-11T14:42:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "labeled",
      "id": 1809158319,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDkxNTgzMTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809158319",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T22:49:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1809323449,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwOTMyMzQ0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809323449",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T11:53:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1809331660,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwOTMzMTY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809331660",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T12:20:46Z"
    },
    {
      "event": "unlabeled",
      "id": 1809346035,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgwOTM0NjAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809346035",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T13:06:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 416041790,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjA0MTc5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416041790",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T14:12:28Z",
      "updated_at": "2018-08-26T14:26:43Z",
      "author_association": "MEMBER",
      "body": "Rebased.\r\n\r\nI added commits to explicitly handle cases where `GetBestHeader()` returns `nullptr` in `validation.cpp`. Both cases are UI related and don't seem very important, so they're handled in a fairly lazy way.\r\n\r\nI added a commit to make header count fall back to block height in `getblockchaininfo` (`rpc/blockchain.cpp`).\r\n\r\nThat leaves `net_processing.cpp`, where I'm not sure what to do:\r\n\r\n* one existing assert in:\r\n https://github.com/bitcoin/bitcoin/blob/9ce44d8156576c58390a10007b60f507d107d042/src/net_processing.cpp#L3308\r\n* one deference `->GetBlockTime()` in `BlockRequestAllowed`\r\n* one dereference in `->GetBlockTime()`` in `ProcessGetBlockData`\r\n* one passing the pointer on to `connman` in `ProcessHeadersMessage`\r\n* passing into `chainActive.GetLocator` in `ProcessMessage`\r\n\r\nOriginal commit where `pindexBestHeader` was replaced by `GetBestHeader()` for reference: https://github.com/bitcoin/bitcoin/pull/12138/commits/8525f50c369e737098f785c6867d89f392b77f95\r\n\r\nI'm not sure if those are safe.\r\n\r\nPerhaps there should be a guarantee that `GetBestHeader()` returns the last known valid block (worst case genesis), by inserting that whenever the last entry is deleted?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-416041790",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "labeled",
      "id": 1820939686,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MjA5Mzk2ODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1820939686",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T15:56:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODFiNDVjNWVhN2E1YTkzMjJmYTAwOGQ3ZWM1NjJhMzc0NDUwNWJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/481b45c5ea7a5a9322fa008d7ec562a3744505bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/481b45c5ea7a5a9322fa008d7ec562a3744505bb",
      "tree": {
        "sha": "ba645b214f1f67c75447df9198aa432926af2591",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba645b214f1f67c75447df9198aa432926af2591"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ba645b214f1f67c75447df9198aa432926af2591\nparent 754a00d55f30f6112a1b68cb0bec5d59565096d1\nauthor Matt Corallo <git@bluematt.me> 1507496633 -0400\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540533147 +0800\n\nRequire setBlockIndexCandidates be !BLOCK_FAILED_MASK\n\nWhen we find an invalid block, instead of adding BLOCK_FAILED_CHILD\nto its descendants in FindMostWorkChain, iterate\nsetBlockIndexCandidates to find candidate descendants and mark them\nas BLOCK_FAILED_CHILD immediately, removing them from\nsetBlockIndexCandidates as we go. This keeps BLOCK_FAILED_MASK\nentries out of setBlockIndexCandidates.\n\nThis also adds a few checks to CheckBlockIndex, including one which\nchecks that blocks with BLOCK_FAILED_CHILD are not, themselves,\nmarked invalid, but have an invalid parent. This should be fine for\nmost block indexes, however InvalidateBlock previously violated\nthis. Luckily most users shouldn't be running with -checkblockindex\n\nNote that this introduces a bug where a block who's header was\nreceived but data was not when a ancestor was found to be invalid\nwill not be marked BLOCK_FAILED_CHILD. Thus, when that block is\nreceived, it will be added to setBlockIndexCandidates, violating\nthe new invariant. This is fixed in the next commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvSq5sACgkQV/+b28ww\nEAl73Q/8DqodqZP7n3lKVziPTnxOTvaIviBtUM/X66AHOQsvUGkjdCKJHzA6AlQf\nEjPMsfwnyLMKvWfwHCmCglx8I8sfu26UwzZsA7sqhwQyeGcXG+fYR5kav5nzhBDD\n126dUVo0QyBjd4EBTs8GD0s5fpk8tHgS9tCpWabTmJ6kYWf4Fm2WPHBN5hEkMDGv\ncLrhYJDtbIdlcglJpEC2T+Y4VutXlXKXOKieQ4qxSR5SHuAV8Js1SdcksSIpwdXb\nYB9ljwPV6rXrCGLC5+ha/6RC6mA8bvNu3RSl6qyGMROQ11OY4qoObS5e2pvmqlGu\nYoqG7cvjPe3zf8YCfF4EnJb70AdWRhVEENPpAOYqVEwY5QI85rwG69OgjTp+9fdi\np7P7oA2RBk2s8FzOpq4pwl8di7pRTAqmRXAbvkXgvQqmYPsqWwm1eV/TSeSfMamN\nlzqOTIHDodYpq05z3ZWHVuo6g75iImlj0/e8Nxn9ReIsxvmAHFxhfdB2T3/OD35Y\n++nx9NJSTMF2hohgxq5iT6QAuizAcMz7yX8x6FXU57PZnlvN7gs1X5WSj2KQuouT\nkzBJDNlWZMCD/ffiJi536HCmlP/qv7pNCYoEjTlHzoxEurBKM8l3a8tuRHB6s+Rc\nEkjyRTivxGrMKLBUAGSTEYbOZvkYvZL5D6UNDX91FCDCurkmdxk=\n=1G0Y\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/754a00d55f30f6112a1b68cb0bec5d59565096d1",
          "sha": "754a00d55f30f6112a1b68cb0bec5d59565096d1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/754a00d55f30f6112a1b68cb0bec5d59565096d1"
        }
      ],
      "message": "Require setBlockIndexCandidates be !BLOCK_FAILED_MASK\n\nWhen we find an invalid block, instead of adding BLOCK_FAILED_CHILD\nto its descendants in FindMostWorkChain, iterate\nsetBlockIndexCandidates to find candidate descendants and mark them\nas BLOCK_FAILED_CHILD immediately, removing them from\nsetBlockIndexCandidates as we go. This keeps BLOCK_FAILED_MASK\nentries out of setBlockIndexCandidates.\n\nThis also adds a few checks to CheckBlockIndex, including one which\nchecks that blocks with BLOCK_FAILED_CHILD are not, themselves,\nmarked invalid, but have an invalid parent. This should be fine for\nmost block indexes, however InvalidateBlock previously violated\nthis. Luckily most users shouldn't be running with -checkblockindex\n\nNote that this introduces a bug where a block who's header was\nreceived but data was not when a ancestor was found to be invalid\nwill not be marked BLOCK_FAILED_CHILD. Thus, when that block is\nreceived, it will be added to setBlockIndexCandidates, violating\nthe new invariant. This is fixed in the next commit.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-26T05:52:27Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-08T21:03:53Z"
      },
      "sha": "481b45c5ea7a5a9322fa008d7ec562a3744505bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGJiOTM0MTEzNjE3ZmQ3OTlhZjgxYWJjZWQ3ODAzOWU4OGM3OTBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0bb934113617fd799af81abced78039e88c790e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0bb934113617fd799af81abced78039e88c790e",
      "tree": {
        "sha": "8b9c251fde61fa64e7d9589592fe7b976c93db6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b9c251fde61fa64e7d9589592fe7b976c93db6e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8b9c251fde61fa64e7d9589592fe7b976c93db6e\nparent 481b45c5ea7a5a9322fa008d7ec562a3744505bb\nauthor Matt Corallo <git@bluematt.me> 1507506203 -0400\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540533147 +0800\n\nAdd a set to track potential future chain tips based only on SPV.\n\nThis mirrors setBlockIndexCandidates but for BLOCK_VALID_TREE\ninstead of BLOCK_VALID_TRANSACTIONS && nTx. There are a few\ndifferences between the two to keep the new set practical, see\ncode comments for more.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvSq5sACgkQV/+b28ww\nEAnZtg/+LX/bPnxfX/0qe3W23yjLJryfHpYQv4ch2e83f7miyFWnGB81Dk0xz5bO\ntm5HzTXzvtARGutC8/EuKK3zyWCC5dDr4UPTDUtIQKZBqB8mmd4FzkxuSHc87fXI\npnoAM7Aux2jzQWBlvioJbChzc6hFl8FEZIsG9wZJ3Yw6nNXajzWw3QwckkGaT8fX\nfpF2Q972Wu6MrY+e7ruiUEPfDygL1pWVLmD2cVvMC/8cEe/SrpINxCUnYGb1bq+Q\n2kgWAMpKlJwAiepNG2PmgskTxdzv8J5b67dVPClnqC3NWRYseLIksSqBSv/NfoTj\nJXtlB17lpgflAzFMxsCX1pm4dtLF5xUIIA/tnYPTfCtnM58TtPKBbVAen3cbqKyp\nTYeO2Dwivuz8as32/1WS6iX4eU1yBJMSqn6ELYsmsI5Khk23nhCsLD5UlNJgICsp\nFOlQws+0geVC4tKJz0T2igO5daxR1bcFUTHmZPuO5GGiEjRF8foMmz/3+Qt5NTNw\nWiFpoo/nBxJOgcv/zSQ9Yde/8o0FGdgifLoQsAVAqPOMYQfpEM5jf2AkrLywLz1v\nPfheGOTy1us/ctPUXVNYI7McK0viXlUXE9cTW60EyqfleLDk+jKSZ/dx28CfJqPB\n6GaFOzCmQrUmQDmrGbXwvIaup/I01IeH2nDPMc2LqisiQjz3tKo=\n=HXKd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/481b45c5ea7a5a9322fa008d7ec562a3744505bb",
          "sha": "481b45c5ea7a5a9322fa008d7ec562a3744505bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/481b45c5ea7a5a9322fa008d7ec562a3744505bb"
        }
      ],
      "message": "Add a set to track potential future chain tips based only on SPV.\n\nThis mirrors setBlockIndexCandidates but for BLOCK_VALID_TREE\ninstead of BLOCK_VALID_TRANSACTIONS && nTx. There are a few\ndifferences between the two to keep the new set practical, see\ncode comments for more.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-26T05:52:27Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-08T23:43:23Z"
      },
      "sha": "e0bb934113617fd799af81abced78039e88c790e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTE2MDQwMzM3MzRlMzNlMDM4M2E4MzFhNzJhZTRkYjBlMWE0ZjJm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/411604033734e33e0383a831a72ae4db0e1a4f2f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/411604033734e33e0383a831a72ae4db0e1a4f2f",
      "tree": {
        "sha": "7140d57c048daed5765e4ec19050b4acc4b1e88d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7140d57c048daed5765e4ec19050b4acc4b1e88d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7140d57c048daed5765e4ec19050b4acc4b1e88d\nparent e0bb934113617fd799af81abced78039e88c790e\nauthor Matt Corallo <git@bluematt.me> 1507566882 -0400\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540533576 +0800\n\nStop using pindexBestHeader outside of validation.cpp\n\npindexBestHeader never considers the invalidity of a chain, only\nthe validity of the header chain. Using it for sync estimation and\nGETHEADERS etc requests in net makes no sense. Instead, use the\nnew setBlockIndexHeaderCandidates to find the best candidate tip.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvSrUgACgkQV/+b28ww\nEAmmDxAAvB7MP8a2FfSHgVmB2rgqm6j890oaAZKauMCCuKSO7WlSExz7h2xXbUk0\ncb6Vfn0jnP7VtG2tg49EjzlS6rZ29kx/bTqdrO67JHmUGysdOiRf4udXp8T5kyl+\nmo++tvMXZAYhVkKw/tdUVcmrmw0EnMKTiF+1FvMmZW9a6nW4JKKkEL48V0R7gzgp\nNfoewMvqVcz1SXoAMIGWxCd/fVSYR86K5nA+aImkmIk7pPIMlpbHmL5k1ZsSHVmA\nAmwZlNVsQJoY40ba0+C+ShNmhutcaW3jhPjjmSKfww8oDzpT6rPu565LG60Gxu/k\n6nxQ5Gs4u/4N2NhbbKqxhzWzj6S+eBj9MbJHmM32LKP4bvRTHaQAyGo6Pp4m9kK+\nATg5bjGasJyx9gpiItno2vriMgSVWg3AqF5zcZIhh1gNGggXT4P0ph+RluM+CCzF\npdAHpyV7bL9V4m4CBS5v1qYDl8esJ7XByfk+dyBdzJE2PT5wq/mQjMmlcQ6+d3n8\nQcE3rIzD048ZPlIudRP27xV9JmInr1097oDVZOMjX1XPFp7LSk8cMomnydsqpKuO\nkaDjHtRAE7twb4tKzwNTtqGlEb8mzTh0dAcEmF9DmbgBIcUTJVjV2UGkFPW9bdSF\nvUEd6EeV8DGOaGeH/v+X5D+neVY7io1uNZ+EUYMl87Rqn3E09+U=\n=R3av\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0bb934113617fd799af81abced78039e88c790e",
          "sha": "e0bb934113617fd799af81abced78039e88c790e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0bb934113617fd799af81abced78039e88c790e"
        }
      ],
      "message": "Stop using pindexBestHeader outside of validation.cpp\n\npindexBestHeader never considers the invalidity of a chain, only\nthe validity of the header chain. Using it for sync estimation and\nGETHEADERS etc requests in net makes no sense. Instead, use the\nnew setBlockIndexHeaderCandidates to find the best candidate tip.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-26T05:59:36Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-09T16:34:42Z"
      },
      "sha": "411604033734e33e0383a831a72ae4db0e1a4f2f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDk2YzYzODAyY2NjMDEwZWVjYzU4ZmM5MDM5YmQ3Nzk2MmFmYzNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6096c63802ccc010eecc58fc9039bd77962afc3b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6096c63802ccc010eecc58fc9039bd77962afc3b",
      "tree": {
        "sha": "7276537e585afb2e7cc91d22d372bed4b2ebfacc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7276537e585afb2e7cc91d22d372bed4b2ebfacc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7276537e585afb2e7cc91d22d372bed4b2ebfacc\nparent 411604033734e33e0383a831a72ae4db0e1a4f2f\nauthor Matt Corallo <git@bluematt.me> 1507576733 -0400\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540533576 +0800\n\nReplace ProcessNewBlock's fRequested with candidate header check\n\nInstead of allowing net_processing to inform AcceptBlock as to\nwhether a block is interesting enough to commit to disk, use the\nnew setBlockIndexHeadersCandidates to determine if they lead\ntowards a chain with at least the same (or more) work as our\ncurrent tip. This further decouples the maze in net_processing from\nour consensus anti-DoS logic.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvSrUgACgkQV/+b28ww\nEAl0BxAAsUez9xaYHVrf38x0Kq4mK2G2znQoy92Lf7fSBkvO5ebHThoXJQHM0DKF\n0+tQGmsmgIPtBgi+Ag8RoJWUuNHiFgsRLNwliQfs54aQf2qIlvXYOeD0cn1UAMfb\nRH8AzHRVr8kT/mqJMR+h1V71cnc3DElg0eh/V2vePa0j1WKBVw/rqtK9IbKVcg+Q\nCKdTtvxa0or91d9ieNoQEbWaXNTVj0Wq0ZkiplgQuYx7rUSw4BGpaygSB1N1q/KG\ntHSus7oQLSnz0fzD8zr3sq6UHJ9fNZu3UCUzLkvVrmbEqitDpbVvljuCIDDspgv0\nCaCZ4SnRndxk0SaIaRpwSW99IPyNfCCidgCMsLdBxQGw6aWKNqad/wJKmlGSvm5+\nBxuPT3tNee31RB1AqUBzDELH2zxQSEMnzB6SpC17QUquyLsShsww2fiSFJSnpdMa\nFXtBhrv+k5Xf7hMeKu4EYOZccW5ajFs32sBRshhckgLxMZ9W5Qd0BsAInHNTKhs1\nZRF2YbSqjKYsOAeZySb08RiUsY9ihHtg1k3B/g1Rr4SA4VmpBdWZ5qT4cMy91U66\nGm0lL8e966FU2xiUtPISqUwRMHOu3UCDfDxYWbHF0CERNmVU0x9eNd7P5V9r6NXb\nJKiOhxrW0wzzc97ywV609v7nE8loHCj88AgrZFnvv3XZ0fQJcSY=\n=TIbA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/411604033734e33e0383a831a72ae4db0e1a4f2f",
          "sha": "411604033734e33e0383a831a72ae4db0e1a4f2f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/411604033734e33e0383a831a72ae4db0e1a4f2f"
        }
      ],
      "message": "Replace ProcessNewBlock's fRequested with candidate header check\n\nInstead of allowing net_processing to inform AcceptBlock as to\nwhether a block is interesting enough to commit to disk, use the\nnew setBlockIndexHeadersCandidates to determine if they lead\ntowards a chain with at least the same (or more) work as our\ncurrent tip. This further decouples the maze in net_processing from\nour consensus anti-DoS logic.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-26T05:59:36Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-09T19:18:53Z"
      },
      "sha": "6096c63802ccc010eecc58fc9039bd77962afc3b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmNkZGIwMTI2ZTFlY2Q3NzkyMGNmZTNlNDQ4NzNmZDdiMDE5N2Ji",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fcddb0126e1ecd77920cfe3e44873fd7b0197bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5fcddb0126e1ecd77920cfe3e44873fd7b0197bb",
      "tree": {
        "sha": "3e8b9b138d5cf618a5644a381452c41556cb8ec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e8b9b138d5cf618a5644a381452c41556cb8ec8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3e8b9b138d5cf618a5644a381452c41556cb8ec8\nparent 6096c63802ccc010eecc58fc9039bd77962afc3b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1533909291 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540608091 +0800\n\n[test] precious_block: additional debug log statements\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvT0FsACgkQV/+b28ww\nEAlqDBAAr90tg1pD19u8E9Nr/pDDoK/N41J/sj59y117/W9Kwxi6RI8QiJ7T6Spv\nOIfKxoKbyQLH3b+XwWsmcF0NLNUM/H3VwON48Z+TB8LXmLaiD8P6XL5KDn3J6Z6r\nV206IcECC4KDAG/v92ylvB4vI/c+k4xymLZDMv+WxQKzhWBSVCfS1gzhutr/KAYC\nOFeFbOnc6RKizASHeq7Z2apxPzkkiBOkzpiKvM1H/O7L+eLXhVIC+GG15KNa3gxp\nvgSns8aBtHG5LyveH7Qv7N5/tjSZyqdGK/hl7gUFMjlQPNPgqG+e58vYu7G7XAJc\nCzi4AKRo6U6TcqAcSIzBcC4L5vDPqn8Ca84mYNf4PW7thO6klqKL5LmKvXDansU5\nflpmVsr2UAjZRUCrBBOWS3DKZOb973fAt/3+003hsaEhavDLt44e0vbCdqF1QeMR\nMuk5qlLDBMg68Nmm9/fIw7f/DZDW1KyUC2o7EYRS1X6eI2q9A9us0uxrCtyPf07I\neIaqy+c35hxc2qLlxn2g4QEDvZLCatTpbpgVD3D1AqHDt7uG07aIj9o465FL7dgH\n++Rwq/WSwPlsv9G57XKQ4Zs+HgLQ/tf9ztRIFMqJlIMENJfpbJt7eVP7MLlTjYD7\nDOhMcPdlYdC0nOWdj/dXtVYPGnw2ZQgw10EfE0ModKbuh7mWaRE=\n=PZ0T\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6096c63802ccc010eecc58fc9039bd77962afc3b",
          "sha": "6096c63802ccc010eecc58fc9039bd77962afc3b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6096c63802ccc010eecc58fc9039bd77962afc3b"
        }
      ],
      "message": "[test] precious_block: additional debug log statements",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-27T02:41:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-08-10T13:54:51Z"
      },
      "sha": "5fcddb0126e1ecd77920cfe3e44873fd7b0197bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjM4MDkzYjYwMzA5NzgwNDUyYmMzODFhNmIzZjE2M2MxOGQxYTRl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6638093b60309780452bc381a6b3f163c18d1a4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6638093b60309780452bc381a6b3f163c18d1a4e",
      "tree": {
        "sha": "dafe508c49de8adf2ca11474b7484c86f9360d17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dafe508c49de8adf2ca11474b7484c86f9360d17"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dafe508c49de8adf2ca11474b7484c86f9360d17\nparent 5fcddb0126e1ecd77920cfe3e44873fd7b0197bb\nauthor Sjors Provoost <sjors@sprovoost.nl> 1535291306 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540608091 +0800\n\n[validation] explictly handle GetBestHeader() == nullptr\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvT0FsACgkQV/+b28ww\nEAm6TQ/8ChS53IBfPuJnc7xaCVAr8cBh/6M/xspHAlLsNxBuZURaBI/L6so5EeGH\nzm5uEBe1WBjGyY7FSe1f8OqJ6xmSmPYdErBqxx8lsE8Nq85iyqFzdA5VS2/l7Pij\nJhNVkKiWGuWgew7Q0p2i0dJlSqBv5xEgaFSmuxykNgJH8et6oHO1W+nvW47sCXfT\nUlhxDBef7yBSUuk4xBBzMZyPbi9aPv4CoC424dT3wJJYSFRE3lMeJ8r/LJr1Trje\nEckP5UfZOqUaSEsZxlyyHGRzM0n9J2WNuRntFVn3kd0kaJ2KqA87c8NSbWDLRtDk\nVu1gdwx8WJmxwJYDoXqZa6eFXYN0TzGDxbwKUstg0AaPmo/WxGtd7A4n+eAOl1/y\nSGWWWTG2MW3S0LLJg2JBpfXNi1SdXEKC8jCsj+bxdpQq3hb5kj+m42tFxkLt2eYU\n2vYoRBriRz5SY7pj4FO9eTtCYROekSqQymcbWaa8MiS1Z9ymOlwNBJRzCDsin3oW\nFHg/zqxWvYMa1etb/fE+r+5eue02aKgBx8nUkP42k1pt2C40v8Fuq+GKSZJaNvXX\nghzjTiCNz8SuoLhN8eEuOUYbUsqwgzHgGcwXqvDuPP7u9BjeI20SLt16KnhHKg4p\nUXE5zGk1gV06DcA6CLegraY3WGo2/HU7kXalN6KRM5a7uQX+XYY=\n=1aSJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fcddb0126e1ecd77920cfe3e44873fd7b0197bb",
          "sha": "5fcddb0126e1ecd77920cfe3e44873fd7b0197bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5fcddb0126e1ecd77920cfe3e44873fd7b0197bb"
        }
      ],
      "message": "[validation] explictly handle GetBestHeader() == nullptr",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-27T02:41:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-08-26T13:48:26Z"
      },
      "sha": "6638093b60309780452bc381a6b3f163c18d1a4e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZGFmOWY5NjkzNzc2OWFlNjhhZTZjYTgxMTkzZTEyZmMyNmEyOWFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "tree": {
        "sha": "62b4df38a2703f738d48eae80c76c8a94da43d41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62b4df38a2703f738d48eae80c76c8a94da43d41"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 62b4df38a2703f738d48eae80c76c8a94da43d41\nparent 6638093b60309780452bc381a6b3f163c18d1a4e\nauthor Sjors Provoost <sjors@sprovoost.nl> 1535292356 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1540608091 +0800\n\n[rpc] explictly handle GetBestHeader() == nullptr\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlvT0FwACgkQV/+b28ww\nEAmihw//fJk/9zrUyrEZ/cdvsK98IM3wVYLB29zpnmkagb4UNr2Zku+ezVLljkQA\nQ6xMTAO6mAz9LLCtQ5rjGqM5OMEvDlie7eqwDRSs8BDcKmgui+Htby6r1ZSHSH7r\ntzxfd85QvgJ+EygVkNd5biWfrZEgAiskjjBNZ3MUI91bAnKkq8D7Pxmdl1ilp/WP\nD9JWcY6saekGn6bcDTX8oBm/Ui9pw/e48xZ+j1B1xqZYh7tLi2GcA/2mk6Dy2/S4\nK/GTxWCECvSXVwX7+xThxKiwIDhd5iDgDrGdXAxdqTcf4k9kzStsmVJpblyXNvYI\nOePX6Apu+7loGW6vasN1f5aiToaFnRm9HWIW0c6saeAoqum8I6mgSwGI8nxFdW7U\nVHWnPMhp6pTyXJSPOtfnkh0bfZ2FPpCcuFpdex9OxfCHnw4TOVZB9zppZhWTnBD1\npYmbUdscUA9ms/d4hhyp+qvlFDMqi1kqIjt6hHwhl2kEkIeq2ipStTRM88JV/shr\nWp8BYJNdvioA1tEWzZGfoRrJOTR5DMViCWPFGBzXlJO2VXC6WM/KNmwel2tnS46V\nZRAjhp9g25RWqN5SM/gtv01/LI3q/P6o5cLqcqwguDYX9F2MEjx/RzrblBaTsfsk\nsA6CBfSmzoL66nxwT8N28i/u35Rjy21DxdNEVhj4j5IxgGAO9i4=\n=E7VV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6638093b60309780452bc381a6b3f163c18d1a4e",
          "sha": "6638093b60309780452bc381a6b3f163c18d1a4e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6638093b60309780452bc381a6b3f163c18d1a4e"
        }
      ],
      "message": "[rpc] explictly handle GetBestHeader() == nullptr",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-10-27T02:41:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-08-26T14:05:56Z"
      },
      "sha": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1934388613,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkzNDM4ODYxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1934388613",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-30T08:48:35Z"
    },
    {
      "event": "commented",
      "id": 434218370,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDIxODM3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434218370",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-30T08:50:11Z",
      "updated_at": "2018-10-30T08:50:11Z",
      "author_association": "MEMBER",
      "body": "Rebased. I'll hold back on addressing specific feedback until there's some high level agreement on whether this is useful at all.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-434218370",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "unlabeled",
      "id": 1934510683,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTkzNDUxMDY4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1934510683",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-30T09:41:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 169991931,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY5OTkxOTMx",
      "url": null,
      "actor": null,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-169991931",
      "submitted_at": "2018-10-30T20:46:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "reviewed",
      "id": 169992259,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY5OTkyMjU5",
      "url": null,
      "actor": null,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-169992259",
      "submitted_at": "2018-10-30T20:47:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "reviewed",
      "id": 169992375,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY5OTkyMzc1",
      "url": null,
      "actor": null,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-169992375",
      "submitted_at": "2018-10-30T20:47:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "reviewed",
      "id": 169993028,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY5OTkzMDI4",
      "url": null,
      "actor": null,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-169993028",
      "submitted_at": "2018-10-30T20:49:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "reviewed",
      "id": 169993101,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY5OTkzMTAx",
      "url": null,
      "actor": null,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#pullrequestreview-169993101",
      "submitted_at": "2018-10-30T20:49:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
    },
    {
      "event": "commented",
      "id": 443168600,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzE2ODYwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443168600",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-30T10:58:35Z",
      "updated_at": "2018-11-30T10:58:35Z",
      "author_association": "MEMBER",
      "body": "Abandoning for now. Consider it up for grabs, but I suggest getting concept ACKs before trying to rebase.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-443168600",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "closed",
      "id": 1997646740,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTk5NzY0Njc0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1997646740",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-30T10:58:35Z"
    },
    {
      "event": "labeled",
      "id": 1997959112,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTc5NTkxMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1997959112",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-30T13:42:55Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "commented",
      "id": 443773740,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc3Mzc0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443773740",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-03T16:30:19Z",
      "updated_at": "2018-12-03T16:30:19Z",
      "author_association": "MEMBER",
      "body": "Since this is marked up for grabs, it might be useful to say what motivations for this change are.\r\n\r\nIt looks like it was brought up in IRC on 12/1 in the context of \"SPV sync\" but the relationship seems unclear. (I believe \"SPV sync\" refers to downloading blocks out of order during initial sync so wallet can show unvalidated transactions and be usable before the sync finishes.)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-443773740",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "commented",
      "id": 444039967,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDAzOTk2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444039967",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-04T09:55:11Z",
      "updated_at": "2018-12-04T09:56:08Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky it started out here: https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-349790765, so just one step to make it easier to sync headers and fresh blocks first, and then catch up on historical blocks later.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#issuecomment-444039967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13937"
    },
    {
      "event": "mentioned",
      "id": 2003784306,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjAwMzc4NDMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2003784306",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-04T09:55:11Z"
    },
    {
      "event": "subscribed",
      "id": 2003784308,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwMDM3ODQzMDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2003784308",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-04T09:55:11Z"
    },
    {
      "event": "locked",
      "id": 5271831513,
      "node_id": "LOE_lADOABII584U1V9szwAAAAE6OcPZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271831513",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:59:58Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209315966",
      "pull_request_review_id": 145312412,
      "id": 209315966,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTMxNTk2Ng==",
      "diff_hunk": "@@ -1290,6 +1319,130 @@ static void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n     CheckForkWarningConditions();\n }\n \n+/**\n+ * Called when a header (re-)reached BLOCK_VALID_TREE.\n+ *\n+ * setBlockIndexHeaderCandidates is a bit more complicated than\n+ * setBlockIndexCandidates as setBlockIndexCandidates can be rather lazy\n+ * as everything in it is about to be connected. In our case, we may have many\n+ * headers above the tip leading down different chains, for which we really\n+ * only want to keep the tip of each chain.\n+ *\n+ * Works even if chainActive is empty!\n+ *\n+ * If chain_ordered_inertion, we assume that if pindex->pprev was previously a\n+ * header candidate, it will be when we're called. ie we assume that there are\n+ * no header candidates which are parents of us except for possibly our direct\n+ * parent.\n+ *\n+ * no_descendants allows us to make a similar, but inverted, assumption -\n+ * assuming no descendant blocks may be header candidates.\n+ */\n+void CChainState::MaybeAddNewHeaderCandidate(CBlockIndex* pindex, bool chain_ordered_insertion, bool no_descendants) {\n+    if (!pindex->IsValid(BLOCK_VALID_TREE)) return; // We only want things that have a valid header tree\n+\n+    bool lower_work = chainActive.Tip() != nullptr && chainActive.Tip()->nChainWork > pindex->nChainWork;\n+    if (lower_work) return; // We don't want things with less work than our current tip\n+\n+    bool parent_present = false;\n+    if (pindex->pprev && setBlockIndexHeaderCandidates.count(pindex->pprev)) {\n+        // If the parent is a previous candidate, then no parents of it could\n+        // be candidates, either. This is the only thing we need to check by\n+        // definition of chain_ordered_insertion, however even in the case of\n+        // !chain_ordered_insertion, if this is true, no need to do a full\n+        // parent scan (as no further-up parent can be a candidate, either).\n+        setBlockIndexHeaderCandidates.erase(pindex->pprev);\n+        parent_present = true;\n+    } else if (!chain_ordered_insertion) {\n+        // We are being called in a for(p : mapBlockIndex) loop, so can make no\n+        // assumptions about existing entries. Scan all other entries to check\n+        // if we're a descendant of some other candidate.\n+        for (auto it = setBlockIndexHeaderCandidates.begin(); it != setBlockIndexHeaderCandidates.end() && (*it)->nChainWork < pindex->nChainWork; it++) {\n+            if (pindex->GetAncestor((*it)->nHeight) == *it) {\n+                // it should be removed - we only keep the tip of potential\n+                // chains, not anything in them. At this point we should be\n+                // consistent by adding pindex, there should be more more work\n+                // to do here.\n+                setBlockIndexHeaderCandidates.erase(it);\n+                break;\n+                parent_present = true;\n+            }\n+        }\n+    }\n+\n+    if (!parent_present && !no_descendants) {\n+        // Scan higher-work entries to check that we're not a parent of some\n+        // other candidate(s). If a parent of ours was already present then we\n+        // can be certain that no such child is also a candidate, so we can\n+        // skip the whole scan.\n+        for (auto it = setBlockIndexHeaderCandidates.rbegin(); it != setBlockIndexHeaderCandidates.rend() && (*it)->nChainWork > pindex->nChainWork; it++) {\n+            if ((*it)->GetAncestor(pindex->nHeight) == pindex) {\n+                // pindex is useless - even if there are other tips based on it\n+                // which we want in setBlockIndexHeaderCandidates, we're not\n+                // gonna find them here.\n+                return;\n+            }\n+        }\n+    }\n+\n+    setBlockIndexHeaderCandidates.insert(pindex);\n+}\n+\n+const CBlockIndex* CChainState::GetBestHeader() {\n+    LOCK(cs_main);\n+    auto it = setBlockIndexHeaderCandidates.rbegin();\n+    if (it == setBlockIndexHeaderCandidates.rend())\n+        return nullptr;\n+    return *it;\n+}\n+\n+const CBlockIndex* GetBestHeader() {\n+    return g_chainstate.GetBestHeader();\n+}\n+\n+// Helper for PruneInvalidBlockIndexCandidates\n+static void PruneInvalidIndexCandidatesInSet(CBlockIndex* pindexInvalid, std::set<CBlockIndex*, CBlockIndexWorkComparator>& set_candidates) {\n+    // Iterate set_candidates downwards, deleting parents of pindexInvalid,\n+    // until we get to headers which are lower total-work than pindexInvalid\n+    // (at which point they can't be parents of pindexInvalid).\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator>::reverse_iterator it = set_candidates.rbegin();\n+    while (it != set_candidates.rend() && (*it)->nChainWork > pindexInvalid->nChainWork) {\n+        if ((*it)->GetAncestor(pindexInvalid->nHeight) == pindexInvalid) {\n+            CBlockIndex* pindexInvalidTip = *it;\n+            if (!pindexBestInvalid || pindexInvalidTip->nChainWork > pindexBestInvalid->nChainWork)\n+                pindexBestInvalid = pindexInvalidTip;\n+\n+            while (pindexInvalidTip != pindexInvalid) {\n+                if (!(pindexInvalidTip->nStatus & BLOCK_FAILED_MASK)) {\n+                    pindexInvalidTip->nStatus |= BLOCK_FAILED_CHILD;\n+                    setDirtyBlockIndex.insert(pindexInvalidTip);\n+                }\n+                pindexInvalidTip = pindexInvalidTip->pprev;\n+            }\n+            std::set<CBlockIndex*, CBlockIndexWorkComparator>::iterator forward_it = it.base(); // Is one past it\n+            forward_it--; // Now points to it\n+            forward_it = set_candidates.erase(forward_it);\n+            it = std::set<CBlockIndex*, CBlockIndexWorkComparator>::reverse_iterator(forward_it);\n+            // forward_it == it.base() now points to one-past previous it, making it point to one-before previous it.",
      "path": "src/validation.cpp",
      "position": 203,
      "original_position": 207,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note: I find the above reverse-to-forward iterator dance remarkably confusing.",
      "created_at": "2018-08-10T16:29:30Z",
      "updated_at": "2018-10-30T08:48:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r209315966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209315966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1422,
      "original_line": 1422,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209428169",
      "pull_request_review_id": 145448107,
      "id": 209428169,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyODE2OQ==",
      "diff_hunk": "@@ -1290,6 +1319,130 @@ static void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n     CheckForkWarningConditions();\n }\n \n+/**\n+ * Called when a header (re-)reached BLOCK_VALID_TREE.\n+ *\n+ * setBlockIndexHeaderCandidates is a bit more complicated than\n+ * setBlockIndexCandidates as setBlockIndexCandidates can be rather lazy\n+ * as everything in it is about to be connected. In our case, we may have many\n+ * headers above the tip leading down different chains, for which we really\n+ * only want to keep the tip of each chain.\n+ *\n+ * Works even if chainActive is empty!\n+ *\n+ * If chain_ordered_inertion, we assume that if pindex->pprev was previously a\n+ * header candidate, it will be when we're called. ie we assume that there are\n+ * no header candidates which are parents of us except for possibly our direct\n+ * parent.\n+ *\n+ * no_descendants allows us to make a similar, but inverted, assumption -\n+ * assuming no descendant blocks may be header candidates.\n+ */\n+void CChainState::MaybeAddNewHeaderCandidate(CBlockIndex* pindex, bool chain_ordered_insertion, bool no_descendants) {\n+    if (!pindex->IsValid(BLOCK_VALID_TREE)) return; // We only want things that have a valid header tree\n+\n+    bool lower_work = chainActive.Tip() != nullptr && chainActive.Tip()->nChainWork > pindex->nChainWork;\n+    if (lower_work) return; // We don't want things with less work than our current tip\n+\n+    bool parent_present = false;\n+    if (pindex->pprev && setBlockIndexHeaderCandidates.count(pindex->pprev)) {\n+        // If the parent is a previous candidate, then no parents of it could\n+        // be candidates, either. This is the only thing we need to check by\n+        // definition of chain_ordered_insertion, however even in the case of\n+        // !chain_ordered_insertion, if this is true, no need to do a full\n+        // parent scan (as no further-up parent can be a candidate, either).\n+        setBlockIndexHeaderCandidates.erase(pindex->pprev);\n+        parent_present = true;\n+    } else if (!chain_ordered_insertion) {\n+        // We are being called in a for(p : mapBlockIndex) loop, so can make no\n+        // assumptions about existing entries. Scan all other entries to check\n+        // if we're a descendant of some other candidate.\n+        for (auto it = setBlockIndexHeaderCandidates.begin(); it != setBlockIndexHeaderCandidates.end() && (*it)->nChainWork < pindex->nChainWork; it++) {\n+            if (pindex->GetAncestor((*it)->nHeight) == *it) {\n+                // it should be removed - we only keep the tip of potential\n+                // chains, not anything in them. At this point we should be\n+                // consistent by adding pindex, there should be more more work\n+                // to do here.\n+                setBlockIndexHeaderCandidates.erase(it);\n+                break;\n+                parent_present = true;\n+            }\n+        }\n+    }\n+\n+    if (!parent_present && !no_descendants) {\n+        // Scan higher-work entries to check that we're not a parent of some\n+        // other candidate(s). If a parent of ours was already present then we\n+        // can be certain that no such child is also a candidate, so we can\n+        // skip the whole scan.\n+        for (auto it = setBlockIndexHeaderCandidates.rbegin(); it != setBlockIndexHeaderCandidates.rend() && (*it)->nChainWork > pindex->nChainWork; it++) {\n+            if ((*it)->GetAncestor(pindex->nHeight) == pindex) {\n+                // pindex is useless - even if there are other tips based on it\n+                // which we want in setBlockIndexHeaderCandidates, we're not\n+                // gonna find them here.\n+                return;\n+            }\n+        }\n+    }\n+\n+    setBlockIndexHeaderCandidates.insert(pindex);\n+}\n+\n+const CBlockIndex* CChainState::GetBestHeader() {\n+    LOCK(cs_main);\n+    auto it = setBlockIndexHeaderCandidates.rbegin();\n+    if (it == setBlockIndexHeaderCandidates.rend())\n+        return nullptr;",
      "path": "src/validation.cpp",
      "position": 172,
      "original_position": 176,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "in_reply_to_id": null,
      "user": {
        "login": "donaloconnor",
        "id": 6394033,
        "node_id": "MDQ6VXNlcjYzOTQwMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6394033?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/donaloconnor",
        "html_url": "https://github.com/donaloconnor",
        "followers_url": "https://api.github.com/users/donaloconnor/followers",
        "following_url": "https://api.github.com/users/donaloconnor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/donaloconnor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/donaloconnor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/donaloconnor/subscriptions",
        "organizations_url": "https://api.github.com/users/donaloconnor/orgs",
        "repos_url": "https://api.github.com/users/donaloconnor/repos",
        "events_url": "https://api.github.com/users/donaloconnor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/donaloconnor/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Numerous places call this function but no nullptr check is performed and dereferences are executed on the ptr.\r\nCan this return null in any case where this function is called?",
      "created_at": "2018-08-11T14:28:18Z",
      "updated_at": "2018-10-30T08:48:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r209428169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209428169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1391,
      "original_line": 1391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209428514",
      "pull_request_review_id": 145448107,
      "id": 209428514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyODUxNA==",
      "diff_hunk": "@@ -152,10 +152,10 @@ class NodeImpl : public Node\n     size_t getMempoolDynamicUsage() override { return ::mempool.DynamicMemoryUsage(); }\n     bool getHeaderTip(int& height, int64_t& block_time) override\n     {\n-        LOCK(::cs_main);\n-        if (::pindexBestHeader) {\n-            height = ::pindexBestHeader->nHeight;\n-            block_time = ::pindexBestHeader->GetBlockTime();\n+        const CBlockIndex* best_header = ::GetBestHeader();\n+        if (best_header) {",
      "path": "src/interfaces/node.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "in_reply_to_id": null,
      "user": {
        "login": "donaloconnor",
        "id": 6394033,
        "node_id": "MDQ6VXNlcjYzOTQwMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6394033?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/donaloconnor",
        "html_url": "https://github.com/donaloconnor",
        "followers_url": "https://api.github.com/users/donaloconnor/followers",
        "following_url": "https://api.github.com/users/donaloconnor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/donaloconnor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/donaloconnor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/donaloconnor/subscriptions",
        "organizations_url": "https://api.github.com/users/donaloconnor/orgs",
        "repos_url": "https://api.github.com/users/donaloconnor/repos",
        "events_url": "https://api.github.com/users/donaloconnor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/donaloconnor/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Possible race condition here since we don't lock cs_main? Can the best_head data be deleted between time we call GetBestHeader() and when we use the ptr?\r\n\r\nI'm not familiar with the code enough to know the answer to this so just putting it here in case.",
      "created_at": "2018-08-11T14:41:52Z",
      "updated_at": "2018-10-30T08:48:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r209428514",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209428514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212822708",
      "pull_request_review_id": 149534822,
      "id": 212822708,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjgyMjcwOA==",
      "diff_hunk": "@@ -152,10 +152,10 @@ class NodeImpl : public Node\n     size_t getMempoolDynamicUsage() override { return ::mempool.DynamicMemoryUsage(); }\n     bool getHeaderTip(int& height, int64_t& block_time) override\n     {\n-        LOCK(::cs_main);\n-        if (::pindexBestHeader) {\n-            height = ::pindexBestHeader->nHeight;\n-            block_time = ::pindexBestHeader->GetBlockTime();\n+        const CBlockIndex* best_header = ::GetBestHeader();\n+        if (best_header) {",
      "path": "src/interfaces/node.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "in_reply_to_id": 209428514,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~It sounds like it would be safer to also make a PR for https://github.com/bitcoin/bitcoin/commit/a9db3dada0119c183d16627805e90c4dbca05c6a that I left out?~ (nvm that was already merged in #13023)\r\n\r\nI'll see if I can understand the potential race condition you mention.",
      "created_at": "2018-08-26T11:21:38Z",
      "updated_at": "2018-10-30T08:48:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r212822708",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212822708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212825173",
      "pull_request_review_id": 149537265,
      "id": 212825173,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjgyNTE3Mw==",
      "diff_hunk": "@@ -1290,6 +1319,130 @@ static void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n     CheckForkWarningConditions();\n }\n \n+/**\n+ * Called when a header (re-)reached BLOCK_VALID_TREE.\n+ *\n+ * setBlockIndexHeaderCandidates is a bit more complicated than\n+ * setBlockIndexCandidates as setBlockIndexCandidates can be rather lazy\n+ * as everything in it is about to be connected. In our case, we may have many\n+ * headers above the tip leading down different chains, for which we really\n+ * only want to keep the tip of each chain.\n+ *\n+ * Works even if chainActive is empty!\n+ *\n+ * If chain_ordered_inertion, we assume that if pindex->pprev was previously a\n+ * header candidate, it will be when we're called. ie we assume that there are\n+ * no header candidates which are parents of us except for possibly our direct\n+ * parent.\n+ *\n+ * no_descendants allows us to make a similar, but inverted, assumption -\n+ * assuming no descendant blocks may be header candidates.\n+ */\n+void CChainState::MaybeAddNewHeaderCandidate(CBlockIndex* pindex, bool chain_ordered_insertion, bool no_descendants) {\n+    if (!pindex->IsValid(BLOCK_VALID_TREE)) return; // We only want things that have a valid header tree\n+\n+    bool lower_work = chainActive.Tip() != nullptr && chainActive.Tip()->nChainWork > pindex->nChainWork;\n+    if (lower_work) return; // We don't want things with less work than our current tip\n+\n+    bool parent_present = false;\n+    if (pindex->pprev && setBlockIndexHeaderCandidates.count(pindex->pprev)) {\n+        // If the parent is a previous candidate, then no parents of it could\n+        // be candidates, either. This is the only thing we need to check by\n+        // definition of chain_ordered_insertion, however even in the case of\n+        // !chain_ordered_insertion, if this is true, no need to do a full\n+        // parent scan (as no further-up parent can be a candidate, either).\n+        setBlockIndexHeaderCandidates.erase(pindex->pprev);\n+        parent_present = true;\n+    } else if (!chain_ordered_insertion) {\n+        // We are being called in a for(p : mapBlockIndex) loop, so can make no\n+        // assumptions about existing entries. Scan all other entries to check\n+        // if we're a descendant of some other candidate.\n+        for (auto it = setBlockIndexHeaderCandidates.begin(); it != setBlockIndexHeaderCandidates.end() && (*it)->nChainWork < pindex->nChainWork; it++) {\n+            if (pindex->GetAncestor((*it)->nHeight) == *it) {\n+                // it should be removed - we only keep the tip of potential\n+                // chains, not anything in them. At this point we should be\n+                // consistent by adding pindex, there should be more more work\n+                // to do here.\n+                setBlockIndexHeaderCandidates.erase(it);\n+                break;\n+                parent_present = true;\n+            }\n+        }\n+    }\n+\n+    if (!parent_present && !no_descendants) {\n+        // Scan higher-work entries to check that we're not a parent of some\n+        // other candidate(s). If a parent of ours was already present then we\n+        // can be certain that no such child is also a candidate, so we can\n+        // skip the whole scan.\n+        for (auto it = setBlockIndexHeaderCandidates.rbegin(); it != setBlockIndexHeaderCandidates.rend() && (*it)->nChainWork > pindex->nChainWork; it++) {\n+            if ((*it)->GetAncestor(pindex->nHeight) == pindex) {\n+                // pindex is useless - even if there are other tips based on it\n+                // which we want in setBlockIndexHeaderCandidates, we're not\n+                // gonna find them here.\n+                return;\n+            }\n+        }\n+    }\n+\n+    setBlockIndexHeaderCandidates.insert(pindex);\n+}\n+\n+const CBlockIndex* CChainState::GetBestHeader() {\n+    LOCK(cs_main);\n+    auto it = setBlockIndexHeaderCandidates.rbegin();\n+    if (it == setBlockIndexHeaderCandidates.rend())\n+        return nullptr;",
      "path": "src/validation.cpp",
      "position": 172,
      "original_position": 176,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "7b2a938fa5ddbf3e91ada314bce65b4b86c66982",
      "in_reply_to_id": 209428169,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That seems problematic indeed. There's an `assert` for this in https://github.com/bitcoin/bitcoin/blame/7b1ab22384d944f638c514f838e25b391204ef67/src/net_processing.cpp#L3308, but not in the calls from validation.cpp:\r\n* in `NotifyHeaderTip()`: here it's compared with `pindexHeaderOld` which is a `nullptr` initially, but would non-null the next time. It's not dereferenced in that function, but it is passed on to `uiInterface.NotifyHeaderTip`. I could add an assert inside`if (fNotify)`\r\n* in `IsCurrentForFeeEstimation()`: I could add an `assert` directly above the if statement that deferences it\r\n\r\nThe comment in `InvalidBlockFound` suggests that sometimes `setBlockIndexHeaderCandidates` can be empty, so the above wouldn't be enough. Rather than `assert` I could explicitly check for `nullptr` in both functions and deal with them, as well as put a warning where this set is defined. ",
      "created_at": "2018-08-26T12:49:03Z",
      "updated_at": "2018-10-30T08:48:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r212825173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212825173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1391,
      "original_line": 1391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229479718",
      "pull_request_review_id": 169991931,
      "id": 229479718,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ3OTcxOA==",
      "diff_hunk": "@@ -1281,6 +1315,130 @@ static void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip) E\n     CheckForkWarningConditions();\n }\n \n+/**\n+ * Called when a header (re-)reached BLOCK_VALID_TREE.\n+ *\n+ * setBlockIndexHeaderCandidates is a bit more complicated than\n+ * setBlockIndexCandidates as setBlockIndexCandidates can be rather lazy\n+ * as everything in it is about to be connected. In our case, we may have many\n+ * headers above the tip leading down different chains, for which we really\n+ * only want to keep the tip of each chain.\n+ *\n+ * Works even if chainActive is empty!\n+ *\n+ * If chain_ordered_inertion, we assume that if pindex->pprev was previously a\n+ * header candidate, it will be when we're called. ie we assume that there are\n+ * no header candidates which are parents of us except for possibly our direct\n+ * parent.\n+ *\n+ * no_descendants allows us to make a similar, but inverted, assumption -\n+ * assuming no descendant blocks may be header candidates.\n+ */\n+void CChainState::MaybeAddNewHeaderCandidate(CBlockIndex* pindex, bool chain_ordered_insertion, bool no_descendants) {\n+    if (!pindex->IsValid(BLOCK_VALID_TREE)) return; // We only want things that have a valid header tree\n+\n+    bool lower_work = chainActive.Tip() != nullptr && chainActive.Tip()->nChainWork > pindex->nChainWork;\n+    if (lower_work) return; // We don't want things with less work than our current tip\n+\n+    bool parent_present = false;\n+    if (pindex->pprev && setBlockIndexHeaderCandidates.count(pindex->pprev)) {\n+        // If the parent is a previous candidate, then no parents of it could\n+        // be candidates, either. This is the only thing we need to check by\n+        // definition of chain_ordered_insertion, however even in the case of\n+        // !chain_ordered_insertion, if this is true, no need to do a full\n+        // parent scan (as no further-up parent can be a candidate, either).\n+        setBlockIndexHeaderCandidates.erase(pindex->pprev);\n+        parent_present = true;\n+    } else if (!chain_ordered_insertion) {\n+        // We are being called in a for(p : mapBlockIndex) loop, so can make no\n+        // assumptions about existing entries. Scan all other entries to check\n+        // if we're a descendant of some other candidate.\n+        for (auto it = setBlockIndexHeaderCandidates.begin(); it != setBlockIndexHeaderCandidates.end() && (*it)->nChainWork < pindex->nChainWork; it++) {\n+            if (pindex->GetAncestor((*it)->nHeight) == *it) {\n+                // it should be removed - we only keep the tip of potential\n+                // chains, not anything in them. At this point we should be\n+                // consistent by adding pindex, there should be more more work\n+                // to do here.\n+                setBlockIndexHeaderCandidates.erase(it);\n+                break;\n+                parent_present = true;",
      "path": "src/validation.cpp",
      "position": 145,
      "original_position": 145,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is dead code. The `parent_present = true;` is not meant to be after `break;` in this scope? :-)",
      "created_at": "2018-10-30T20:46:47Z",
      "updated_at": "2018-10-30T20:46:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r229479718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229479718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229479982",
      "pull_request_review_id": 169992259,
      "id": 229479982,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ3OTk4Mg==",
      "diff_hunk": "@@ -1281,6 +1315,130 @@ static void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip) E\n     CheckForkWarningConditions();\n }\n \n+/**\n+ * Called when a header (re-)reached BLOCK_VALID_TREE.\n+ *\n+ * setBlockIndexHeaderCandidates is a bit more complicated than\n+ * setBlockIndexCandidates as setBlockIndexCandidates can be rather lazy\n+ * as everything in it is about to be connected. In our case, we may have many\n+ * headers above the tip leading down different chains, for which we really\n+ * only want to keep the tip of each chain.\n+ *\n+ * Works even if chainActive is empty!\n+ *\n+ * If chain_ordered_inertion, we assume that if pindex->pprev was previously a\n+ * header candidate, it will be when we're called. ie we assume that there are\n+ * no header candidates which are parents of us except for possibly our direct\n+ * parent.\n+ *\n+ * no_descendants allows us to make a similar, but inverted, assumption -\n+ * assuming no descendant blocks may be header candidates.\n+ */\n+void CChainState::MaybeAddNewHeaderCandidate(CBlockIndex* pindex, bool chain_ordered_insertion, bool no_descendants) {\n+    if (!pindex->IsValid(BLOCK_VALID_TREE)) return; // We only want things that have a valid header tree\n+\n+    bool lower_work = chainActive.Tip() != nullptr && chainActive.Tip()->nChainWork > pindex->nChainWork;\n+    if (lower_work) return; // We don't want things with less work than our current tip\n+\n+    bool parent_present = false;\n+    if (pindex->pprev && setBlockIndexHeaderCandidates.count(pindex->pprev)) {\n+        // If the parent is a previous candidate, then no parents of it could\n+        // be candidates, either. This is the only thing we need to check by\n+        // definition of chain_ordered_insertion, however even in the case of\n+        // !chain_ordered_insertion, if this is true, no need to do a full\n+        // parent scan (as no further-up parent can be a candidate, either).\n+        setBlockIndexHeaderCandidates.erase(pindex->pprev);\n+        parent_present = true;\n+    } else if (!chain_ordered_insertion) {\n+        // We are being called in a for(p : mapBlockIndex) loop, so can make no\n+        // assumptions about existing entries. Scan all other entries to check\n+        // if we're a descendant of some other candidate.\n+        for (auto it = setBlockIndexHeaderCandidates.begin(); it != setBlockIndexHeaderCandidates.end() && (*it)->nChainWork < pindex->nChainWork; it++) {\n+            if (pindex->GetAncestor((*it)->nHeight) == *it) {\n+                // it should be removed - we only keep the tip of potential\n+                // chains, not anything in them. At this point we should be\n+                // consistent by adding pindex, there should be more more work\n+                // to do here.\n+                setBlockIndexHeaderCandidates.erase(it);\n+                break;\n+                parent_present = true;\n+            }\n+        }\n+    }\n+\n+    if (!parent_present && !no_descendants) {\n+        // Scan higher-work entries to check that we're not a parent of some\n+        // other candidate(s). If a parent of ours was already present then we\n+        // can be certain that no such child is also a candidate, so we can\n+        // skip the whole scan.\n+        for (auto it = setBlockIndexHeaderCandidates.rbegin(); it != setBlockIndexHeaderCandidates.rend() && (*it)->nChainWork > pindex->nChainWork; it++) {\n+            if ((*it)->GetAncestor(pindex->nHeight) == pindex) {\n+                // pindex is useless - even if there are other tips based on it\n+                // which we want in setBlockIndexHeaderCandidates, we're not\n+                // gonna find them here.",
      "path": "src/validation.cpp",
      "position": 159,
      "original_position": 159,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"going to find them here.\" :-)",
      "created_at": "2018-10-30T20:47:32Z",
      "updated_at": "2018-10-30T20:47:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r229479982",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229479982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1378,
      "original_line": 1378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229480065",
      "pull_request_review_id": 169992375,
      "id": 229480065,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ4MDA2NQ==",
      "diff_hunk": "@@ -1281,6 +1315,130 @@ static void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip) E\n     CheckForkWarningConditions();\n }\n \n+/**\n+ * Called when a header (re-)reached BLOCK_VALID_TREE.\n+ *\n+ * setBlockIndexHeaderCandidates is a bit more complicated than\n+ * setBlockIndexCandidates as setBlockIndexCandidates can be rather lazy\n+ * as everything in it is about to be connected. In our case, we may have many\n+ * headers above the tip leading down different chains, for which we really\n+ * only want to keep the tip of each chain.\n+ *\n+ * Works even if chainActive is empty!\n+ *\n+ * If chain_ordered_inertion, we assume that if pindex->pprev was previously a",
      "path": "src/validation.cpp",
      "position": 110,
      "original_position": 110,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be insertion?",
      "created_at": "2018-10-30T20:47:48Z",
      "updated_at": "2018-10-30T20:47:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r229480065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229480065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1329,
      "original_line": 1329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229480577",
      "pull_request_review_id": 169993028,
      "id": 229480577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ4MDU3Nw==",
      "diff_hunk": "@@ -107,10 +108,36 @@ class CChainState {\n private:\n     /**\n      * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n-     * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n-     * missing the data for the block.\n+     * as good as our current tip or better. Pruning nodes may be missing the data for the block.\n      */\n     std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+    /**\n+     * The set of all leaf CBlockIndex entries with BLOCK_VALID_TREE (for itself and all ancestors) and\n+     * as good as our current tip or better. Entries here are potential future candidates for insertion\n+     * into setBlockIndexCandidates, once we get all the required block data. Thus, entries here\n+     * represent chains on which we should be actively downloading block data.\n+     *\n+     * Note that we define \"as good as our current tip or better\" slightly differently here than in\n+     * setBlockIndexCandidates - we include things which will have a higher nSequence (but have the\n+     * same chain work) here, but do not include such entries in setBlockIndexCandidates. This is\n+     * because we prefer to also download towards chains which have the same total work as our current\n+     * chain (as an optimization since a reorg is very possible in such cases).\n+     *\n+     * Note that, unlike setBlockIndexCandidates, we only store \"leaf\" entries here, as we are not as\n+     * aggressively prune-able (setBlockIndexCandidates are things which we can, and usually do, try to\n+     * connect immediately, and thus entries dont stick around for long). Thus, it may be the case that",
      "path": "src/validation.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"Don't\" :-)",
      "created_at": "2018-10-30T20:49:19Z",
      "updated_at": "2018-10-30T20:49:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r229480577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229480577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229480628",
      "pull_request_review_id": 169993101,
      "id": 229480628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ4MDYyOA==",
      "diff_hunk": "@@ -3470,31 +3675,38 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CVali\n     // not process unrequested blocks.\n     bool fTooFarAhead = (pindex->nHeight > int(chainActive.Height() + MIN_BLOCKS_TO_KEEP));\n \n-    // TODO: Decouple this function from the block download logic by removing fRequested\n-    // This requires some new chain data structure to efficiently look up if a\n-    // block is in a chain leading to a candidate for best tip, despite not\n-    // being such a candidate itself.\n-\n     // TODO: deal better with return value and error conditions for duplicate\n     // and unrequested blocks.\n     if (fAlreadyHave) return true;\n-    if (!fRequested) {  // If we didn't ask for it:\n-        if (pindex->nTx != 0) return true;    // This is a previously-processed block that was pruned\n-        if (!fHasMoreOrSameWork) return true; // Don't process less-work chains\n-        if (fTooFarAhead) return true;        // Block height is too high\n-\n-        // Protect against DoS attacks from low-work chains.\n-        // If our tip is behind, a peer could try to send us\n-        // low-work blocks on a fake chain that we would never\n-        // request; don't process these.\n-        if (pindex->nChainWork < nMinimumChainWork) return true;\n+    if (!pindex->IsValid(BLOCK_VALID_TREE)) return true; // Parent block somewhere is invalid\n+    if (pindex->nTx != 0) return true;                   // This is a previously-processed block that was pruned\n+    if (fTooFarAhead) return true;                       // Block height is too high\n+\n+    bool parent_of_header_candidate = false;\n+    bool parent_of_min_chainwork_header_candidate = false;\n+    for (auto it = setBlockIndexHeaderCandidates.rbegin(); it != setBlockIndexHeaderCandidates.rend(); it++) {\n+        if ((*it)->GetAncestor(pindex->nHeight) == pindex) {\n+            parent_of_header_candidate = true;\n+            // Protect against DoS attacks from low-work chains.\n+            // If our tip is behind, a peer could try to send us\n+            // low-work blocks on a fake chain that we would never\n+            // request; don't process these.\n+            if ((*it)->nChainWork >= nMinimumChainWork) {\n+                parent_of_min_chainwork_header_candidate = true;\n+                break;\n+            }\n+        }\n+    }\n+    if (!fHasMoreOrSameWork && !parent_of_header_candidate) return true; // We dont think this block leads somewhere interesting",
      "path": "src/validation.cpp",
      "position": 507,
      "original_position": 507,
      "commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "original_commit_id": "bdaf9f96937769ae68ae6ca81193e12fc26a29ae",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"Don't\" :-)",
      "created_at": "2018-10-30T20:49:29Z",
      "updated_at": "2018-10-30T20:49:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/13937#discussion_r229480628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229480628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13937"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3700,
      "original_line": 3700,
      "side": "RIGHT"
    }
  ]
}