{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571",
    "id": 608003895,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjA4MDAzODk1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21571",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21571.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21571.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21571",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21571/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/81747b21719b3fa6b0fdfc3b084c0104d64903f9",
    "number": 21571,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: make sure non-IP peers get discouraged and disconnected (vasild)",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Split up from #20966, so that it can be backported easier. Merging this ahead of #20966 will also reduce the number of conflicts for that pull.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2021-04-02T12:22:20Z",
    "updated_at": "2022-08-18T18:20:31Z",
    "closed_at": "2021-04-06T08:30:01Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-04-06T08:30:01Z",
    "merge_commit_sha": "1a7dec77f610607b1f0c5113bd5b6939b04717df",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2104-testPointers",
      "ref": "2104-testPointers",
      "sha": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e08f3193b543017702d000c2263bccbefa981c14",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 79,
    "deletions": 30,
    "changed_files": 1,
    "commits": 3,
    "review_comments": 6,
    "comments": 3
  },
  "events": [
    {
      "event": "labeled",
      "id": 4545525224,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1NDU1MjUyMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4545525224",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T12:22:20Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "labeled",
      "id": 4545525225,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1NDU1MjUyMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4545525225",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T12:22:20Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "unlabeled",
      "id": 4545525529,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDU0NTUyNTUyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4545525529",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T12:22:27Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "renamed",
      "id": 4545567558,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDU0NTU2NzU1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4545567558",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T12:38:58Z",
      "rename": {
        "from": "test: make sure non-IP peers get discouraged and disconnected",
        "to": "test: make sure non-IP peers get discouraged and disconnected (vasild)"
      }
    },
    {
      "event": "commented",
      "id": 812571537,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU3MTUzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812571537",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T15:10:52Z",
      "updated_at": "2021-04-02T15:10:52Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21563 (net: Drop cs_sendProcessing mutex that guards nothing by hebasto)\n* #21244 (Move GetDataDir to ArgsManager by kiminuo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#issuecomment-812571537",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21571"
    },
    {
      "event": "reviewed",
      "id": 627072360,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI3MDcyMzYw",
      "url": null,
      "actor": null,
      "commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5\r\n\r\nA few optional suggestions follow.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#pullrequestreview-627072360",
      "submitted_at": "2021-04-02T16:23:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDZlMjQ2ZmE0NmYyMzA5ZTI5OThiNTQyZTRjMTA0ZDczZDI5MDcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d6e246fa46f2309e2998b542e4c104d73d29071",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d6e246fa46f2309e2998b542e4c104d73d29071",
      "tree": {
        "sha": "a96b2df57aff9577c8e7c7b85fe5afa8173431c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a96b2df57aff9577c8e7c7b85fe5afa8173431c3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e08f3193b543017702d000c2263bccbefa981c14",
          "sha": "e08f3193b543017702d000c2263bccbefa981c14",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e08f3193b543017702d000c2263bccbefa981c14"
        }
      ],
      "message": "test: use pointers in denialofservice_tests/peer_discouragement\n\nThis is a non-functional change that replaces the `CNode` on-stack\nvariables with `CNode` pointers.\n\nThe reason for this is that it would allow us to add those `CNode`s\nto `CConnman::vNodes[]` which in turn would allow us to check that they\nare disconnected properly - a `CNode` object must be in\n`CConnman::vNodes[]` in order for its `fDisconnect` flag to be set.\n\nIf we store pointers to the on-stack variables in `CConnman` then it\nwould crash at the end, trying to `delete` them.",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-02T16:32:46Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-01-20T10:26:43Z"
      },
      "sha": "4d6e246fa46f2309e2998b542e4c104d73d29071"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzdiYjZkYTM2OGI4NzcxMTAwNWI5MDlmNDUxZjk0OTA5NDAwMDky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637bb6da368b87711005b909f451f94909400092",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/637bb6da368b87711005b909f451f94909400092",
      "tree": {
        "sha": "d62f0a90d80cec3d9b63a80bdcabda530248260c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d62f0a90d80cec3d9b63a80bdcabda530248260c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d6e246fa46f2309e2998b542e4c104d73d29071",
          "sha": "4d6e246fa46f2309e2998b542e4c104d73d29071",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4d6e246fa46f2309e2998b542e4c104d73d29071"
        }
      ],
      "message": "test: also check disconnect in denialofservice_tests/peer_discouragement\n\nUse `CConnmanTest` instead of `CConnman` and add the nodes to it\nso that their `fDisconnect` flag is set during disconnection.",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-02T16:32:51Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-01-20T10:40:01Z"
      },
      "sha": "637bb6da368b87711005b909f451f94909400092"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTc0N2IyMTcxOWIzZmE2YjBmZGZjM2IwODRjMDEwNGQ2NDkwM2Y5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "tree": {
        "sha": "6c2bec5d768936348ef529b4acc2276d9232141b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c2bec5d768936348ef529b4acc2276d9232141b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637bb6da368b87711005b909f451f94909400092",
          "sha": "637bb6da368b87711005b909f451f94909400092",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/637bb6da368b87711005b909f451f94909400092"
        }
      ],
      "message": "test: make sure non-IP peers get discouraged and disconnected",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-02T16:33:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-01-20T10:54:17Z"
      },
      "sha": "81747b21719b3fa6b0fdfc3b084c0104d64903f9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4546283610,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDU0NjI4MzYxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4546283610",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T16:34:38Z"
    },
    {
      "event": "commented",
      "id": 812609747,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjYwOTc0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812609747",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-02T16:43:51Z",
      "updated_at": "2021-04-02T16:43:51Z",
      "author_association": "MEMBER",
      "body": "ACK 81747b21719b3fa6b0fdfc3b084c0104d64903f9\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#issuecomment-812609747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21571"
    },
    {
      "event": "reviewed",
      "id": 628699868,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4Njk5ODY4",
      "url": null,
      "actor": null,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "81747b21719b3fa6b0fdfc3b084c0104d64903f9 looks good\r\n\r\nI verified that the 3 commits in this PR are the same as the ones in https://github.com/bitcoin/bitcoin/pull/20966 (except conflict resolution and minor change in comment).\r\n\r\nI think it may be misleading if I ACK this PR, coz im the author of the commitz.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#pullrequestreview-628699868",
      "submitted_at": "2021-04-06T08:22:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
    },
    {
      "event": "merged",
      "id": 4555344815,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDU1NTM0NDgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4555344815",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1a7dec77f610607b1f0c5113bd5b6939b04717df",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a7dec77f610607b1f0c5113bd5b6939b04717df",
      "created_at": "2021-04-06T08:30:01Z"
    },
    {
      "event": "closed",
      "id": 4555344833,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDU1NTM0NDgzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4555344833",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T08:30:01Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4555347459,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTU1MzQ3NDU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4555347459",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T08:30:26Z"
    },
    {
      "event": "referenced",
      "id": 4555656044,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NTU2NTYwNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4555656044",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f97c957f471881a73b72ccceb5116628592d7e55",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/f97c957f471881a73b72ccceb5116628592d7e55",
      "created_at": "2021-04-06T09:29:07Z"
    },
    {
      "event": "referenced",
      "id": 4555656052,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NTU2NTYwNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4555656052",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6c7e0f699fd9cd7c5d115b890288fecbd08936fd",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/6c7e0f699fd9cd7c5d115b890288fecbd08936fd",
      "created_at": "2021-04-06T09:29:07Z"
    },
    {
      "event": "referenced",
      "id": 4555656060,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NTU2NTYwNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4555656060",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c6c1f062ecf3cac5fd7f68c4a919fdb475ed4a2b",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/c6c1f062ecf3cac5fd7f68c4a919fdb475ed4a2b",
      "created_at": "2021-04-06T09:29:07Z"
    },
    {
      "event": "commented",
      "id": 813981979,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzk4MTk3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813981979",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-06T09:40:00Z",
      "updated_at": "2021-04-06T09:40:00Z",
      "author_association": "MEMBER",
      "body": "Backported in #21614",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#issuecomment-813981979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21571"
    },
    {
      "event": "referenced",
      "id": 4557501404,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NTc1MDE0MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4557501404",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2be4116d32ee8b7529369b3fdaa5945c0ea1c16b",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/2be4116d32ee8b7529369b3fdaa5945c0ea1c16b",
      "created_at": "2021-04-06T15:24:22Z"
    },
    {
      "event": "referenced",
      "id": 4603795255,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MDM3OTUyNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4603795255",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dfeb6c10bba80dc91245318feb0ad1d879015a99",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/dfeb6c10bba80dc91245318feb0ad1d879015a99",
      "created_at": "2021-04-16T09:21:44Z"
    },
    {
      "event": "referenced",
      "id": 4603795260,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MDM3OTUyNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4603795260",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b765f41164663c93d63e5a401d3b23c586a4e4fe",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/b765f41164663c93d63e5a401d3b23c586a4e4fe",
      "created_at": "2021-04-16T09:21:44Z"
    },
    {
      "event": "referenced",
      "id": 4603795264,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MDM3OTUyNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4603795264",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "79cdb4a1984c90a4d9377fbb0dda7bdd61d57031",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/79cdb4a1984c90a4d9377fbb0dda7bdd61d57031",
      "created_at": "2021-04-16T09:21:44Z"
    },
    {
      "event": "locked",
      "id": 7216516932,
      "node_id": "LOE_lADOABII584ynZLyzwAAAAGuI09E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7216516932",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:20:31Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606307559",
      "pull_request_review_id": 627072360,
      "id": 606307559,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMwNzU1OQ==",
      "diff_hunk": "@@ -209,46 +210,94 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n {\n     const CChainParams& chainparams = Params();\n     auto banman = std::make_unique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    auto connman = std::make_unique<CConnmanTest>(0x1337, 0x1337, *m_node.addrman);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, banman.get(),\n                                        *m_node.scheduler, *m_node.chainman, *m_node.mempool, false);\n \n+    CNetAddr tor_netaddr;\n+    BOOST_REQUIRE(\n+        tor_netaddr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    const CService tor_service(tor_netaddr, Params().GetDefaultPort());",
      "path": "src/test/denialofservice_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "original_commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3d5eac6d\r\n```suggestion\r\n    const CService tor_service{tor_netaddr, Params().GetDefaultPort()};\r\n```",
      "created_at": "2021-04-02T16:15:59Z",
      "updated_at": "2021-04-02T16:34:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#discussion_r606307559",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606307559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606307936",
      "pull_request_review_id": 627072360,
      "id": 606307936,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMwNzkzNg==",
      "diff_hunk": "@@ -209,46 +210,94 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n {\n     const CChainParams& chainparams = Params();\n     auto banman = std::make_unique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    auto connman = std::make_unique<CConnmanTest>(0x1337, 0x1337, *m_node.addrman);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, banman.get(),\n                                        *m_node.scheduler, *m_node.chainman, *m_node.mempool, false);\n \n+    CNetAddr tor_netaddr;\n+    BOOST_REQUIRE(\n+        tor_netaddr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    const CService tor_service(tor_netaddr, Params().GetDefaultPort());\n+\n+    const std::array<CAddress, 3> addr{CAddress{ip(0xa0b0c001), NODE_NONE},\n+                                       CAddress{ip(0xa0b0c002), NODE_NONE},\n+                                       CAddress{tor_service, NODE_NONE}};\n+\n+    const CNetAddr other_addr{ip(0xa0b0ff01)}; // Not any of addr[].\n+\n+    std::array<CNode*, 3> nodes;\n+\n     banman->ClearBanned();\n-    CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode1(id++, NODE_NETWORK, INVALID_SOCKET, addr1, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode1.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode1);\n-    dummyNode1.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode1.GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n+    nodes[0] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[0], /* nKeyedNetGroupIn */ 0,\n+                         /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[0]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[0]);\n+    nodes[0]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[0]);\n+    peerLogic->Misbehaving(nodes[0]->GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n     {\n-        LOCK(dummyNode1.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode1));\n+        LOCK(nodes[0]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[0]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));\n-    BOOST_CHECK(!banman->IsDiscouraged(ip(0xa0b0c001|0x0000ff00))); // Different IP, not discouraged\n-\n-    CAddress addr2(ip(0xa0b0c002), NODE_NONE);\n-    CNode dummyNode2(id++, NODE_NETWORK, INVALID_SOCKET, addr2, /* nKeyedNetGroupIn */ 1, /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode2.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode2);\n-    dummyNode2.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode2.GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(!banman->IsDiscouraged(other_addr)); // Different address, not discouraged\n+\n+    nodes[1] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[1], /* nKeyedNetGroupIn */ 1,\n+                         /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[1]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[1]);\n+    nodes[1]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[1]);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(!banman->IsDiscouraged(addr2)); // 2 not discouraged yet...\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // ... but 1 still should be\n-    peerLogic->Misbehaving(dummyNode2.GetId(), 1, /* message */ \"\");         // 2 reaches discouragement threshold\n+    // [0] is still discouraged/disconnected.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    // [1] is not discouraged/disconnected yet.\n+    BOOST_CHECK(!banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(!nodes[1]->fDisconnect);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), 1, /* message */ \"\"); // [1] reaches discouragement threshold\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // Expect both 1 and 2\n-    BOOST_CHECK(banman->IsDiscouraged(addr2));  // to be discouraged now\n-\n-    peerLogic->FinalizeNode(dummyNode1);\n-    peerLogic->FinalizeNode(dummyNode2);\n+    // Expect both [0] and [1] to be discouraged/disconnected now.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(nodes[1]->fDisconnect);\n+\n+    // Make sure non-IP peers get discouraged and disconnected properly.",
      "path": "src/test/denialofservice_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "original_commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5\r\n```suggestion\r\n    // Make sure non-IP peers are discouraged and disconnected properly.\r\n```",
      "created_at": "2021-04-02T16:17:00Z",
      "updated_at": "2021-04-02T16:34:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#discussion_r606307936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606307936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606309650",
      "pull_request_review_id": 627072360,
      "id": 606309650,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMwOTY1MA==",
      "diff_hunk": "@@ -209,46 +210,94 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n {\n     const CChainParams& chainparams = Params();\n     auto banman = std::make_unique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    auto connman = std::make_unique<CConnmanTest>(0x1337, 0x1337, *m_node.addrman);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, banman.get(),\n                                        *m_node.scheduler, *m_node.chainman, *m_node.mempool, false);\n \n+    CNetAddr tor_netaddr;\n+    BOOST_REQUIRE(\n+        tor_netaddr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    const CService tor_service(tor_netaddr, Params().GetDefaultPort());\n+\n+    const std::array<CAddress, 3> addr{CAddress{ip(0xa0b0c001), NODE_NONE},\n+                                       CAddress{ip(0xa0b0c002), NODE_NONE},\n+                                       CAddress{tor_service, NODE_NONE}};\n+\n+    const CNetAddr other_addr{ip(0xa0b0ff01)}; // Not any of addr[].\n+\n+    std::array<CNode*, 3> nodes;\n+\n     banman->ClearBanned();\n-    CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode1(id++, NODE_NETWORK, INVALID_SOCKET, addr1, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode1.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode1);\n-    dummyNode1.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode1.GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n+    nodes[0] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[0], /* nKeyedNetGroupIn */ 0,\n+                         /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[0]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[0]);\n+    nodes[0]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[0]);\n+    peerLogic->Misbehaving(nodes[0]->GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n     {\n-        LOCK(dummyNode1.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode1));\n+        LOCK(nodes[0]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[0]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));\n-    BOOST_CHECK(!banman->IsDiscouraged(ip(0xa0b0c001|0x0000ff00))); // Different IP, not discouraged\n-\n-    CAddress addr2(ip(0xa0b0c002), NODE_NONE);\n-    CNode dummyNode2(id++, NODE_NETWORK, INVALID_SOCKET, addr2, /* nKeyedNetGroupIn */ 1, /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode2.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode2);\n-    dummyNode2.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode2.GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(!banman->IsDiscouraged(other_addr)); // Different address, not discouraged\n+\n+    nodes[1] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[1], /* nKeyedNetGroupIn */ 1,\n+                         /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[1]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[1]);\n+    nodes[1]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[1]);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(!banman->IsDiscouraged(addr2)); // 2 not discouraged yet...\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // ... but 1 still should be\n-    peerLogic->Misbehaving(dummyNode2.GetId(), 1, /* message */ \"\");         // 2 reaches discouragement threshold\n+    // [0] is still discouraged/disconnected.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    // [1] is not discouraged/disconnected yet.\n+    BOOST_CHECK(!banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(!nodes[1]->fDisconnect);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), 1, /* message */ \"\"); // [1] reaches discouragement threshold\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // Expect both 1 and 2\n-    BOOST_CHECK(banman->IsDiscouraged(addr2));  // to be discouraged now\n-\n-    peerLogic->FinalizeNode(dummyNode1);\n-    peerLogic->FinalizeNode(dummyNode2);\n+    // Expect both [0] and [1] to be discouraged/disconnected now.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(nodes[1]->fDisconnect);\n+\n+    // Make sure non-IP peers get discouraged and disconnected properly.\n+\n+    nodes[2] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[2], /* nKeyedNetGroupIn */ 1,",
      "path": "src/test/denialofservice_tests.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "original_commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d87815ea\r\n\r\n```diff\r\n@@ -231,9 +231,9 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\r\n-    nodes[0] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[0], /* nKeyedNetGroupIn */ 0,\r\n+    nodes[0] = new CNode{id++, NODE_NETWORK, INVALID_SOCKET, addr[0], /* nKeyedNetGroupIn */ 0,\r\n                          /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\",\r\n-                         ConnectionType::INBOUND, /* inbound_onion */ false);\r\n+                         ConnectionType::INBOUND, /* inbound_onion */ false};\r\n\r\n@@ -247,9 +247,9 @@ BOOST_AUTO_TEST_CASE(peer_discouragement) \r\n-    nodes[1] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[1], /* nKeyedNetGroupIn */ 1,\r\n+    nodes[1] = new CNode{id++, NODE_NETWORK, INVALID_SOCKET, addr[1], /* nKeyedNetGroupIn */ 1,\r\n                          /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\",\r\n-                         ConnectionType::INBOUND, /* inbound_onion */ false);\r\n+                         ConnectionType::INBOUND, /* inbound_onion */ false};\r\n```\r\n\r\n3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5\r\n\r\n```diff\r\n@@ -278,11 +278,11 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\r\n \r\n-    nodes[2] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[2], /* nKeyedNetGroupIn */ 1,\r\n+    nodes[2] = new CNode{id++, NODE_NETWORK, INVALID_SOCKET, addr[2], /* nKeyedNetGroupIn */ 1,\r\n                          /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\",\r\n-                         ConnectionType::OUTBOUND_FULL_RELAY, /* inbound_onion */ false);\r\n+                         ConnectionType::OUTBOUND_FULL_RELAY, /* inbound_onion */ false};\r\n```\r\n",
      "created_at": "2021-04-02T16:21:12Z",
      "updated_at": "2021-04-02T16:34:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#discussion_r606309650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606309650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606314885",
      "pull_request_review_id": 627092003,
      "id": 606314885,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxNDg4NQ==",
      "diff_hunk": "@@ -209,46 +210,94 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n {\n     const CChainParams& chainparams = Params();\n     auto banman = std::make_unique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    auto connman = std::make_unique<CConnmanTest>(0x1337, 0x1337, *m_node.addrman);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, banman.get(),\n                                        *m_node.scheduler, *m_node.chainman, *m_node.mempool, false);\n \n+    CNetAddr tor_netaddr;\n+    BOOST_REQUIRE(\n+        tor_netaddr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    const CService tor_service(tor_netaddr, Params().GetDefaultPort());",
      "path": "src/test/denialofservice_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "original_commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "in_reply_to_id": 606307559,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done",
      "created_at": "2021-04-02T16:35:01Z",
      "updated_at": "2021-04-02T16:35:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#discussion_r606314885",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606314885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606314917",
      "pull_request_review_id": 627092167,
      "id": 606314917,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxNDkxNw==",
      "diff_hunk": "@@ -209,46 +210,94 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n {\n     const CChainParams& chainparams = Params();\n     auto banman = std::make_unique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    auto connman = std::make_unique<CConnmanTest>(0x1337, 0x1337, *m_node.addrman);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, banman.get(),\n                                        *m_node.scheduler, *m_node.chainman, *m_node.mempool, false);\n \n+    CNetAddr tor_netaddr;\n+    BOOST_REQUIRE(\n+        tor_netaddr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    const CService tor_service(tor_netaddr, Params().GetDefaultPort());\n+\n+    const std::array<CAddress, 3> addr{CAddress{ip(0xa0b0c001), NODE_NONE},\n+                                       CAddress{ip(0xa0b0c002), NODE_NONE},\n+                                       CAddress{tor_service, NODE_NONE}};\n+\n+    const CNetAddr other_addr{ip(0xa0b0ff01)}; // Not any of addr[].\n+\n+    std::array<CNode*, 3> nodes;\n+\n     banman->ClearBanned();\n-    CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode1(id++, NODE_NETWORK, INVALID_SOCKET, addr1, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode1.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode1);\n-    dummyNode1.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode1.GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n+    nodes[0] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[0], /* nKeyedNetGroupIn */ 0,\n+                         /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[0]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[0]);\n+    nodes[0]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[0]);\n+    peerLogic->Misbehaving(nodes[0]->GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n     {\n-        LOCK(dummyNode1.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode1));\n+        LOCK(nodes[0]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[0]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));\n-    BOOST_CHECK(!banman->IsDiscouraged(ip(0xa0b0c001|0x0000ff00))); // Different IP, not discouraged\n-\n-    CAddress addr2(ip(0xa0b0c002), NODE_NONE);\n-    CNode dummyNode2(id++, NODE_NETWORK, INVALID_SOCKET, addr2, /* nKeyedNetGroupIn */ 1, /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode2.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode2);\n-    dummyNode2.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode2.GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(!banman->IsDiscouraged(other_addr)); // Different address, not discouraged\n+\n+    nodes[1] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[1], /* nKeyedNetGroupIn */ 1,\n+                         /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[1]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[1]);\n+    nodes[1]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[1]);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(!banman->IsDiscouraged(addr2)); // 2 not discouraged yet...\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // ... but 1 still should be\n-    peerLogic->Misbehaving(dummyNode2.GetId(), 1, /* message */ \"\");         // 2 reaches discouragement threshold\n+    // [0] is still discouraged/disconnected.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    // [1] is not discouraged/disconnected yet.\n+    BOOST_CHECK(!banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(!nodes[1]->fDisconnect);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), 1, /* message */ \"\"); // [1] reaches discouragement threshold\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // Expect both 1 and 2\n-    BOOST_CHECK(banman->IsDiscouraged(addr2));  // to be discouraged now\n-\n-    peerLogic->FinalizeNode(dummyNode1);\n-    peerLogic->FinalizeNode(dummyNode2);\n+    // Expect both [0] and [1] to be discouraged/disconnected now.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(nodes[1]->fDisconnect);\n+\n+    // Make sure non-IP peers get discouraged and disconnected properly.",
      "path": "src/test/denialofservice_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "original_commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "in_reply_to_id": 606307936,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done",
      "created_at": "2021-04-02T16:35:06Z",
      "updated_at": "2021-04-02T16:35:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#discussion_r606314917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606314917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606314969",
      "pull_request_review_id": 627092339,
      "id": 606314969,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxNDk2OQ==",
      "diff_hunk": "@@ -209,46 +210,94 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n {\n     const CChainParams& chainparams = Params();\n     auto banman = std::make_unique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    auto connman = std::make_unique<CConnmanTest>(0x1337, 0x1337, *m_node.addrman);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, banman.get(),\n                                        *m_node.scheduler, *m_node.chainman, *m_node.mempool, false);\n \n+    CNetAddr tor_netaddr;\n+    BOOST_REQUIRE(\n+        tor_netaddr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    const CService tor_service(tor_netaddr, Params().GetDefaultPort());\n+\n+    const std::array<CAddress, 3> addr{CAddress{ip(0xa0b0c001), NODE_NONE},\n+                                       CAddress{ip(0xa0b0c002), NODE_NONE},\n+                                       CAddress{tor_service, NODE_NONE}};\n+\n+    const CNetAddr other_addr{ip(0xa0b0ff01)}; // Not any of addr[].\n+\n+    std::array<CNode*, 3> nodes;\n+\n     banman->ClearBanned();\n-    CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode1(id++, NODE_NETWORK, INVALID_SOCKET, addr1, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode1.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode1);\n-    dummyNode1.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode1.GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n+    nodes[0] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[0], /* nKeyedNetGroupIn */ 0,\n+                         /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[0]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[0]);\n+    nodes[0]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[0]);\n+    peerLogic->Misbehaving(nodes[0]->GetId(), DISCOURAGEMENT_THRESHOLD, /* message */ \"\"); // Should be discouraged\n     {\n-        LOCK(dummyNode1.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode1));\n+        LOCK(nodes[0]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[0]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));\n-    BOOST_CHECK(!banman->IsDiscouraged(ip(0xa0b0c001|0x0000ff00))); // Different IP, not discouraged\n-\n-    CAddress addr2(ip(0xa0b0c002), NODE_NONE);\n-    CNode dummyNode2(id++, NODE_NETWORK, INVALID_SOCKET, addr2, /* nKeyedNetGroupIn */ 1, /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n-    dummyNode2.SetCommonVersion(PROTOCOL_VERSION);\n-    peerLogic->InitializeNode(&dummyNode2);\n-    dummyNode2.fSuccessfullyConnected = true;\n-    peerLogic->Misbehaving(dummyNode2.GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(!banman->IsDiscouraged(other_addr)); // Different address, not discouraged\n+\n+    nodes[1] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[1], /* nKeyedNetGroupIn */ 1,\n+                         /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\",\n+                         ConnectionType::INBOUND, /* inbound_onion */ false);\n+    nodes[1]->SetCommonVersion(PROTOCOL_VERSION);\n+    peerLogic->InitializeNode(nodes[1]);\n+    nodes[1]->fSuccessfullyConnected = true;\n+    connman->AddNode(*nodes[1]);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), DISCOURAGEMENT_THRESHOLD - 1, /* message */ \"\");\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(!banman->IsDiscouraged(addr2)); // 2 not discouraged yet...\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // ... but 1 still should be\n-    peerLogic->Misbehaving(dummyNode2.GetId(), 1, /* message */ \"\");         // 2 reaches discouragement threshold\n+    // [0] is still discouraged/disconnected.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    // [1] is not discouraged/disconnected yet.\n+    BOOST_CHECK(!banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(!nodes[1]->fDisconnect);\n+    peerLogic->Misbehaving(nodes[1]->GetId(), 1, /* message */ \"\"); // [1] reaches discouragement threshold\n     {\n-        LOCK(dummyNode2.cs_sendProcessing);\n-        BOOST_CHECK(peerLogic->SendMessages(&dummyNode2));\n+        LOCK(nodes[1]->cs_sendProcessing);\n+        BOOST_CHECK(peerLogic->SendMessages(nodes[1]));\n     }\n-    BOOST_CHECK(banman->IsDiscouraged(addr1));  // Expect both 1 and 2\n-    BOOST_CHECK(banman->IsDiscouraged(addr2));  // to be discouraged now\n-\n-    peerLogic->FinalizeNode(dummyNode1);\n-    peerLogic->FinalizeNode(dummyNode2);\n+    // Expect both [0] and [1] to be discouraged/disconnected now.\n+    BOOST_CHECK(banman->IsDiscouraged(addr[0]));\n+    BOOST_CHECK(nodes[0]->fDisconnect);\n+    BOOST_CHECK(banman->IsDiscouraged(addr[1]));\n+    BOOST_CHECK(nodes[1]->fDisconnect);\n+\n+    // Make sure non-IP peers get discouraged and disconnected properly.\n+\n+    nodes[2] = new CNode(id++, NODE_NETWORK, INVALID_SOCKET, addr[2], /* nKeyedNetGroupIn */ 1,",
      "path": "src/test/denialofservice_tests.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "81747b21719b3fa6b0fdfc3b084c0104d64903f9",
      "original_commit_id": "3d5eac6dc3f9911a548a76eee3b6532ea3e02bb5",
      "in_reply_to_id": 606309650,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done",
      "created_at": "2021-04-02T16:35:12Z",
      "updated_at": "2021-04-02T16:35:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21571#discussion_r606314969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606314969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    }
  ]
}