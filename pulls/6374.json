{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374",
    "id": 39201297,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzkyMDEyOTc=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6374",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/6374.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/6374.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/027de94e1fba5484aed2393afd89edbaaffdb0eb",
    "number": 6374,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Connection slot exhaustion DoS mitigation",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Connection slots are a limited resource which can be the target of DoS attacks.\n\nThis issue was introduced in 2011 by 5a3e82f.\n\nIn mitigating this issue it is important to take steps to avoid network partitioning.\n\nI have taken the approach of protecting connections with various properties from eviction.\n\nOf the nodes still available for eviction the most recently connected node from the CNetAddr with the most connections is selected and evicted.\n\nThe largest class of protected connections is those which have been connected for the longest time. \nThe intent is to maintain the strong bias towards these connections which exists today and thus avoid any risk of network partition.\n",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2015-07-04T02:13:33Z",
    "updated_at": "2021-09-08T10:55:33Z",
    "closed_at": "2015-09-03T16:27:17Z",
    "mergeable_state": "unknown",
    "merged_at": "2015-09-03T16:27:17Z",
    "merge_commit_sha": "e5305008a037aaf0d2b174d1982f86a1b071b059",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "pstratem:connlimit-fix",
      "ref": "connlimit-fix",
      "sha": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ea19c2bc3f2281ad319457c6fa518bff96af13e3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 220,
    "deletions": 99,
    "changed_files": 4,
    "commits": 15,
    "review_comments": 26,
    "comments": 20
  },
  "events": [
    {
      "event": "labeled",
      "id": 347976347,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0Nzk3NjM0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/347976347",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-05T07:46:45Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 118594113,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExODU5NDExMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118594113",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-05T07:46:54Z",
      "updated_at": "2015-07-05T07:46:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "This has been tested by setting up a node and then connected to it from the same source ip in a loop.\n\nAdditional testing is needed around multiple source ips.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-118594113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "commented",
      "id": 118594345,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExODU5NDM0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118594345",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-05T07:55:25Z",
      "updated_at": "2015-07-05T09:14:17Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\n\nThis does need extensive testing in various scenarios - e.g. what happens with Tor hidden service connections, which all appear to come from one IP (localhost) address.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-118594345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "commented",
      "id": 118596476,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExODU5NjQ3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118596476",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-05T08:47:17Z",
      "updated_at": "2015-07-05T08:47:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested with multiple inbound connections from 128+ source ips.\n\nLong lived connections were stable and the newer connections dropped.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-118596476",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "commented",
      "id": 119017939,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExOTAxNzkzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119017939",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-06T22:39:45Z",
      "updated_at": "2015-07-06T22:39:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pstratem How did you actually test that?\n\nWe could make good use of automated scripts to make such testing relocatable.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-119017939",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 349147298,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MTQ3Mjk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/349147298",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-06T22:39:45Z"
    },
    {
      "event": "subscribed",
      "id": 349147299,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTE0NzI5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/349147299",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-06T22:39:46Z"
    },
    {
      "event": "commented",
      "id": 119026601,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExOTAyNjYwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119026601",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-06T23:28:32Z",
      "updated_at": "2015-07-06T23:28:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "@petertodd python script that connects to the node in a loop running on top of torify and me sitting there hitting \"new identity\" in vidalia a bunch until i had unique ips connecting...\n\nnot exactly an automated process\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-119026601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 349174840,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MTc0ODQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/349174840",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-06T23:28:32Z"
    },
    {
      "event": "subscribed",
      "id": 349174841,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTE3NDg0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/349174841",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-06T23:28:32Z"
    },
    {
      "event": "commented",
      "id": 120766274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDc2NjI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120766274",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-12T21:55:51Z",
      "updated_at": "2015-07-12T21:55:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj Missed the second part of your comment.\n\nThis wont ever evict localhost connections, so inbound connections to a hidden service wont ever be disconnected by this.\n\nThat's actually not optimal, but unfortunately getting info on inbound hidden service connections requires interfacing with tors control port.\n\nThat's definitely out of scope for this patch set.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-120766274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 353880041,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUzODgwMDQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/353880041",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-12T21:55:51Z"
    },
    {
      "event": "subscribed",
      "id": 353880042,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Mzg4MDA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/353880042",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-12T21:55:51Z"
    },
    {
      "event": "commented",
      "id": 125515815,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTUxNTgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/125515815",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-28T09:16:09Z",
      "updated_at": "2015-07-28T09:16:31Z",
      "author_association": "MEMBER",
      "body": "@pstratem Absolutely - I wasn't implying that you'd have to interact with Tor's control port in this pull, just that it's a requirement that it didn't make the current situation worse.\n\nNeeds a trivial rebase in net.cpp due to #5288.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-125515815",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 366989614,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2OTg5NjE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/366989614",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-28T09:16:09Z"
    },
    {
      "event": "subscribed",
      "id": 366989615,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2Njk4OTYxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/366989615",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-28T09:16:09Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 130619710,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYxOTcxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/130619710",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-13T11:08:38Z",
      "updated_at": "2015-08-13T11:08:38Z",
      "author_association": "MEMBER",
      "body": "Spoke with @pstratem about this for a bit and we agreed this should be refactored so that the connection acceptance stuff is in a separate function. Also after this change the nWhiteConnections variable is set in init but goes unused.\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-130619710",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 381310981,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgxMzEwOTgx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/381310981",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-13T11:08:38Z"
    },
    {
      "event": "subscribed",
      "id": 381310982,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MTMxMDk4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/381310982",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-13T11:08:38Z"
    },
    {
      "event": "commented",
      "id": 130902260,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDkwMjI2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/130902260",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T00:35:50Z",
      "updated_at": "2015-08-14T00:35:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt I've simply removed the whiteconnections option in favor of protecting any inbound whitelisted connection.  This is safe as outbound connections are never disconnected.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-130902260",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 382091118,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgyMDkxMTE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/382091118",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T00:35:50Z"
    },
    {
      "event": "subscribed",
      "id": 382091119,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MjA5MTExOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/382091119",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T00:35:50Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNTY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNjA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNjM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNjg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNzE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "mentioned",
      "id": 382371616,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgyMzcxNjE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/382371616",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T09:14:49Z"
    },
    {
      "event": "subscribed",
      "id": 382371617,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MjM3MTYxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/382371617",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T09:14:49Z"
    },
    {
      "event": "mentioned",
      "id": 382371844,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgyMzcxODQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/382371844",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T09:15:01Z"
    },
    {
      "event": "subscribed",
      "id": 382371846,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MjM3MTg0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/382371846",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T09:15:01Z"
    },
    {
      "event": "commented",
      "id": 131036709,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTAzNjcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/131036709",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T09:15:21Z",
      "updated_at": "2015-08-14T09:15:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-131036709",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 383230972,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgzMjMwOTcy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/383230972",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-15T11:24:18Z"
    },
    {
      "event": "subscribed",
      "id": 383230973,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MzIzMDk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/383230973",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-15T11:24:18Z"
    },
    {
      "event": "mentioned",
      "id": 383231277,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgzMjMxMjc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/383231277",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-15T11:28:03Z"
    },
    {
      "event": "subscribed",
      "id": 383231278,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MzIzMTI3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/383231278",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-15T11:28:03Z"
    },
    {
      "event": "mentioned",
      "id": 383418148,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgzNDE4MTQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/383418148",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-15T23:35:44Z"
    },
    {
      "event": "subscribed",
      "id": 383418149,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MzQxODE0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/383418149",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-15T23:35:44Z"
    },
    {
      "event": "commented",
      "id": 131842931,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTg0MjkzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/131842931",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-17T14:36:37Z",
      "updated_at": "2015-08-17T14:36:37Z",
      "author_association": "MEMBER",
      "body": "I think i'm missing a thing: how does this change make `whiteconnections` redundant? There is no information in the commit message.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-131842931",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "commented",
      "id": 132817334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjgxNzMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132817334",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T22:56:50Z",
      "updated_at": "2015-08-19T22:56:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj All whitelisted connections are protected.  Which makes a parameter for protecting a specific number of whitelisted connections redundant.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-132817334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 387110928,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzg3MTEwOTI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/387110928",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T22:56:50Z"
    },
    {
      "event": "subscribed",
      "id": 387110929,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4NzExMDkyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/387110929",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T22:56:50Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNzM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNzU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxNzg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDFhMWRkOWU2NjRhYzBiMzkyOWFiZWFjNDIxOTBhYzhlODhmYzIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/541a1dd9e664ac0b3929abeac42190ac8e88fc21",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/541a1dd9e664ac0b3929abeac42190ac8e88fc21",
      "tree": {
        "sha": "c8677b928ba29bcfd769d0645b805192487b64b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8677b928ba29bcfd769d0645b805192487b64b8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49793fbb097e9f00149a054adeddad07f0444c12",
          "sha": "49793fbb097e9f00149a054adeddad07f0444c12",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49793fbb097e9f00149a054adeddad07f0444c12"
        }
      ],
      "message": "Refactor: AcceptConnection",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:23Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-13T09:00:10Z"
      },
      "sha": "541a1dd9e664ac0b3929abeac42190ac8e88fc21"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWY0ODE3NjE0NzdlMjY2NTFkYzU2YjQzNzhiMTQ2Y2Q1YzQxNmRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ef481761477e26651dc56b4378b146cd5c416db",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1ef481761477e26651dc56b4378b146cd5c416db",
      "tree": {
        "sha": "db1df3a748cbb90d3c06efc7bfc3f2496f2688fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db1df3a748cbb90d3c06efc7bfc3f2496f2688fa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/541a1dd9e664ac0b3929abeac42190ac8e88fc21",
          "sha": "541a1dd9e664ac0b3929abeac42190ac8e88fc21",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/541a1dd9e664ac0b3929abeac42190ac8e88fc21"
        }
      ],
      "message": "Refactor: Bail early in AcceptConnection",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:23Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-13T09:16:46Z"
      },
      "sha": "1ef481761477e26651dc56b4378b146cd5c416db"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTAzN2I3MDdjZTE2NDA4Nzc5MGYxNDljMDQ4ODcxYzY2ZTE0Y2Zk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae037b707ce164087790f149c048871c66e14cfd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ae037b707ce164087790f149c048871c66e14cfd",
      "tree": {
        "sha": "83ec6a96f200bf98bc2a939634db1170ba9e81d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83ec6a96f200bf98bc2a939634db1170ba9e81d2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ef481761477e26651dc56b4378b146cd5c416db",
          "sha": "1ef481761477e26651dc56b4378b146cd5c416db",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1ef481761477e26651dc56b4378b146cd5c416db"
        }
      ],
      "message": "Refactor: Move failure conditions to the top of AcceptConnection",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:23Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-13T09:19:17Z"
      },
      "sha": "ae037b707ce164087790f149c048871c66e14cfd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmFjNjAxNjEwMjlkZTZkNzFlZjFlNTFlN2FmODAzY2U2ZmI4NDA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bac60161029de6d71ef1e51e7af803ce6fb8405",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4bac60161029de6d71ef1e51e7af803ce6fb8405",
      "tree": {
        "sha": "2d8ff260f263ea341c9d6fef7eb564c355144d4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d8ff260f263ea341c9d6fef7eb564c355144d4c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae037b707ce164087790f149c048871c66e14cfd",
          "sha": "ae037b707ce164087790f149c048871c66e14cfd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae037b707ce164087790f149c048871c66e14cfd"
        }
      ],
      "message": "Record nMinPingUsecTime",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:23Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-13T09:31:46Z"
      },
      "sha": "4bac60161029de6d71ef1e51e7af803ce6fb8405"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzcwMTUzN2M4ZmM3ZjRjZmIwMTYzZWMxZjQ5NjYyMTIwZTYxZWI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c701537c8fc7f4cfb0163ec1f49662120e61eb7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2c701537c8fc7f4cfb0163ec1f49662120e61eb7",
      "tree": {
        "sha": "8a214908600caeecd4d27ecd0ea9691e34bed0f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a214908600caeecd4d27ecd0ea9691e34bed0f7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bac60161029de6d71ef1e51e7af803ce6fb8405",
          "sha": "4bac60161029de6d71ef1e51e7af803ce6fb8405",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4bac60161029de6d71ef1e51e7af803ce6fb8405"
        }
      ],
      "message": "AttemptToEvictConnection",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-13T09:58:58Z"
      },
      "sha": "2c701537c8fc7f4cfb0163ec1f49662120e61eb7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTA1YmEzOThiMjA3ODllYjQ4MmU0NWYyNmFlMTc2MTgwMGI4MWJl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b105ba398b20789eb482e45f26ae1761800b81be",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b105ba398b20789eb482e45f26ae1761800b81be",
      "tree": {
        "sha": "117cca0214e0f9ab7a6cf757755475b1bc53e6f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/117cca0214e0f9ab7a6cf757755475b1bc53e6f9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c701537c8fc7f4cfb0163ec1f49662120e61eb7",
          "sha": "2c701537c8fc7f4cfb0163ec1f49662120e61eb7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2c701537c8fc7f4cfb0163ec1f49662120e61eb7"
        }
      ],
      "message": "Prefer to disconnect peers in favor of whitelisted peers",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-14T00:22:35Z"
      },
      "sha": "b105ba398b20789eb482e45f26ae1761800b81be"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGY2ZTQ1MjQ5ZTgxNTQxNGNjOTllN2I1OTRhOGE3YWI3YWI5MjQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8f6e45249e815414cc99e7b594a8a7ab7ab9247",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8f6e45249e815414cc99e7b594a8a7ab7ab9247",
      "tree": {
        "sha": "4e64a78c1aa4be6c0940eea111b975484765244b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e64a78c1aa4be6c0940eea111b975484765244b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b105ba398b20789eb482e45f26ae1761800b81be",
          "sha": "b105ba398b20789eb482e45f26ae1761800b81be",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b105ba398b20789eb482e45f26ae1761800b81be"
        }
      ],
      "message": "Remove redundant whiteconnections option",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-14T00:32:57Z"
      },
      "sha": "a8f6e45249e815414cc99e7b594a8a7ab7ab9247"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjIzOTM3NDIyNGU2NTg1ZDViNmJhMzdhMzkyODJkMGZjNjQ3MTcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df239374224e6585d5b6ba37a39282d0fc647173",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df239374224e6585d5b6ba37a39282d0fc647173",
      "tree": {
        "sha": "55d7c556f35241f91699566427c024575962ca26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55d7c556f35241f91699566427c024575962ca26"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8f6e45249e815414cc99e7b594a8a7ab7ab9247",
          "sha": "a8f6e45249e815414cc99e7b594a8a7ab7ab9247",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8f6e45249e815414cc99e7b594a8a7ab7ab9247"
        }
      ],
      "message": "Add comments to AttemptToEvictConnection",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-20T23:47:49Z"
      },
      "sha": "df239374224e6585d5b6ba37a39282d0fc647173"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzE3Y2QxOTI4YWZiYWUxNGZlZGIzOWM4ZDIzNTg5YTMyZmUyOTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1317cd1928afbae14fedb39c8d23589a32fe2951",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1317cd1928afbae14fedb39c8d23589a32fe2951",
      "tree": {
        "sha": "d118302220f1907d931c0ede0bff57e50769cd57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d118302220f1907d931c0ede0bff57e50769cd57"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df239374224e6585d5b6ba37a39282d0fc647173",
          "sha": "df239374224e6585d5b6ba37a39282d0fc647173",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df239374224e6585d5b6ba37a39282d0fc647173"
        }
      ],
      "message": "RAII wrapper for CNode*",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-21T00:29:04Z"
      },
      "sha": "1317cd1928afbae14fedb39c8d23589a32fe2951"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2YzNTMzYzg0ODRmMDI3MzJmZmY1Y2YwMDRkMjUxYzBkZjUwZWI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17f3533c8484f02732fff5cf004d251c0df50eb8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/17f3533c8484f02732fff5cf004d251c0df50eb8",
      "tree": {
        "sha": "880b188bf54056f929bbd1066dde6bbff91015c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/880b188bf54056f929bbd1066dde6bbff91015c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1317cd1928afbae14fedb39c8d23589a32fe2951",
          "sha": "1317cd1928afbae14fedb39c8d23589a32fe2951",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1317cd1928afbae14fedb39c8d23589a32fe2951"
        }
      ],
      "message": "Better support for nodes with non-standard nMaxConnections",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T01:42:05Z"
      },
      "sha": "17f3533c8484f02732fff5cf004d251c0df50eb8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzgxZGQwMmExZDVmNDdjYTQ1Zjc0NTc3ZTA2OTZkZmJhNmZhMTVj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc81dd02a1d5f47ca45f74577e0696dfba6fa15c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dc81dd02a1d5f47ca45f74577e0696dfba6fa15c",
      "tree": {
        "sha": "5da7ab8cadd3c501d2ca8c74f0d53267ee184c20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5da7ab8cadd3c501d2ca8c74f0d53267ee184c20"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17f3533c8484f02732fff5cf004d251c0df50eb8",
          "sha": "17f3533c8484f02732fff5cf004d251c0df50eb8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/17f3533c8484f02732fff5cf004d251c0df50eb8"
        }
      ],
      "message": "Return false early if vEvictionCandidates is empty",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:38:24Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-22T22:15:39Z"
      },
      "sha": "dc81dd02a1d5f47ca45f74577e0696dfba6fa15c"
    },
    {
      "event": "commented",
      "id": 133976983,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzk3Njk4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133976983",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-24T00:56:57Z",
      "updated_at": "2015-08-24T00:56:57Z",
      "author_association": "MEMBER",
      "body": "utACK (may want to squash a few of the last commits, but doesnt matter).\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-133976983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "commented",
      "id": 134427007,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDQyNzAwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134427007",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T00:41:52Z",
      "updated_at": "2015-08-25T00:41:52Z",
      "author_association": "MEMBER",
      "body": "@pstratem Fair enough.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-134427007",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 391194964,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkxMTk0OTY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/391194964",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T00:41:52Z"
    },
    {
      "event": "subscribed",
      "id": 391194965,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MTE5NDk2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/391194965",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T00:41:52Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjIxODA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWVlMWFhYjAwYjkxODk4NjVkZmNhNmZiNWMzM2M2MWEzYzNlYTY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69ee1aab00b9189865dfca6fb5c33c61a3c3ea67",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/69ee1aab00b9189865dfca6fb5c33c61a3c3ea67",
      "tree": {
        "sha": "bb01c3191c1b86126dc2e11cb45a23a54ae13914",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb01c3191c1b86126dc2e11cb45a23a54ae13914"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc81dd02a1d5f47ca45f74577e0696dfba6fa15c",
          "sha": "dc81dd02a1d5f47ca45f74577e0696dfba6fa15c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dc81dd02a1d5f47ca45f74577e0696dfba6fa15c"
        }
      ],
      "message": "CNodeRef copy constructor and assignment operator",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T22:33:29Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T22:33:29Z"
      },
      "sha": "69ee1aab00b9189865dfca6fb5c33c61a3c3ea67"
    },
    {
      "event": "commented",
      "id": 134761989,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc2MTk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134761989",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T22:39:36Z",
      "updated_at": "2015-08-25T22:39:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa you're commenting on a commit from ~13 days ago, most of those issues have been fixed since\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-134761989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 392228742,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkyMjI4NzQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392228742",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T22:39:36Z"
    },
    {
      "event": "subscribed",
      "id": 392228743,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MjIyODc0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392228743",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T22:39:36Z"
    },
    {
      "event": "commented",
      "id": 134767316,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc2NzMxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134767316",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:13:34Z",
      "updated_at": "2015-08-25T23:13:34Z",
      "author_association": "MEMBER",
      "body": "@pstratem I'm going through the commits one by one.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-134767316",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 392249278,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkyMjQ5Mjc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392249278",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:13:34Z"
    },
    {
      "event": "subscribed",
      "id": 392249279,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MjI0OTI3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392249279",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:13:34Z"
    },
    {
      "event": "commented",
      "id": 134767538,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc2NzUzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134767538",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:15:20Z",
      "updated_at": "2015-08-25T23:15:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa ah ok then\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-134767538",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 392250194,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkyMjUwMTk0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392250194",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:15:20Z"
    },
    {
      "event": "subscribed",
      "id": 392250195,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MjI1MDE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392250195",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:15:20Z"
    },
    {
      "event": "commented",
      "id": 134769027,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc2OTAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134769027",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-25T23:24:21Z",
      "updated_at": "2015-08-25T23:24:21Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. I think that calling AddRef/Release without holding cs_vNodes should not be done.\n\nI think the biases can be improved still - for example by computing a score per node based on ping time, and then penalizing the scores of nodes from the same netgroup if there are multiple. But that can be done later.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-134769027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWQzMDk0MGVmMjJmMjQyYjlkYWRhMmRjNGY3YzUzNDhmYWY4OTIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fed30940ef22f242b9dada2dc4f7c5348faf8922",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fed30940ef22f242b9dada2dc4f7c5348faf8922",
      "tree": {
        "sha": "c397e6d31f3ab7dc4b723bb4cc9dc6fd6f7512ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c397e6d31f3ab7dc4b723bb4cc9dc6fd6f7512ea"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69ee1aab00b9189865dfca6fb5c33c61a3c3ea67",
          "sha": "69ee1aab00b9189865dfca6fb5c33c61a3c3ea67",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/69ee1aab00b9189865dfca6fb5c33c61a3c3ea67"
        }
      ],
      "message": "Acquire cs_vNodes before changing refrence counts",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:30:02Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:30:02Z"
      },
      "sha": "fed30940ef22f242b9dada2dc4f7c5348faf8922"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDBjMThhYWNlZWViZGNhZjY1NTA4ZmNkYzNkMDAzOTc5NzFkY2Fl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/000c18aaceeebdcaf65508fcdc3d00397971dcae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/000c18aaceeebdcaf65508fcdc3d00397971dcae",
      "tree": {
        "sha": "fd59febebcce3aa0ba7cb550aa5e5765b782e264",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd59febebcce3aa0ba7cb550aa5e5765b782e264"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fed30940ef22f242b9dada2dc4f7c5348faf8922",
          "sha": "fed30940ef22f242b9dada2dc4f7c5348faf8922",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fed30940ef22f242b9dada2dc4f7c5348faf8922"
        }
      ],
      "message": "Fix comment",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:31:13Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:31:13Z"
      },
      "sha": "000c18aaceeebdcaf65508fcdc3d00397971dcae"
    },
    {
      "event": "commented",
      "id": 134775073,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc3NTA3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134775073",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-26T00:08:16Z",
      "updated_at": "2015-08-26T00:08:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa this is definitely intended mostly as a framework, the initial rules are an improvement but certainly not intended to be the final set of rules.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-134775073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "mentioned",
      "id": 392279123,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkyMjc5MTIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392279123",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-26T00:08:16Z"
    },
    {
      "event": "subscribed",
      "id": 392279124,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MjI3OTEyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/392279124",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-26T00:08:16Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjdkZTk0ZTFmYmE1NDg0YWVkMjM5M2FmZDg5ZWRiYWFmZmRiMGVi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "tree": {
        "sha": "f6feda479eed58f628c375b1834101b7a805f895",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6feda479eed58f628c375b1834101b7a805f895"
      },
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "payload": "tree f6feda479eed58f628c375b1834101b7a805f895\nparent 000c18aaceeebdcaf65508fcdc3d00397971dcae\nauthor Patrick Strateman <patrick.strateman@gmail.com> 1440547575 -0700\ncommitter Patrick Strateman <patrick.strateman@gmail.com> 1440997754 -0700\n\nUse network group instead of CNetAddr in final pass to select node to disconnect\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJV4+GBAAoJEHfoBoKoPbQO6cMH+gMJvZkwobFoe0W4KaJdF0tv\n3AtjqLXXJKgsHJrWV5tkZyT5DnoQW1lhUcb9A2xdE3gpJtWaUp2k3cfgno6szakF\npja2iJHrnr9N74lWRA4Hh83DZLDmJeYIuczIlTvkjebBdxkTXyWuM7Zfn0XvIl9s\njGgVRyYYkpYR2XlLM3+kQikDd8Suj+5IBuBdaZpX0HdYiyS2CWxbe9H+aDR+rMVq\neddUxryNGXM11mnO8YpmDG90XGA2/xz6TgKarQYALXFsF20Fi2JnPZ6U7igkR/au\n49dSAYkJgXQLCZpsZ3b9KTU8aF658njOJX/kFh/mvy6fNM9BdOLISm/kDizZ3Vs=\n=tFij\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/000c18aaceeebdcaf65508fcdc3d00397971dcae",
          "sha": "000c18aaceeebdcaf65508fcdc3d00397971dcae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/000c18aaceeebdcaf65508fcdc3d00397971dcae"
        }
      ],
      "message": "Use network group instead of CNetAddr in final pass to select node to disconnect",
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-31T05:09:14Z"
      },
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-26T00:06:15Z"
      },
      "sha": "027de94e1fba5484aed2393afd89edbaaffdb0eb"
    },
    {
      "event": "commented",
      "id": 137502499,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzUwMjQ5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/137502499",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T16:23:31Z",
      "updated_at": "2015-09-03T16:23:31Z",
      "author_association": "MEMBER",
      "body": "utACK\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#issuecomment-137502499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6374"
    },
    {
      "event": "merged",
      "id": 400267485,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDAwMjY3NDg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/400267485",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "created_at": "2015-09-03T16:27:17Z"
    },
    {
      "event": "closed",
      "id": 400267486,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDAwMjY3NDg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/400267486",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T16:27:17Z"
    },
    {
      "event": "referenced",
      "id": 400267533,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMDI2NzUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/400267533",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "69dc5b51a023a23ae66017f05fa43a0203f3c627",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627",
      "created_at": "2015-09-03T16:27:20Z"
    },
    {
      "event": "referenced",
      "id": 1163503271,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExNjM1MDMyNzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1163503271",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0a1ac9e3cef7b73bac499a34166008a78127630f",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/0a1ac9e3cef7b73bac499a34166008a78127630f",
      "created_at": "2017-07-13T23:32:22Z"
    },
    {
      "event": "referenced",
      "id": 1334020654,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMzQwMjA2NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1334020654",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e3564bae93ef0b1db9dbae62e78fa91b0b89cc6b",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/e3564bae93ef0b1db9dbae62e78fa91b0b89cc6b",
      "created_at": "2017-11-09T14:08:57Z"
    },
    {
      "event": "referenced",
      "id": 1558772089,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1NTg3NzIwODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1558772089",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d7f224b2be444eb39f2153a38cad6f3726e403aa",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/d7f224b2be444eb39f2153a38cad6f3726e403aa",
      "created_at": "2018-04-05T13:39:32Z"
    },
    {
      "event": "referenced",
      "id": 3503205436,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MDMyMDU0MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3503205436",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8bbc0650e6d6fb0e7c71edb2c80479431e2683f2",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/8bbc0650e6d6fb0e7c71edb2c80479431e2683f2",
      "created_at": "2020-07-01T16:13:07Z"
    },
    {
      "event": "referenced",
      "id": 4342390222,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNDIzOTAyMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4342390222",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "89d9e557e1ffccbf928abaf29e8e4e440b54bced",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/89d9e557e1ffccbf928abaf29e8e4e440b54bced",
      "created_at": "2021-02-17T16:39:21Z"
    },
    {
      "event": "referenced",
      "id": 4348352124,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNDgzNTIxMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4348352124",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "39dddced8fa06b5dc5002899e088ba54ee740b6e",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/39dddced8fa06b5dc5002899e088ba54ee740b6e",
      "created_at": "2021-02-18T18:39:42Z"
    },
    {
      "event": "referenced",
      "id": 4348482857,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNDg0ODI4NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4348482857",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d3a2f120f5dadea67cdb2f06c0e7c24c7e283ca2",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/d3a2f120f5dadea67cdb2f06c0e7c24c7e283ca2",
      "created_at": "2021-02-18T19:11:50Z"
    },
    {
      "event": "referenced",
      "id": 4349416742,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNDk0MTY3NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4349416742",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e10008da668b5d2dd026fcf7e1caf9b5cc8ee38d",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/e10008da668b5d2dd026fcf7e1caf9b5cc8ee38d",
      "created_at": "2021-02-18T23:19:03Z"
    },
    {
      "event": "referenced",
      "id": 4352238141,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNTIyMzgxNDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4352238141",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "777deea2647a5ab420e619002274b2bca523a86a",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/777deea2647a5ab420e619002274b2bca523a86a",
      "created_at": "2021-02-19T13:49:46Z"
    },
    {
      "event": "referenced",
      "id": 4352804297,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNTI4MDQyOTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4352804297",
      "actor": {
        "login": "zkbot",
        "id": 17032253,
        "node_id": "MDQ6VXNlcjE3MDMyMjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/17032253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zkbot",
        "html_url": "https://github.com/zkbot",
        "followers_url": "https://api.github.com/users/zkbot/followers",
        "following_url": "https://api.github.com/users/zkbot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zkbot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zkbot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zkbot/subscriptions",
        "organizations_url": "https://api.github.com/users/zkbot/orgs",
        "repos_url": "https://api.github.com/users/zkbot/repos",
        "events_url": "https://api.github.com/users/zkbot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zkbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b62e35dee899d0234823a08bf0d47ff6def738af",
      "commit_url": "https://api.github.com/repos/zcash/zcash/commits/b62e35dee899d0234823a08bf0d47ff6def738af",
      "created_at": "2021-02-19T15:48:15Z"
    },
    {
      "event": "locked",
      "id": 5271513708,
      "node_id": "LOE_lADOABII584Finb9zwAAAAE6NOps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271513708",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:55:33Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36103572",
      "pull_request_review_id": null,
      "id": 36103572,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTAzNTcy",
      "diff_hunk": "@@ -943,35 +981,95 @@ void ThreadSocketHandler()\n                             nInbound++;\n                 }\n \n+                CNode* pnode = new CNode(hSocket, addr, \"\", true);\n+                pnode->AddRef();\n+                pnode->fWhitelisted = whitelisted;\n+\n                 if (hSocket == INVALID_SOCKET)\n                 {\n                     int nErr = WSAGetLastError();\n                     if (nErr != WSAEWOULDBLOCK)\n                         LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n                 }\n-                else if (nInbound >= nMaxInbound)\n+                else if (CNode::IsBanned(addr) && !whitelisted)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (full)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+                    pnode->fDisconnect = true;\n                 }\n-                else if (!whitelisted && (nInbound >= (nMaxInbound - nWhiteConnections)))\n+                else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (non-whitelisted)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrint(\"net\", \"over connection limit\\n\");\n+                    static std::vector<unsigned char> vSecretKey;\n+\n+                    if (vSecretKey.empty()) {\n+                        vSecretKey.resize(32, 0);\n+                        GetRandBytes(vSecretKey.data(), vSecretKey.size());\n+                    }\n+\n+                    {\n+                        LOCK(cs_vNodes);\n+                        std::vector<CNode*> vEvictionCandidates;\n+\n+                        BOOST_FOREACH(CNode *node, vNodes) {\n+                            if (node->fWhitelisted)\n+                                continue;\n+                            if (!node->fInbound)\n+                                continue;\n+                            if (node->fDisconnect)\n+                                continue;\n+                            if (node->addr.IsLocal())\n+                                continue;\n+                            vEvictionCandidates.push_back(node);\n+                        }\n+\n+                        // Protect connections with certain characteristics\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        CompareNetGroupKeyed comparerNetGroupKeyed(vSecretKey);\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        if (!vEvictionCandidates.empty()) {\n+                            // Identify CNetAddr with the most connections\n+                            CNetAddr naMostConnections;\n+                            unsigned int nMostConnections = 0;\n+                            std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+                            BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+                                mapAddrCounts[node->addr].push_back(node);\n+\n+                                if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+                                    nMostConnections = mapAddrCounts[node->addr].size();\n+                                    naMostConnections = node->addr;\n+                                }\n+                            }\n+\n+                            vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+                            // Disconnect the most recent connection from the CNetAddr with the most connections\n+                            std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                            vEvictionCandidates[0]->fDisconnect = true;\n+\n+                            nInbound--;\n+                        }\n+                    }\n+\n+                    if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS) {\n+                        LogPrint(\"net\", \"no peers to evict, disconnecting new client\\n\");\n+                        pnode->fDisconnect = true;\n+                    }\n                 }\n-                else if (CNode::IsBanned(addr) && !whitelisted)\n-                {\n-                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+\n+                if (pnode->fDisconnect) {\n                     CloseSocket(hSocket);\n+                    delete pnode;",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "5f33e1ec5d735eac9fb881cb02b7833cbd3b9f12",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Deleting CNodes happens in the \"Delete disconnected nodes\" loop, which first makes sure that no one is using the node anymore. Adding a `delete pnode` here seems like a danger for race conditions?\n",
      "created_at": "2015-08-03T16:36:31Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r36103572",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36103572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36136096",
      "pull_request_review_id": null,
      "id": 36136096,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTM2MDk2",
      "diff_hunk": "@@ -943,35 +981,95 @@ void ThreadSocketHandler()\n                             nInbound++;\n                 }\n \n+                CNode* pnode = new CNode(hSocket, addr, \"\", true);\n+                pnode->AddRef();\n+                pnode->fWhitelisted = whitelisted;\n+\n                 if (hSocket == INVALID_SOCKET)\n                 {\n                     int nErr = WSAGetLastError();\n                     if (nErr != WSAEWOULDBLOCK)\n                         LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n                 }\n-                else if (nInbound >= nMaxInbound)\n+                else if (CNode::IsBanned(addr) && !whitelisted)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (full)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+                    pnode->fDisconnect = true;\n                 }\n-                else if (!whitelisted && (nInbound >= (nMaxInbound - nWhiteConnections)))\n+                else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (non-whitelisted)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrint(\"net\", \"over connection limit\\n\");\n+                    static std::vector<unsigned char> vSecretKey;\n+\n+                    if (vSecretKey.empty()) {\n+                        vSecretKey.resize(32, 0);\n+                        GetRandBytes(vSecretKey.data(), vSecretKey.size());\n+                    }\n+\n+                    {\n+                        LOCK(cs_vNodes);\n+                        std::vector<CNode*> vEvictionCandidates;\n+\n+                        BOOST_FOREACH(CNode *node, vNodes) {\n+                            if (node->fWhitelisted)\n+                                continue;\n+                            if (!node->fInbound)\n+                                continue;\n+                            if (node->fDisconnect)\n+                                continue;\n+                            if (node->addr.IsLocal())\n+                                continue;\n+                            vEvictionCandidates.push_back(node);\n+                        }\n+\n+                        // Protect connections with certain characteristics\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        CompareNetGroupKeyed comparerNetGroupKeyed(vSecretKey);\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        if (!vEvictionCandidates.empty()) {\n+                            // Identify CNetAddr with the most connections\n+                            CNetAddr naMostConnections;\n+                            unsigned int nMostConnections = 0;\n+                            std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+                            BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+                                mapAddrCounts[node->addr].push_back(node);\n+\n+                                if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+                                    nMostConnections = mapAddrCounts[node->addr].size();\n+                                    naMostConnections = node->addr;\n+                                }\n+                            }\n+\n+                            vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+                            // Disconnect the most recent connection from the CNetAddr with the most connections\n+                            std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                            vEvictionCandidates[0]->fDisconnect = true;\n+\n+                            nInbound--;\n+                        }\n+                    }\n+\n+                    if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS) {\n+                        LogPrint(\"net\", \"no peers to evict, disconnecting new client\\n\");\n+                        pnode->fDisconnect = true;\n+                    }\n                 }\n-                else if (CNode::IsBanned(addr) && !whitelisted)\n-                {\n-                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+\n+                if (pnode->fDisconnect) {\n                     CloseSocket(hSocket);\n+                    delete pnode;",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "5f33e1ec5d735eac9fb881cb02b7833cbd3b9f12",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is deleting the CNode which was created at 984 and which was not added to vNodes.\n\nNot deleting it here would be a memory leak.\n",
      "created_at": "2015-08-03T21:52:16Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r36136096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36136096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36495467",
      "pull_request_review_id": null,
      "id": 36495467,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1NDY3",
      "diff_hunk": "@@ -943,35 +981,95 @@ void ThreadSocketHandler()\n                             nInbound++;\n                 }\n \n+                CNode* pnode = new CNode(hSocket, addr, \"\", true);\n+                pnode->AddRef();\n+                pnode->fWhitelisted = whitelisted;\n+\n                 if (hSocket == INVALID_SOCKET)\n                 {\n                     int nErr = WSAGetLastError();\n                     if (nErr != WSAEWOULDBLOCK)\n                         LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n                 }\n-                else if (nInbound >= nMaxInbound)\n+                else if (CNode::IsBanned(addr) && !whitelisted)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (full)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+                    pnode->fDisconnect = true;\n                 }\n-                else if (!whitelisted && (nInbound >= (nMaxInbound - nWhiteConnections)))\n+                else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (non-whitelisted)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrint(\"net\", \"over connection limit\\n\");\n+                    static std::vector<unsigned char> vSecretKey;\n+\n+                    if (vSecretKey.empty()) {\n+                        vSecretKey.resize(32, 0);\n+                        GetRandBytes(vSecretKey.data(), vSecretKey.size());\n+                    }\n+\n+                    {\n+                        LOCK(cs_vNodes);\n+                        std::vector<CNode*> vEvictionCandidates;\n+\n+                        BOOST_FOREACH(CNode *node, vNodes) {\n+                            if (node->fWhitelisted)\n+                                continue;\n+                            if (!node->fInbound)\n+                                continue;\n+                            if (node->fDisconnect)\n+                                continue;\n+                            if (node->addr.IsLocal())\n+                                continue;\n+                            vEvictionCandidates.push_back(node);\n+                        }\n+\n+                        // Protect connections with certain characteristics\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        CompareNetGroupKeyed comparerNetGroupKeyed(vSecretKey);\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        if (!vEvictionCandidates.empty()) {\n+                            // Identify CNetAddr with the most connections\n+                            CNetAddr naMostConnections;\n+                            unsigned int nMostConnections = 0;\n+                            std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+                            BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+                                mapAddrCounts[node->addr].push_back(node);\n+\n+                                if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+                                    nMostConnections = mapAddrCounts[node->addr].size();\n+                                    naMostConnections = node->addr;\n+                                }\n+                            }\n+\n+                            vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+                            // Disconnect the most recent connection from the CNetAddr with the most connections\n+                            std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                            vEvictionCandidates[0]->fDisconnect = true;\n+\n+                            nInbound--;\n+                        }\n+                    }\n+\n+                    if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS) {\n+                        LogPrint(\"net\", \"no peers to evict, disconnecting new client\\n\");\n+                        pnode->fDisconnect = true;\n+                    }\n                 }\n-                else if (CNode::IsBanned(addr) && !whitelisted)\n-                {\n-                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+\n+                if (pnode->fDisconnect) {\n                     CloseSocket(hSocket);\n+                    delete pnode;",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "5f33e1ec5d735eac9fb881cb02b7833cbd3b9f12",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Bah.\nI wonder if we could use e.g. boost::scoped_ptr or auto_ptr to avoid this. It's too easy to get memory leaks with manual deallocation along a subset of code paths, especially when factoring in exceptions.\n",
      "created_at": "2015-08-07T07:09:16Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r36495467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36495467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36563756",
      "pull_request_review_id": null,
      "id": 36563756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzNzU2",
      "diff_hunk": "@@ -943,35 +981,95 @@ void ThreadSocketHandler()\n                             nInbound++;\n                 }\n \n+                CNode* pnode = new CNode(hSocket, addr, \"\", true);\n+                pnode->AddRef();\n+                pnode->fWhitelisted = whitelisted;\n+\n                 if (hSocket == INVALID_SOCKET)\n                 {\n                     int nErr = WSAGetLastError();\n                     if (nErr != WSAEWOULDBLOCK)\n                         LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n                 }\n-                else if (nInbound >= nMaxInbound)\n+                else if (CNode::IsBanned(addr) && !whitelisted)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (full)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+                    pnode->fDisconnect = true;\n                 }\n-                else if (!whitelisted && (nInbound >= (nMaxInbound - nWhiteConnections)))\n+                else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n                 {\n-                    LogPrint(\"net\", \"connection from %s dropped (non-whitelisted)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n+                    LogPrint(\"net\", \"over connection limit\\n\");\n+                    static std::vector<unsigned char> vSecretKey;\n+\n+                    if (vSecretKey.empty()) {\n+                        vSecretKey.resize(32, 0);\n+                        GetRandBytes(vSecretKey.data(), vSecretKey.size());\n+                    }\n+\n+                    {\n+                        LOCK(cs_vNodes);\n+                        std::vector<CNode*> vEvictionCandidates;\n+\n+                        BOOST_FOREACH(CNode *node, vNodes) {\n+                            if (node->fWhitelisted)\n+                                continue;\n+                            if (!node->fInbound)\n+                                continue;\n+                            if (node->fDisconnect)\n+                                continue;\n+                            if (node->addr.IsLocal())\n+                                continue;\n+                            vEvictionCandidates.push_back(node);\n+                        }\n+\n+                        // Protect connections with certain characteristics\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        CompareNetGroupKeyed comparerNetGroupKeyed(vSecretKey);\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+                        vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+                        if (!vEvictionCandidates.empty()) {\n+                            // Identify CNetAddr with the most connections\n+                            CNetAddr naMostConnections;\n+                            unsigned int nMostConnections = 0;\n+                            std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+                            BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+                                mapAddrCounts[node->addr].push_back(node);\n+\n+                                if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+                                    nMostConnections = mapAddrCounts[node->addr].size();\n+                                    naMostConnections = node->addr;\n+                                }\n+                            }\n+\n+                            vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+                            // Disconnect the most recent connection from the CNetAddr with the most connections\n+                            std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+                            vEvictionCandidates[0]->fDisconnect = true;\n+\n+                            nInbound--;\n+                        }\n+                    }\n+\n+                    if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS) {\n+                        LogPrint(\"net\", \"no peers to evict, disconnecting new client\\n\");\n+                        pnode->fDisconnect = true;\n+                    }\n                 }\n-                else if (CNode::IsBanned(addr) && !whitelisted)\n-                {\n-                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+\n+                if (pnode->fDisconnect) {\n                     CloseSocket(hSocket);\n+                    delete pnode;",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "5f33e1ec5d735eac9fb881cb02b7833cbd3b9f12",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alternatively I could just add it to vNodes and rely on the normal cleanup logic.\n",
      "created_at": "2015-08-07T21:39:26Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r36563756",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/36563756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051343",
      "pull_request_review_id": null,
      "id": 37051343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxMzQz",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "size_t to unsigned int is safe? You could use size_t for nMostConnections also.\n",
      "created_at": "2015-08-14T05:53:42Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37051343",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051366",
      "pull_request_review_id": null,
      "id": 37051366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxMzY2",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should be a more detailed comment IMHO.\n",
      "created_at": "2015-08-14T05:54:41Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37051366",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051432",
      "pull_request_review_id": null,
      "id": 37051432,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxNDMy",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);",
      "path": "src/net.cpp",
      "position": 176,
      "original_position": 127,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You seem to use this bool first at line 916, why not move the check there? At first look I had the impression it belongs to the LOCK block.\n",
      "created_at": "2015-08-14T05:56:58Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37051432",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051503",
      "pull_request_review_id": null,
      "id": 37051503,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxNTAz",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);\n+    {\n+        LOCK(cs_vNodes);\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+            if (pnode->fInbound)\n+                nInbound++;\n+    }\n+\n+    if (hSocket == INVALID_SOCKET)",
      "path": "src/net.cpp",
      "position": 184,
      "original_position": 135,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this the check for the accept call? Would be cleaner if it was below the call. You also wouldn't need the `hSocket != INVALID_SOCKET` check at the top.\n",
      "created_at": "2015-08-14T05:58:08Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37051503",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 950,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051576",
      "pull_request_review_id": null,
      "id": 37051576,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxNTc2",
      "diff_hunk": "@@ -4522,6 +4522,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     if (pingUsecTime > 0) {\n                         // Successful ping time measurement, replace previous\n                         pfrom->nPingUsecTime = pingUsecTime;\n+                        pfrom->nMinPingUsecTime = std::min(pfrom->nMinPingUsecTime, pingUsecTime);",
      "path": "src/main.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this interresting for `getpeerinfo`?\n",
      "created_at": "2015-08-14T06:00:43Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37051576",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37051576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4525,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37060766",
      "pull_request_review_id": null,
      "id": 37060766,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNzY2",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);",
      "path": "src/net.cpp",
      "position": 176,
      "original_position": 127,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I also had this impression,  though that is a common theme with several of the variables (`nInbound`, `nMaxInbound`).  It'd be nice to see them declared where they are used, rather than C99 style at the top of the function.\n\n**edit**: Though to be fair, this code is simply copied, so this is not @pstratem's fault.\n",
      "created_at": "2015-08-14T09:13:27Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37060766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37060766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091054",
      "pull_request_review_id": null,
      "id": 37091054,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMDU0",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is almost certainly safe because the values are heavily constrained, however it's not an issue to switch to size_t so I will\n",
      "created_at": "2015-08-14T16:01:10Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37091054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091114",
      "pull_request_review_id": null,
      "id": 37091114,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMTE0",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);",
      "path": "src/net.cpp",
      "position": 176,
      "original_position": 127,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is all copied directly from what was there before.\n\nI can clean up the logic a bit more later, but for now it's nice that the diff is minimal.\n",
      "created_at": "2015-08-14T16:01:45Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37091114",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091191",
      "pull_request_review_id": null,
      "id": 37091191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMTkx",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);\n+    {\n+        LOCK(cs_vNodes);\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+            if (pnode->fInbound)\n+                nInbound++;\n+    }\n+\n+    if (hSocket == INVALID_SOCKET)",
      "path": "src/net.cpp",
      "position": 184,
      "original_position": 135,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree, but I think that's for a separate pull request.\n",
      "created_at": "2015-08-14T16:02:41Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37091191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 950,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091218",
      "pull_request_review_id": null,
      "id": 37091218,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjE4",
      "diff_hunk": "@@ -4522,6 +4522,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     if (pingUsecTime > 0) {\n                         // Successful ping time measurement, replace previous\n                         pfrom->nPingUsecTime = pingUsecTime;\n+                        pfrom->nMinPingUsecTime = std::min(pfrom->nMinPingUsecTime, pingUsecTime);",
      "path": "src/main.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably, but again separate pr\n",
      "created_at": "2015-08-14T16:02:54Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37091218",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37091218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4525,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37135362",
      "pull_request_review_id": null,
      "id": 37135362,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1MzYy",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);",
      "path": "src/net.cpp",
      "position": 176,
      "original_position": 127,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed on the clean diff,  @pstratem could you put a TODO in there (or make an issue?) though such that this isn't just forgotten after this though?\n",
      "created_at": "2015-08-15T11:24:18Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37135362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37135362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 942,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37135377",
      "pull_request_review_id": null,
      "id": 37135377,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1Mzc3",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@Diapolo aren't there warnings for this?\n",
      "created_at": "2015-08-15T11:28:03Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37135377",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37135377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37135379",
      "pull_request_review_id": null,
      "id": 37135379,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1Mzc5",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);\n+    {\n+        LOCK(cs_vNodes);\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+            if (pnode->fInbound)\n+                nInbound++;\n+    }\n+\n+    if (hSocket == INVALID_SOCKET)",
      "path": "src/net.cpp",
      "position": 184,
      "original_position": 135,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do we file these as issues or `TODO`s?\n",
      "created_at": "2015-08-15T11:28:29Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37135379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37135379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 950,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37139409",
      "pull_request_review_id": null,
      "id": 37139409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM5NDA5",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr].size();\n+            naMostConnections = node->addr;\n+        }\n+    }\n+\n+    // Reduce to the CNetAddr with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers who have only 1 evictable connection\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);\n+    {\n+        LOCK(cs_vNodes);\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+            if (pnode->fInbound)\n+                nInbound++;\n+    }\n+\n+    if (hSocket == INVALID_SOCKET)",
      "path": "src/net.cpp",
      "position": 184,
      "original_position": 135,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would say file them as a single issue. something like \"clean up logic/code in AcceptConnection\"\n",
      "created_at": "2015-08-15T21:13:12Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37139409",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37139409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 950,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37140567",
      "pull_request_review_id": null,
      "id": 37140567,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNTY3",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty())\n+        return false;\n+\n+    // Identify CNetAddr with the most connections\n+    CNetAddr naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<CNetAddr, std::vector<CNode*> > mapAddrCounts;\n+    BOOST_FOREACH(CNode *node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr].push_back(node);\n+\n+        if (mapAddrCounts[node->addr].size() > nMostConnections) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@dcousens they're both unsigned, so no\n",
      "created_at": "2015-08-15T23:35:44Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37140567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37140567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37591810",
      "pull_request_review_id": null,
      "id": 37591810,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxODEw",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dont you need to increment the use count on the node here?\n",
      "created_at": "2015-08-20T23:13:25Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37591810",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37591810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37591882",
      "pull_request_review_id": null,
      "id": 37591882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxODgy",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These constants (4, 8, 64) really need to be a function of your configured maximum connections.\n",
      "created_at": "2015-08-20T23:14:33Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37591882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37591882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37593210",
      "pull_request_review_id": null,
      "id": 37593210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkzMjEw",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, please add a comment above each sort/erase block that explains what/why you are protecting that group.\n",
      "created_at": "2015-08-20T23:35:20Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37593210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37593210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37594072",
      "pull_request_review_id": null,
      "id": 37594072,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk0MDcy",
      "diff_hunk": "@@ -776,6 +775,173 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+static bool ReverseCompareNodeMinPingTime(CNode *a, CNode *b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNode *a, CNode *b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNode *a, CNode *b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNode*> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(node);\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "1f1c87438db3e707b2bfc0e35b12e054df5c0661",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comments added\n",
      "created_at": "2015-08-20T23:50:20Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37594072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37594072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37663532",
      "pull_request_review_id": null,
      "id": 37663532,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzNTMy",
      "diff_hunk": "@@ -776,6 +775,191 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+class CNodeRef {\n+public:\n+    CNodeRef(CNode *pnode) : _pnode(pnode)  {_pnode->AddRef();}\n+    ~CNodeRef() {_pnode->Release();}\n+\n+    CNode& operator *() {return *_pnode;};\n+    CNode* operator ->() {return _pnode;};\n+private:\n+    CNode *_pnode;\n+};\n+\n+static bool ReverseCompareNodeMinPingTime(CNodeRef &a, CNodeRef &b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNodeRef &a, CNodeRef &b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNodeRef &a, CNodeRef &b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNodeRef> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(CNodeRef(node));\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+\n+    // Deterministically select 4 peers to protect by netgroup.\n+    // An attacker cannot predict which netgroups will be protected.\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    // Protect the 8 nodes with the best ping times.\n+    // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    // Protect the 64 nodes which have been connected the longest.\n+    // This replicates the existing implicit behavior.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "d6b18c5bab275ca05f0a6537e5933e34edd590a3",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems my comment was lost in a rebase, can you change the constants (4, 8, 64) to be some multiple of max connections?\n",
      "created_at": "2015-08-21T18:30:02Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37663532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37663532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37685347",
      "pull_request_review_id": null,
      "id": 37685347,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg1MzQ3",
      "diff_hunk": "@@ -776,6 +775,191 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+class CNodeRef {\n+public:\n+    CNodeRef(CNode *pnode) : _pnode(pnode)  {_pnode->AddRef();}\n+    ~CNodeRef() {_pnode->Release();}\n+\n+    CNode& operator *() {return *_pnode;};\n+    CNode* operator ->() {return _pnode;};\n+private:\n+    CNode *_pnode;\n+};\n+\n+static bool ReverseCompareNodeMinPingTime(CNodeRef &a, CNodeRef &b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(CNodeRef &a, CNodeRef &b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(CNodeRef &a, CNodeRef &b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNodeRef> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(CNodeRef(node));\n+        }\n+    }\n+\n+    // Protect connections with certain characteristics\n+\n+    // Deterministically select 4 peers to protect by netgroup.\n+    // An attacker cannot predict which netgroups will be protected.\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    // Protect the 8 nodes with the best ping times.\n+    // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    // Protect the 64 nodes which have been connected the longest.\n+    // This replicates the existing implicit behavior.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(64, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "d6b18c5bab275ca05f0a6537e5933e34edd590a3",
      "in_reply_to_id": null,
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm not sure that makes sense actually.\n\nThe goal is to prevent a sybil attack, constants are probably best for that.\n",
      "created_at": "2015-08-21T22:47:40Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37685347",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37685347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37826370",
      "pull_request_review_id": null,
      "id": 37826370,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI2Mzcw",
      "diff_hunk": "@@ -776,6 +775,196 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+class CNodeRef {\n+public:\n+    CNodeRef(CNode *pnode) : _pnode(pnode)  {_pnode->AddRef();}\n+    ~CNodeRef() {_pnode->Release();}\n+\n+    CNode& operator *() const {return *_pnode;};\n+    CNode* operator ->() const {return _pnode;};",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "original_commit_id": "dc81dd02a1d5f47ca45f74577e0696dfba6fa15c",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This class needs an explicit copy constructor and assignment operator to be safe to use inside STL containers:\n\n``` c++\n    CNodeRef& operator =(const CNodeRef& other)\n    {\n        if (this != &other) {\n            _pnode->Release();\n            _pnode = other._pnode;\n            _pnode->AddRef();\n        }\n        return *this;\n    }\n    CNodeRef(const CNodeRef& other):\n        _pnode(other._pnode)\n    {\n        _pnode->AddRef();\n    }\n```\n\nOtherwise, copying it won't properly update reference counts.\n",
      "created_at": "2015-08-25T02:08:21Z",
      "updated_at": "2015-08-31T05:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6374#discussion_r37826370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37826370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 791,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}