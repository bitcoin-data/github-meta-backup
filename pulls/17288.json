{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288",
    "id": 333281054,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMzMjgxMDU0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17288",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17288.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17288.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/19139ee034d20ebab1b91d3ac13a8eee70b59374",
    "number": 17288,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Added TestShell class for interactive Python environments.",
    "user": {
      "login": "jachiang",
      "id": 26572234,
      "node_id": "MDQ6VXNlcjI2NTcyMjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jachiang",
      "html_url": "https://github.com/jachiang",
      "followers_url": "https://api.github.com/users/jachiang/followers",
      "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
      "organizations_url": "https://api.github.com/users/jachiang/orgs",
      "repos_url": "https://api.github.com/users/jachiang/repos",
      "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jachiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR refactors BitcoinTestFramework to encapsulate setup and shutdown logic into dedicated methods, and adds a  ~~TestWrapper~~ TestShell child class. This wrapper allows the underlying BitcoinTestFramework to run _between user inputs_ in a REPL environment, such as a Jupyter notebook or any interactive Python3 interpreter. \r\n\r\nThe ~~TestWrapper~~ TestShell is motivated by the opportunity to expose the test-framework as a prototyping and educational toolkit. Examples of code prototypes enabled by  ~~TestWrapper~~ TestShell can be found in the Optech [Taproot/Schnorr](https://github.com/bitcoinops/taproot-workshop) workshop repository.\r\n\r\nUsage example:\r\n```\r\n>>> import sys\r\n>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\r\n```\r\n```\r\n>>> from test_framework.test_wrapper import TestShell\r\n>>> test = TestShell()\r\n>>> test.setup(num_nodes=2)\r\n20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\r\n```\r\n```\r\n>>> test.nodes[0].generate(101)\r\n>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\r\n101\r\n```\r\n```\r\n>>> test.shutdown()\r\n20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\r\n20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\r\n20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\r\n```\r\n\r\n**Overview of changes to BitcoinTestFramework:**\r\n\r\n- Code moved to `setup()/shutdown()` methods.\r\n- Argument parsing logic encapsulated by `parse_args` method.\r\n- Success state moved to `BitcoinTestFramework.success`.\r\n\r\n_During Shutdown_\r\n\r\n- `BitcoinTestFramework` logging handlers are flushed and removed.\r\n- `BitcoinTestFrameowork.nodes` list is cleared.\r\n- `NetworkThread.network_event_loop` is reset. (NetworkThread class).\r\n\r\n**Behavioural changes:**\r\n- Test parameters can now also be set when overriding BitcoinTestFramework.setup() in addition to overriding `set_test_params` method.\r\n- Potential exceptions raised in BitcoinTestFramework.setup() will be handled in main().\r\n\r\n**Added files:**\r\n- ~~test_wrapper.py~~ `test_shell.py`\r\n- ~~test-wrapper.md~~ `test-shell.md`\r\n",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-10-28T19:17:54Z",
    "updated_at": "2021-12-16T14:54:49Z",
    "closed_at": "2019-11-04T19:55:11Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-11-04T19:55:11Z",
    "merge_commit_sha": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jachiang:2019-10-testwrapper",
      "ref": "2019-10-testwrapper",
      "sha": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 197089343,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTcwODkzNDM=",
        "name": "bitcoin",
        "full_name": "jachiang/bitcoin",
        "owner": {
          "login": "jachiang",
          "id": 26572234,
          "node_id": "MDQ6VXNlcjI2NTcyMjM0",
          "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jachiang",
          "html_url": "https://github.com/jachiang",
          "followers_url": "https://api.github.com/users/jachiang/followers",
          "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
          "organizations_url": "https://api.github.com/users/jachiang/orgs",
          "repos_url": "https://api.github.com/users/jachiang/repos",
          "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jachiang/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jachiang/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jachiang/bitcoin",
        "archive_url": "https://api.github.com/repos/jachiang/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jachiang/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jachiang/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jachiang/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jachiang/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jachiang/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jachiang/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jachiang/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jachiang/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jachiang/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jachiang/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jachiang/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jachiang/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jachiang/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jachiang/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jachiang/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jachiang/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jachiang/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jachiang/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jachiang/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jachiang/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jachiang/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jachiang/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jachiang/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jachiang/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jachiang/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jachiang/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jachiang/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jachiang/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jachiang/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jachiang/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jachiang/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jachiang/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jachiang/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jachiang/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jachiang/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jachiang/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jachiang/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jachiang/bitcoin/hooks",
        "svn_url": "https://github.com/jachiang/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 140435,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-03-14T13:52:55Z",
        "created_at": "2019-07-16T00:14:29Z",
        "updated_at": "2019-07-16T00:14:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "33b155f28732487854cf0ca29ca17c50f8c6872e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 337,
    "deletions": 33,
    "changed_files": 5,
    "commits": 8,
    "review_comments": 54,
    "comments": 20
  },
  "events": [
    {
      "event": "labeled",
      "id": 2749760493,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NDk3NjA0OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2749760493",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T19:18:28Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "review_requested",
      "id": 2749760739,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50Mjc0OTc2MDczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2749760739",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T19:18:33Z",
      "requested_reviewer": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 547104970,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzEwNDk3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547104970",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T19:19:11Z",
      "updated_at": "2019-10-28T19:19:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery has provided many inputs for this PR. Previous discussion and review can be found [here](https://github.com/ChaincodeResidency/bitcoin/pull/26).",
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547104970",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "mentioned",
      "id": 2749762633,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc0OTc2MjYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2749762633",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T19:19:12Z"
    },
    {
      "event": "subscribed",
      "id": 2749762638,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NDk3NjI2Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2749762638",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T19:19:12Z"
    },
    {
      "event": "reviewed",
      "id": 308097729,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4MDk3NzI5",
      "url": null,
      "actor": null,
      "commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-308097729",
      "submitted_at": "2019-10-28T19:35:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "commented",
      "id": 547116752,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzExNjc1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547116752",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T19:50:48Z",
      "updated_at": "2019-10-28T19:50:48Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. We used this in the taproot workshops and it's a really nice way of interacting with bitcoind instances, prototyping tests, learning the RPC interface, etc",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547116752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 547121817,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzEyMTgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547121817",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T20:03:51Z",
      "updated_at": "2019-10-28T20:03:51Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, seems like a great feature.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547121817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 547165834,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzE2NTgzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547165834",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-28T22:05:37Z",
      "updated_at": "2019-10-28T22:05:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK: very nice idea and what an excellent first-time contribution!\r\n\r\nHope to see more contributions from you in the future!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547165834",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "reviewed",
      "id": 308452066,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4NDUyMDY2",
      "url": null,
      "actor": null,
      "commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 9535d81caeac13b9e8180e5c3d4b60190f030629 modulo nits.\r\n\r\nNice feature. I'm not sure why some of the commits are separate. A few comments below for your perusal. Feel free to ignore the nits.\r\n\r\nLight code review, built, ran tests, ran individual functional tests from root and from `test/functional` and also using a few different options (e.g. -l, --filter).\r\n\r\nI did not test edge cases involving the exceptions.\r\n\r\nRan the following python code successfully from `/test/functional`:\r\n\r\n```python3\r\n~/projects/bitcoin/bitcoin/test/functional (pr/17288)$ python3\r\nPython 3.7.3 (default, Apr  3 2019, 05:39:12)\r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from test_framework.test_wrapper import TestWrapper\r\n>>> test = TestWrapper()\r\n>>> test.setup(num_nodes=2)\r\n2019-10-29T11:39:17.513000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_6czimoav\r\n>>> test.nodes[0].generate(101)\r\n['6296f563a83ae9fbe33f450d33ffb3da5ab737e52beef8083b7c8f16d13c0158', '240bf8d445439847a63d1778b418204bd031cbf8c893ffa548cab167ccd28545', '168fd28ce6a4a86fe886245e56763fa214b21918ce08f3ad060659b1420e2805', '43d92b96defb72244d3c815261992d0126b57d13e34ab0c6029aec80f084495f', '75e6c11a548aef554ccdbfdf6e2e37738d9f53f2fe2698f53ea16d4af96539c9', '200be654e7303b88fa71053dde246c08bc811ffbb2f4b08554c98442d40f3322', '3b3f5e97ec374da169acb3993bad8be5b45f3287fd7e3700899cd5093671bf18', '08650842e4808c9641166b9557bd64723de8c6b7bc55e79fd900253f82af2250', '5dbd416701212809a40048752ec9ffe447a60c2b43a1ccbddcfd635a0f5b13d0', '0f52c30c6f64eb1aa9142fb035b8217d0d6b93c4814d7d9255082089b53f3231', '0bccd3cf893ecea4870fc127ff954f3738d1cc54d9f185b0766d55d90b106fed', '3bffa7736376f5c625b743e9f35fec5544b1bcdf0555d18162cc505eade9e422', '70e7c1aa2f3ebb76cbdc3ec553e3c5d3cb963cebc30696abbc755cc0dd93a049', '6cd0218ecb54e35a8cf9876624f8a8f667abd974517bfafa82b1ef52544f703b', '216c3d991e6714ba2fb1ce59ee1d2412387c45c82a0984d7e2e52e5a3aede42a', '499e7346477155a70f42a4cf42671be55484b46b48cafae4e2fadac55459239a', '3ba894f1d3e4c500783ce9d03b05d14cb70fc5583d8dc67d7cca7c6485f9431d', '2f6bb8f17201153363fdb4c055033b6bbbc3f7f29fe2f9bd97edfc01bbaa35ad', '4fd95b5e51755f811e736e9c14507bd1b7759669bdadd2423dbb8d473b3c2bc1', '136c04a6d3760623b2d7558d4b08a896364d5ee478652b89f0e33e5fe15fda8c', '451d8bfc910cc39a58c761d8e943139df2e619ecc6bf61a84e402155eb79a9ba', '05fd7533b818312772d04c0d5e074ed28dc78f94027fe4f434990c2a03d58995', '3ec24df6f72dab954dc2efa71072f2f55a717abb672c911faff799ec35bd2ef1', '09ba7d1167b5c0e97d6afc41f666c2769ccd7b7b30ef68b7ae1929cea53c0c21', '30d113bf788a1352ccd6b4b91be50932280a0bdaef4088922f86502dc622781a', '4bb118b999d38c0e4e242b71a3f7f08a28012f184b13668ca8d03fd6d545c033', '5659f3bd02616bc25d8f71b9683e55d709a34cc1b5dca1cdb7a2d939d6257aa3', '4f7bb9fd15f2685fcb0186eaf6194b4fc503f7cfaadcd3b9b0c2154abc9a3107', '5434b651df36c0b751031f449f67fe1bc05f517884a9d83b97482ae352227234', '5660c66f1cdd65bfb3cdecb0861863112cec1f50d473dfdd16d7bda8cbc3a8e5', '5366d1708b3ca35b85b82e740d54c551602f5502e7d8d1d5d57c92c86308f0e2', '49a7c184dd5cc5947d77d9bb69e3a7bba3b09c0f618e7e2f82138b26e35f38aa', '0264898e262228b783096ac9247abd49442bea11ccb14df0ac384c6c3da71439', '47478790ae3c4adc4d2ef6f7394922fb964211cc4dd36a1aed0e9c7945048618', '5fc90562a749c1a214aa4fe0b7ba37f53680154c5304c64bb9de989b14233621', '02d8b7b46180df6e029aedb5f512ad238f9ef853960926bf9ba6cdb0d6d4abed', '4f58507e6e241eda3c77da3af1498f210c980922eb48bfe728cc6ccaacbd5e4a', '1883aad8fe99dd242557ac80696cfef3e0febf38683c0f27d58e3a5498ee3947', '364136e959179e42a9072baa321c2b303d41e8cb7211fa0a4fb9f72d198f8681', '247cd9f37fa038baf32159235d67ee9aba7b7ea7f151bfaf4674ab2020137e43', '21701a772f14135b4e5b322ad9010c6507f8814c47b9c5317284dcd06997410c', '1dbde5acf680c9e77c5ca23aa54f5a8c0530804ea5eab17037c26fa4cfdafeaa', '258672d5ff0c3b087a7a872eba546898cedb781c22b8377f11e86eb5dee302c3', '4a6affad25e64ef7ae2a0c6111cd2cf6498760072bbfec8e80f594fd7077dc8c', '3ef480f55878e349230512fa9c9ccde575ef6ef838e2c426dec845735ab75c37', '6e3c76a9c7cfcb7360185833be6bb4cf7a9f98beb3be3c4fd64431bdc0038f4d', '59a4c92d1cc830d7ccb1528e2e4847a3ae093836e84d53adcc66797873f7c064', '59ea70a2847d522a6018185479455ea5c39ac40cefd919bfc32659ed1fe1d70c', '6e04fe094699177e3bb16a50fde3288ea5c01471095d745861f845a84c60876b', '5fb9174bfce3b90433493a25e6736d7b533f970c6173fb642dd244b28f2a57cf', '401d614edfc2b74d2206d9104e5f11c019759f7aeccda2a3013b870af2f243c4', '738e698f817130ed9c853478055d9ebc2299ad1f0a2f67cf38e0166c4755d2e7', '0bd8c2121ee28086a1c38b43106d58f5a71f70a4458cb359dd8029e73c42937a', '71146521878e0c4d2fd0062ce5925b9e3631f5a824bde521883580988eb0a282', '12e5f3523adf19f2b62909ae582edcb20b407b1aee416ab658211ed00dbcbb4d', '0e6433333299ca958140f3e50595c77a504d6b3136adcbb812cfc662a689bfeb', '79f959dee278330d30cda0e04c7aeb8242236c8d217f1fa0d2a521afb0789954', '0899237c2c67488bc5d2c858f5b72477abc4aa932b9f1504af200238cd97ad7d', '75647104030f9c738b400901e8aa95243a7529c95ae30e3ba489c3c232fb502f', '10861a045967752d885c0ddb368457e75d438f7412d832348fd03e69ae7b25bc', '6e9fc94e05112ad5208eeca1f0fab19c6b4c4a5ed1b6835ef1496615bdcbda82', '6fe3223defbdbe8312b3ec18139f4b8b6ca0f8583f95f1dfcc2e02f91c8dd308', '3d9ba51969161af66add077fd6f18d9312863eed3f765a6255b15e9cb9bcd471', '7a59caef29ecedb139202ae1ae44f66c0dfb3de66447045c20a5c1aec92cf121', '11d0cc5ac92c25bd7fd9a2a813162b78b116f029f26e72165ed02342d0660c6d', '2682bffc07d85e076637a20c9f0607d984862483bf5b60ab65efacca7328b237', '04afce02b95dd44d7ad27b9e1607fbefd63a24d23fead6e109c75d3f2703b641', '50fcb897a23eee74e607812d6d1c4e6c9b49470c94e7d2e8b6102d77d68280ce', '0fd2a9a24a87428bf73053bfc422fb2b24c01ba77a1dd74f230a028c4cef0e5e', '752b8503cd8707c83772c10132b0d2b4468b7d30102fbfcfa1b4dfe5367a6ee6', '1e24cd97d61dc62bb9c7e98bb9ee5b329d3063cceac65d79d30a1fa64caf317f', '4fdcf4a595114ae5cfcc76927cdcdec5dc1ad9e912212450d2da353f1cf7a4fa', '4f30222ca0ac5d6d599a108803523445098ba4db7a1004e1118b74eca9ea3bf8', '5ef1bdba640205e925884a4bf608ad3f483577f65cde056576b4b1896262595b', '73d410de2a4c49021e900a1ff3274cacda80af5093dff50185e3de5190eb0cd9', '1c6f4fccbee8342f3228d35db71ed1de14b64b7183442c5cdb4876fae983ed83', '3bf5924c37c40c1d0a82e7d595ce3c2d3d915bc98ad734fc786d59dafe74f65b', '1d467362b5bfab4257cc3e4e06308fb6c017b4783e1a601d8d1b32d6b92b667f', '015b7e163da7a0fd6adf8844c5fba3b791ad430e7d33019f02d1f4f2713fc321', '68453df232e2bb1a5f221377d738f6933431d16d42e28882fb98de910056510e', '160cf3ed34e3eeb4cf8a605eb7e720fb19deaffe8cc37c33389e876cb65fbf7b', '04ec683a1fb556c027baff8f7ff3297466b2ea5ddf3dfa3483602307a8f8e07c', '2615f152d40768eab58a84fbbaf8f8873b633b44368a28c7f06cc01f20fe8bfb', '7b1508a1414b67f0c76d7b1758b3a45cac50ec1b778d9ac9f97a411dcab02c41', '5ca8734137cc13fa185e3fc7f789f25f81ada8ebb4cc3d3944d5995e3ee6fc21', '4bb2ec1cd9f866458d767de4be969e659dd4474f102555991e98ac3e990a1ef1', '4215d168b3e139da0d655cc732dee825e7404a29e12d0a1cbeea56bd79ebff8f', '5f17bb8262f8e1e91648ee5d4862781b0ebd0a1a6a945f43738b4c6fe06aab38', '30cbe481acd815c4a18b849bbde8e69246ee40bb30dd88298a195b362ae4418b', '10585b742a0aee7954223c3724127aa74042cee1a2fa029d6f868f1bb5977b88', '35a0ee0ec0368eb8e26f121212aa25f495539c2120c15ca5690bf4a273dbb7b8', '28b10f505ee44d2448e0eba5e379a22b06a93e61b0861ec322819e1da1393ffc', '09d815b4c872c6d4bb5a31c1586c976d239f493d628224f8a01d8c7c20b4a37c', '5a40268f5791b40a7292f805ffb801b0b74511e29757161f75be70c0c2969e58', '243b3d49454bc1dbe9f6770edd9f23eab0886db96e98c3f54d8b52396dc780c7', '48e4904b36d10e66a305a8d4563283aa46ce4988365cf4ba955e186bfdb774af', '2f69866be1bca6cc05d0c2f1b150d780b3166daf82644bd336b22c8e0edf6dd2', '23827cae8f0a27f64ca6417f1ad2b908cf0033a3d9b33357b96cdadad2cc4748', '7b6c1957112dbfaa60d98b9a15b25d6ecc0fc133f9fa9a4943664b16cd46993e', '4bc98ca727d9cc98ce977a096ac4404d3560c2a3c53768124cf6431f3e8bc206', '12e3c9b6155fa20bd100c8e8b0c670f4f8c4cacd41739d4a54e4aadae01547f8']\r\n>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\r\n101\r\n>>> test.nodes[0].getnewaddress()\r\n'bcrt1q86scpkn2zdrdmrgnx787n25n983xprp5x3jxnv'\r\n>>> test.nodes[0].getwalletinfo()\r\n{'walletname': '', 'walletversion': 169900, 'balance': Decimal('50.00000000'), 'unconfirmed_balance': Decimal('0E-8'), 'immature_balance': Decimal('5000.00000000'), 'txcount': 101, 'keypoololdest': 1572349178, 'keypoolsize': 0, 'keypoolsize_hd_internal': 1, 'paytxfee': Decimal('0E-8'), 'hdseedid': 'ffa977f7711472819ad31b72d006872df4ce4052', 'private_keys_enabled': True, 'avoid_reuse': False, 'scanning': False}\r\n>>> test.shutdown()\r\n2019-10-29T11:39:48.079000Z TestFramework (INFO): Stopping nodes\r\n2019-10-29T11:39:48.448000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_6czimoav on exit\r\n2019-10-29T11:39:48.448000Z TestFramework (INFO): Tests successful\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-308452066",
      "submitted_at": "2019-10-29T12:19:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "commented",
      "id": 547589057,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzU4OTA1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547589057",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-29T19:23:31Z",
      "updated_at": "2019-10-29T19:23:31Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI can see how this will be useful for a lot of people in the future. Only one nit: I am not sure if `TestWrapper` is a great name. I would expect a class by that name to wrap a specific test. But it's hard to come up with a better name that is still short and describes what this class is doing. Maybe something like `InteractiveDriver`. But probably not worth the effort unless others agree it should be changed.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547589057",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 547590357,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzU5MDM1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547590357",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-29T19:26:43Z",
      "updated_at": "2019-10-29T19:26:43Z",
      "author_association": "MEMBER",
      "body": ">  I am not sure if TestWrapper is a great name.\r\n\r\nI think the name is ok. Other options: `TestREPL`, `TestShell`, `TestDriver`, ...",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547590357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 547607108,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzYwNzEwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547607108",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-29T20:09:14Z",
      "updated_at": "2019-10-29T20:11:22Z",
      "author_association": "MEMBER",
      "body": "> In general, it would be nice to wrap lines in markdown files around 80-120\r\n\r\nPlease also do the same for commit logs! Aim to limit the summary line to 50 characters if possible and wrap all other lines at 80 characters. There are some good pointers on writing commit logs here: https://chris.beams.io/posts/git-commit/",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547607108",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "reviewed",
      "id": 308807117,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4ODA3MTE3",
      "url": null,
      "actor": null,
      "commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Great work with the documentation. Thanks for adding that!\r\n\r\nI think this could be really useful when combined with a REPL with session logging (eg https://ipython.readthedocs.io/en/stable/interactive/reference.html#session-logging-and-restoring) to quickly prototype a test, and then turn it into a permanent test case.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-308807117",
      "submitted_at": "2019-10-29T20:39:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "reviewed",
      "id": 308833310,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA4ODMzMzEw",
      "url": null,
      "actor": null,
      "commit_id": "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Good change, agree with others' nits though. `TestShell` or `TestDriver` might be clearer but no big deal.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-308833310",
      "submitted_at": "2019-10-29T21:10:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "commented",
      "id": 547865586,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0Nzg2NTU4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547865586",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T11:54:11Z",
      "updated_at": "2019-10-30T11:54:11Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547865586",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 547870014,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0Nzg3MDAxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547870014",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T12:06:50Z",
      "updated_at": "2019-10-30T12:06:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Regarding the naming: `TestShell` or `TestDriver` as suggested by @jnewbery and echoed by @jamesob are both clearer names than `TestWrapper` IMO :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547870014",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "mentioned",
      "id": 2755696941,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc1NTY5Njk0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2755696941",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T12:06:50Z"
    },
    {
      "event": "subscribed",
      "id": 2755696942,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NTU2OTY5NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2755696942",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T12:06:50Z"
    },
    {
      "event": "mentioned",
      "id": 2755696944,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc1NTY5Njk0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2755696944",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T12:06:50Z"
    },
    {
      "event": "subscribed",
      "id": 2755696946,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NTU2OTY5NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2755696946",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T12:06:50Z"
    },
    {
      "event": "mentioned",
      "id": 2756424232,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc1NjQyNDIzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2756424232",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:14:18Z"
    },
    {
      "event": "subscribed",
      "id": 2756424235,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NTY0MjQyMzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2756424235",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:14:19Z"
    },
    {
      "event": "commented",
      "id": 547960860,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0Nzk2MDg2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547960860",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:21:46Z",
      "updated_at": "2019-10-30T15:21:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Regarding the naming: TestShell or TestDriver as suggested by @jnewbery and echoed by @jamesob are both clearer names than TestWrapper IMO :)\r\n\r\nMany thanks for all the naming ideas, so it seems like TestShell / TestDriver are the leading candidates? (I sorta like TestShell because it implies an interactive interface?)",
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547960860",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "mentioned",
      "id": 2756455515,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc1NjQ1NTUxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2756455515",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:21:47Z"
    },
    {
      "event": "subscribed",
      "id": 2756455516,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NTY0NTU1MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2756455516",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:21:47Z"
    },
    {
      "event": "mentioned",
      "id": 2756455525,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc1NjQ1NTUyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2756455525",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:21:47Z"
    },
    {
      "event": "subscribed",
      "id": 2756455528,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NTY0NTU1Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2756455528",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T15:21:47Z"
    },
    {
      "event": "commented",
      "id": 547997570,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0Nzk5NzU3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547997570",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T16:35:46Z",
      "updated_at": "2019-10-30T16:37:35Z",
      "author_association": "MEMBER",
      "body": "Since we're discussing names, can offer up `TestConsole` as well (and give some love to the `TestREPL` suggestion.)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547997570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 548021050,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODAyMTA1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548021050",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-30T17:24:44Z",
      "updated_at": "2019-10-30T17:24:44Z",
      "author_association": "MEMBER",
      "body": "Ok, let's go ahead and pick a name. \"Wrapper\" is a bit too general and I am fine with any of the previous other suggestions.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-548021050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2766032613,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2NjAzMjYxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766032613",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T15:46:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2766035104,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2NjAzNTEwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766035104",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T15:50:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2766150976,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2NjE1MDk3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766150976",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T19:02:28Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGU4Yjc2MDhlMTE1MzY0YjViYjEyZTdmMzlkNjYyMTQ1NzMzZGU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ede8b7608e115364b5bb12e7f39d662145733de6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ede8b7608e115364b5bb12e7f39d662145733de6",
      "tree": {
        "sha": "250483e2a83385e11534b84225017be1aac3c412",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/250483e2a83385e11534b84225017be1aac3c412"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/463eab5e1418a592036e7bf9bf46f66fe6462435",
          "sha": "463eab5e1418a592036e7bf9bf46f66fe6462435",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/463eab5e1418a592036e7bf9bf46f66fe6462435"
        }
      ],
      "message": "Remove network_event_loop instance in close()\n\nThe asyncio.new_event_loop() instance is now removed from the NetworkThread\nclass during shutdown. This enables a NetworkThread instance to be restarted\nafter being closed. The current NetworkThread class guards against an existing\nnew_event_loop during initialization.",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T19:33:49Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-25T12:28:08Z"
      },
      "sha": "ede8b7608e115364b5bb12e7f39d662145733de6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjcxMjQxMjkxYTE4NGM5ZWUxOTdiZjVmMGM3ZTE0MTQ0MTdhMGEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b71241291a184c9ee197bf5f0c7e1414417a0a0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6b71241291a184c9ee197bf5f0c7e1414417a0a0",
      "tree": {
        "sha": "4ddf1ad99af35f0e284a322915547f6d80d6bcd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ddf1ad99af35f0e284a322915547f6d80d6bcd7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ede8b7608e115364b5bb12e7f39d662145733de6",
          "sha": "ede8b7608e115364b5bb12e7f39d662145733de6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ede8b7608e115364b5bb12e7f39d662145733de6"
        }
      ],
      "message": "Refactor TestFramework main() into setup/shutdown\n\nSetup and shutdown code now moved into dedicated methods. Test \"success\" is\nadded as a BitcoinTestFramework member, which can be accessed outside of main.\nArgument parsing also moved into separate method and called from main.",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T19:34:07Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-26T14:34:42Z"
      },
      "sha": "6b71241291a184c9ee197bf5f0c7e1414417a0a0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjQwODIwNzU3ZDI1ZmYxY2NmZGZjYmRmMmI0NWI4YjY1MzA4MDEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f40820757d25ff1ccfdfcbdf2b45b8b65308010",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6f40820757d25ff1ccfdfcbdf2b45b8b65308010",
      "tree": {
        "sha": "4b93be0b1516edf56fa74591823a030ab388a045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b93be0b1516edf56fa74591823a030ab388a045"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b71241291a184c9ee197bf5f0c7e1414417a0a0",
          "sha": "6b71241291a184c9ee197bf5f0c7e1414417a0a0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6b71241291a184c9ee197bf5f0c7e1414417a0a0"
        }
      ],
      "message": "Add closing and flushing of logging handlers\n\nIn order for BitcoinTestFramework to correctly restart after shutdown, the\nprevious logging handlers need to be removed, or else logging will continue in\nthe previous temp directory. \"Flush\" ensures buffers are emptied, and \"close\"\nensures file handler close logging file.",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T19:34:18Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-28T13:50:01Z"
      },
      "sha": "6f40820757d25ff1ccfdfcbdf2b45b8b65308010"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTRjNjQ1NjQzZTg2YzQyNTViOThjNjYzYzEwZjJjMjI3MTU4ZDRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/614c645643e86c4255b98c663c10f2c227158d4b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/614c645643e86c4255b98c663c10f2c227158d4b",
      "tree": {
        "sha": "742b7c6c0dcaf534682497ef0394ceada9d731e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/742b7c6c0dcaf534682497ef0394ceada9d731e5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f40820757d25ff1ccfdfcbdf2b45b8b65308010",
          "sha": "6f40820757d25ff1ccfdfcbdf2b45b8b65308010",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6f40820757d25ff1ccfdfcbdf2b45b8b65308010"
        }
      ],
      "message": "Clear TestNode objects after shutdown\n\nTestNode objects need to be removed during shutdown, as setup_nodes does not\nremove previous TestNode objects from previous test runs during setup.",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T19:34:27Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-26T14:03:21Z"
      },
      "sha": "614c645643e86c4255b98c663c10f2c227158d4b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYWIwMTQ2MmY0OGIyZDRlMGQwM2JhODQyYzNhZjg4NTFjNjdjNmYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ab01462f48b2d4e0d03ba842c3af8851c67c6f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ab01462f48b2d4e0d03ba842c3af8851c67c6f1",
      "tree": {
        "sha": "ed591b8c62eac2b979cdb07b1dfdae0475983ca4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed591b8c62eac2b979cdb07b1dfdae0475983ca4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/614c645643e86c4255b98c663c10f2c227158d4b",
          "sha": "614c645643e86c4255b98c663c10f2c227158d4b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/614c645643e86c4255b98c663c10f2c227158d4b"
        }
      ],
      "message": "Move assert num_nodes is set into main()\n\nThis allows a BitcoinTestFramework child class to set test parameters in an\noverridden setup() rather than in an overridden set_test_params().",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T19:34:41Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-26T14:00:02Z"
      },
      "sha": "2ab01462f48b2d4e0d03ba842c3af8851c67c6f1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTU1NjAyYTYzNmMzMjM0MjRmNzUyNzJjY2VjMzg1ODhiM2Q3MWNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5155602a636c323424f75272ccec38588b3d71cd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5155602a636c323424f75272ccec38588b3d71cd",
      "tree": {
        "sha": "1307f6e785c0da16d861709364553a132f41b609",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1307f6e785c0da16d861709364553a132f41b609"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ab01462f48b2d4e0d03ba842c3af8851c67c6f1",
          "sha": "2ab01462f48b2d4e0d03ba842c3af8851c67c6f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ab01462f48b2d4e0d03ba842c3af8851c67c6f1"
        }
      ],
      "message": "Move argparse() to init()\n\nThis ensures TestFramework default parameters are set before setup is called. A\n child class will therefore have access to defaults when overriding setup.",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T19:34:49Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-31T11:01:58Z"
      },
      "sha": "5155602a636c323424f75272ccec38588b3d71cd"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2766170235,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2NjE3MDIzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766170235",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T19:37:35Z"
    },
    {
      "event": "commented",
      "id": 549176038,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTE3NjAzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549176038",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:21Z",
      "updated_at": "2019-11-03T20:38:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you everybody for your reviews and comments! \r\n\r\n- **Nits and fixes:** Have been addressed.\r\n- **Naming:** May I suggest to move ahead with `TestShell`? `TestREPL` also seemed popular but awkward in camel case? (As per @fjahr's [comment](https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547589057) to rename, and all subsequent naming suggestions.)\r\n- **Documentation:** `test/functional/README.md` now references `TestShell` as a prototyping tool for tests, and points out the added utility of session logging if available (As per @jnewbery's [comment](https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-308807117)).\r\n\r\nMay I suggest some additional changes inspired by @jonatack's [comment](https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340038381) to consolidate settings in a single location.\r\n\r\n- **`TestShell`** now initializes with default test parameters maintained in BitcoinTestFramework. Notable exception is `num_nodes`, which must be set by a child class and defaults to 1.\r\n\r\n- **`TestShell.reset()`** has been added, which allows the user to reset test parameters back to default values between runs.\r\n\r\n- **`test-shell.md`** now includes an overview of test parameter keys which can be passed to `TestShell.setup(key=value)`. The list excludes `portseed` and `pdbonfailure`, which don't seem to apply to this use case.",
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549176038",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "mentioned",
      "id": 2766204325,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc2NjIwNDMyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766204325",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:22Z"
    },
    {
      "event": "subscribed",
      "id": 2766204326,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NjYyMDQzMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766204326",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:22Z"
    },
    {
      "event": "mentioned",
      "id": 2766204327,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc2NjIwNDMyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766204327",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:22Z"
    },
    {
      "event": "subscribed",
      "id": 2766204328,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NjYyMDQzMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766204328",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:22Z"
    },
    {
      "event": "mentioned",
      "id": 2766204329,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc2NjIwNDMyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766204329",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:22Z"
    },
    {
      "event": "subscribed",
      "id": 2766204330,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NjYyMDQzMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766204330",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T20:38:22Z"
    },
    {
      "event": "renamed",
      "id": 2766288617,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mjc2NjI4ODYxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766288617",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-03T22:59:01Z",
      "rename": {
        "from": "Added TestWrapper class for interactive Python environments.",
        "to": "Added TestShell class for interactive Python environments."
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTExMjM2OWNmOTE0NTFkMmQwYmY1NzRhOWJmZGFlYTA0Njk2OTM5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5112369cf91451d2d0bf574a9bfdaea04696939",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f5112369cf91451d2d0bf574a9bfdaea04696939",
      "tree": {
        "sha": "10c275928ad3744b6f6fe534842fc8535c02391e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10c275928ad3744b6f6fe534842fc8535c02391e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5155602a636c323424f75272ccec38588b3d71cd",
          "sha": "5155602a636c323424f75272ccec38588b3d71cd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5155602a636c323424f75272ccec38588b3d71cd"
        }
      ],
      "message": "Add TestShell class\n\nA BitcoinTestFramework child class which can be imported by an external user or\nproject. TestShell.setup() initiates an underlying BitcoinTestFramework object\nwith bitcoind subprocesses, rpc interfaces and test logging.\nTestShell.shutdown() safely tears down the BitcoinTestFramework object.",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-04T07:56:56Z"
      },
      "author": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-03T15:40:19Z"
      },
      "sha": "f5112369cf91451d2d0bf574a9bfdaea04696939"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2766788468,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2Njc4ODQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2766788468",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T07:58:25Z"
    },
    {
      "event": "reviewed",
      "id": 311030019,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzExMDMwMDE5",
      "url": null,
      "actor": null,
      "commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice improvements @jachiang. Could you update the PR description (e.g. TestShell)? A few comments below but I like where this is going.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-311030019",
      "submitted_at": "2019-11-04T12:32:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "mentioned",
      "id": 2767968256,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc2Nzk2ODI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2767968256",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T14:48:33Z"
    },
    {
      "event": "subscribed",
      "id": 2767968259,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3Njc5NjgyNTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2767968259",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T14:48:33Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTEzOWVlMDM0ZDIwZWJhYjFiOTFkM2FjMTNhOGVlZTcwYjU5Mzc0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "tree": {
        "sha": "d3b7757292a9eddcf00e15daa910f7d7b0188a1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3b7757292a9eddcf00e15daa910f7d7b0188a1a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5112369cf91451d2d0bf574a9bfdaea04696939",
          "sha": "f5112369cf91451d2d0bf574a9bfdaea04696939",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f5112369cf91451d2d0bf574a9bfdaea04696939"
        }
      ],
      "message": "Add documentation for test_shell submodule",
      "committer": {
        "name": "James Chiang",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-11-04T15:02:28Z"
      },
      "author": {
        "name": "JamesC",
        "email": "james.chiangwu@gmail.com",
        "date": "2019-10-24T18:33:06Z"
      },
      "sha": "19139ee034d20ebab1b91d3ac13a8eee70b59374"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2768026336,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2ODAyNjMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2768026336",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T15:03:15Z"
    },
    {
      "event": "reviewed",
      "id": 311244146,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzExMjQ0MTQ2",
      "url": null,
      "actor": null,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 19139ee034d20ebab1b91d3ac13a8eee70b59374\r\n\r\nI've added a nit inline, but I think this is ready for merge now.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-311244146",
      "submitted_at": "2019-11-04T18:17:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "commented",
      "id": 549492455,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ5MjQ1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549492455",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T18:45:16Z",
      "updated_at": "2019-11-04T18:45:16Z",
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/17288/commits/19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549492455",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "mentioned",
      "id": 2768854185,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc2ODg1NDE4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2768854185",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:02:08Z"
    },
    {
      "event": "subscribed",
      "id": 2768854186,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3Njg4NTQxODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2768854186",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:02:08Z"
    },
    {
      "event": "commented",
      "id": 549503270,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUwMzI3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549503270",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:12:09Z",
      "updated_at": "2019-11-04T19:12:09Z",
      "author_association": "MEMBER",
      "body": "ACK 19139ee034d20ebab1b91d3ac13a8eee70b59374\r\n\r\nVerified that setting up with the updated instruction of `test.setup(num_nodes=2, setup_clean_chain=True)` initializes with a block height of 0.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549503270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2768944188,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2ODk0NDE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2768944188",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:32:13Z"
    },
    {
      "event": "commented",
      "id": 549513505,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUxMzUwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549513505",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:37:39Z",
      "updated_at": "2019-11-04T19:37:39Z",
      "author_association": "MEMBER",
      "body": "Rather than invalidate the three ACKs for a minor nit, can you force push back to 19139ee034d20ebab1b91d3ac13a8eee70b59374 please? I think this PR was ready to merge before your last force push.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549513505",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2769006634,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2OTAwNjYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2769006634",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:51:59Z"
    },
    {
      "event": "commented",
      "id": 549519347,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUxOTM0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549519347",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:52:50Z",
      "updated_at": "2019-11-04T19:52:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Rather than invalidate the three ACKs for a minor nit, can you force push back to [19139ee](https://github.com/bitcoin/bitcoin/commit/19139ee034d20ebab1b91d3ac13a8eee70b59374) please? I think this PR was ready to merge before your last force push.\r\n\r\nApologies @jnewbery. Back to 19139ee now.",
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549519347",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "mentioned",
      "id": 2769009327,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc2OTAwOTMyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2769009327",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:52:50Z"
    },
    {
      "event": "subscribed",
      "id": 2769009328,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NjkwMDkzMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2769009328",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:52:50Z"
    },
    {
      "event": "referenced",
      "id": 2769016327,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3NjkwMTYzMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2769016327",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bc38bb9a6036d73f507e66a2f588547f3f17e4b1",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc38bb9a6036d73f507e66a2f588547f3f17e4b1",
      "created_at": "2019-11-04T19:55:05Z"
    },
    {
      "event": "merged",
      "id": 2769016707,
      "node_id": "MDExOk1lcmdlZEV2ZW50Mjc2OTAxNjcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2769016707",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "created_at": "2019-11-04T19:55:11Z"
    },
    {
      "event": "closed",
      "id": 2769016728,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mjc2OTAxNjcyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2769016728",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:55:11Z"
    },
    {
      "event": "commented",
      "id": 549521075,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUyMTA3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549521075",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T19:57:03Z",
      "updated_at": "2019-11-04T19:57:03Z",
      "author_association": "MEMBER",
      "body": "Could do the fixup as a follow-up?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549521075",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "commented",
      "id": 549523386,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUyMzM4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549523386",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-04T20:02:59Z",
      "updated_at": "2019-11-04T20:02:59Z",
      "author_association": "MEMBER",
      "body": "very nice! post-hom concept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549523386",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "reviewed",
      "id": 310846205,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEwODQ2MjA1",
      "url": null,
      "actor": null,
      "commit_id": "e521ff6c9c000b899b1c572fdd74b8ad27a0c46a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for working on this!",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-310846205",
      "submitted_at": "2019-11-04T20:15:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "reviewed",
      "id": 311336867,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzExMzM2ODY3",
      "url": null,
      "actor": null,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#pullrequestreview-311336867",
      "submitted_at": "2019-11-04T20:26:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
    },
    {
      "event": "mentioned",
      "id": 2770350971,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc3MDM1MDk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770350971",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T07:36:48Z"
    },
    {
      "event": "subscribed",
      "id": 2770350972,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NzAzNTA5NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770350972",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T07:36:48Z"
    },
    {
      "event": "mentioned",
      "id": 2770350974,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc3MDM1MDk3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770350974",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T07:36:48Z"
    },
    {
      "event": "subscribed",
      "id": 2770350976,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NzAzNTA5NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770350976",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T07:36:48Z"
    },
    {
      "event": "mentioned",
      "id": 2770365231,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc3MDM2NTIzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770365231",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T07:42:42Z"
    },
    {
      "event": "subscribed",
      "id": 2770365233,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NzAzNjUyMzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770365233",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T07:42:42Z"
    },
    {
      "event": "commented",
      "id": 549872561,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTg3MjU2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549872561",
      "actor": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T15:27:03Z",
      "updated_at": "2019-11-05T15:27:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "- Post-merge suggestions are tracked in #17378 (Sorry for the additional review effort).\r\n- Since I am not sure, I have opened an issue track doc consolidation in #17380.",
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549872561",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17288"
    },
    {
      "event": "referenced",
      "id": 2772313351,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3NzIzMTMzNTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2772313351",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "54a337478dfbfede7c8335f6c7ab134817b73dcd",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54a337478dfbfede7c8335f6c7ab134817b73dcd",
      "created_at": "2019-11-05T17:37:16Z"
    },
    {
      "event": "referenced",
      "id": 3952754994,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTI3NTQ5OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3952754994",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "074c6b258a91458f9970fb6008c6d8faff9aeadd",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/074c6b258a91458f9970fb6008c6d8faff9aeadd",
      "created_at": "2020-11-03T13:03:11Z"
    },
    {
      "event": "referenced",
      "id": 3952820063,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTI4MjAwNjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3952820063",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e80d5b9ce1e7fd5d46cf9933651f80c6ac32b1c0",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/e80d5b9ce1e7fd5d46cf9933651f80c6ac32b1c0",
      "created_at": "2020-11-03T13:18:52Z"
    },
    {
      "event": "referenced",
      "id": 3952890677,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTI4OTA2Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3952890677",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5a1a1b1bdefe8f9982dbb993a9eaa14704f21411",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/5a1a1b1bdefe8f9982dbb993a9eaa14704f21411",
      "created_at": "2020-11-03T13:35:09Z"
    },
    {
      "event": "referenced",
      "id": 3953201678,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTMyMDE2Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3953201678",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df335a36010f35caa338439fb902255a1d8161a3",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/df335a36010f35caa338439fb902255a1d8161a3",
      "created_at": "2020-11-03T14:40:02Z"
    },
    {
      "event": "referenced",
      "id": 3953218177,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTMyMTgxNzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3953218177",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1c71a7fb0e163fe18717fa5f3a07c2e622f177ad",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/1c71a7fb0e163fe18717fa5f3a07c2e622f177ad",
      "created_at": "2020-11-03T14:42:57Z"
    },
    {
      "event": "referenced",
      "id": 3953218181,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTMyMTgxODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3953218181",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4e57f46856881352aaa6b92a8db4735e12d92eda",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/4e57f46856881352aaa6b92a8db4735e12d92eda",
      "created_at": "2020-11-03T14:42:57Z"
    },
    {
      "event": "referenced",
      "id": 3953218188,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NTMyMTgxODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3953218188",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1926522d9274526060ed495c8b7125a26eb220af",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/1926522d9274526060ed495c8b7125a26eb220af",
      "created_at": "2020-11-03T14:42:58Z"
    },
    {
      "event": "locked",
      "id": 5778919485,
      "node_id": "LOE_lADOABII584em3hPzwAAAAFYc1A9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778919485",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:54:49Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339753399",
      "pull_request_review_id": 308097729,
      "id": 339753399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTc1MzM5OQ==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 1,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Wouldn't it make more sense to put this file in the `test/` directory? I feel like we already have some documentation there and it could be referenced from the existing docs.",
      "created_at": "2019-10-28T19:35:03Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r339753399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339753399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031294",
      "pull_request_review_id": 308452066,
      "id": 340031294,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMTI5NA==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 1,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": 339753399,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "...or possibly in `test/functional/`",
      "created_at": "2019-10-29T11:55:08Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031846",
      "pull_request_review_id": 308452066,
      "id": 340031846,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMTg0Ng==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 6,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In general, it would be nice to wrap lines in markdown files around 80-120 characters for easier reviewing here and in local editors. Most editors can do this automatically for you while editing the file and it would be kind for reviewers.",
      "created_at": "2019-10-29T11:56:34Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031846",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340031846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032263",
      "pull_request_review_id": 308452066,
      "id": 340032263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMjI2Mw==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 10,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/functional the/the functional/",
      "created_at": "2019-10-29T11:57:30Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032568",
      "pull_request_review_id": 308452066,
      "id": 340032568,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMjU2OA==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 12,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/command-line/command line/",
      "created_at": "2019-10-29T11:58:15Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032866",
      "pull_request_review_id": 308452066,
      "id": 340032866,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMjg2Ng==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 12,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/kernel,/kernel./ ?",
      "created_at": "2019-10-29T11:58:53Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340032866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033351",
      "pull_request_review_id": 308452066,
      "id": 340033351,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMzM1MQ==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 26,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The first 2 commands didn't seem needed for running your example in the PR description?",
      "created_at": "2019-10-29T12:00:09Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033677",
      "pull_request_review_id": 308452066,
      "id": 340033677,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzMzY3Nw==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 38,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/run/run,/ (add Oxford comma) and s/shutdown/shut down/ (shutdown is a noun but not a verb)",
      "created_at": "2019-10-29T12:00:54Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340033677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034412",
      "pull_request_review_id": 308452066,
      "id": 340034412,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNDQxMg==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 50,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps s/This/Running a single process/",
      "created_at": "2019-10-29T12:02:44Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034751",
      "pull_request_review_id": 308452066,
      "id": 340034751,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNDc1MQ==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestWrapper()\n+>>> test2.setup()\n+TestWrapper is already running!\n+```\n+\n+## 4. Interacting with the TestWrapper\n+\n+Unlike the BitcoinTestFramework class, the TestWrapper keeps the underlying Bitcoind subprocesses (nodes) and logging utilities running, until the user explicitly shuts down the TestWrapper object.",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 60,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/running,/running/ (remove the comma)",
      "created_at": "2019-10-29T12:03:38Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340034751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340035312",
      "pull_request_review_id": 308452066,
      "id": 340035312,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNTMxMg==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestWrapper()\n+>>> test2.setup()\n+TestWrapper is already running!\n+```\n+\n+## 4. Interacting with the TestWrapper\n+\n+Unlike the BitcoinTestFramework class, the TestWrapper keeps the underlying Bitcoind subprocesses (nodes) and logging utilities running, until the user explicitly shuts down the TestWrapper object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node processes and BitcoinTestFramework convenience methods can be accessed interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestWrapper nodes are initialized with a clean chain. This means that each node of the TestWrapper is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound connection to each other during `setup`, the second node's chain will include the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test [readme](../test/functional/README.md), which provides an overview of the test-framework**. Modules such as [key.py](../test/functional/test_framework/key.py), [script.py](../test/functional/test_framework/script.py) and [messages.py](../test/functional/test_framework/messages.py) are especially useful in constructing objects which can be passed to the bitcoind nodes managed by a running TestWrapper object.",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 100,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/especially/particularly/",
      "created_at": "2019-10-29T12:05:06Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340035312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340035312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036265",
      "pull_request_review_id": 308452066,
      "id": 340036265,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNjI2NQ==",
      "diff_hunk": "@@ -135,6 +163,9 @@ def main(self):\n         self.add_options(parser)\n         self.options = parser.parse_args()\n \n+    def setup(self):\n+        \"\"\"Call this method to startup the test-framework object with options set.\"\"\"",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 47,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/startup/start up/ and s/test-framework/test framework/",
      "created_at": "2019-10-29T12:07:40Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036265",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036650",
      "pull_request_review_id": 308452066,
      "id": 340036650,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNjY1MA==",
      "diff_hunk": "@@ -181,33 +212,20 @@ def main(self):\n         self.network_thread = NetworkThread()\n         self.network_thread.start()\n \n-        success = TestStatus.FAILED\n+        if self.options.usecli:\n+            if not self.supports_cli:\n+                raise SkipTest(\"--usecli specified but test does not support using CLI\")\n+            self.skip_if_no_cli()\n+        self.skip_test_if_missing_module()\n+        self.setup_chain()\n+        self.setup_network()\n \n-        try:\n-            if self.options.usecli:\n-                if not self.supports_cli:\n-                    raise SkipTest(\"--usecli specified but test does not support using CLI\")\n-                self.skip_if_no_cli()\n-            self.skip_test_if_missing_module()\n-            self.setup_chain()\n-            self.setup_network()\n-            self.run_test()\n-            success = TestStatus.PASSED\n-        except JSONRPCException:\n-            self.log.exception(\"JSONRPC error\")\n-        except SkipTest as e:\n-            self.log.warning(\"Test Skipped: %s\" % e.message)\n-            success = TestStatus.SKIPPED\n-        except AssertionError:\n-            self.log.exception(\"Assertion failed\")\n-        except KeyError:\n-            self.log.exception(\"Key error\")\n-        except Exception:\n-            self.log.exception(\"Unexpected exception caught during testing\")\n-        except KeyboardInterrupt:\n-            self.log.warning(\"Exiting after keyboard interrupt\")\n+        self.success = TestStatus.PASSED\n \n-        if success == TestStatus.FAILED and self.options.pdbonfailure:\n+    def shutdown(self):\n+        \"\"\"Call this method to shutdown the test-framework object.\"\"\"",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 92,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/shutdown/shut down/ and s/test-framework/test framework/",
      "created_at": "2019-10-29T12:08:37Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340036650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340037602",
      "pull_request_review_id": 308452066,
      "id": 340037602,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzNzYwMg==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 23,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: possibly remove the extra lines at L21, 23 and 31",
      "created_at": "2019-10-29T12:10:44Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340037602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340037602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340038381",
      "pull_request_review_id": 308452066,
      "id": 340038381,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzODM4MQ==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")\n+                return\n+\n+            self.setup_clean_chain = kwargs.get('setup_clean_chain',True)",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 36,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do these args need to be maintained in parallel with those in test_framework.py, etc? If yes, perhaps mention/warn about it in a code comment.",
      "created_at": "2019-10-29T12:12:51Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340038381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340038381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340040618",
      "pull_request_review_id": 308452066,
      "id": 340040618,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDA0MDYxOA==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper\n+```\n+\n+The following TestWrapper methods manage the lifetime of the underlying bitcoind processes and logging utilities.\n+\n+* `TestWrapper.setup()`\n+* `TestWrapper.shutdown()`\n+\n+The TestWrapper inherits all BitcoinTestFramework members and methods, such as:\n+* `TestWrapper.nodes[index].rpc_method()`\n+* `TestWrapper.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run and shutdown a TestWrapper object.\n+\n+## 3. Initializing a TestWrapper object\n+\n+```\n+>>> test = TestWrapper()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestWrapper forwards all functional test parameters of the parent Bitcoin TestFramework object. The full set of argument keywords which can be used to initialize the TestWrapper can be found [here](../test/functional/test_framework/test_wrapper.py).\n+\n+**Note: Running multiple instances of TestWrapper is not allowed.**\n+This also ensures that logging remains consolidated in the same temporary folder. If you need more bitcoind nodes than set by default (1), simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestWrapper()\n+>>> test2.setup()\n+TestWrapper is already running!\n+```\n+\n+## 4. Interacting with the TestWrapper\n+\n+Unlike the BitcoinTestFramework class, the TestWrapper keeps the underlying Bitcoind subprocesses (nodes) and logging utilities running, until the user explicitly shuts down the TestWrapper object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node processes and BitcoinTestFramework convenience methods can be accessed interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestWrapper nodes are initialized with a clean chain. This means that each node of the TestWrapper is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound connection to each other during `setup`, the second node's chain will include the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test [readme](../test/functional/README.md), which provides an overview of the test-framework**. Modules such as [key.py](../test/functional/test_framework/key.py), [script.py](../test/functional/test_framework/script.py) and [messages.py](../test/functional/test_framework/messages.py) are especially useful in constructing objects which can be passed to the bitcoind nodes managed by a running TestWrapper object.\n+\n+## 5. Shutting the TestWrapper down\n+\n+Shutting down the TestWrapper will safely tear down all running bitcoind instances and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the `TestWrapper.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the underlying BitcoinTestFramework:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py '/path/to/bitcoin_func_test_XXXXXXX'`",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 123,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: missing newline at EOF",
      "created_at": "2019-10-29T12:18:48Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340040618",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340040618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304288",
      "pull_request_review_id": 308807117,
      "id": 340304288,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNDI4OA==",
      "diff_hunk": "@@ -238,20 +256,25 @@ def main(self):\n             self.log.warning(\"Not cleaning up dir {}\".format(self.options.tmpdir))\n             cleanup_tree_on_exit = False\n \n-        if success == TestStatus.PASSED:\n+        if self.success == TestStatus.PASSED:\n             self.log.info(\"Tests successful\")\n             exit_code = TEST_EXIT_PASSED\n-        elif success == TestStatus.SKIPPED:\n+        elif self.success == TestStatus.SKIPPED:\n             self.log.info(\"Test skipped\")\n             exit_code = TEST_EXIT_SKIPPED\n         else:\n             self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             self.log.error(\"Hint: Call {} '{}' to consolidate all logs\".format(os.path.normpath(os.path.dirname(os.path.realpath(__file__)) + \"/../combine_logs.py\"), self.options.tmpdir))\n             exit_code = TEST_EXIT_FAILED\n-        logging.shutdown()\n+        for h in list(self.log.handlers):",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 128,
      "original_position": 124,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this could use a comment saying why you're not just calling `logging.shutdown()` (maybe reference https://docs.python.org/3/library/logging.html#logging.shutdown).\r\n\r\nWithout a comment, someone might helpfully change this back to using `logging.shutdown()` in future.",
      "created_at": "2019-10-29T20:20:50Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340304288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 272,
      "original_line": 272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305236",
      "pull_request_review_id": 308807117,
      "id": 340305236,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNTIzNg==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 7,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd move this to be a class docstring for `TestWrapper` rather than a file docstring.",
      "created_at": "2019-10-29T20:22:56Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305415",
      "pull_request_review_id": 308807117,
      "id": 340305415,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNTQxNQ==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 2,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: (c) 2019 (unless you've been secretly working on this for 5 years)",
      "created_at": "2019-10-29T20:23:21Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340305415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340312053",
      "pull_request_review_id": 308807117,
      "id": 340312053,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMxMjA1Mw==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")\n+                return\n+\n+            self.setup_clean_chain = kwargs.get('setup_clean_chain',True)\n+            self.num_nodes = kwargs.get('num_nodes', 1)\n+            self.network_thread = kwargs.get('network_thread', None)\n+            self.rpc_timeout = kwargs.get('rpc_timeout', 60)\n+            self.supports_cli = kwargs.get('supports_cli', False)\n+            self.bind_to_localhost_only = kwargs.get('bind_to_localhost_only', True)\n+\n+            self.options = argparse.Namespace\n+            self.options.nocleanup = kwargs.get('nocleanup', False)\n+            self.options.noshutdown = kwargs.get('noshutdown', False)\n+            self.options.cachedir = kwargs.get('cachedir', abspath(join(__file__ ,\"../../../..\") + \"/test/cache\"))\n+            self.options.tmpdir = kwargs.get('tmpdir', None)\n+            self.options.loglevel = kwargs.get('loglevel', 'INFO')\n+            self.options.trace_rpc = kwargs.get('trace_rpc', False)\n+            self.options.port_seed = kwargs.get('port_seed', getpid())\n+            self.options.coveragedir = kwargs.get('coveragedir', None)\n+            self.options.configfile = kwargs.get('configfile', abspath(join(__file__ ,\"../../../..\") + \"/test/config.ini\"))\n+            self.options.pdbonfailure = kwargs.get('pdbonfailure', False)\n+            self.options.usecli = kwargs.get('usecli', False)\n+            self.options.perf = kwargs.get('perf', False)\n+            self.options.randomseed = kwargs.get('randomseed', None)\n+\n+            self.options.bitcoind = kwargs.get('bitcoind', abspath(join(__file__ ,\"../../../..\") +  \"/src/bitcoind\"))\n+            self.options.bitcoincli = kwargs.get('bitcoincli', None)\n+\n+            super().setup()\n+            self.running = True\n+\n+        def shutdown(self):\n+            if not self.running:\n+                print(\"TestWrapper is not running!\")\n+            else:\n+                super().shutdown()\n+                self.running = False\n+\n+    instance = None\n+\n+    def __new__(cls):",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 73,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Small comment here to explain that we wrap the class to enforce a singleton pattern would be nice.",
      "created_at": "2019-10-29T20:37:51Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340312053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340312053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340324672",
      "pull_request_review_id": 308833310,
      "id": 340324672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMyNDY3Mg==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 33,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Make any sense to log instead of print? (same question for below)",
      "created_at": "2019-10-29T21:04:50Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340324672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340324672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340678650",
      "pull_request_review_id": 309285958,
      "id": 340678650,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDY3ODY1MA==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 33,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "in_reply_to_id": 340324672,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks @jamesob for the review. For my understanding, do you mean logging it to the (already) running TestShell/Driver instance?",
      "created_at": "2019-10-30T15:14:17Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340678650",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340678650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340679054",
      "pull_request_review_id": 309286463,
      "id": 340679054,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDY3OTA1NA==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 2,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": 340305415,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Almost feels like it ;)",
      "created_at": "2019-10-30T15:14:56Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340679054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340679054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340714099",
      "pull_request_review_id": 309331957,
      "id": 340714099,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDcxNDA5OQ==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+Test Wrapper for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestWrapper` submodule in the functional test suite.\n+\n+The TestWrapper submodule extends the `BitcoinTestFramework` functionality to external interactive environments for prototyping and educational purposes. Just like `BitcoinTestFramework`, the TestWrapper allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to functional the test logging utility.\n+\n+The `TestWrapper` can be useful in interactive environments where it is necessary to extend the object lifetime of the underlying `BitcoinTestFramework` between user inputs. Such environments include the Python3 command-line interpreter or [Jupyter](https://jupyter.org/) notebooks running a Python3 kernel,\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestWrapper.\n+\n+## 2. Importing TestWrapper from the Bitcoin Core repository\n+\n+We can import the TestWrapper by adding the path of the Bitcoin Core `test_framework` module to the beginning of the PATH variable, and then importing the `TestWrapper` class from the `test_wrapper` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_wrapper import TestWrapper",
      "path": "doc/test-wrapper.md",
      "position": null,
      "original_position": 26,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "9535d81caeac13b9e8180e5c3d4b60190f030629",
      "in_reply_to_id": 340033351,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you, I have added it to the PR description.",
      "created_at": "2019-10-30T16:09:25Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340714099",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340714099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341305354",
      "pull_request_review_id": 310101188,
      "id": 341305354,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTMwNTM1NA==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 33,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "in_reply_to_id": 340324672,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is better as a `print()` which gets displayed to the user immediately. The log context is for what's happening inside the test, not for a user accidentally re-calling the setup message.",
      "created_at": "2019-10-31T18:36:27Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341305354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341305354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341878366",
      "pull_request_review_id": 310846205,
      "id": 341878366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTg3ODM2Ng==",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestShell:\n+    \"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+    The TestShell class extends the BitcoinTestFramework\n+    rpc & daemon process management functionality to external\n+    python environments.\n+\n+    It is a singleton class, which ensures that users only\n+    start a single TestShell at a time.\"\"\"\n+\n+    class __TestShell(BitcoinTestFramework):\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+            if self.running:\n+                print(\"TestShell is already running!\")\n+                return\n+\n+            # Num_nodes parameter must be set\n+            # by BitcoinTestFramework child class.\n+            self.num_nodes = kwargs.get('num_nodes', 1)\n+            kwargs.pop('num_nodes', None)\n+\n+            # User parameters override default values.\n+            for key, value in kwargs.items():\n+                if hasattr(self, key):\n+                    setattr(self, key, value)\n+                elif hasattr(self.options, key):\n+                    setattr(self.options, key, value)\n+                else:\n+                    raise KeyError(key + \" not a valid parameter key\")\n+\n+            super().setup()\n+            self.running = True\n+\n+        def shutdown(self):\n+            if not self.running:\n+                print(\"TestShell is not running!\")\n+            else:\n+                super().shutdown()\n+                self.running = False\n+\n+        def reset(self):\n+            if self.running:\n+                print(\"Shutdown TestWrapper before resetting!\")",
      "path": "test/functional/test_framework/test_shell.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "e521ff6c9c000b899b1c572fdd74b8ad27a0c46a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                print(\"Shutdown TestShell before resetting!\")\r\n```",
      "created_at": "2019-11-03T22:59:28Z",
      "updated_at": "2019-11-04T20:15:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341878366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341878366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341927364",
      "pull_request_review_id": 310909999,
      "id": 341927364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTkyNzM2NA==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+The TestWrapper class extends the BitcoinTestFramework\n+rpc & daemon process management functionality to external\n+python environments.\n+\n+It is a singleton class, which ensures that users only\n+start a single TestWrapper at a time.\"\"\"\n+\n+import argparse\n+from os import getpid\n+from os.path import abspath, join\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestWrapper:\n+\n+    class __TestWrapper(BitcoinTestFramework):\n+\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+\n+            if self.running:\n+                print(\"TestWrapper is already running!\")",
      "path": "test/functional/test_framework/test_wrapper.py",
      "position": null,
      "original_position": 33,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "5828e9a0fd97d918562d568d26f64c2f44fcba40",
      "in_reply_to_id": 340324672,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, as of now I have left all TestWrapper warnings as `print()`. These include the following. As far as I can tell, they are specific to the lifetime of the TestShell object and not the underlying test.\r\n\r\n- \"TestShell is already running!\" (Multiple initializations)\r\n- \"TestShell is not running!\" (Shutdown call without running test)\r\n- \"Shutdown TestWrapper before resetting!\" (Reset call while running test)",
      "created_at": "2019-11-04T07:50:40Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341927364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341927364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342019934",
      "pull_request_review_id": 311030019,
      "id": 342019934,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAxOTkzNA==",
      "diff_hunk": "@@ -99,6 +99,16 @@ P2PInterface object and override the callback methods.\n Examples tests are [p2p_unrequested_blocks.py](p2p_unrequested_blocks.py),\n [p2p_compactblocks.py](p2p_compactblocks.py).\n \n+#### Prototyping tests\n+\n+The [`TestShell`](test-shell.md) class exposes the BitcoinTestFramework\n+functionality to interactive Python3 environments, and can be used to prototype",
      "path": "test/functional/README.md",
      "position": null,
      "original_position": 7,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: remove comma after environments, as the clause after is not independent.",
      "created_at": "2019-11-04T12:13:38Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342019934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342019934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342020174",
      "pull_request_review_id": 311030019,
      "id": 342020174,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyMDE3NA==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional",
      "path": "test/functional/test-shell.md",
      "position": null,
      "original_position": 4,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \"describes how to use\" might be friendlier.",
      "created_at": "2019-11-04T12:14:22Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342020174",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342020174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342020614",
      "pull_request_review_id": 311030019,
      "id": 342020614,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyMDYxNA==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary",
      "path": "test/functional/test-shell.md",
      "position": 15,
      "original_position": 15,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: you write TestShell without backticks above and below; ideally settle on one style. Idem for BitcoinTestFramework.",
      "created_at": "2019-11-04T12:15:38Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342020614",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342020614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342021535",
      "pull_request_review_id": 311030019,
      "id": 342021535,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyMTUzNQ==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to",
      "path": "test/functional/test-shell.md",
      "position": null,
      "original_position": 58,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: wrote BitcoinTestFramework elsewhere without spaces",
      "created_at": "2019-11-04T12:18:23Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342021535",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342021535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342022875",
      "pull_request_review_id": 311030019,
      "id": 342022875,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyMjg3NQ==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.",
      "path": "test/functional/test-shell.md",
      "position": null,
      "original_position": 86,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm seeing 200 blocks by default, is it me?\r\n```python\r\n((HEAD detached at origin/pr/17288))$ python3\r\nPython 3.7.3 (default, Apr  3 2019, 05:39:12) \r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys\r\n>>> from test_framework.test_shell import TestShell\r\n>>> test = TestShell()\r\n>>> test.setup(num_nodes=2)\r\n2019-11-04T12:07:13.890000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_d123oydj\r\n>>> test2 = TestShell()\r\n>>> test2.setup()\r\nTestShell is already running!\r\n>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\r\n200\r\n```\r\nSecond try without instantiating a second shell.\r\n```python\r\n((HEAD detached at origin/pr/17288))$ python3\r\nPython 3.7.3 (default, Apr  3 2019, 05:39:12) \r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys\r\n>>> from test_framework.test_shell import TestShell\r\n>>> test = TestShell()\r\n>>> test.setup(num_nodes=2)\r\n2019-11-04T12:10:24.474000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_su_r79l1\r\n>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\r\n200\r\n```",
      "created_at": "2019-11-04T12:22:06Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342022875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342022875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342023112",
      "pull_request_review_id": 311030019,
      "id": 342023112,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyMzExMg==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!",
      "path": "test/functional/test-shell.md",
      "position": 122,
      "original_position": 121,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Logging tested/verified.",
      "created_at": "2019-11-04T12:22:44Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342023112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342023112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 122,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342023181",
      "pull_request_review_id": 311030019,
      "id": 342023181,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyMzE4MQ==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!",
      "path": "test/functional/test-shell.md",
      "position": 71,
      "original_position": 70,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Tested and verified.",
      "created_at": "2019-11-04T12:22:57Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342023181",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342023181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342025578",
      "pull_request_review_id": 311030019,
      "id": 342025578,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjAyNTU3OA==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test\n+[readme](../test/functional/README.md), which provides an overview of the\n+test-framework**. Modules such as\n+[key.py](../test/functional/test_framework/key.py),\n+[script.py](../test/functional/test_framework/script.py) and\n+[messages.py](../test/functional/test_framework/messages.py) are particularly\n+useful in constructing objects which can be passed to the bitcoind nodes managed\n+by a running TestShell object.\n+\n+## 5. Shutting the TestShell down\n+\n+Shutting down the TestShell will safely tear down all running bitcoind instances\n+and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the\n+`TestShell.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the\n+underlying BitcoinTestFramework:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py\n+  '/path/to/bitcoin_func_test_XXXXXXX'`\n+\n+## 6. Custom TestShell parameters\n+\n+The TestShell object initializes with the default settings inherited from the\n+BitcoinTestFramework class. The user can override these in\n+`TestShell.setup(key=value)`.\n+\n+**Note:** `TestShell.reset()` will reset test parameters to default values and\n+can be called after the TestShell is shut down.\n+\n+| Test parameter key | Default Value | Description |",
      "path": "test/functional/test-shell.md",
      "position": 170,
      "original_position": 169,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice! I wonder it this table should be in test/README.md which touches on some of these parameters. Best to not maintain docs in two places if feasible.",
      "created_at": "2019-11-04T12:29:49Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342025578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342025578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342042465",
      "pull_request_review_id": 311059373,
      "id": 342042465,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjA0MjQ2NQ==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.",
      "path": "test/functional/test-shell.md",
      "position": null,
      "original_position": 86,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342022875,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, I forgot to update that. The `setup_clean_chain` default is now `False`, since we are inheriting it from the `BitcoinTestFramework` parent class. Will update in docs, Thanks!!",
      "created_at": "2019-11-04T13:15:51Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342042465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342042465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342087153",
      "pull_request_review_id": 311118854,
      "id": 342087153,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjA4NzE1Mw==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test\n+[readme](../test/functional/README.md), which provides an overview of the\n+test-framework**. Modules such as\n+[key.py](../test/functional/test_framework/key.py),\n+[script.py](../test/functional/test_framework/script.py) and\n+[messages.py](../test/functional/test_framework/messages.py) are particularly\n+useful in constructing objects which can be passed to the bitcoind nodes managed\n+by a running TestShell object.\n+\n+## 5. Shutting the TestShell down\n+\n+Shutting down the TestShell will safely tear down all running bitcoind instances\n+and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the\n+`TestShell.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the\n+underlying BitcoinTestFramework:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py\n+  '/path/to/bitcoin_func_test_XXXXXXX'`\n+\n+## 6. Custom TestShell parameters\n+\n+The TestShell object initializes with the default settings inherited from the\n+BitcoinTestFramework class. The user can override these in\n+`TestShell.setup(key=value)`.\n+\n+**Note:** `TestShell.reset()` will reset test parameters to default values and\n+can be called after the TestShell is shut down.\n+\n+| Test parameter key | Default Value | Description |",
      "path": "test/functional/test-shell.md",
      "position": 170,
      "original_position": 169,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342025578,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm. I was thinking about that, but not sure of the following two issues if we are to consolidate test parameter documentation.\r\n\r\n**A) Minor inconsistency in parameter naming:**\r\n\r\n- `BitcoinTestFramework` command-line args vs `BitcoinTestFramework` member:\r\n    - `--tracerpc` vs `trace_rpc`\r\n    - `--portseed` vs `port_seed`\r\n\r\n`TestShell` just looks up the `setup` keywords as attributes, so we pass `TestShell.setup(trace_rpc=True)` for example. I would like to avoid a translation for these two keywords, do you agree?\r\n\r\n**B) Different parameter passing locations:** \r\n\r\nFor `BitcoinTestFramework`, some of these params are overridden in `set_test_params()` and some passed in as command-line arguments, which doesn't make sense for `TestShell`, since it's interactive.\r\n\r\n@jonatack Let me know what you think.",
      "created_at": "2019-11-04T14:48:32Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342087153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342087153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342095721",
      "pull_request_review_id": 311130129,
      "id": 342095721,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjA5NTcyMQ==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary",
      "path": "test/functional/test-shell.md",
      "position": 15,
      "original_position": 15,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342020614,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2019-11-04T15:03:37Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342095721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342095721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342095746",
      "pull_request_review_id": 311130174,
      "id": 342095746,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjA5NTc0Ng==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to",
      "path": "test/functional/test-shell.md",
      "position": null,
      "original_position": 58,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342021535,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2019-11-04T15:03:40Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342095746",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342095746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342095995",
      "pull_request_review_id": 311130480,
      "id": 342095995,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjA5NTk5NQ==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.",
      "path": "test/functional/test-shell.md",
      "position": null,
      "original_position": 86,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342022875,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in documentation:`test.setup(num_nodes=2, setup_clean_chain=True)`.",
      "created_at": "2019-11-04T15:04:06Z",
      "updated_at": "2019-11-04T19:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342095995",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342095995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342181988",
      "pull_request_review_id": 311244146,
      "id": 342181988,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjE4MTk4OA==",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestShell:\n+    \"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+    The TestShell class extends the BitcoinTestFramework\n+    rpc & daemon process management functionality to external\n+    python environments.\n+\n+    It is a singleton class, which ensures that users only\n+    start a single TestShell at a time.\"\"\"\n+\n+    class __TestShell(BitcoinTestFramework):\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+            if self.running:\n+                print(\"TestShell is already running!\")\n+                return\n+\n+            # Num_nodes parameter must be set\n+            # by BitcoinTestFramework child class.\n+            self.num_nodes = kwargs.get('num_nodes', 1)\n+            kwargs.pop('num_nodes', None)",
      "path": "test/functional/test_framework/test_shell.py",
      "position": 33,
      "original_position": 33,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "instead of popping the entry from kwargs here, why not just set:\r\n\r\n```\r\nself.num_nodes = 1\r\n```\r\n\r\nand let the mainline logic below overwrite that if a `num_nodes` argument has been passed in.",
      "created_at": "2019-11-04T17:45:29Z",
      "updated_at": "2019-11-04T19:51:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342181988",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342181988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342195750",
      "pull_request_review_id": 311244146,
      "id": 342195750,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjE5NTc1MA==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test\n+[readme](../test/functional/README.md), which provides an overview of the\n+test-framework**. Modules such as\n+[key.py](../test/functional/test_framework/key.py),\n+[script.py](../test/functional/test_framework/script.py) and\n+[messages.py](../test/functional/test_framework/messages.py) are particularly\n+useful in constructing objects which can be passed to the bitcoind nodes managed\n+by a running TestShell object.\n+\n+## 5. Shutting the TestShell down\n+\n+Shutting down the TestShell will safely tear down all running bitcoind instances\n+and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the\n+`TestShell.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the\n+underlying BitcoinTestFramework:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py\n+  '/path/to/bitcoin_func_test_XXXXXXX'`\n+\n+## 6. Custom TestShell parameters\n+\n+The TestShell object initializes with the default settings inherited from the\n+BitcoinTestFramework class. The user can override these in\n+`TestShell.setup(key=value)`.\n+\n+**Note:** `TestShell.reset()` will reset test parameters to default values and\n+can be called after the TestShell is shut down.\n+\n+| Test parameter key | Default Value | Description |",
      "path": "test/functional/test-shell.md",
      "position": 170,
      "original_position": 169,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342025578,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The risk with documenting defaults outside the code is that they might change and the documentation goes out of date.\r\n\r\nI tried updating the `TestShell.__doc__` string to list all the defaults programatically but that seems like overkill.",
      "created_at": "2019-11-04T18:16:51Z",
      "updated_at": "2019-11-04T19:51:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342195750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342195750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342216440",
      "pull_request_review_id": 311288738,
      "id": 342216440,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjIxNjQ0MA==",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes the usage of the `TestShell` submodule in the functional\n+test suite.\n+\n+The TestShell submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the TestShell allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the TestShell.\n+\n+## 2. Importing TestShell from the Bitcoin Core repository\n+\n+We can import the TestShell by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import TestShell\n+```\n+\n+The following TestShell methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The TestShell inherits all BitcoinTestFramework members and methods, such as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+TestShell object.\n+\n+## 3. Initializing a TestShell object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The TestShell forwards all functional test parameters of the parent Bitcoin\n+TestFramework object. The full set of argument keywords which can be used to\n+initialize the TestShell can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of TestShell is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the TestShell\n+\n+Unlike the BitcoinTestFramework class, the TestShell keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the TestShell object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and BitcoinTestFramework convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the TestShell nodes are initialized with a clean chain. This means\n+that each node of the TestShell is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test\n+[readme](../test/functional/README.md), which provides an overview of the\n+test-framework**. Modules such as\n+[key.py](../test/functional/test_framework/key.py),\n+[script.py](../test/functional/test_framework/script.py) and\n+[messages.py](../test/functional/test_framework/messages.py) are particularly\n+useful in constructing objects which can be passed to the bitcoind nodes managed\n+by a running TestShell object.\n+\n+## 5. Shutting the TestShell down\n+\n+Shutting down the TestShell will safely tear down all running bitcoind instances\n+and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the\n+`TestShell.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the\n+underlying BitcoinTestFramework:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py\n+  '/path/to/bitcoin_func_test_XXXXXXX'`\n+\n+## 6. Custom TestShell parameters\n+\n+The TestShell object initializes with the default settings inherited from the\n+BitcoinTestFramework class. The user can override these in\n+`TestShell.setup(key=value)`.\n+\n+**Note:** `TestShell.reset()` will reset test parameters to default values and\n+can be called after the TestShell is shut down.\n+\n+| Test parameter key | Default Value | Description |",
      "path": "test/functional/test-shell.md",
      "position": 170,
      "original_position": 169,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "d42616a1bbd1635cb8250b552bad92ccf8c171b6",
      "in_reply_to_id": 342025578,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@jachiang in reply to your question, given the good state of the PR now and the acks, I would leave it for a possible follow-up.",
      "created_at": "2019-11-04T19:02:08Z",
      "updated_at": "2019-11-04T19:51:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342216440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342216440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342230545",
      "pull_request_review_id": 311306703,
      "id": 342230545,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjIzMDU0NQ==",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestShell:\n+    \"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+    The TestShell class extends the BitcoinTestFramework\n+    rpc & daemon process management functionality to external\n+    python environments.\n+\n+    It is a singleton class, which ensures that users only\n+    start a single TestShell at a time.\"\"\"\n+\n+    class __TestShell(BitcoinTestFramework):\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+            if self.running:\n+                print(\"TestShell is already running!\")\n+                return\n+\n+            # Num_nodes parameter must be set\n+            # by BitcoinTestFramework child class.\n+            self.num_nodes = kwargs.get('num_nodes', 1)\n+            kwargs.pop('num_nodes', None)",
      "path": "test/functional/test_framework/test_shell.py",
      "position": 33,
      "original_position": 33,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": 342181988,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Much better. Fixed. Thank you!",
      "created_at": "2019-11-04T19:32:34Z",
      "updated_at": "2019-11-04T19:51:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342230545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342230545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342247343",
      "pull_request_review_id": 310846205,
      "id": 342247343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI0NzM0Mw==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`",
      "path": "test/functional/test-shell.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n                                          ^\r\nSyntaxError: invalid syntax\r\n",
      "created_at": "2019-11-04T20:10:46Z",
      "updated_at": "2019-11-04T20:15:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342247343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342247343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342249280",
      "pull_request_review_id": 310846205,
      "id": 342249280,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI0OTI4MA==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`\n+```\n+\n+The following `TestShell` methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The `TestShell` inherits all `BitcoinTestFramework` members and methods, such\n+as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+`TestShell` object.\n+\n+## 3. Initializing a `TestShell` object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2, setup_clean_chain=True)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The `TestShell` forwards all functional test parameters of the parent\n+`BitcoinTestFramework` object. The full set of argument keywords which can be\n+used to initialize the `TestShell` can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of `TestShell` is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the `TestShell`\n+\n+Unlike the `BitcoinTestFramework` class, the `TestShell` keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the `TestShell` object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and `BitcoinTestFramework` convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the `TestShell` nodes are initialized with a clean chain. This means\n+that each node of the `TestShell` is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test\n+[readme](../test/functional/README.md), which provides an overview of the\n+test-framework**. Modules such as\n+[key.py](../test/functional/test_framework/key.py),\n+[script.py](../test/functional/test_framework/script.py) and\n+[messages.py](../test/functional/test_framework/messages.py) are particularly\n+useful in constructing objects which can be passed to the bitcoind nodes managed\n+by a running `TestShell` object.\n+\n+## 5. Shutting the `TestShell` down\n+\n+Shutting down the `TestShell` will safely tear down all running bitcoind\n+instances and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the\n+`TestShell.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the\n+underlying `BitcoinTestFramework`:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py\n+  '/path/to/bitcoin_func_test_XXXXXXX'`\n+\n+## 6. Custom `TestShell` parameters\n+\n+The `TestShell` object initializes with the default settings inherited from the\n+`BitcoinTestFramework` class. The user can override these in\n+`TestShell.setup(key=value)`.\n+\n+**Note:** `TestShell.reset()` will reset test parameters to default values and\n+can be called after the TestShell is shut down.\n+\n+| Test parameter key | Default Value | Description |\n+|---|---|---|\n+| `bind_to_localhost_only` | `True` | Binds bitcoind RPC services to `127.0.0.1` if set to `True`.|\n+| `cachedir` | `\"/path/to/bitcoin/test/cache\"` | Sets the bitcoind datadir directory. |\n+| `chain`  | `\"regtest\"` | Sets the chain-type for the underlying test bitcoind processes. |\n+| `configfile` | `\"/path/to/bitcoin/test/config.ini\"` | Sets the location of the test framework config file. |\n+| `coveragedir` | `None` | Records bitcoind RPC test coverage into this directory if set. |\n+| `loglevel` | `INFO` | Logs events at this level and higher. Can be set to `DEBUG`, `INFO`, `WARNING`, `ERROR` or `CRITICAL`. |\n+| `nocleanup` | `False` | Cleans up temporary test directory if set to `True` during `shutdown`. |\n+| `noshutdown` | `False` | Does not stop bitcoind instances after `shutdown` if set to `True`. |\n+| `num_nodes` | `1` | Sets the number of initialized bitcoind processes. |\n+| `perf` | False | Profiles running nodes with `perf` for the duration of the test if set to `True`. |\n+| `rpc_timeout` | `60` | Sets the RPC server timeout for the underlying bitcoind processes. |\n+| `setup_clean_chain` | `False` | Initializes an empty blockchain by default. A 199-block-long chain is initialized if set to `True`. |\n+| `randomseed` | Random Integer | `TestShell.options.randomseed` is a member of `TestShell` which can be accessed during a test to seed a random generator. User can override default with a constant value for reproducible test runs. |\n+| `supports_cli` | `False` | Whether the bitcoin-cli utility is compiled and available for the test. |\n+| `tmpdir` | `\"/var/folders/.../\"` | Sets directory for test logs. Will be deleted upon a successful test run unless `nocleanup` is set to `True` |\n+| `trace_rpc` | `False` | Logs all RPC calls if set to `True`. |\n+| `usecli` | `False` | Uses the bitcoin-cli interface for all bitcoind commands instead of directly calling the RPC server. Requires `supports_cli`. |",
      "path": "test/functional/test-shell.md",
      "position": 188,
      "original_position": 188,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Instead of duplicating all help text, you could only mention the command line arg name and the TestShell name, and then tell users to refer to to the command line help string",
      "created_at": "2019-11-04T20:15:49Z",
      "updated_at": "2019-11-04T20:15:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342249280",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342249280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342253593",
      "pull_request_review_id": 311336867,
      "id": 342253593,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI1MzU5Mw==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`\n+```\n+\n+The following `TestShell` methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`",
      "path": "test/functional/test-shell.md",
      "position": 40,
      "original_position": 40,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should probably be `TestShell().setup()`",
      "created_at": "2019-11-04T20:26:21Z",
      "updated_at": "2019-11-04T20:26:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342253593",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342253593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342253665",
      "pull_request_review_id": 311336867,
      "id": 342253665,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI1MzY2NQ==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`\n+```\n+\n+The following `TestShell` methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`",
      "path": "test/functional/test-shell.md",
      "position": 41,
      "original_position": 41,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should probably be `TestShell().shutdown()`",
      "created_at": "2019-11-04T20:26:29Z",
      "updated_at": "2019-11-04T20:26:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342253665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342253665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342254546",
      "pull_request_review_id": 311338127,
      "id": 342254546,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI1NDU0Ng==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`\n+```\n+\n+The following `TestShell` methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`",
      "path": "test/functional/test-shell.md",
      "position": 40,
      "original_position": 40,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": 342253593,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is not for the interactive session, but more a documentation of these member functions",
      "created_at": "2019-11-04T20:28:48Z",
      "updated_at": "2019-11-04T20:28:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342254546",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342254546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342262814",
      "pull_request_review_id": 311348766,
      "id": 342262814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI2MjgxNA==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`",
      "path": "test/functional/test-shell.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": 342247343,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry. I'll follow-up with a fix.",
      "created_at": "2019-11-04T20:49:08Z",
      "updated_at": "2019-11-04T20:49:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342262814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342262814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342264044",
      "pull_request_review_id": 311350405,
      "id": 342264044,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI2NDA0NA==",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class TestShell:\n+    \"\"\"Wrapper Class for BitcoinTestFramework.\n+\n+    The TestShell class extends the BitcoinTestFramework\n+    rpc & daemon process management functionality to external\n+    python environments.\n+\n+    It is a singleton class, which ensures that users only\n+    start a single TestShell at a time.\"\"\"\n+\n+    class __TestShell(BitcoinTestFramework):\n+        def set_test_params(self):\n+            pass\n+\n+        def run_test(self):\n+            pass\n+\n+        def setup(self, **kwargs):\n+            if self.running:\n+                print(\"TestShell is already running!\")\n+                return\n+\n+            # Num_nodes parameter must be set\n+            # by BitcoinTestFramework child class.\n+            self.num_nodes = kwargs.get('num_nodes', 1)\n+            kwargs.pop('num_nodes', None)\n+\n+            # User parameters override default values.\n+            for key, value in kwargs.items():\n+                if hasattr(self, key):\n+                    setattr(self, key, value)\n+                elif hasattr(self.options, key):\n+                    setattr(self.options, key, value)\n+                else:\n+                    raise KeyError(key + \" not a valid parameter key\")\n+\n+            super().setup()\n+            self.running = True\n+\n+        def shutdown(self):\n+            if not self.running:\n+                print(\"TestShell is not running!\")\n+            else:\n+                super().shutdown()\n+                self.running = False\n+\n+        def reset(self):\n+            if self.running:\n+                print(\"Shutdown TestWrapper before resetting!\")",
      "path": "test/functional/test_framework/test_shell.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "e521ff6c9c000b899b1c572fdd74b8ad27a0c46a",
      "in_reply_to_id": 341878366,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you. I'll follow-up.",
      "created_at": "2019-11-04T20:52:09Z",
      "updated_at": "2019-11-04T20:52:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342264044",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342264044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342414498",
      "pull_request_review_id": 311542731,
      "id": 342414498,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjQxNDQ5OA==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`\n+```\n+\n+The following `TestShell` methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`",
      "path": "test/functional/test-shell.md",
      "position": 40,
      "original_position": 40,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": 342253593,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm. @MarcoFalke agree with you, but I am thinking it may be useful for `setup()` to return `self` so we can chain it to initializer as suggested by @instagibbs: \r\n\r\n`test = TestShell().setup()`",
      "created_at": "2019-11-05T07:36:48Z",
      "updated_at": "2019-11-05T07:36:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342414498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342414498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342416100",
      "pull_request_review_id": 311544775,
      "id": 342416100,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjQxNjEwMA==",
      "diff_hunk": "@@ -0,0 +1,188 @@\n+Test Shell for Interactive Environments\n+=========================================\n+\n+This document describes how to use the `TestShell` submodule in the functional\n+test suite.\n+\n+The `TestShell` submodule extends the `BitcoinTestFramework` functionality to\n+external interactive environments for prototyping and educational purposes. Just\n+like `BitcoinTestFramework`, the `TestShell` allows the user to:\n+\n+* Manage regtest bitcoind subprocesses.\n+* Access RPC interfaces of the underlying bitcoind instances.\n+* Log events to the functional test logging utility.\n+\n+The `TestShell` can be useful in interactive environments where it is necessary\n+to extend the object lifetime of the underlying `BitcoinTestFramework` between\n+user inputs. Such environments include the Python3 command line interpreter or\n+[Jupyter](https://jupyter.org/) notebooks running a Python3 kernel.\n+\n+## 1. Requirements\n+\n+* Python3\n+* `bitcoind` built in the same repository as the `TestShell`.\n+\n+## 2. Importing `TestShell` from the Bitcoin Core repository\n+\n+We can import the `TestShell` by adding the path of the Bitcoin Core\n+`test_framework` module to the beginning of the PATH variable, and then\n+importing the `TestShell` class from the `test_shell` sub-package.\n+\n+```\n+>>> import sys\n+>>> sys.path.insert(0, \"/path/to/bitcoin/test/functional\")\n+>>> from test_framework.test_shell import `TestShell`\n+```\n+\n+The following `TestShell` methods manage the lifetime of the underlying bitcoind\n+processes and logging utilities.\n+\n+* `TestShell.setup()`\n+* `TestShell.shutdown()`\n+\n+The `TestShell` inherits all `BitcoinTestFramework` members and methods, such\n+as:\n+* `TestShell.nodes[index].rpc_method()`\n+* `TestShell.log.info(\"Custom log message\")`\n+\n+The following sections demonstrate how to initialize, run, and shut down a\n+`TestShell` object.\n+\n+## 3. Initializing a `TestShell` object\n+\n+```\n+>>> test = TestShell()\n+>>> test.setup(num_nodes=2, setup_clean_chain=True)\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Initializing test directory /path/to/bitcoin_func_test_XXXXXXX\n+```\n+The `TestShell` forwards all functional test parameters of the parent\n+`BitcoinTestFramework` object. The full set of argument keywords which can be\n+used to initialize the `TestShell` can be found in [section\n+#6](#custom-testshell-parameters) of this document.\n+\n+**Note: Running multiple instances of `TestShell` is not allowed.** Running a\n+single process also ensures that logging remains consolidated in the same\n+temporary folder. If you need more bitcoind nodes than set by default (1),\n+simply increase the `num_nodes` parameter during setup.\n+\n+```\n+>>> test2 = TestShell()\n+>>> test2.setup()\n+TestShell is already running!\n+```\n+\n+## 4. Interacting with the `TestShell`\n+\n+Unlike the `BitcoinTestFramework` class, the `TestShell` keeps the underlying\n+Bitcoind subprocesses (nodes) and logging utilities running until the user\n+explicitly shuts down the `TestShell` object.\n+\n+During the time between the `setup` and `shutdown` calls, all `bitcoind` node\n+processes and `BitcoinTestFramework` convenience methods can be accessed\n+interactively.\n+\n+**Example: Mining a regtest chain**\n+\n+By default, the `TestShell` nodes are initialized with a clean chain. This means\n+that each node of the `TestShell` is initialized with a block height of 0.\n+\n+```\n+>>> test.nodes[0].getblockchaininfo()[\"blocks\"]\n+0\n+```\n+\n+We now let the first node generate 101 regtest blocks, and direct the coinbase\n+rewards to a wallet address owned by the mining node.\n+\n+```\n+>>> address = test.nodes[0].getnewaddress()\n+>>> test.nodes[0].generatetoaddress(101, address)\n+['2b98dd0044aae6f1cca7f88a0acf366a4bfe053c7f7b00da3c0d115f03d67efb', ...\n+```\n+Since the two nodes are both initialized by default to establish an outbound\n+connection to each other during `setup`, the second node's chain will include\n+the mined blocks as soon as they propagate.\n+\n+```\n+>>> test.nodes[1].getblockchaininfo()[\"blocks\"]\n+101\n+```\n+The block rewards from the first block are now spendable by the wallet of the\n+first node.\n+\n+```\n+>>> test.nodes[0].getbalance()\n+Decimal('50.00000000')\n+```\n+\n+We can also log custom events to the logger.\n+\n+```\n+>>> test.nodes[0].log.info(\"Successfully mined regtest chain!\")\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework.node0 (INFO): Successfully mined regtest chain!\n+```\n+\n+**Note: Please also consider the functional test\n+[readme](../test/functional/README.md), which provides an overview of the\n+test-framework**. Modules such as\n+[key.py](../test/functional/test_framework/key.py),\n+[script.py](../test/functional/test_framework/script.py) and\n+[messages.py](../test/functional/test_framework/messages.py) are particularly\n+useful in constructing objects which can be passed to the bitcoind nodes managed\n+by a running `TestShell` object.\n+\n+## 5. Shutting the `TestShell` down\n+\n+Shutting down the `TestShell` will safely tear down all running bitcoind\n+instances and remove all temporary data and logging directories.\n+\n+```\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Cleaning up /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+To prevent the logs from being removed after a shutdown, simply set the\n+`TestShell.options.nocleanup` member to `True`.\n+```\n+>>> test.options.nocleanup = True\n+>>> test.shutdown()\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Stopping nodes\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Not cleaning up dir /path/to/bitcoin_func_test_XXXXXXX on exit\n+20XX-XX-XXTXX:XX:XX.XXXXXXX TestFramework (INFO): Tests successful\n+```\n+\n+The following utility consolidates logs from the bitcoind nodes and the\n+underlying `BitcoinTestFramework`:\n+\n+* `/path/to/bitcoin/test/functional/combine_logs.py\n+  '/path/to/bitcoin_func_test_XXXXXXX'`\n+\n+## 6. Custom `TestShell` parameters\n+\n+The `TestShell` object initializes with the default settings inherited from the\n+`BitcoinTestFramework` class. The user can override these in\n+`TestShell.setup(key=value)`.\n+\n+**Note:** `TestShell.reset()` will reset test parameters to default values and\n+can be called after the TestShell is shut down.\n+\n+| Test parameter key | Default Value | Description |\n+|---|---|---|\n+| `bind_to_localhost_only` | `True` | Binds bitcoind RPC services to `127.0.0.1` if set to `True`.|\n+| `cachedir` | `\"/path/to/bitcoin/test/cache\"` | Sets the bitcoind datadir directory. |\n+| `chain`  | `\"regtest\"` | Sets the chain-type for the underlying test bitcoind processes. |\n+| `configfile` | `\"/path/to/bitcoin/test/config.ini\"` | Sets the location of the test framework config file. |\n+| `coveragedir` | `None` | Records bitcoind RPC test coverage into this directory if set. |\n+| `loglevel` | `INFO` | Logs events at this level and higher. Can be set to `DEBUG`, `INFO`, `WARNING`, `ERROR` or `CRITICAL`. |\n+| `nocleanup` | `False` | Cleans up temporary test directory if set to `True` during `shutdown`. |\n+| `noshutdown` | `False` | Does not stop bitcoind instances after `shutdown` if set to `True`. |\n+| `num_nodes` | `1` | Sets the number of initialized bitcoind processes. |\n+| `perf` | False | Profiles running nodes with `perf` for the duration of the test if set to `True`. |\n+| `rpc_timeout` | `60` | Sets the RPC server timeout for the underlying bitcoind processes. |\n+| `setup_clean_chain` | `False` | Initializes an empty blockchain by default. A 199-block-long chain is initialized if set to `True`. |\n+| `randomseed` | Random Integer | `TestShell.options.randomseed` is a member of `TestShell` which can be accessed during a test to seed a random generator. User can override default with a constant value for reproducible test runs. |\n+| `supports_cli` | `False` | Whether the bitcoin-cli utility is compiled and available for the test. |\n+| `tmpdir` | `\"/var/folders/.../\"` | Sets directory for test logs. Will be deleted upon a successful test run unless `nocleanup` is set to `True` |\n+| `trace_rpc` | `False` | Logs all RPC calls if set to `True`. |\n+| `usecli` | `False` | Uses the bitcoin-cli interface for all bitcoind commands instead of directly calling the RPC server. Requires `supports_cli`. |",
      "path": "test/functional/test-shell.md",
      "position": 188,
      "original_position": 188,
      "commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "original_commit_id": "19139ee034d20ebab1b91d3ac13a8eee70b59374",
      "in_reply_to_id": 342249280,
      "user": {
        "login": "jachiang",
        "id": 26572234,
        "node_id": "MDQ6VXNlcjI2NTcyMjM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26572234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jachiang",
        "html_url": "https://github.com/jachiang",
        "followers_url": "https://api.github.com/users/jachiang/followers",
        "following_url": "https://api.github.com/users/jachiang/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jachiang/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jachiang/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jachiang/subscriptions",
        "organizations_url": "https://api.github.com/users/jachiang/orgs",
        "repos_url": "https://api.github.com/users/jachiang/repos",
        "events_url": "https://api.github.com/users/jachiang/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jachiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you @MarcoFalke for the review. The command line help doesn't cover all the parameters I suppose. `setup_clean_chain` is overridden in `set_test_params()` and isn't covered by cmdline help.\r\n\r\nWould it be an acceptable solution to reduce the documentation down the parameters which don't have help text (e.g. `setup_clean_chain, num_nodes, ...`) , and refer to the command-line help string for the remaining params?",
      "created_at": "2019-11-05T07:42:20Z",
      "updated_at": "2019-11-05T07:43:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342416100",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342416100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17288"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    }
  ]
}